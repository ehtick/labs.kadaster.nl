{"version":3,"sources":["components/widgets/bb/BBSideMenu.module.css","components/Wrap.tsx","components/widgets/bb/BBSideMenu.tsx","components/AbstractArea.tsx"],"names":["module","exports","Wrap","props","when","with","children","BBSideMenu","state","collapsed","selectedIndex","hideTabs","areas","onTabClick","index","event","stopPropagation","tabSelectionSubscription","publish","setState","headerClicked","onlyCollapsed","this","startCollapsed","updateTabs","prevProps","hideTabsTopic","tabIndexTopic","tabIndex","getSubscription","pubsub","isValidIndex","isValid","current","topic","alert","isString","hasChanged","newSelectedIndex","newHideTabs","split","tabs","length","tabHideId","firstNonHiddenIndex","getFirstNonHiddenTab","includes","loadPages","lazyLoadingPages","backgroundimage","footertext","headertext","className","Boolean","customStyling","style","display","height","direction","rightside","sidemenuBackgroundColor","sidemenuTabColor","sidemenuTabIconColor","sidemenuTabTextColor","sidemenuTabHoverColor","sidemenuTabIconHoverColor","sidemenuTabTextHoverColor","collapsedWidth","rtl","image","Icon","preserveAspectRatio","onClick","icon","size","undefined","iconShape","popperArrow","map","tab","selected","Tooltip","title","disableInteractive","icons","areaConfig","e","styles","areaContainer","Area","key","config","onChange","withinSelectedTab","error","console","log","AbstractArea","React","Component"],"mappings":"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","file":"static/js/14.5e383506.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"divrtl\":\"BBSideMenu_divrtl__1LJLj\",\"divltr\":\"BBSideMenu_divltr__3Mr3F\"};","import { Fragment, ReactElement } from 'react'\n\ntype Props = FragmentProps & {\n  when: boolean,\n  with: (children: FragmentProps['children']) => ReactElement,\n}\ntype FragmentProps = Parameters<typeof Fragment>[0]\n\nexport function Wrap(props: Props) {\n  if (!props.when) return <Fragment>{props.children}</Fragment>\n  return props.with(props.children)\n}\n","import { ProSidebar,  SidebarContent,  SidebarFooter,  SidebarHeader,  Menu,  MenuItem } from 'react-pro-sidebar'\nimport './BBSideMenu.css'\nimport './BBSideMenu.module.edit.css'\nimport styles from './BBSideMenu.module.css'\nimport { Tooltip } from '@mui/material'\nimport AbstractArea from '../../AbstractArea'\nimport Area from '../../Area'\nimport { Icon } from '../Icon'\nimport { AreaWidgetProps, BaseWidgetProps, ConfigurablePropsFromDescription, getSubscription, isString, isValidIndex } from '../../../helpers/widget'\nimport { sideMenuConfigs } from './BBSideMenuConfigs'\nimport { Wrap } from '../../Wrap'\nimport { getFirstNonHiddenTab } from '../Tab'\n\ntype Props = BaseWidgetProps & AreaWidgetProps & ConfigurableProps\ntype ConfigurableProps = ConfigurablePropsFromDescription<typeof sideMenuConfigs>\n\ntype State = {\n  collapsed: boolean,\n  selectedIndex: number,\n  hideTabs: string[],\n  areas: {}[],\n}\n\nclass BBSideMenu extends AbstractArea<Props, State> {\n  state: State = {\n    collapsed: false,\n    selectedIndex: 0,\n    hideTabs: [],\n    areas: [],\n  }\n\n  componentDidMount() {\n    if (this.props.startCollapsed || this.props.onlyCollapsed)\n      this.setState({ collapsed: true })\n\n    this.updateTabs(null, this.props.hideTabs, this.props.tabSelectionSubscription)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.updateTabs(prevProps, this.props.hideTabs, this.props.tabSelectionSubscription)\n  }\n\n  updateTabs(\n    prevProps: null | Props,\n    hideTabsTopic: undefined | null | string,\n    tabIndexTopic: undefined | null | string,\n  ) {\n    const tabIndex = getSubscription(prevProps?.pubsub, this.props.pubsub, tabIndexTopic, isValidIndex)\n    if (!tabIndex.isValid && tabIndex.current != null && tabIndex.topic != null)\n      return alert(`Value \"${tabIndex.current}\" from topic \"${tabIndexTopic}\" is not a valid index\"`)\n\n    const hideTabs = getSubscription(prevProps?.pubsub, this.props.pubsub, hideTabsTopic, isString)\n    if (!hideTabs.isValid && hideTabs.current != null && hideTabs.topic != null)\n      return alert(`Value \"${hideTabs.current}\" from topic \"${tabIndexTopic}\" is not a string\"`)\n\n    if (!tabIndex.hasChanged && !hideTabs.hasChanged)\n      return\n\n    let newSelectedIndex = this.state.selectedIndex\n    if (tabIndex.isValid && tabIndex.hasChanged) newSelectedIndex = tabIndex.current\n\n    let newHideTabs: string[] = []\n    if (hideTabs.isValid && hideTabs.hasChanged) {\n      newHideTabs = hideTabs.current.split(',')\n      this.setState({ hideTabs: newHideTabs })\n    }\n\n    if (this.props.tabs?.length && newSelectedIndex != null) {\n      const tabHideId = this.props.tabs[newSelectedIndex]\n      const firstNonHiddenIndex = getFirstNonHiddenTab(this.props.tabs, this.props.tabs, newHideTabs)\n      if (firstNonHiddenIndex != null && newHideTabs?.includes(tabHideId))\n        newSelectedIndex = firstNonHiddenIndex\n    }\n\n    if (newSelectedIndex !== this.state.selectedIndex) this.setState({ selectedIndex: newSelectedIndex })\n  }\n\n  onTabClick = (index: number, event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    if (event) event.stopPropagation()\n\n    let tabSelectionSubscription = this.props.tabSelectionSubscription\n    if (tabSelectionSubscription) {\n      this.props.publish(tabSelectionSubscription, index)\n    } else {\n      this.setState({ selectedIndex: index })\n    }\n  }\n\n  headerClicked = () => {\n    if (this.props.onlyCollapsed) return\n\n    var collapsed = !this.state.collapsed\n    this.setState({ collapsed: collapsed })\n  }\n\n  render() {\n    var loadPages=true;\n    if (this.props.lazyLoadingPages==true) loadPages=false;\n\n    try {\n      let backgroundimage = this.props.backgroundimage\n      let footertext = this.props.footertext\n      let headertext = this.props.headertext\n      let state = this.state\n      let collapsed = this.state.collapsed\n      let className = this.props.className\n\n      let onlyCollapsed = this.props.onlyCollapsed\n      if (onlyCollapsed==null) onlyCollapsed=false;\n\n      return (\n        <div  className=\"app sideMenu \"\n              data-custom-styling={Boolean(this.props.customStyling)}\n              style={{\n                display: 'flex',\n                height: '100%',\n                direction: this.props.rightside ? 'rtl' :'ltr',\n                '--sidemenu-background-color': this.props.sidemenuBackgroundColor,\n                '--sidemenu-tab-color': this.props.sidemenuTabColor,\n                '--sidemenu-tab-icon-color': this.props.sidemenuTabIconColor,\n                '--sidemenu-tab-text-color': this.props.sidemenuTabTextColor,\n                '--sidemenu-tab-hover-color': this.props.sidemenuTabHoverColor,\n                '--sidemenu-tab-icon-hover-color': this.props.sidemenuTabIconHoverColor,\n                '--sidemenu-tab-text-hover-color': this.props.sidemenuTabTextHoverColor\n              } as any}\n         >\n\n          <ProSidebar\n            collapsedWidth=\"46px\"\n            rtl={Boolean(this.props.rightside)}\n            collapsed={state.collapsed}\n            {...(backgroundimage && { image: backgroundimage })}\n          >\n            {!onlyCollapsed && (\n            <SidebarHeader>\n              {collapsed ? (\n                <Icon\n                  preserveAspectRatio=\"xMaxYMin meet\"\n                  onClick={this.headerClicked}\n                  icon={this.props.rightside ? \"angle-left\" : \"angle-right\"}\n                  size=\"1x\"\n                />\n              ) : (\n                <Icon\n                  onClick={this.headerClicked}\n                  icon={this.props.rightside ? \"angle-right\" : \"angle-left\"}\n                  size=\"1x\"\n                />\n              )}\n\n              {!collapsed && headertext && (\n                <center>\n                  <h2>{headertext}</h2>\n                </center>\n              )}\n            </SidebarHeader>\n            )}\n\n            <SidebarContent>\n              <Menu className={className ?? undefined} iconShape=\"round\" popperArrow>\n                {(this.props.tabs ?? []).map((tab, index) => {\n                  let selected = index === this.state.selectedIndex\n                  if (this.state.hideTabs.length && this.state.hideTabs.includes(tab))\n                    return null\n\n                  return (\n                    <Wrap when={collapsed} key={tab} with={(children) => (\n                      <Tooltip title={tab} disableInteractive>{children as any}</Tooltip>\n                    )}>\n                      <MenuItem\n                        className={selected ? 'active' : undefined}\n                        onClick={(event) => this.onTabClick(index, event)}\n                        icon={<Icon icon={this.props.icons?.[index] as any ?? 'beer'} /> }\n                      >\n                        {tab}\n                      </MenuItem>\n                    </Wrap>\n                )})}\n              </Menu>\n            </SidebarContent>\n            <SidebarFooter>\n              {footertext && (\n                <center>\n                  <h4>{footertext}</h4>\n                </center>\n              )}\n            </SidebarFooter>\n          </ProSidebar>\n\n          <div className=\"main\">\n            {(this.props.tabs ?? []).map((tab, index) => {\n              let areaConfig = {}\n              try {\n                areaConfig = this.props.areas[index] || {}\n              } catch (e) {}\n\n              let selected = index === this.state.selectedIndex\n              var extra = ' main '\n              if (!selected && !loadPages) return null\n\n              return (\n                <div\n                  key={index + 'div'}\n                  className={styles.areaContainer + extra}\n                  style={{ display: selected ? 'flex' : 'none' }}\n                >\n                  <Area\n                    {...this.props}\n                    key={index + 'Area'}\n                    index={index}\n                    config={areaConfig}\n                    onChange={this.props.onChange}\n                    withinSelectedTab={selected}\n                  />\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      )\n    } catch (error) {\n      console.log(error)\n      return null\n    }\n  }\n}\n\nexport default BBSideMenu\n","import React from 'react'\n\nexport default class AbstractArea<P = DefaultP, S = DefaultS, SS = DefaultSS> extends React.Component<P,S,SS> {\n  isAA() {\n    return true\n  }\n}\n\ntype DefaultP = ExtractDefaultP<React.Component>\ntype DefaultS = ExtractDefaultS<React.Component>\ntype DefaultSS = ExtractDefaultSS<React.Component>\ntype ExtractDefaultP<T> = T extends React.Component<infer P> ? P : never\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractDefaultS<T> = T extends React.Component<infer P, infer S> ? S : never\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractDefaultSS<T> = T extends React.Component<infer P, infer S, infer SS> ? SS : never\n"],"sourceRoot":""}