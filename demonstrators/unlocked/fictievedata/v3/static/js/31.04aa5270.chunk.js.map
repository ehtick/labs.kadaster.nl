{"version":3,"sources":["../../src/base-types.ts","../../../../../src/components/display/clipping-planes/clipping-edges.ts","../../../../../src/components/display/clipping-planes/planes.ts","../../../../../src/components/display/clipping-planes/clipper.ts","../../../src/utils/ThreeUtils.ts","../../../../src/components/display/fills.ts","../../../../src/components/ifc/units.ts","../../../../../src/components/display/plans/plan-manager.ts","../../../../src/components/display/grid.ts","../../../../src/components/display/axes.ts","../../../../../src/components/display/dimensions/dimension-line.ts","../../../../../src/components/display/dimensions/dimensions.ts","../../../../src/components/display/edges.ts","../../src/IFC/components/IFCModel.ts","../../src/IFC/components/IFCParser.ts","../../src/IFC/web-workers/serializer/Geometry.ts","../../src/IFC/web-workers/serializer/Serializer.ts","../../src/IFC/components/subsets/ItemsMap.ts","../../src/IFC/components/subsets/SubsetCreator.ts","../../src/IFC/components/subsets/SubsetUtils.ts","../../src/IFC/components/subsets/SubsetManager.ts","../../src/IFC/BaseDefinitions.ts","../../src/IFC/components/properties/BasePropertyManager.ts","../../src/IFC/components/IFCElementsMap.ts","../../src/IFC/components/properties/WebIfcPropertyManager.ts","../../src/IFC/components/IfcTypesMap.ts","../../src/IFC/components/properties/JSONPropertyManager.ts","../../src/IFC/components/properties/PropertyManager.ts","../../src/IFC/web-workers/BaseDefinitions.ts","../../src/IFC/components/TypeManager.ts","../../src/IFC/components/BvhManager.ts","../../src/IFC/web-workers/serializer/IfcGeometry.ts","../../src/IFC/web-workers/serializer/Vector.ts","../../src/IFC/web-workers/serializer/FlatMesh.ts","../../src/IFC/web-workers/serializer/Material.ts","../../src/IFC/web-workers/serializer/FlatMeshVector.ts","../../src/IFC/web-workers/serializer/Mesh.ts","../../src/IFC/components/sequence/Data.ts","../../src/IFC/web-workers/handlers/PropertyHandler.ts","../../src/IFC/web-workers/handlers/WebIfcHandler.ts","../../src/IFC/indexedDB/IndexedDatabase.ts","../../src/IFC/web-workers/handlers/WorkerStateHandler.ts","../../src/IFC/web-workers/handlers/ParserHandler.ts","../../src/IFC/web-workers/IFCWorkerHandler.ts","../../src/IFC/components/MemoryCleaner.ts","../../src/IFC/components/IFCUtils.ts","../../../../src/components/context/ifcEvent.ts","../../src/IFC/components/IFCManager.ts","../../src/IFCLoader.ts","../../../../../src/components/ifc/selection/selection.ts","../../../../../src/components/ifc/selection/selector.ts","../../../../src/components/ifc/geometry-types.ts","../../../../src/components/ifc/ifc-properties.ts","../../../../src/components/ifc/ifc-manager.ts","../../../../src/components/import-export/dropbox.ts","../../../src/utils/LiteEvent.ts","../../../../../src/components/context/camera/controls/first-person-control.ts","../../../../../src/components/context/camera/controls/orbit-control.ts","../../../../../src/components/context/camera/projection-manager.ts","../../../../../src/components/context/camera/controls/plan-control.ts","../../../../../src/components/context/camera/camera.ts","../../../../src/components/context/raycaster.ts","../../../../../src/components/context/renderer/custom-outline-pass.ts","../../../../../src/components/context/renderer/postproduction.ts","../../../../../src/components/context/renderer/renderer.ts","../../../../src/components/context/scene.ts","../../../../src/components/context/animator.ts","../../../../src/components/context/mouse.ts","../../../../src/components/context/context.ts","../../../../../src/components/display/plans/storey-manager.ts","../../../../src/components/import-export/glTF.ts","../../../../src/components/display/shadow-dropper.ts","../../../../src/components/import-export/dxf.ts","../../../../src/components/import-export/pdf.ts","../../../../../src/components/import-export/edges-vectorizer/edgeUtils.ts","../../../../../src/components/import-export/edges-vectorizer/edge-projection.ts","../../../../src/components/selection/selection-window.ts","../../../../src/components/selection/selection-window-math.ts","../../../../src/components/selection/shape-caster.ts","../../src/ifc-viewer-api.ts","../node_modules/web-ifc/web-ifc-api.js"],"names":["model","this","grid","axes","nullIfcManagerErrorMessage","IFCModel","Error","modelID","id","state","geometry","i","subsetID","type","handler","request","geometryTypes","Set","coordinates","_tempDir","lowestY","x","max","start","s","context","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__require","require","__commonJS","cb","mod","keys","exports","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","done","then","apply","require_crypto","require_web_ifc_mt","module","WebIFCWasm2","_scriptDir","document","currentScript","src","__filename","WebIFCWasm3","GROWABLE_HEAP_I8","wasmMemory","buffer","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","HEAPU8","GROWABLE_HEAP_I16","HEAP16","GROWABLE_HEAP_U16","HEAPU16","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","moduleOverrides","read_","readAsync","readBinary","nodeFS","nodePath","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","ENVIRONMENT_IS_PTHREAD","scriptDirectory","locateFile","path","nodeWorkerThreads","dirname","__dirname","filename","binary","ret","Uint8Array","assert","onload","onerror","err2","data","length","replace","slice","ex","ExitStatus","abort","keepRuntimeAlive","console","error","global","Worker","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","title","performance","out","log","bind","err","warn","STACK_ALIGN","warnOnce","text","shown","wasmBinary","setTempRet0","Atomics","load","store","compareExchange","wasmModule","noExitRuntime","WebAssembly","ABORT","condition","TextDecoderWrapper","encoding","textDecoder","TextDecoder","decode","SharedArrayBuffer","UTF8Decoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAPF32","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","initRuntime","FS","init","initialized","ignorePermissions","TTY","callRuntimeCallbacks","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","removeRunDependency","clearInterval","callback","what","stack","RuntimeError","wasmBinaryFile","tempDouble","tempI64","dataURIPrefix","isDataURI","startsWith","isFileURI","getBinary","file","ASM_CONSTS","$0","$1","setTimeout","__emscripten_do_dispatch_to_thread","callbacks","shift","func","arg","get","_emscripten_futex_wake","addr","count","Infinity","mainThreadWaitAddress","__emscripten_main_thread_futex","mainThreadWoken","notify","_emscripten_get_now","PThread","unusedWorkers","runningWorkers","tlsInitFunctions","initMainThreadBlock","pthreadPoolSize","navigator","hardwareConcurrency","allocateUnusedWorker","tb","_malloc","headPtr","tlsMemory","__emscripten_thread_init","_emscripten_register_main_browser_thread_id","initWorker","pthreads","threadExitHandlers","runExitHandlers","pop","___pthread_tsd_run_dtors","runExitHandlersAndDeinitThread","exitCode","setExitStatus","threadExit","_pthread_self","postMessage","threadCancel","terminateAllThreads","t","pthread","worker","returnWorkerToPool","terminate","freeThreadData","threadInfoStruct","_free","allocatedOwnStack","stackBase","runWithoutMainThreadQueuedCalls","push","splice","__emscripten_allow_main_runtime_queued_calls","receiveObjectTransfer","threadInit","loadWasmModuleToWorker","onFinishedLoading","onmessage","d","cmd","currentProxiedOperationCallerThread","thread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","pthread_ptr","cleanupThread","killThread","cancelThread","loaded","runPthread","alert","exit","e2","target","lineno","message","on","pthreadMainJs","getNewWorker","busySpinWait","msecs","now","stackTop","stackMax","_emscripten_stack_set_limits","stackRestore","_emscripten_get_now_is_monotonic","setErrNo","___errno_location","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","add_ref","add","release_ref","sub","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","unshift","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","result","root","dir","basename","lastSlash","extname","paths","Array","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","read","buffer2","offset","pos","get_char","bytesRead","timestamp","Date","write","put_char","default_tty_ops","Buffer","alloc","readSync","stdin","fd","toString","includes","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","size","factor","ceil","alignMemory","_memalign","address","fill","zeroMemory","MEMFS","ops_table","mount","createNode","parent","name2","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","name","entries","key2","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","object","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","errored","forEach","pseudo","mountRoot","unmount","create","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","readFile","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","crypto_module","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","errno2","constructor","code","staticInit","quit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray2","xhr2","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","lazyArray","defineProperties","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","byteArray2","handled","plugin","noRunDep","dep","arrayBuffer","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","___sys_fcntl64","_emscripten_proxy_to_main_thread_js","___sys_ioctl","op","argp","___sys_open","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","f","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters2","myTypeConverters","registerType","typeConverters","unregisteredTypes","registered","dt","structRegistrations","getShiftFromSize","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","handle2","iter","unregister","ClassHandle_clone","preservePointerOnDelete","o","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","replacePublicSymbol","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","map","heap32VectorToArray","firstElement","array","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","enumReadValueFromPointer","signed","requireRegisteredType","impl","v","floatReadValueFromPointer","integerReadValueFromPointer","requireHandle","emval_symbols","getStringOrSymbol","symbol","emval_get_global","globalThis","readAsmConstArgsArray","index","sync","numCallArgs","stackSave","serializedNumCallArgs","stackAlloc","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","arraysHaveEqualContent","arrA","arrB","i2","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","targetCanvasPtr","jsString","cString","stringToNewUTF8","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","shaders","vaos","contexts","offscreenCanvases","queries","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","string","source","createContext","webGLContextAttributes","getContextSafariWebGL2Fixed","getContext","ver","attrs","gl","WebGLRenderingContext","ctx","registerContext","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","GLctx2","ext","getExtension","divisor","first","primcount","indices","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","n","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","getSupportedExtensions","__emscripten_webgl_power_preferences","ENV","getEnvStrings","strings","env","languages","_environ_get","__environ","environ_buf","bufSize","dontAddNull","writeAsciiToMemory","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","pnum","num","_fd_seek","offset_low","offset_high","newOffset","DOUBLE_LIMIT","_fd_write","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","startRoutine","time","transferList","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","readMode","writeMode","codes","embind_init_charCodes","proxiedFunctionTable","stringy","u8array","numBytesWritten","calledRun","asmLibraryArg","line","routine","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","elementTypes2","getterContext","setter","setterContext","structType","fieldRecords","fields","field","fieldTypes2","fieldName","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","isPureVirtual","unboundTypesHandler","Symbol","method","className","memberFunction","isSigned","ctor","values","rawEnumType","enumValue","enumType","Enum","Value2","argTypes2","invokerArgsArray","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","getterSignature","setterSignature","isVoid","targetThreadId","mainThreadId","returnType","destructorsRef","rd","argv","__emval_lookupTypes","clk_id","tp","sigPtr","argbuf","double","readAsmConstArgs","expectedStatus","newStatus","timeout","tNow","tEnd","exchange","wait","dest","copyWithin","requestedSize","oldSize","multiple","maxHeapSize","cutDown","overGrownHeapSize","a0","a1","powerPreference","contextAttributes","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","_emscripten_webgl_do_create_context","start_routine","_emscripten_sync_run_in_main_thread_4","info","receiveInstance","instance","module2","exports3","numWorkersToLoad","w","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","getBinaryPromise","instantiate","reason","instantiateStreaming","createWasm","run","preRun","doRun","shouldRunNow","entryFunction","toLog","callMain","postRun","implicit","runCaller","ready","define","require_web_ifc","prev","IFCACTUATOR","IFCAIRTERMINAL","IFCAIRTERMINALBOX","IFCAIRTOAIRHEATRECOVERY","IFCALARM","IFCALIGNMENT","IFCANNOTATION","IFCAUDIOVISUALAPPLIANCE","IFCBEAM","IFCBEAMSTANDARDCASE","IFCBEARING","IFCBOILER","IFCBRIDGE","IFCBRIDGEPART","IFCBUILDING","IFCBUILDINGELEMENT","IFCBUILDINGELEMENTPART","IFCBUILDINGELEMENTPROXY","IFCBUILDINGSTOREY","IFCBURNER","IFCCABLECARRIERFITTING","IFCCABLECARRIERSEGMENT","IFCCABLEFITTING","IFCCABLESEGMENT","IFCCAISSONFOUNDATION","IFCCHILLER","IFCCHIMNEY","IFCCIVILELEMENT","IFCCOIL","IFCCOLUMN","IFCCOLUMNSTANDARDCASE","IFCCOMMUNICATIONSAPPLIANCE","IFCCOMPRESSOR","IFCCONDENSER","IFCCONTROLLER","IFCCOOLEDBEAM","IFCCOOLINGTOWER","IFCCOVERING","IFCCURTAINWALL","IFCDAMPER","IFCDEEPFOUNDATION","IFCDISCRETEACCESSORY","IFCDISTRIBUTIONCHAMBERELEMENT","IFCDISTRIBUTIONCONTROLELEMENT","IFCDISTRIBUTIONELEMENT","IFCDISTRIBUTIONFLOWELEMENT","IFCDISTRIBUTIONPORT","IFCDOOR","IFCDOORSTANDARDCASE","IFCDUCTFITTING","IFCDUCTSEGMENT","IFCDUCTSILENCER","IFCELECTRICAPPLIANCE","IFCELECTRICDISTRIBUTIONBOARD","IFCELECTRICFLOWSTORAGEDEVICE","IFCELECTRICGENERATOR","IFCELECTRICMOTOR","IFCELECTRICTIMECONTROL","IFCELEMENT","IFCELEMENTASSEMBLY","IFCELEMENTCOMPONENT","IFCENERGYCONVERSIONDEVICE","IFCENGINE","IFCEVAPORATIVECOOLER","IFCEVAPORATOR","IFCEXTERNALSPATIALELEMENT","IFCEXTERNALSPATIALSTRUCTUREELEMENT","IFCFACILITY","IFCFACILITYPART","IFCFAN","IFCFASTENER","IFCFEATUREELEMENT","IFCFEATUREELEMENTADDITION","IFCFEATUREELEMENTSUBTRACTION","IFCFILTER","IFCFIRESUPPRESSIONTERMINAL","IFCFLOWCONTROLLER","IFCFLOWFITTING","IFCFLOWINSTRUMENT","IFCFLOWMETER","IFCFLOWMOVINGDEVICE","IFCFLOWSEGMENT","IFCFLOWSTORAGEDEVICE","IFCFLOWTERMINAL","IFCFLOWTREATMENTDEVICE","IFCFOOTING","IFCFURNISHINGELEMENT","IFCFURNITURE","IFCGEOGRAPHICELEMENT","IFCGRID","IFCHEATEXCHANGER","IFCHUMIDIFIER","IFCINTERCEPTOR","IFCJUNCTIONBOX","IFCLAMP","IFCLIGHTFIXTURE","IFCLINEARPOSITIONINGELEMENT","IFCMECHANICALFASTENER","IFCMEDICALDEVICE","IFCMEMBER","IFCMEMBERSTANDARDCASE","IFCMOTORCONNECTION","IFCOPENINGELEMENT","IFCOPENINGSTANDARDCASE","IFCOUTLET","IFCPILE","IFCPIPEFITTING","IFCPIPESEGMENT","IFCPLATE","IFCPLATESTANDARDCASE","IFCPORT","IFCPOSITIONINGELEMENT","IFCPRODUCTDEFINITIONSHAPE","IFCPROJECT","IFCPROJECTIONELEMENT","IFCPROTECTIVEDEVICE","IFCPROTECTIVEDEVICETRIPPINGUNIT","IFCPROXY","IFCPUMP","IFCRAILING","IFCRAMP","IFCRAMPFLIGHT","IFCREFERENT","IFCREINFORCINGBAR","IFCREINFORCINGELEMENT","IFCREINFORCINGMESH","IFCRELAGGREGATES","IFCRELASSOCIATESMATERIAL","IFCRELCONTAINEDINSPATIALSTRUCTURE","IFCRELDEFINESBYPROPERTIES","IFCRELDEFINESBYTYPE","IFCROOF","IFCSANITARYTERMINAL","IFCSENSOR","IFCSHADINGDEVICE","IFCSITE","IFCSLAB","IFCSLABELEMENTEDCASE","IFCSLABSTANDARDCASE","IFCSOLARDEVICE","IFCSPACE","IFCSPACEHEATER","IFCSPATIALELEMENT","IFCSPATIALSTRUCTUREELEMENT","IFCSPATIALZONE","IFCSTACKTERMINAL","IFCSTAIR","IFCSTAIRFLIGHT","IFCSTRUCTURALACTION","IFCSTRUCTURALACTIVITY","IFCSTRUCTURALCONNECTION","IFCSTRUCTURALCURVEACTION","IFCSTRUCTURALCURVECONNECTION","IFCSTRUCTURALCURVEMEMBER","IFCSTRUCTURALCURVEMEMBERVARYING","IFCSTRUCTURALCURVEREACTION","IFCSTRUCTURALITEM","IFCSTRUCTURALLINEARACTION","IFCSTRUCTURALMEMBER","IFCSTRUCTURALPLANARACTION","IFCSTRUCTURALPOINTACTION","IFCSTRUCTURALPOINTCONNECTION","IFCSTRUCTURALPOINTREACTION","IFCSTRUCTURALREACTION","IFCSTRUCTURALSURFACEACTION","IFCSTRUCTURALSURFACECONNECTION","IFCSTRUCTURALSURFACEMEMBER","IFCSTRUCTURALSURFACEMEMBERVARYING","IFCSTRUCTURALSURFACEREACTION","IFCSURFACEFEATURE","IFCSWITCHINGDEVICE","IFCSYSTEMFURNITUREELEMENT","IFCTANK","IFCTENDON","IFCTENDONANCHOR","IFCTENDONCONDUIT","IFCTRANSFORMER","IFCTRANSPORTELEMENT","IFCTUBEBUNDLE","IFCUNITASSIGNMENT","IFCUNITARYCONTROLELEMENT","IFCUNITARYEQUIPMENT","IFCVALVE","IFCVIBRATIONDAMPER","IFCVIBRATIONISOLATOR","IFCVIRTUALELEMENT","IFCVOIDINGFEATURE","IFCWALL","IFCWALLELEMENTEDCASE","IFCWALLSTANDARDCASE","IFCWASTETERMINAL","IFCWINDOW","IFCWINDOWSTANDARDCASE","IfcElements","FromRawLineData","IfcActionRequest","FromTape","ID","IfcActor","IfcActorRole","IfcActuator","IfcActuatorType","IfcAddress","IfcAdvancedBrep","IfcAdvancedBrepWithVoids","IfcAdvancedFace","IfcAirTerminal","IfcAirTerminalBox","IfcAirTerminalBoxType","IfcAirTerminalType","IfcAirToAirHeatRecovery","IfcAirToAirHeatRecoveryType","IfcAlarm","IfcAlarmType","IfcAlignment","IfcAlignment2DHorizontal","IfcAlignment2DHorizontalSegment","IfcAlignment2DSegment","IfcAlignment2DVerSegCircularArc","IfcAlignment2DVerSegLine","IfcAlignment2DVerSegParabolicArc","IfcAlignment2DVertical","IfcAlignment2DVerticalSegment","IfcAlignmentCurve","IfcAnnotation","IfcAnnotationFillArea","IfcApplication","IfcAppliedValue","IfcApproval","IfcApprovalRelationship","IfcArbitraryClosedProfileDef","IfcArbitraryOpenProfileDef","IfcArbitraryProfileDefWithVoids","IfcAsset","IfcAsymmetricIShapeProfileDef","IfcAudioVisualAppliance","IfcAudioVisualApplianceType","IfcAxis1Placement","IfcAxis2Placement2D","IfcAxis2Placement3D","IfcBSplineCurve","IfcBSplineCurveWithKnots","IfcBSplineSurface","IfcBSplineSurfaceWithKnots","IfcBeam","IfcBeamStandardCase","IfcBeamType","IfcBearing","IfcBearingType","IfcBlobTexture","IfcBlock","IfcBoiler","IfcBoilerType","IfcBooleanClippingResult","IfcBooleanResult","IfcBoundaryCondition","IfcBoundaryCurve","IfcBoundaryEdgeCondition","IfcBoundaryFaceCondition","IfcBoundaryNodeCondition","IfcBoundaryNodeConditionWarping","IfcBoundedCurve","IfcBoundedSurface","IfcBoundingBox","IfcBoxedHalfSpace","IfcBridge","IfcBridgePart","IfcBuilding","IfcBuildingElement","IfcBuildingElementPart","IfcBuildingElementPartType","IfcBuildingElementProxy","IfcBuildingElementProxyType","IfcBuildingElementType","IfcBuildingStorey","IfcBuildingSystem","IfcBurner","IfcBurnerType","IfcCShapeProfileDef","IfcCableCarrierFitting","IfcCableCarrierFittingType","IfcCableCarrierSegment","IfcCableCarrierSegmentType","IfcCableFitting","IfcCableFittingType","IfcCableSegment","IfcCableSegmentType","IfcCaissonFoundation","IfcCaissonFoundationType","IfcCartesianPoint","IfcCartesianPointList","IfcCartesianPointList2D","IfcCartesianPointList3D","IfcCartesianTransformationOperator","IfcCartesianTransformationOperator2D","IfcCartesianTransformationOperator2DnonUniform","IfcCartesianTransformationOperator3D","IfcCartesianTransformationOperator3DnonUniform","IfcCenterLineProfileDef","IfcChiller","IfcChillerType","IfcChimney","IfcChimneyType","IfcCircle","IfcCircleHollowProfileDef","IfcCircleProfileDef","IfcCircularArcSegment2D","IfcCivilElement","IfcCivilElementType","IfcClassification","IfcClassificationReference","IfcClosedShell","IfcCoil","IfcCoilType","IfcColourRgb","IfcColourRgbList","IfcColourSpecification","IfcColumn","IfcColumnStandardCase","IfcColumnType","IfcCommunicationsAppliance","IfcCommunicationsApplianceType","IfcComplexProperty","IfcComplexPropertyTemplate","IfcCompositeCurve","IfcCompositeCurveOnSurface","IfcCompositeCurveSegment","IfcCompositeProfileDef","IfcCompressor","IfcCompressorType","IfcCondenser","IfcCondenserType","IfcConic","IfcConnectedFaceSet","IfcConnectionCurveGeometry","IfcConnectionGeometry","IfcConnectionPointEccentricity","IfcConnectionPointGeometry","IfcConnectionSurfaceGeometry","IfcConnectionVolumeGeometry","IfcConstraint","IfcConstructionEquipmentResource","IfcConstructionEquipmentResourceType","IfcConstructionMaterialResource","IfcConstructionMaterialResourceType","IfcConstructionProductResource","IfcConstructionProductResourceType","IfcConstructionResource","IfcConstructionResourceType","IfcContext","IfcContextDependentUnit","IfcControl","IfcController","IfcControllerType","IfcConversionBasedUnit","IfcConversionBasedUnitWithOffset","IfcCooledBeam","IfcCooledBeamType","IfcCoolingTower","IfcCoolingTowerType","IfcCoordinateOperation","IfcCoordinateReferenceSystem","IfcCostItem","IfcCostSchedule","IfcCostValue","IfcCovering","IfcCoveringType","IfcCrewResource","IfcCrewResourceType","IfcCsgPrimitive3D","IfcCsgSolid","IfcCurrencyRelationship","IfcCurtainWall","IfcCurtainWallType","IfcCurve","IfcCurveBoundedPlane","IfcCurveBoundedSurface","IfcCurveSegment2D","IfcCurveStyle","IfcCurveStyleFont","IfcCurveStyleFontAndScaling","IfcCurveStyleFontPattern","IfcCylindricalSurface","IfcDamper","IfcDamperType","IfcDeepFoundation","IfcDeepFoundationType","IfcDerivedProfileDef","IfcDerivedUnit","IfcDerivedUnitElement","IfcDimensionalExponents","IfcDirection","IfcDiscreteAccessory","IfcDiscreteAccessoryType","IfcDistanceExpression","IfcDistributionChamberElement","IfcDistributionChamberElementType","IfcDistributionCircuit","IfcDistributionControlElement","IfcDistributionControlElementType","IfcDistributionElement","IfcDistributionElementType","IfcDistributionFlowElement","IfcDistributionFlowElementType","IfcDistributionPort","IfcDistributionSystem","IfcDocumentInformation","IfcDocumentInformationRelationship","IfcDocumentReference","IfcDoor","IfcDoorLiningProperties","IfcDoorPanelProperties","IfcDoorStandardCase","IfcDoorStyle","IfcDoorType","IfcDraughtingPreDefinedColour","IfcDraughtingPreDefinedCurveFont","IfcDuctFitting","IfcDuctFittingType","IfcDuctSegment","IfcDuctSegmentType","IfcDuctSilencer","IfcDuctSilencerType","IfcEdge","IfcEdgeCurve","IfcEdgeLoop","IfcElectricAppliance","IfcElectricApplianceType","IfcElectricDistributionBoard","IfcElectricDistributionBoardType","IfcElectricFlowStorageDevice","IfcElectricFlowStorageDeviceType","IfcElectricGenerator","IfcElectricGeneratorType","IfcElectricMotor","IfcElectricMotorType","IfcElectricTimeControl","IfcElectricTimeControlType","IfcElement","IfcElementAssembly","IfcElementAssemblyType","IfcElementComponent","IfcElementComponentType","IfcElementQuantity","IfcElementType","IfcElementarySurface","IfcEllipse","IfcEllipseProfileDef","IfcEnergyConversionDevice","IfcEnergyConversionDeviceType","IfcEngine","IfcEngineType","IfcEvaporativeCooler","IfcEvaporativeCoolerType","IfcEvaporator","IfcEvaporatorType","IfcEvent","IfcEventTime","IfcEventType","IfcExtendedProperties","IfcExternalInformation","IfcExternalReference","IfcExternalReferenceRelationship","IfcExternalSpatialElement","IfcExternalSpatialStructureElement","IfcExternallyDefinedHatchStyle","IfcExternallyDefinedSurfaceStyle","IfcExternallyDefinedTextFont","IfcExtrudedAreaSolid","IfcExtrudedAreaSolidTapered","IfcFace","IfcFaceBasedSurfaceModel","IfcFaceBound","IfcFaceOuterBound","IfcFaceSurface","IfcFacetedBrep","IfcFacetedBrepWithVoids","IfcFacility","IfcFacilityPart","IfcFailureConnectionCondition","IfcFan","IfcFanType","IfcFastener","IfcFastenerType","IfcFeatureElement","IfcFeatureElementAddition","IfcFeatureElementSubtraction","IfcFillAreaStyle","IfcFillAreaStyleHatching","IfcFillAreaStyleTiles","IfcFilter","IfcFilterType","IfcFireSuppressionTerminal","IfcFireSuppressionTerminalType","IfcFixedReferenceSweptAreaSolid","IfcFlowController","IfcFlowControllerType","IfcFlowFitting","IfcFlowFittingType","IfcFlowInstrument","IfcFlowInstrumentType","IfcFlowMeter","IfcFlowMeterType","IfcFlowMovingDevice","IfcFlowMovingDeviceType","IfcFlowSegment","IfcFlowSegmentType","IfcFlowStorageDevice","IfcFlowStorageDeviceType","IfcFlowTerminal","IfcFlowTerminalType","IfcFlowTreatmentDevice","IfcFlowTreatmentDeviceType","IfcFooting","IfcFootingType","IfcFurnishingElement","IfcFurnishingElementType","IfcFurniture","IfcFurnitureType","IfcGeographicElement","IfcGeographicElementType","IfcGeometricCurveSet","IfcGeometricRepresentationContext","IfcGeometricRepresentationItem","IfcGeometricRepresentationSubContext","IfcGeometricSet","IfcGrid","IfcGridAxis","IfcGridPlacement","IfcGroup","IfcHalfSpaceSolid","IfcHeatExchanger","IfcHeatExchangerType","IfcHumidifier","IfcHumidifierType","IfcIShapeProfileDef","IfcImageTexture","IfcIndexedColourMap","IfcIndexedPolyCurve","IfcIndexedPolygonalFace","IfcIndexedPolygonalFaceWithVoids","IfcIndexedTextureMap","IfcIndexedTriangleTextureMap","IfcInterceptor","IfcInterceptorType","IfcIntersectionCurve","IfcInventory","IfcIrregularTimeSeries","IfcIrregularTimeSeriesValue","IfcJunctionBox","IfcJunctionBoxType","IfcLShapeProfileDef","IfcLaborResource","IfcLaborResourceType","IfcLagTime","IfcLamp","IfcLampType","IfcLibraryInformation","IfcLibraryReference","IfcLightDistributionData","IfcLightFixture","IfcLightFixtureType","IfcLightIntensityDistribution","IfcLightSource","IfcLightSourceAmbient","IfcLightSourceDirectional","IfcLightSourceGoniometric","IfcLightSourcePositional","IfcLightSourceSpot","IfcLine","IfcLineSegment2D","IfcLinearPlacement","IfcLinearPositioningElement","IfcLocalPlacement","IfcLoop","IfcManifoldSolidBrep","IfcMapConversion","IfcMappedItem","IfcMaterial","IfcMaterialClassificationRelationship","IfcMaterialConstituent","IfcMaterialConstituentSet","IfcMaterialDefinition","IfcMaterialDefinitionRepresentation","IfcMaterialLayer","IfcMaterialLayerSet","IfcMaterialLayerSetUsage","IfcMaterialLayerWithOffsets","IfcMaterialList","IfcMaterialProfile","IfcMaterialProfileSet","IfcMaterialProfileSetUsage","IfcMaterialProfileSetUsageTapering","IfcMaterialProfileWithOffsets","IfcMaterialProperties","IfcMaterialRelationship","IfcMaterialUsageDefinition","IfcMeasureWithUnit","IfcMechanicalFastener","IfcMechanicalFastenerType","IfcMedicalDevice","IfcMedicalDeviceType","IfcMember","IfcMemberStandardCase","IfcMemberType","IfcMetric","IfcMirroredProfileDef","IfcMonetaryUnit","IfcMotorConnection","IfcMotorConnectionType","IfcNamedUnit","IfcObject","IfcObjectDefinition","IfcObjectPlacement","IfcObjective","IfcOccupant","IfcOffsetCurve","IfcOffsetCurve2D","IfcOffsetCurve3D","IfcOffsetCurveByDistances","IfcOpenShell","IfcOpeningElement","IfcOpeningStandardCase","IfcOrganization","IfcOrganizationRelationship","IfcOrientationExpression","IfcOrientedEdge","IfcOuterBoundaryCurve","IfcOutlet","IfcOutletType","IfcOwnerHistory","IfcParameterizedProfileDef","IfcPath","IfcPcurve","IfcPerformanceHistory","IfcPermeableCoveringProperties","IfcPermit","IfcPerson","IfcPersonAndOrganization","IfcPhysicalComplexQuantity","IfcPhysicalQuantity","IfcPhysicalSimpleQuantity","IfcPile","IfcPileType","IfcPipeFitting","IfcPipeFittingType","IfcPipeSegment","IfcPipeSegmentType","IfcPixelTexture","IfcPlacement","IfcPlanarBox","IfcPlanarExtent","IfcPlane","IfcPlate","IfcPlateStandardCase","IfcPlateType","IfcPoint","IfcPointOnCurve","IfcPointOnSurface","IfcPolyLoop","IfcPolygonalBoundedHalfSpace","IfcPolygonalFaceSet","IfcPolyline","IfcPort","IfcPositioningElement","IfcPostalAddress","IfcPreDefinedColour","IfcPreDefinedCurveFont","IfcPreDefinedItem","IfcPreDefinedProperties","IfcPreDefinedPropertySet","IfcPreDefinedTextFont","IfcPresentationItem","IfcPresentationLayerAssignment","IfcPresentationLayerWithStyle","IfcPresentationStyle","IfcPresentationStyleAssignment","IfcProcedure","IfcProcedureType","IfcProcess","IfcProduct","IfcProductDefinitionShape","IfcProductRepresentation","IfcProfileDef","IfcProfileProperties","IfcProject","IfcProjectLibrary","IfcProjectOrder","IfcProjectedCRS","IfcProjectionElement","IfcProperty","IfcPropertyAbstraction","IfcPropertyBoundedValue","IfcPropertyDefinition","IfcPropertyDependencyRelationship","IfcPropertyEnumeratedValue","IfcPropertyEnumeration","IfcPropertyListValue","IfcPropertyReferenceValue","IfcPropertySet","IfcPropertySetDefinition","IfcPropertySetTemplate","IfcPropertySingleValue","IfcPropertyTableValue","IfcPropertyTemplate","IfcPropertyTemplateDefinition","IfcProtectiveDevice","IfcProtectiveDeviceTrippingUnit","IfcProtectiveDeviceTrippingUnitType","IfcProtectiveDeviceType","IfcProxy","IfcPump","IfcPumpType","IfcQuantityArea","IfcQuantityCount","IfcQuantityLength","IfcQuantitySet","IfcQuantityTime","IfcQuantityVolume","IfcQuantityWeight","IfcRailing","IfcRailingType","IfcRamp","IfcRampFlight","IfcRampFlightType","IfcRampType","IfcRationalBSplineCurveWithKnots","IfcRationalBSplineSurfaceWithKnots","IfcRectangleHollowProfileDef","IfcRectangleProfileDef","IfcRectangularPyramid","IfcRectangularTrimmedSurface","IfcRecurrencePattern","IfcReference","IfcReferent","IfcRegularTimeSeries","IfcReinforcementBarProperties","IfcReinforcementDefinitionProperties","IfcReinforcingBar","IfcReinforcingBarType","IfcReinforcingElement","IfcReinforcingElementType","IfcReinforcingMesh","IfcReinforcingMeshType","IfcRelAggregates","IfcRelAssigns","IfcRelAssignsToActor","IfcRelAssignsToControl","IfcRelAssignsToGroup","IfcRelAssignsToGroupByFactor","IfcRelAssignsToProcess","IfcRelAssignsToProduct","IfcRelAssignsToResource","IfcRelAssociates","IfcRelAssociatesApproval","IfcRelAssociatesClassification","IfcRelAssociatesConstraint","IfcRelAssociatesDocument","IfcRelAssociatesLibrary","IfcRelAssociatesMaterial","IfcRelConnects","IfcRelConnectsElements","IfcRelConnectsPathElements","IfcRelConnectsPortToElement","IfcRelConnectsPorts","IfcRelConnectsStructuralActivity","IfcRelConnectsStructuralMember","IfcRelConnectsWithEccentricity","IfcRelConnectsWithRealizingElements","IfcRelContainedInSpatialStructure","IfcRelCoversBldgElements","IfcRelCoversSpaces","IfcRelDeclares","IfcRelDecomposes","IfcRelDefines","IfcRelDefinesByObject","IfcRelDefinesByProperties","IfcRelDefinesByTemplate","IfcRelDefinesByType","IfcRelFillsElement","IfcRelFlowControlElements","IfcRelInterferesElements","IfcRelNests","IfcRelPositions","IfcRelProjectsElement","IfcRelReferencedInSpatialStructure","IfcRelSequence","IfcRelServicesBuildings","IfcRelSpaceBoundary","IfcRelSpaceBoundary1stLevel","IfcRelSpaceBoundary2ndLevel","IfcRelVoidsElement","IfcRelationship","IfcReparametrisedCompositeCurveSegment","IfcRepresentation","IfcRepresentationContext","IfcRepresentationItem","IfcRepresentationMap","IfcResource","IfcResourceApprovalRelationship","IfcResourceConstraintRelationship","IfcResourceLevelRelationship","IfcResourceTime","IfcRevolvedAreaSolid","IfcRevolvedAreaSolidTapered","IfcRightCircularCone","IfcRightCircularCylinder","IfcRoof","IfcRoofType","IfcRoot","IfcRoundedRectangleProfileDef","IfcSIUnit","IfcSanitaryTerminal","IfcSanitaryTerminalType","IfcSchedulingTime","IfcSeamCurve","IfcSectionProperties","IfcSectionReinforcementProperties","IfcSectionedSolid","IfcSectionedSolidHorizontal","IfcSectionedSpine","IfcSensor","IfcSensorType","IfcShadingDevice","IfcShadingDeviceType","IfcShapeAspect","IfcShapeModel","IfcShapeRepresentation","IfcShellBasedSurfaceModel","IfcSimpleProperty","IfcSimplePropertyTemplate","IfcSite","IfcSlab","IfcSlabElementedCase","IfcSlabStandardCase","IfcSlabType","IfcSlippageConnectionCondition","IfcSolarDevice","IfcSolarDeviceType","IfcSolidModel","IfcSpace","IfcSpaceHeater","IfcSpaceHeaterType","IfcSpaceType","IfcSpatialElement","IfcSpatialElementType","IfcSpatialStructureElement","IfcSpatialStructureElementType","IfcSpatialZone","IfcSpatialZoneType","IfcSphere","IfcSphericalSurface","IfcStackTerminal","IfcStackTerminalType","IfcStair","IfcStairFlight","IfcStairFlightType","IfcStairType","IfcStructuralAction","IfcStructuralActivity","IfcStructuralAnalysisModel","IfcStructuralConnection","IfcStructuralConnectionCondition","IfcStructuralCurveAction","IfcStructuralCurveConnection","IfcStructuralCurveMember","IfcStructuralCurveMemberVarying","IfcStructuralCurveReaction","IfcStructuralItem","IfcStructuralLinearAction","IfcStructuralLoad","IfcStructuralLoadCase","IfcStructuralLoadConfiguration","IfcStructuralLoadGroup","IfcStructuralLoadLinearForce","IfcStructuralLoadOrResult","IfcStructuralLoadPlanarForce","IfcStructuralLoadSingleDisplacement","IfcStructuralLoadSingleDisplacementDistortion","IfcStructuralLoadSingleForce","IfcStructuralLoadSingleForceWarping","IfcStructuralLoadStatic","IfcStructuralLoadTemperature","IfcStructuralMember","IfcStructuralPlanarAction","IfcStructuralPointAction","IfcStructuralPointConnection","IfcStructuralPointReaction","IfcStructuralReaction","IfcStructuralResultGroup","IfcStructuralSurfaceAction","IfcStructuralSurfaceConnection","IfcStructuralSurfaceMember","IfcStructuralSurfaceMemberVarying","IfcStructuralSurfaceReaction","IfcStyleModel","IfcStyledItem","IfcStyledRepresentation","IfcSubContractResource","IfcSubContractResourceType","IfcSubedge","IfcSurface","IfcSurfaceCurve","IfcSurfaceCurveSweptAreaSolid","IfcSurfaceFeature","IfcSurfaceOfLinearExtrusion","IfcSurfaceOfRevolution","IfcSurfaceReinforcementArea","IfcSurfaceStyle","IfcSurfaceStyleLighting","IfcSurfaceStyleRefraction","IfcSurfaceStyleRendering","IfcSurfaceStyleShading","IfcSurfaceStyleWithTextures","IfcSurfaceTexture","IfcSweptAreaSolid","IfcSweptDiskSolid","IfcSweptDiskSolidPolygonal","IfcSweptSurface","IfcSwitchingDevice","IfcSwitchingDeviceType","IfcSystem","IfcSystemFurnitureElement","IfcSystemFurnitureElementType","IfcTShapeProfileDef","IfcTable","IfcTableColumn","IfcTableRow","IfcTank","IfcTankType","IfcTask","IfcTaskTime","IfcTaskTimeRecurring","IfcTaskType","IfcTelecomAddress","IfcTendon","IfcTendonAnchor","IfcTendonAnchorType","IfcTendonConduit","IfcTendonConduitType","IfcTendonType","IfcTessellatedFaceSet","IfcTessellatedItem","IfcTextLiteral","IfcTextLiteralWithExtent","IfcTextStyle","IfcTextStyleFontModel","IfcTextStyleForDefinedFont","IfcTextStyleTextModel","IfcTextureCoordinate","IfcTextureCoordinateGenerator","IfcTextureMap","IfcTextureVertex","IfcTextureVertexList","IfcTimePeriod","IfcTimeSeries","IfcTimeSeriesValue","IfcTopologicalRepresentationItem","IfcTopologyRepresentation","IfcToroidalSurface","IfcTransformer","IfcTransformerType","IfcTransitionCurveSegment2D","IfcTransportElement","IfcTransportElementType","IfcTrapeziumProfileDef","IfcTriangulatedFaceSet","IfcTriangulatedIrregularNetwork","IfcTrimmedCurve","IfcTubeBundle","IfcTubeBundleType","IfcTypeObject","IfcTypeProcess","IfcTypeProduct","IfcTypeResource","IfcUShapeProfileDef","IfcUnitAssignment","IfcUnitaryControlElement","IfcUnitaryControlElementType","IfcUnitaryEquipment","IfcUnitaryEquipmentType","IfcValve","IfcValveType","IfcVector","IfcVertex","IfcVertexLoop","IfcVertexPoint","IfcVibrationDamper","IfcVibrationDamperType","IfcVibrationIsolator","IfcVibrationIsolatorType","IfcVirtualElement","IfcVirtualGridIntersection","IfcVoidingFeature","IfcWall","IfcWallElementedCase","IfcWallStandardCase","IfcWallType","IfcWasteTerminal","IfcWasteTerminalType","IfcWindow","IfcWindowLiningProperties","IfcWindowPanelProperties","IfcWindowStandardCase","IfcWindowStyle","IfcWindowType","IfcWorkCalendar","IfcWorkControl","IfcWorkPlan","IfcWorkSchedule","IfcWorkTime","IfcZShapeProfileDef","IfcZone","IfcActionRequestTypeEnum","EMAIL","FAX","PHONE","POST","VERBAL","USERDEFINED","NOTDEFINED","IfcActionSourceTypeEnum","DEAD_LOAD_G","COMPLETION_G1","LIVE_LOAD_Q","SNOW_S","WIND_W","PRESTRESSING_P","SETTLEMENT_U","TEMPERATURE_T","EARTHQUAKE_E","FIRE","IMPULSE","IMPACT","TRANSPORT","ERECTION","PROPPING","SYSTEM_IMPERFECTION","SHRINKAGE","CREEP","LACK_OF_FIT","BUOYANCY","ICE","CURRENT","WAVE","RAIN","BRAKES","IfcActionTypeEnum","PERMANENT_G","VARIABLE_Q","EXTRAORDINARY_A","IfcActuatorTypeEnum","ELECTRICACTUATOR","HANDOPERATEDACTUATOR","HYDRAULICACTUATOR","PNEUMATICACTUATOR","THERMOSTATICACTUATOR","IfcAddressTypeEnum","OFFICE","SITE","HOME","DISTRIBUTIONPOINT","IfcAirTerminalBoxTypeEnum","CONSTANTFLOW","VARIABLEFLOWPRESSUREDEPENDANT","VARIABLEFLOWPRESSUREINDEPENDANT","IfcAirTerminalTypeEnum","DIFFUSER","GRILLE","LOUVRE","REGISTER","IfcAirToAirHeatRecoveryTypeEnum","FIXEDPLATECOUNTERFLOWEXCHANGER","FIXEDPLATECROSSFLOWEXCHANGER","FIXEDPLATEPARALLELFLOWEXCHANGER","ROTARYWHEEL","RUNAROUNDCOILLOOP","HEATPIPE","TWINTOWERENTHALPYRECOVERYLOOPS","THERMOSIPHONSEALEDTUBEHEATEXCHANGERS","THERMOSIPHONCOILTYPEHEATEXCHANGERS","IfcAlarmTypeEnum","BELL","BREAKGLASSBUTTON","LIGHT","MANUALPULLBOX","SIREN","WHISTLE","IfcAlignmentTypeEnum","IfcAnalysisModelTypeEnum","IN_PLANE_LOADING_2D","OUT_PLANE_LOADING_2D","LOADING_3D","IfcAnalysisTheoryTypeEnum","FIRST_ORDER_THEORY","SECOND_ORDER_THEORY","THIRD_ORDER_THEORY","FULL_NONLINEAR_THEORY","IfcArithmeticOperatorEnum","ADD","DIVIDE","MULTIPLY","SUBTRACT","IfcAssemblyPlaceEnum","FACTORY","IfcAudioVisualApplianceTypeEnum","AMPLIFIER","CAMERA","DISPLAY","MICROPHONE","PLAYER","PROJECTOR","RECEIVER","SPEAKER","SWITCHER","TELEPHONE","TUNER","IfcBSplineCurveForm","POLYLINE_FORM","CIRCULAR_ARC","ELLIPTIC_ARC","PARABOLIC_ARC","HYPERBOLIC_ARC","UNSPECIFIED","IfcBSplineSurfaceForm","PLANE_SURF","CYLINDRICAL_SURF","CONICAL_SURF","SPHERICAL_SURF","TOROIDAL_SURF","SURF_OF_REVOLUTION","RULED_SURF","GENERALISED_CONE","QUADRIC_SURF","SURF_OF_LINEAR_EXTRUSION","IfcBeamTypeEnum","BEAM","JOIST","HOLLOWCORE","LINTEL","SPANDREL","T_BEAM","GIRDER_SEGMENT","DIAPHRAGM","PIERCAP","HATSTONE","CORNICE","EDGEBEAM","IfcBearingTypeDisplacementEnum","FIXED_MOVEMENT","GUIDED_LONGITUDINAL","GUIDED_TRANSVERSAL","FREE_MOVEMENT","IfcBearingTypeEnum","CYLINDRICAL","SPHERICAL","ELASTOMERIC","POT","GUIDE","ROCKER","ROLLER","DISK","IfcBenchmarkEnum","GREATERTHAN","GREATERTHANOREQUALTO","LESSTHAN","LESSTHANOREQUALTO","EQUALTO","NOTEQUALTO","INCLUDES","NOTINCLUDES","INCLUDEDIN","NOTINCLUDEDIN","IfcBoilerTypeEnum","WATER","STEAM","IfcBooleanOperator","UNION","INTERSECTION","DIFFERENCE","IfcBridgePartTypeEnum","ABUTMENT","DECK","DECK_SEGMENT","FOUNDATION","PIER","PIER_SEGMENT","PYLON","SUBSTRUCTURE","SUPERSTRUCTURE","SURFACESTRUCTURE","IfcBridgeTypeEnum","ARCHED","CABLE_STAYED","CANTILEVER","CULVERT","FRAMEWORK","GIRDER","SUSPENSION","TRUSS","IfcBuildingElementPartTypeEnum","INSULATION","PRECASTPANEL","APRON","IfcBuildingElementProxyTypeEnum","COMPLEX","ELEMENT","PARTIAL","PROVISIONFORVOID","PROVISIONFORSPACE","IfcBuildingSystemTypeEnum","FENESTRATION","LOADBEARING","OUTERSHELL","SHADING","REINFORCING","PRESTRESSING","IfcBurnerTypeEnum","IfcCableCarrierFittingTypeEnum","BEND","CROSS","REDUCER","TEE","IfcCableCarrierSegmentTypeEnum","CABLELADDERSEGMENT","CABLETRAYSEGMENT","CABLETRUNKINGSEGMENT","CONDUITSEGMENT","IfcCableFittingTypeEnum","CONNECTOR","ENTRY","EXIT","JUNCTION","TRANSITION","IfcCableSegmentTypeEnum","BUSBARSEGMENT","CABLESEGMENT","CONDUCTORSEGMENT","CORESEGMENT","IfcCaissonFoundationTypeEnum","WELL","CAISSON","IfcChangeActionEnum","NOCHANGE","MODIFIED","ADDED","DELETED","IfcChillerTypeEnum","AIRCOOLED","WATERCOOLED","HEATRECOVERY","IfcChimneyTypeEnum","IfcCoilTypeEnum","DXCOOLINGCOIL","ELECTRICHEATINGCOIL","GASHEATINGCOIL","HYDRONICCOIL","STEAMHEATINGCOIL","WATERCOOLINGCOIL","WATERHEATINGCOIL","IfcColumnTypeEnum","COLUMN","PILASTER","PIERSTEM","PIERSTEM_SEGMENT","STANDCOLUMN","IfcCommunicationsApplianceTypeEnum","ANTENNA","COMPUTER","GATEWAY","MODEM","NETWORKAPPLIANCE","NETWORKBRIDGE","NETWORKHUB","PRINTER","REPEATER","ROUTER","SCANNER","IfcComplexPropertyTemplateTypeEnum","P_COMPLEX","Q_COMPLEX","IfcCompressorTypeEnum","DYNAMIC","RECIPROCATING","ROTARY","SCROLL","TROCHOIDAL","SINGLESTAGE","BOOSTER","OPENTYPE","HERMETIC","SEMIHERMETIC","WELDEDSHELLHERMETIC","ROLLINGPISTON","ROTARYVANE","SINGLESCREW","TWINSCREW","IfcCondenserTypeEnum","EVAPORATIVECOOLED","WATERCOOLEDBRAZEDPLATE","WATERCOOLEDSHELLCOIL","WATERCOOLEDSHELLTUBE","WATERCOOLEDTUBEINTUBE","IfcConnectionTypeEnum","ATPATH","ATSTART","ATEND","IfcConstraintEnum","HARD","SOFT","ADVISORY","IfcConstructionEquipmentResourceTypeEnum","DEMOLISHING","EARTHMOVING","ERECTING","HEATING","LIGHTING","PAVING","PUMPING","TRANSPORTING","IfcConstructionMaterialResourceTypeEnum","AGGREGATES","CONCRETE","DRYWALL","FUEL","GYPSUM","MASONRY","METAL","PLASTIC","WOOD","IfcConstructionProductResourceTypeEnum","ASSEMBLY","FORMWORK","IfcControllerTypeEnum","FLOATING","PROGRAMMABLE","PROPORTIONAL","MULTIPOSITION","TWOPOSITION","IfcCooledBeamTypeEnum","ACTIVE","PASSIVE","IfcCoolingTowerTypeEnum","NATURALDRAFT","MECHANICALINDUCEDDRAFT","MECHANICALFORCEDDRAFT","IfcCostItemTypeEnum","IfcCostScheduleTypeEnum","BUDGET","COSTPLAN","ESTIMATE","TENDER","PRICEDBILLOFQUANTITIES","UNPRICEDBILLOFQUANTITIES","SCHEDULEOFRATES","IfcCoveringTypeEnum","CEILING","FLOORING","CLADDING","ROOFING","MOLDING","SKIRTINGBOARD","MEMBRANE","SLEEVING","WRAPPING","COPING","IfcCrewResourceTypeEnum","IfcCurtainWallTypeEnum","IfcCurveInterpolationEnum","LINEAR","LOG_LINEAR","LOG_LOG","IfcDamperTypeEnum","BACKDRAFTDAMPER","BALANCINGDAMPER","BLASTDAMPER","CONTROLDAMPER","FIREDAMPER","FIRESMOKEDAMPER","FUMEHOODEXHAUST","GRAVITYDAMPER","GRAVITYRELIEFDAMPER","RELIEFDAMPER","SMOKEDAMPER","IfcDataOriginEnum","MEASURED","PREDICTED","SIMULATED","IfcDerivedUnitEnum","ANGULARVELOCITYUNIT","AREADENSITYUNIT","COMPOUNDPLANEANGLEUNIT","DYNAMICVISCOSITYUNIT","HEATFLUXDENSITYUNIT","INTEGERCOUNTRATEUNIT","ISOTHERMALMOISTURECAPACITYUNIT","KINEMATICVISCOSITYUNIT","LINEARVELOCITYUNIT","MASSDENSITYUNIT","MASSFLOWRATEUNIT","MOISTUREDIFFUSIVITYUNIT","MOLECULARWEIGHTUNIT","SPECIFICHEATCAPACITYUNIT","THERMALADMITTANCEUNIT","THERMALCONDUCTANCEUNIT","THERMALRESISTANCEUNIT","THERMALTRANSMITTANCEUNIT","VAPORPERMEABILITYUNIT","VOLUMETRICFLOWRATEUNIT","ROTATIONALFREQUENCYUNIT","TORQUEUNIT","MOMENTOFINERTIAUNIT","LINEARMOMENTUNIT","LINEARFORCEUNIT","PLANARFORCEUNIT","MODULUSOFELASTICITYUNIT","SHEARMODULUSUNIT","LINEARSTIFFNESSUNIT","ROTATIONALSTIFFNESSUNIT","MODULUSOFSUBGRADEREACTIONUNIT","ACCELERATIONUNIT","CURVATUREUNIT","HEATINGVALUEUNIT","IONCONCENTRATIONUNIT","LUMINOUSINTENSITYDISTRIBUTIONUNIT","MASSPERLENGTHUNIT","MODULUSOFLINEARSUBGRADEREACTIONUNIT","MODULUSOFROTATIONALSUBGRADEREACTIONUNIT","PHUNIT","ROTATIONALMASSUNIT","SECTIONAREAINTEGRALUNIT","SECTIONMODULUSUNIT","SOUNDPOWERLEVELUNIT","SOUNDPOWERUNIT","SOUNDPRESSURELEVELUNIT","SOUNDPRESSUREUNIT","TEMPERATUREGRADIENTUNIT","TEMPERATURERATEOFCHANGEUNIT","THERMALEXPANSIONCOEFFICIENTUNIT","WARPINGCONSTANTUNIT","WARPINGMOMENTUNIT","IfcDirectionSenseEnum","POSITIVE","NEGATIVE","IfcDiscreteAccessoryTypeEnum","ANCHORPLATE","BRACKET","SHOE","EXPANSION_JOINT_DEVICE","IfcDistributionChamberElementTypeEnum","FORMEDDUCT","INSPECTIONCHAMBER","INSPECTIONPIT","MANHOLE","METERCHAMBER","SUMP","TRENCH","VALVECHAMBER","IfcDistributionPortTypeEnum","CABLE","CABLECARRIER","DUCT","PIPE","IfcDistributionSystemEnum","AIRCONDITIONING","AUDIOVISUAL","CHEMICAL","CHILLEDWATER","COMMUNICATION","COMPRESSEDAIR","CONDENSERWATER","CONTROL","CONVEYING","DATA","DISPOSAL","DOMESTICCOLDWATER","DOMESTICHOTWATER","DRAINAGE","EARTHING","ELECTRICAL","ELECTROACOUSTIC","EXHAUST","FIREPROTECTION","GAS","HAZARDOUS","LIGHTNINGPROTECTION","MUNICIPALSOLIDWASTE","OIL","OPERATIONAL","POWERGENERATION","RAINWATER","REFRIGERATION","SECURITY","SEWAGE","SIGNAL","STORMWATER","TV","VACUUM","VENT","VENTILATION","WASTEWATER","WATERSUPPLY","IfcDocumentConfidentialityEnum","PUBLIC","RESTRICTED","CONFIDENTIAL","PERSONAL","IfcDocumentStatusEnum","DRAFT","FINALDRAFT","FINAL","REVISION","IfcDoorPanelOperationEnum","SWINGING","DOUBLE_ACTING","SLIDING","FOLDING","REVOLVING","ROLLINGUP","FIXEDPANEL","IfcDoorPanelPositionEnum","LEFT","MIDDLE","RIGHT","IfcDoorStyleConstructionEnum","ALUMINIUM","HIGH_GRADE_STEEL","STEEL","ALUMINIUM_WOOD","ALUMINIUM_PLASTIC","IfcDoorStyleOperationEnum","SINGLE_SWING_LEFT","SINGLE_SWING_RIGHT","DOUBLE_DOOR_SINGLE_SWING","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT","DOUBLE_SWING_LEFT","DOUBLE_SWING_RIGHT","DOUBLE_DOOR_DOUBLE_SWING","SLIDING_TO_LEFT","SLIDING_TO_RIGHT","DOUBLE_DOOR_SLIDING","FOLDING_TO_LEFT","FOLDING_TO_RIGHT","DOUBLE_DOOR_FOLDING","IfcDoorTypeEnum","DOOR","GATE","TRAPDOOR","IfcDoorTypeOperationEnum","SWING_FIXED_LEFT","SWING_FIXED_RIGHT","IfcDuctFittingTypeEnum","OBSTRUCTION","IfcDuctSegmentTypeEnum","RIGIDSEGMENT","FLEXIBLESEGMENT","IfcDuctSilencerTypeEnum","FLATOVAL","RECTANGULAR","ROUND","IfcElectricApplianceTypeEnum","DISHWASHER","ELECTRICCOOKER","FREESTANDINGELECTRICHEATER","FREESTANDINGFAN","FREESTANDINGWATERHEATER","FREESTANDINGWATERCOOLER","FREEZER","FRIDGE_FREEZER","HANDDRYER","KITCHENMACHINE","MICROWAVE","PHOTOCOPIER","REFRIGERATOR","TUMBLEDRYER","VENDINGMACHINE","WASHINGMACHINE","IfcElectricDistributionBoardTypeEnum","CONSUMERUNIT","DISTRIBUTIONBOARD","MOTORCONTROLCENTRE","SWITCHBOARD","IfcElectricFlowStorageDeviceTypeEnum","BATTERY","CAPACITORBANK","HARMONICFILTER","INDUCTORBANK","UPS","IfcElectricGeneratorTypeEnum","CHP","ENGINEGENERATOR","STANDALONE","IfcElectricMotorTypeEnum","DC","INDUCTION","POLYPHASE","RELUCTANCESYNCHRONOUS","SYNCHRONOUS","IfcElectricTimeControlTypeEnum","TIMECLOCK","TIMEDELAY","RELAY","IfcElementAssemblyTypeEnum","ACCESSORY_ASSEMBLY","ARCH","BEAM_GRID","BRACED_FRAME","REINFORCEMENT_UNIT","RIGID_FRAME","SLAB_FIELD","CROSS_BRACING","IfcElementCompositionEnum","IfcEngineTypeEnum","EXTERNALCOMBUSTION","INTERNALCOMBUSTION","IfcEvaporativeCoolerTypeEnum","DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER","DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER","DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER","DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER","DIRECTEVAPORATIVEAIRWASHER","INDIRECTEVAPORATIVEPACKAGEAIRCOOLER","INDIRECTEVAPORATIVEWETCOIL","INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER","INDIRECTDIRECTCOMBINATION","IfcEvaporatorTypeEnum","DIRECTEXPANSION","DIRECTEXPANSIONSHELLANDTUBE","DIRECTEXPANSIONTUBEINTUBE","DIRECTEXPANSIONBRAZEDPLATE","FLOODEDSHELLANDTUBE","SHELLANDCOIL","IfcEventTriggerTypeEnum","EVENTRULE","EVENTMESSAGE","EVENTTIME","EVENTCOMPLEX","IfcEventTypeEnum","STARTEVENT","ENDEVENT","INTERMEDIATEEVENT","IfcExternalSpatialElementTypeEnum","EXTERNAL","EXTERNAL_EARTH","EXTERNAL_WATER","EXTERNAL_FIRE","IfcFanTypeEnum","CENTRIFUGALFORWARDCURVED","CENTRIFUGALRADIAL","CENTRIFUGALBACKWARDINCLINEDCURVED","CENTRIFUGALAIRFOIL","TUBEAXIAL","VANEAXIAL","PROPELLORAXIAL","IfcFastenerTypeEnum","GLUE","MORTAR","WELD","IfcFilterTypeEnum","AIRPARTICLEFILTER","COMPRESSEDAIRFILTER","ODORFILTER","OILFILTER","STRAINER","WATERFILTER","IfcFireSuppressionTerminalTypeEnum","BREECHINGINLET","FIREHYDRANT","HOSEREEL","SPRINKLER","SPRINKLERDEFLECTOR","IfcFlowDirectionEnum","SOURCE","SINK","SOURCEANDSINK","IfcFlowInstrumentTypeEnum","PRESSUREGAUGE","THERMOMETER","AMMETER","FREQUENCYMETER","POWERFACTORMETER","PHASEANGLEMETER","VOLTMETER_PEAK","VOLTMETER_RMS","IfcFlowMeterTypeEnum","ENERGYMETER","GASMETER","OILMETER","WATERMETER","IfcFootingTypeEnum","CAISSON_FOUNDATION","FOOTING_BEAM","PAD_FOOTING","PILE_CAP","STRIP_FOOTING","IfcFurnitureTypeEnum","CHAIR","TABLE","DESK","BED","FILECABINET","SHELF","SOFA","IfcGeographicElementTypeEnum","TERRAIN","SOIL_BORING_POINT","IfcGeometricProjectionEnum","GRAPH_VIEW","SKETCH_VIEW","MODEL_VIEW","PLAN_VIEW","REFLECTED_PLAN_VIEW","SECTION_VIEW","ELEVATION_VIEW","IfcGlobalOrLocalEnum","GLOBAL_COORDS","LOCAL_COORDS","IfcGridTypeEnum","RADIAL","TRIANGULAR","IRREGULAR","IfcHeatExchangerTypeEnum","PLATE","SHELLANDTUBE","IfcHumidifierTypeEnum","STEAMINJECTION","ADIABATICAIRWASHER","ADIABATICPAN","ADIABATICWETTEDELEMENT","ADIABATICATOMIZING","ADIABATICULTRASONIC","ADIABATICRIGIDMEDIA","ADIABATICCOMPRESSEDAIRNOZZLE","ASSISTEDELECTRIC","ASSISTEDNATURALGAS","ASSISTEDPROPANE","ASSISTEDBUTANE","ASSISTEDSTEAM","IfcInterceptorTypeEnum","CYCLONIC","GREASE","PETROL","IfcInternalOrExternalEnum","INTERNAL","IfcInventoryTypeEnum","ASSETINVENTORY","SPACEINVENTORY","FURNITUREINVENTORY","IfcJunctionBoxTypeEnum","POWER","IfcKnotType","UNIFORM_KNOTS","QUASI_UNIFORM_KNOTS","PIECEWISE_BEZIER_KNOTS","IfcLaborResourceTypeEnum","ADMINISTRATION","CARPENTRY","CLEANING","ELECTRIC","FINISHING","GENERAL","HVAC","LANDSCAPING","PAINTING","PLUMBING","SITEGRADING","STEELWORK","SURVEYING","IfcLampTypeEnum","COMPACTFLUORESCENT","FLUORESCENT","HALOGEN","HIGHPRESSUREMERCURY","HIGHPRESSURESODIUM","LED","METALHALIDE","OLED","TUNGSTENFILAMENT","IfcLayerSetDirectionEnum","AXIS1","AXIS2","AXIS3","IfcLightDistributionCurveEnum","TYPE_A","TYPE_B","TYPE_C","IfcLightEmissionSourceEnum","LIGHTEMITTINGDIODE","LOWPRESSURESODIUM","LOWVOLTAGEHALOGEN","MAINVOLTAGEHALOGEN","IfcLightFixtureTypeEnum","POINTSOURCE","DIRECTIONSOURCE","SECURITYLIGHTING","IfcLoadGroupTypeEnum","LOAD_GROUP","LOAD_CASE","LOAD_COMBINATION","IfcLogicalOperatorEnum","LOGICALAND","LOGICALOR","LOGICALXOR","LOGICALNOTAND","LOGICALNOTOR","IfcMechanicalFastenerTypeEnum","ANCHORBOLT","BOLT","DOWEL","NAIL","NAILPLATE","RIVET","SCREW","SHEARCONNECTOR","STAPLE","STUDSHEARCONNECTOR","COUPLER","IfcMedicalDeviceTypeEnum","AIRSTATION","FEEDAIRUNIT","OXYGENGENERATOR","OXYGENPLANT","VACUUMSTATION","IfcMemberTypeEnum","BRACE","CHORD","COLLAR","MEMBER","MULLION","PURLIN","RAFTER","STRINGER","STRUT","STUD","STIFFENING_RIB","ARCH_SEGMENT","SUSPENSION_CABLE","SUSPENDER","STAY_CABLE","IfcMotorConnectionTypeEnum","BELTDRIVE","COUPLING","DIRECTDRIVE","NULL","IfcObjectTypeEnum","PRODUCT","PROCESS","RESOURCE","ACTOR","GROUP","PROJECT","IfcObjectiveEnum","CODECOMPLIANCE","CODEWAIVER","DESIGNINTENT","HEALTHANDSAFETY","MERGECONFLICT","MODELVIEW","PARAMETER","REQUIREMENT","SPECIFICATION","TRIGGERCONDITION","IfcOccupantTypeEnum","ASSIGNEE","ASSIGNOR","LESSEE","LESSOR","LETTINGAGENT","OWNER","TENANT","IfcOpeningElementTypeEnum","OPENING","RECESS","IfcOutletTypeEnum","AUDIOVISUALOUTLET","COMMUNICATIONSOUTLET","POWEROUTLET","DATAOUTLET","TELEPHONEOUTLET","IfcPerformanceHistoryTypeEnum","IfcPermeableCoveringOperationEnum","GRILL","LOUVER","SCREEN","IfcPermitTypeEnum","ACCESS","BUILDING","WORK","IfcPhysicalOrVirtualEnum","PHYSICAL","VIRTUAL","IfcPileConstructionEnum","CAST_IN_PLACE","COMPOSITE","PRECAST_CONCRETE","PREFAB_STEEL","IfcPileTypeEnum","BORED","DRIVEN","JETGROUTING","COHESION","FRICTION","SUPPORT","IfcPipeFittingTypeEnum","IfcPipeSegmentTypeEnum","GUTTER","SPOOL","IfcPlateTypeEnum","CURTAIN_PANEL","SHEET","FLANGE_PLATE","WEB_PLATE","STIFFENER_PLATE","GUSSET_PLATE","COVER_PLATE","SPLICE_PLATE","BASE_PLATE","IfcPreferredSurfaceCurveRepresentation","CURVE3D","PCURVE_S1","PCURVE_S2","IfcProcedureTypeEnum","ADVICE_CAUTION","ADVICE_NOTE","ADVICE_WARNING","CALIBRATION","DIAGNOSTIC","SHUTDOWN","STARTUP","IfcProfileTypeEnum","CURVE","AREA","IfcProjectOrderTypeEnum","CHANGEORDER","MAINTENANCEWORKORDER","MOVEORDER","PURCHASEORDER","WORKORDER","IfcProjectedOrTrueLengthEnum","PROJECTED_LENGTH","TRUE_LENGTH","IfcProjectionElementTypeEnum","BLISTER","DEVIATOR","IfcPropertySetTemplateTypeEnum","PSET_TYPEDRIVENONLY","PSET_TYPEDRIVENOVERRIDE","PSET_OCCURRENCEDRIVEN","PSET_PERFORMANCEDRIVEN","QTO_TYPEDRIVENONLY","QTO_TYPEDRIVENOVERRIDE","QTO_OCCURRENCEDRIVEN","IfcProtectiveDeviceTrippingUnitTypeEnum","ELECTRONIC","ELECTROMAGNETIC","RESIDUALCURRENT","THERMAL","IfcProtectiveDeviceTypeEnum","CIRCUITBREAKER","EARTHLEAKAGECIRCUITBREAKER","EARTHINGSWITCH","FUSEDISCONNECTOR","RESIDUALCURRENTCIRCUITBREAKER","RESIDUALCURRENTSWITCH","VARISTOR","IfcPumpTypeEnum","CIRCULATOR","ENDSUCTION","SPLITCASE","SUBMERSIBLEPUMP","SUMPPUMP","VERTICALINLINE","VERTICALTURBINE","IfcRailingTypeEnum","HANDRAIL","GUARDRAIL","BALUSTRADE","IfcRampFlightTypeEnum","STRAIGHT","SPIRAL","IfcRampTypeEnum","STRAIGHT_RUN_RAMP","TWO_STRAIGHT_RUN_RAMP","QUARTER_TURN_RAMP","TWO_QUARTER_TURN_RAMP","HALF_TURN_RAMP","SPIRAL_RAMP","IfcRecurrenceTypeEnum","DAILY","WEEKLY","MONTHLY_BY_DAY_OF_MONTH","MONTHLY_BY_POSITION","BY_DAY_COUNT","BY_WEEKDAY_COUNT","YEARLY_BY_DAY_OF_MONTH","YEARLY_BY_POSITION","IfcReferentTypeEnum","KILOPOINT","MILEPOINT","STATION","IfcReflectanceMethodEnum","BLINN","FLAT","GLASS","MATT","MIRROR","PHONG","STRAUSS","IfcReinforcingBarRoleEnum","MAIN","SHEAR","LIGATURE","PUNCHING","EDGE","RING","ANCHORING","IfcReinforcingBarSurfaceEnum","PLAIN","TEXTURED","IfcReinforcingBarTypeEnum","SPACEBAR","IfcReinforcingMeshTypeEnum","IfcRoleEnum","SUPPLIER","MANUFACTURER","CONTRACTOR","SUBCONTRACTOR","ARCHITECT","STRUCTURALENGINEER","COSTENGINEER","CLIENT","BUILDINGOWNER","BUILDINGOPERATOR","MECHANICALENGINEER","ELECTRICALENGINEER","PROJECTMANAGER","FACILITIESMANAGER","CIVILENGINEER","COMMISSIONINGENGINEER","ENGINEER","CONSULTANT","CONSTRUCTIONMANAGER","FIELDCONSTRUCTIONMANAGER","RESELLER","IfcRoofTypeEnum","FLAT_ROOF","SHED_ROOF","GABLE_ROOF","HIP_ROOF","HIPPED_GABLE_ROOF","GAMBREL_ROOF","MANSARD_ROOF","BARREL_ROOF","RAINBOW_ROOF","BUTTERFLY_ROOF","PAVILION_ROOF","DOME_ROOF","FREEFORM","IfcSIPrefix","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","DECI","CENTI","MILLI","MICRO","NANO","PICO","FEMTO","ATTO","IfcSIUnitName","AMPERE","BECQUEREL","CANDELA","COULOMB","CUBIC_METRE","DEGREE_CELSIUS","FARAD","GRAM","GRAY","HENRY","HERTZ","JOULE","KELVIN","LUMEN","LUX","METRE","MOLE","NEWTON","OHM","PASCAL","RADIAN","SECOND","SIEMENS","SIEVERT","SQUARE_METRE","STERADIAN","TESLA","VOLT","WATT","WEBER","IfcSanitaryTerminalTypeEnum","BATH","BIDET","CISTERN","SHOWER","SANITARYFOUNTAIN","TOILETPAN","URINAL","WASHHANDBASIN","WCSEAT","IfcSectionTypeEnum","UNIFORM","TAPERED","IfcSensorTypeEnum","COSENSOR","CO2SENSOR","CONDUCTANCESENSOR","CONTACTSENSOR","FIRESENSOR","FLOWSENSOR","FROSTSENSOR","GASSENSOR","HEATSENSOR","HUMIDITYSENSOR","IDENTIFIERSENSOR","IONCONCENTRATIONSENSOR","LEVELSENSOR","LIGHTSENSOR","MOISTURESENSOR","MOVEMENTSENSOR","PHSENSOR","PRESSURESENSOR","RADIATIONSENSOR","RADIOACTIVITYSENSOR","SMOKESENSOR","SOUNDSENSOR","TEMPERATURESENSOR","WINDSENSOR","IfcSequenceEnum","START_START","START_FINISH","FINISH_START","FINISH_FINISH","IfcShadingDeviceTypeEnum","JALOUSIE","SHUTTER","AWNING","IfcSimplePropertyTemplateTypeEnum","P_SINGLEVALUE","P_ENUMERATEDVALUE","P_BOUNDEDVALUE","P_LISTVALUE","P_TABLEVALUE","P_REFERENCEVALUE","Q_LENGTH","Q_AREA","Q_VOLUME","Q_COUNT","Q_WEIGHT","Q_TIME","IfcSlabTypeEnum","FLOOR","ROOF","LANDING","BASESLAB","APPROACH_SLAB","WEARING","SIDEWALK","IfcSolarDeviceTypeEnum","SOLARCOLLECTOR","SOLARPANEL","IfcSpaceHeaterTypeEnum","CONVECTOR","RADIATOR","IfcSpaceTypeEnum","SPACE","PARKING","GFA","IfcSpatialZoneTypeEnum","CONSTRUCTION","FIRESAFETY","OCCUPANCY","IfcStackTerminalTypeEnum","BIRDCAGE","COWL","RAINWATERHOPPER","IfcStairFlightTypeEnum","WINDER","CURVED","IfcStairTypeEnum","STRAIGHT_RUN_STAIR","TWO_STRAIGHT_RUN_STAIR","QUARTER_WINDING_STAIR","QUARTER_TURN_STAIR","HALF_WINDING_STAIR","HALF_TURN_STAIR","TWO_QUARTER_WINDING_STAIR","TWO_QUARTER_TURN_STAIR","THREE_QUARTER_WINDING_STAIR","THREE_QUARTER_TURN_STAIR","SPIRAL_STAIR","DOUBLE_RETURN_STAIR","CURVED_RUN_STAIR","TWO_CURVED_RUN_STAIR","IfcStateEnum","READWRITE","READONLY","LOCKED","READWRITELOCKED","READONLYLOCKED","IfcStructuralCurveActivityTypeEnum","CONST","POLYGONAL","EQUIDISTANT","SINUS","PARABOLA","DISCRETE","IfcStructuralCurveMemberTypeEnum","RIGID_JOINED_MEMBER","PIN_JOINED_MEMBER","TENSION_MEMBER","COMPRESSION_MEMBER","IfcStructuralSurfaceActivityTypeEnum","BILINEAR","ISOCONTOUR","IfcStructuralSurfaceMemberTypeEnum","BENDING_ELEMENT","MEMBRANE_ELEMENT","SHELL","IfcSubContractResourceTypeEnum","PURCHASE","IfcSurfaceFeatureTypeEnum","MARK","TAG","TREATMENT","DEFECT","IfcSurfaceSide","BOTH","IfcSwitchingDeviceTypeEnum","CONTACTOR","DIMMERSWITCH","EMERGENCYSTOP","KEYPAD","MOMENTARYSWITCH","SELECTORSWITCH","STARTER","SWITCHDISCONNECTOR","TOGGLESWITCH","IfcSystemFurnitureElementTypeEnum","PANEL","WORKSURFACE","IfcTankTypeEnum","BASIN","BREAKPRESSURE","EXPANSION","FEEDANDEXPANSION","PRESSUREVESSEL","STORAGE","VESSEL","IfcTaskDurationEnum","ELAPSEDTIME","WORKTIME","IfcTaskTypeEnum","ATTENDANCE","DEMOLITION","DISMANTLE","INSTALLATION","LOGISTIC","MAINTENANCE","MOVE","OPERATION","REMOVAL","RENOVATION","IfcTendonAnchorTypeEnum","FIXED_END","TENSIONING_END","IfcTendonConduitTypeEnum","GROUTING_DUCT","TRUMPET","DIABOLO","IfcTendonTypeEnum","BAR","COATED","STRAND","WIRE","IfcTextPath","UP","DOWN","IfcTimeSeriesDataTypeEnum","CONTINUOUS","DISCRETEBINARY","PIECEWISEBINARY","PIECEWISECONSTANT","PIECEWISECONTINUOUS","IfcTransformerTypeEnum","FREQUENCY","INVERTER","RECTIFIER","VOLTAGE","IfcTransitionCode","DISCONTINUOUS","CONTSAMEGRADIENT","CONTSAMEGRADIENTSAMECURVATURE","IfcTransitionCurveType","BIQUADRATICPARABOLA","BLOSSCURVE","CLOTHOIDCURVE","COSINECURVE","CUBICPARABOLA","SINECURVE","IfcTransportElementTypeEnum","ELEVATOR","ESCALATOR","MOVINGWALKWAY","CRANEWAY","LIFTINGGEAR","IfcTrimmingPreference","CARTESIAN","IfcTubeBundleTypeEnum","FINNED","IfcUnitEnum","ABSORBEDDOSEUNIT","AMOUNTOFSUBSTANCEUNIT","AREAUNIT","DOSEEQUIVALENTUNIT","ELECTRICCAPACITANCEUNIT","ELECTRICCHARGEUNIT","ELECTRICCONDUCTANCEUNIT","ELECTRICCURRENTUNIT","ELECTRICRESISTANCEUNIT","ELECTRICVOLTAGEUNIT","ENERGYUNIT","FORCEUNIT","FREQUENCYUNIT","ILLUMINANCEUNIT","INDUCTANCEUNIT","LENGTHUNIT","LUMINOUSFLUXUNIT","LUMINOUSINTENSITYUNIT","MAGNETICFLUXDENSITYUNIT","MAGNETICFLUXUNIT","MASSUNIT","PLANEANGLEUNIT","POWERUNIT","PRESSUREUNIT","RADIOACTIVITYUNIT","SOLIDANGLEUNIT","THERMODYNAMICTEMPERATUREUNIT","TIMEUNIT","VOLUMEUNIT","IfcUnitaryControlElementTypeEnum","ALARMPANEL","CONTROLPANEL","GASDETECTIONPANEL","INDICATORPANEL","MIMICPANEL","HUMIDISTAT","THERMOSTAT","WEATHERSTATION","IfcUnitaryEquipmentTypeEnum","AIRHANDLER","AIRCONDITIONINGUNIT","DEHUMIDIFIER","SPLITSYSTEM","ROOFTOPUNIT","IfcValveTypeEnum","AIRRELEASE","ANTIVACUUM","CHANGEOVER","CHECK","COMMISSIONING","DIVERTING","DRAWOFFCOCK","DOUBLECHECK","DOUBLEREGULATING","FAUCET","FLUSHING","GASCOCK","GASTAP","ISOLATING","MIXING","PRESSUREREDUCING","PRESSURERELIEF","REGULATING","SAFETYCUTOFF","STEAMTRAP","STOPCOCK","IfcVibrationDamperTypeEnum","BENDING_YIELD","SHEAR_YIELD","AXIAL_YIELD","VISCOUS","RUBBER","IfcVibrationIsolatorTypeEnum","COMPRESSION","SPRING","BASE","IfcVoidingFeatureTypeEnum","CUTOUT","NOTCH","HOLE","MITER","CHAMFER","IfcWallTypeEnum","MOVABLE","PARAPET","PARTITIONING","PLUMBINGWALL","SOLIDWALL","STANDARD","ELEMENTEDWALL","RETAININGWALL","IfcWasteTerminalTypeEnum","FLOORTRAP","FLOORWASTE","GULLYSUMP","GULLYTRAP","ROOFDRAIN","WASTEDISPOSALUNIT","WASTETRAP","IfcWindowPanelOperationEnum","SIDEHUNGRIGHTHAND","SIDEHUNGLEFTHAND","TILTANDTURNRIGHTHAND","TILTANDTURNLEFTHAND","TOPHUNG","BOTTOMHUNG","PIVOTHORIZONTAL","PIVOTVERTICAL","SLIDINGHORIZONTAL","SLIDINGVERTICAL","REMOVABLECASEMENT","FIXEDCASEMENT","OTHEROPERATION","IfcWindowPanelPositionEnum","BOTTOM","TOP","IfcWindowStyleConstructionEnum","OTHER_CONSTRUCTION","IfcWindowStyleOperationEnum","SINGLE_PANEL","DOUBLE_PANEL_VERTICAL","DOUBLE_PANEL_HORIZONTAL","TRIPLE_PANEL_VERTICAL","TRIPLE_PANEL_BOTTOM","TRIPLE_PANEL_TOP","TRIPLE_PANEL_LEFT","TRIPLE_PANEL_RIGHT","TRIPLE_PANEL_HORIZONTAL","IfcWindowTypeEnum","WINDOW","SKYLIGHT","LIGHTDOME","IfcWindowTypePartitioningEnum","IfcWorkCalendarTypeEnum","FIRSTSHIFT","SECONDSHIFT","THIRDSHIFT","IfcWorkPlanTypeEnum","ACTUAL","BASELINE","PLANNED","IfcWorkScheduleTypeEnum","WebIFCWasm","expressID","GlobalId","OwnerHistory","Name","Description","ObjectType","Identification","PredefinedType","Status","LongDescription","tape","TheActor","Role","UserDefinedRole","ObjectPlacement","Representation","Tag","ApplicableOccurrence","HasPropertySets","RepresentationMaps","ElementType","Purpose","UserDefinedPurpose","Outer","Voids","Bounds","FaceSurface","SameSense","Axis","StartDistAlong","Segments","TangentialContinuity","StartTag","EndTag","CurveGeometry","HorizontalLength","StartHeight","StartGradient","Radius","IsConvex","ParabolaConstant","Horizontal","Vertical","OuterBoundary","InnerBoundaries","ApplicationDeveloper","Version","ApplicationFullName","ApplicationIdentifier","AppliedValue","UnitBasis","ApplicableDate","FixedUntilDate","Category","Condition","ArithmeticOperator","Components","Identifier","TimeOfApproval","Level","Qualifier","RequestingApproval","GivingApproval","RelatingApproval","RelatedApprovals","ProfileType","ProfileName","OuterCurve","Curve","InnerCurves","OriginalValue","CurrentValue","TotalReplacementCost","Owner","User","ResponsiblePerson","IncorporationDate","DepreciatedValue","Position","BottomFlangeWidth","OverallDepth","WebThickness","BottomFlangeThickness","BottomFlangeFilletRadius","TopFlangeWidth","TopFlangeThickness","TopFlangeFilletRadius","BottomFlangeEdgeRadius","BottomFlangeSlope","TopFlangeEdgeRadius","TopFlangeSlope","Location","RefDirection","Degree","ControlPointsList","CurveForm","ClosedCurve","SelfIntersect","KnotMultiplicities","Knots","KnotSpec","UDegree","VDegree","SurfaceForm","UClosed","VClosed","UMultiplicities","VMultiplicities","UKnots","VKnots","RepeatS","RepeatT","Mode","TextureTransform","Parameter","RasterFormat","RasterCode","XLength","YLength","ZLength","Operator","FirstOperand","SecondOperand","TranslationalStiffnessByLengthX","TranslationalStiffnessByLengthY","TranslationalStiffnessByLengthZ","RotationalStiffnessByLengthX","RotationalStiffnessByLengthY","RotationalStiffnessByLengthZ","TranslationalStiffnessByAreaX","TranslationalStiffnessByAreaY","TranslationalStiffnessByAreaZ","TranslationalStiffnessX","TranslationalStiffnessY","TranslationalStiffnessZ","RotationalStiffnessX","RotationalStiffnessY","RotationalStiffnessZ","WarpingStiffness","Corner","XDim","YDim","ZDim","BaseSurface","AgreementFlag","Enclosure","LongName","CompositionType","ElevationOfRefHeight","ElevationOfTerrain","BuildingAddress","Elevation","Depth","Width","WallThickness","Girth","InternalFilletRadius","Coordinates","CoordList","TagList","Axis1","Axis2","LocalOrigin","Scale","Scale2","Axis3","Scale3","Thickness","StartPoint","StartDirection","SegmentLength","IsCCW","Source","Edition","EditionDate","ReferenceTokens","ReferencedSource","Sort","CfsFaces","Red","Green","Blue","ColourList","UsageName","HasProperties","TemplateType","HasPropertyTemplates","Transition","ParentCurve","Profiles","Label","CurveOnRelatingElement","CurveOnRelatedElement","PointOnRelatingElement","PointOnRelatedElement","EccentricityInX","EccentricityInY","EccentricityInZ","SurfaceOnRelatingElement","SurfaceOnRelatedElement","VolumeOnRelatingElement","VolumeOnRelatedElement","ConstraintGrade","ConstraintSource","CreatingActor","CreationTime","UserDefinedGrade","Usage","BaseCosts","BaseQuantity","ResourceType","Phase","RepresentationContexts","UnitsInContext","Dimensions","UnitType","ConversionFactor","ConversionOffset","SourceCRS","TargetCRS","GeodeticDatum","VerticalDatum","CostValues","CostQuantities","SubmittedOn","UpdateDate","TreeRootExpression","RelatingMonetaryUnit","RelatedMonetaryUnit","ExchangeRate","RateDateTime","RateSource","BasisSurface","Boundaries","ImplicitOuter","CurveFont","CurveWidth","CurveColour","ModelOrDraughting","PatternList","CurveFontScaling","VisibleSegmentLength","InvisibleSegmentLength","ParentProfile","Elements","UserDefinedType","Unit","Exponent","LengthExponent","MassExponent","TimeExponent","ElectricCurrentExponent","ThermodynamicTemperatureExponent","AmountOfSubstanceExponent","LuminousIntensityExponent","DirectionRatios","DistanceAlong","OffsetLateral","OffsetVertical","OffsetLongitudinal","AlongHorizontal","FlowDirection","SystemType","IntendedUse","Scope","Revision","DocumentOwner","Editors","LastRevisionTime","ElectronicFormat","ValidFrom","ValidUntil","Confidentiality","RelatingDocument","RelatedDocuments","RelationshipType","ReferencedDocument","OverallHeight","OverallWidth","OperationType","UserDefinedOperationType","LiningDepth","LiningThickness","ThresholdDepth","ThresholdThickness","TransomThickness","TransomOffset","LiningOffset","ThresholdOffset","CasingThickness","CasingDepth","ShapeAspectStyle","LiningToPanelOffsetX","LiningToPanelOffsetY","PanelDepth","PanelOperation","PanelWidth","PanelPosition","ConstructionType","ParameterTakesPrecedence","Sizeable","EdgeStart","EdgeEnd","EdgeGeometry","EdgeList","AssemblyPlace","MethodOfMeasurement","Quantities","SemiAxis1","SemiAxis2","EventTriggerType","UserDefinedEventTriggerType","EventOccurenceTime","DataOrigin","UserDefinedDataOrigin","ActualDate","EarlyDate","LateDate","ScheduleDate","ProcessType","Properties2","Properties","RelatingReference","RelatedResourceObjects","SweptArea","ExtrudedDirection","EndSweptArea","FbsmFaces","Bound","Orientation","TensionFailureX","TensionFailureY","TensionFailureZ","CompressionFailureX","CompressionFailureY","CompressionFailureZ","FillStyles","ModelorDraughting","HatchLineAppearance","StartOfNextHatchLine","PointOfReferenceHatchLine","PatternStart","HatchLineAngle","TilingPattern","Tiles","TilingScale","Directrix","StartParam","EndParam","FixedReference","ContextIdentifier","ContextType","CoordinateSpaceDimension","Precision","WorldCoordinateSystem","TrueNorth","ParentContext","TargetScale","TargetView","UserDefinedTargetView","UAxes","VAxes","WAxes","AxisTag","AxisCurve","PlacementRelTo","PlacementLocation","PlacementRefDirection","FlangeThickness","FilletRadius","FlangeEdgeRadius","FlangeSlope","URLReference","MappedTo","Opacity","Colours","ColourIndex","Points","CoordIndex","InnerCoordIndices","Maps","TexCoords","TexCoordIndex","Curve3D","AssociatedGeometry","MasterRepresentation","Jurisdiction","ResponsiblePersons","LastUpdateDate","StartTime","EndTime","TimeSeriesDataType","Values","TimeStamp","ListValues","EdgeRadius","LegSlope","LagValue","DurationType","Publisher","VersionDate","Language","ReferencedLibrary","MainPlaneAngle","SecondaryPlaneAngle","LuminousIntensity","LightDistributionCurve","DistributionData","LightColour","AmbientIntensity","Intensity","ColourAppearance","ColourTemperature","LuminousFlux","LightEmissionSource","LightDistributionDataSource","ConstantAttenuation","DistanceAttenuation","QuadricAttenuation","ConcentrationExponent","SpreadAngle","BeamWidthAngle","Pnt","Dir","PlacementMeasuredAlong","Distance","CartesianPosition","RelativePlacement","Eastings","Northings","OrthogonalHeight","XAxisAbscissa","XAxisOrdinate","MappingSource","MappingTarget","MaterialClassifications","ClassifiedMaterial","Material","Fraction","MaterialConstituents","Representations","RepresentedMaterial","LayerThickness","IsVentilated","Priority","MaterialLayers","LayerSetName","ForLayerSet","LayerSetDirection","DirectionSense","OffsetFromReferenceLine","ReferenceExtent","OffsetDirection","OffsetValues","Materials","Profile","MaterialProfiles","CompositeProfile","ForProfileSet","CardinalPoint","ForProfileEndSet","CardinalEndPoint","RelatingMaterial","RelatedMaterials","Expression","ValueComponent","UnitComponent","NominalDiameter","NominalLength","Benchmark","ValueSource","DataValue","ReferencePath","Currency","BenchmarkValues","LogicalAggregator","ObjectiveQualifier","UserDefinedQualifier","BasisCurve","Roles","Addresses","RelatingOrganization","RelatedOrganizations","LateralAxisDirection","VerticalAxisDirection","EdgeElement","OwningUser","OwningApplication","State","ChangeAction","LastModifiedDate","LastModifyingUser","LastModifyingApplication","CreationDate","ReferenceCurve","LifeCyclePhase","FrameDepth","FrameThickness","FamilyName","GivenName","MiddleNames","PrefixTitles","SuffixTitles","ThePerson","TheOrganization","HasQuantities","Discrimination","Quality","Height","ColourComponents","Pixel","SizeInX","SizeInY","Placement","PointParameter","PointParameterU","PointParameterV","Polygon","PolygonalBoundary","Closed","Faces","PnIndex","InternalLocation","AddressLines","PostalBox","Town","Region","PostalCode","Country","AssignedItems","LayerOn","LayerFrozen","LayerBlocked","LayerStyles","Styles","ProfileDefinition","MapProjection","MapZone","MapUnit","UpperBoundValue","LowerBoundValue","SetPointValue","DependingProperty","DependantProperty","EnumerationValues","EnumerationReference","PropertyReference","ApplicableEntity","NominalValue","DefiningValues","DefinedValues","DefiningUnit","DefinedUnit","CurveInterpolation","ProxyType","AreaValue","Formula","CountValue","LengthValue","TimeValue","VolumeValue","WeightValue","WeightsData","InnerFilletRadius","OuterFilletRadius","U1","V1","U2","V2","Usense","Vsense","RecurrenceType","DayComponent","WeekdayComponent","MonthComponent","Interval","Occurrences","TimePeriods","TypeIdentifier","AttributeIdentifier","InstanceName","ListPositions","InnerReference","RestartDistance","TimeStep","TotalCrossSectionArea","SteelGrade","BarSurface","EffectiveDepth","NominalBarDiameter","BarCount","DefinitionType","ReinforcementSectionDefinitions","CrossSectionArea","BarLength","BendingShapeCode","BendingParameters","MeshLength","MeshWidth","LongitudinalBarNominalDiameter","TransverseBarNominalDiameter","LongitudinalBarCrossSectionArea","TransverseBarCrossSectionArea","LongitudinalBarSpacing","TransverseBarSpacing","RelatingObject","RelatedObjects","RelatedObjectsType","RelatingActor","ActingRole","RelatingControl","RelatingGroup","Factor","RelatingProcess","QuantityInProcess","RelatingProduct","RelatingResource","RelatingClassification","Intent","RelatingConstraint","RelatingLibrary","ConnectionGeometry","RelatingElement","RelatedElement","RelatingPriorities","RelatedPriorities","RelatedConnectionType","RelatingConnectionType","RelatingPort","RelatedPort","RealizingElement","RelatedStructuralActivity","RelatingStructuralMember","RelatedStructuralConnection","AppliedCondition","AdditionalConditions","SupportedLength","ConditionCoordinateSystem","ConnectionConstraint","RealizingElements","ConnectionType","RelatedElements","RelatingStructure","RelatingBuildingElement","RelatedCoverings","RelatingSpace","RelatingContext","RelatedDefinitions","RelatingPropertyDefinition","RelatedPropertySets","RelatingTemplate","RelatingType","RelatingOpeningElement","RelatedBuildingElement","RelatedControlElements","RelatingFlowElement","InterferenceGeometry","InterferenceType","ImpliedOrder","RelatingPositioningElement","RelatedProducts","RelatedFeatureElement","RelatedProcess","TimeLag","SequenceType","UserDefinedSequenceType","RelatingSystem","RelatedBuildings","PhysicalOrVirtualBoundary","InternalOrExternalBoundary","ParentBoundary","CorrespondingBoundary","RelatedOpeningElement","ParamLength","ContextOfItems","RepresentationIdentifier","RepresentationType","Items","MappingOrigin","MappedRepresentation","ScheduleWork","ScheduleUsage","ScheduleStart","ScheduleFinish","ScheduleContour","LevelingDelay","IsOverAllocated","StatusTime","ActualWork","ActualUsage","ActualStart","ActualFinish","RemainingWork","RemainingUsage","Completion","Angle","BottomRadius","RoundingRadius","Prefix","SectionType","StartProfile","EndProfile","LongitudinalStartPosition","LongitudinalEndPosition","TransversePosition","ReinforcementRole","SectionDefinition","CrossSectionReinforcementDefinitions","CrossSections","CrossSectionPositions","FixedAxisVertical","SpineCurve","ShapeRepresentations","ProductDefinitional","PartOfProductDefinitionShape","SbsmBoundary","PrimaryMeasureType","SecondaryMeasureType","Enumerators","PrimaryUnit","SecondaryUnit","AccessState","RefLatitude","RefLongitude","RefElevation","LandTitleNumber","SiteAddress","SlippageX","SlippageY","SlippageZ","ElevationWithFlooring","NumberOfRisers","NumberOfTreads","RiserHeight","TreadLength","AppliedLoad","GlobalOrLocal","DestabilizingLoad","OrientationOf2DPlane","LoadedBy","HasResults","SharedPlacement","ProjectedOrTrue","ActionType","ActionSource","Coefficient","SelfWeightCoefficients","Locations","LinearForceX","LinearForceY","LinearForceZ","LinearMomentX","LinearMomentY","LinearMomentZ","PlanarForceX","PlanarForceY","PlanarForceZ","DisplacementX","DisplacementY","DisplacementZ","RotationalDisplacementRX","RotationalDisplacementRY","RotationalDisplacementRZ","Distortion","ForceX","ForceY","ForceZ","MomentX","MomentY","MomentZ","WarpingMoment","DeltaTConstant","DeltaTY","DeltaTZ","TheoryType","ResultForLoadGroup","IsLinear","Item","ParentEdge","ReferenceSurface","SweptCurve","AxisPosition","SurfaceReinforcement1","SurfaceReinforcement2","ShearReinforcement","Side","DiffuseTransmissionColour","DiffuseReflectionColour","TransmissionColour","ReflectanceColour","RefractionIndex","DispersionFactor","SurfaceColour","Transparency","DiffuseColour","ReflectionColour","SpecularColour","SpecularHighlight","ReflectanceMethod","Textures","InnerRadius","FlangeWidth","WebEdgeRadius","WebSlope","Rows","Columns","RowCells","IsHeading","WorkMethod","IsMilestone","TaskTime","ScheduleDuration","EarlyStart","EarlyFinish","LateStart","LateFinish","FreeFloat","TotalFloat","IsCritical","ActualDuration","RemainingTime","Recurrence","TelephoneNumbers","FacsimileNumbers","PagerNumber","ElectronicMailAddresses","WWWHomePageURL","MessagingIDs","TensionForce","PreStress","FrictionCoefficient","AnchorageSlip","MinCurvatureRadius","SheathDiameter","Literal","Path","Extent","BoxAlignment","TextCharacterAppearance","TextStyle","TextFontStyle","FontFamily","FontStyle","FontVariant","FontWeight","FontSize","Colour","BackgroundColour","TextIndent","TextAlign","TextDecoration","LetterSpacing","WordSpacing","TextTransform","LineHeight","Vertices","TexCoordsList","MajorRadius","MinorRadius","StartRadius","EndRadius","IsStartRadiusCCW","IsEndRadiusCCW","TransitionCurveType","BottomXDim","TopXDim","TopXOffset","Normals","Flags","Trim1","Trim2","SenseAgreement","Units","Magnitude","LoopVertex","VertexGeometry","IntersectingAxes","OffsetDistances","PartitioningType","UserDefinedPartitioningType","MullionThickness","FirstTransomOffset","SecondTransomOffset","FirstMullionOffset","SecondMullionOffset","WorkingTimes","ExceptionTimes","Creators","Duration","FinishTime","RecurrencePattern","Start","Finish","IfcElements2","IfcTypesMap","PropsNames","aggregates","relating","related","spatial","psets","materials","api","recursive","GetLine","elementID","getProperty","includeProperties","getAllTypesOfModel","getSpatialTreeChunks","GetLineIDsWithType","allLines","projectID","project","newIfcProject","getSpatialNode","cleanupTypes","verbose","items","lines","propName","getAllRelatedItemsOfType","propSetIds","propNames","relation","rel","saveChunk","treeChunks","getChildren","children","nodes","child","node2","newNode","getItemProperties","getNodeType","typeID","getChunks","IDs","element","isArray","ele","isRelated","getRelated","parseInt","relatedItems","item","crossOriginIsolated","IfcAPI2","fs","wasmPath","isWasmPathAbsolute","ifcGuidMap","Map","customLocateFileHandler","locateFileHandler","prefix","endsWith","noInitialRun","settings","COORDINATE_TO_ORIGIN","USE_FAST_BOOLS","CIRCLE_SEGMENTS_LOW","CIRCLE_SEGMENTS_MEDIUM","CIRCLE_SEGMENTS_HIGH","BOOL_ABORT_THRESHOLD","offsetInSrc","OpenModel","destPtr","destSize","srcSize","CreateModel","ExportFileAsIFC","geometryExpressID","GetGeometry","flatten","rawLineData","GetRawLineData","lineData","FlattenLine","GetAndClearErrors","lineObject","propertyName","property","WriteLine","ToTape","WriteRawLineData","GetAllLines","transformationMatrix","SetGeometryTransformation","GetCoordinationMatrix","getSubArray","sizeBytes","delete","CloseModel","meshCallback","StreamAllMeshes","StreamAllMeshesWithTypes","IsModelOpen","LoadAllGeometry","GetFlatMesh","globalID","absolute"],"mappings":"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aACV,WAAU,iBACV,WAAS,YACT,WAAU,4BACV,WAAS,sBACT,WAAU,0BACV,WAAS,kBACT,WAAS,sBACT,8BACA,uCACA,WAAU,iBACV,oBACA,WAAU,cACV,UAAS,eACT,WAAU,mBACV,WAAU,yBACV,UAAS,YACT,UAAS,wBACT,0BACA,WAAU,6BACV,2CACA,WAAS,qBACT,WAAU,6BACV,WAAS,oBACT,sCACA,WAAU,2BACV,WAAS,yBACT,WAAU,gBACV,WAAU,oBACV,WAAU,eACV,WAAU,mBACV,WAAU,WACV,gCACA,WAAS,6BACT,WAAU,wBACV,0CACA,WAAU,6BACV,WAAU,+BACV,wCACA,WAAU,gBACV,WAAS,mCACT,WAAU,uCACV,WAAU,kCACV,WAAS,sCACT,2CACA,WAAU,qCACV,WAAS,0BACT,WAAU,8BACV,WAAS,aACT,WAAU,0BACV,WAAU,aACV,yBACA,8BACA,WAAU,yBACV,WAAU,mCACV,WAAU,gBACV,8BACA,WAAS,kBACT,WAAU,sBACV,WAAU,yBACV,WAAU,+BACV,WAAU,cACV,WAAS,kBACT,yBACA,WAAS,cACT,WAAU,kBACV,WAAU,kBACV,WAAU,sBACV,WAAU,oBACV,WAAU,cACV,UAAS,0BACT,WAAS,iBACT,WAAU,qBACV,WAAU,WACV,WAAU,uBACV,WAAU,yBACV,WAAS,oBACT,WAAS,gBACT,WAAS,oBACT,WAAS,8BACT,WAAU,2BACV,WAAU,wBACV,WAAU,YACV,WAAU,gBACV,WAAU,oBACV,WAAU,wBACV,WAAU,uBACV,WAAU,iBACV,WAAS,wBACT,WAAU,0BACV,wBACA,WAAU,uBACV,WAAU,2BACV,WAAU,wBACV,WAAS,gCACT,WAAU,oCACV,UAAS,yBACT,WAAU,gCACV,WAAU,oCACV,WAAU,yBACV,WAAU,6BACV,WAAU,6BACV,WAAS,iCACT,WAAU,sBACV,WAAS,wBACT,WAAU,yBACV,+CACA,WAAU,uBACV,oBACA,WAAU,0BACV,WAAS,yBACT,WAAU,sBACV,yBACA,WAAU,cACV,0CACA,WAAU,mCACV,UAAS,iBACT,UAAS,qBACT,WAAU,iBACV,WAAS,qBACT,WAAU,kBACV,WAAU,sBACV,WAAU,UACV,yBACA,WAAU,cACV,WAAU,uBACV,qCACA,yCACA,WAAS,mCACT,WAAU,+BACV,WAAU,mCACV,iCACA,WAAU,2BACV,6BACA,WAAU,uBACV,WAAU,yBACV,uCACA,WAAU,aACV,WAAU,qBACV,WAAU,yBACV,WAAS,sBACT,WAAU,0BACV,WAAS,qBACT,2BACA,WAAU,uBACV,WAAU,aACV,WAAU,uBACV,WAAU,4BACV,WAAU,gCACV,WAAS,YACT,0BACA,WAAU,uBACV,WAAU,2BACV,UAAS,gBACT,WAAU,oBACV,WAAU,WACV,yBACA,WAAU,eACV,kCACA,WAAU,yBACV,WAAS,uBACT,WAAU,mCACV,WAAU,4BACV,WAAU,qCACV,WAAU,iCACV,WAAU,mCACV,WAAU,+BACV,iCACA,WAAU,8BACV,WAAU,UACV,WAAU,2BACV,WAAS,eACT,8BACA,WAAS,iBACT,2BACA,WAAU,0BACV,uBACA,WAAU,kBACV,WAAU,gCACV,WAAS,SACT,uBACA,wBACA,WAAS,kBACT,WAAU,oBACV,WAAS,4BACT,WAAU,+BACV,6BACA,UAAS,2BACT,kCACA,sBACA,WAAU,gBACV,WAAU,6BACV,WAAU,iCACV,WAAU,kCACV,WAAU,oBACV,WAAU,wBACV,WAAU,iBACV,WAAU,qBACV,UAAS,oBACT,WAAU,wBACV,WAAU,eACV,WAAS,mBACT,WAAU,sBACV,WAAU,0BACV,2BACA,WAAS,qBACT,iCACA,WAAU,2BACV,WAAU,kBACV,WAAU,sBACV,WAAU,yBACV,WAAU,6BACV,uBACA,WAAU,iBACV,UAAS,uBACT,WAAU,2BACV,WAAS,eACT,WAAU,mBACV,WAAU,uBACV,WAAU,2BACV,iCACA,WAAU,oCACV,WAAU,iCACV,WAAU,uCACV,WAAU,kBACV,WAAU,UACV,wBACA,UAAS,mBACT,WAAU,WACV,8BACA,WAAU,mBACV,WAAU,uBACV,WAAU,gBACV,WAAS,oBACT,WAAS,sBACT,WAAU,kBACV,WAAU,sBACV,WAAS,sBACT,oCACA,WAAS,mCACT,WAAU,uBACV,WAAS,+BACT,WAAU,iBACV,WAAU,qBACV,WAAU,uBACV,WAAU,eACV,WAAU,yBACV,WAAU,8BACV,WAAU,iBACV,WAAU,qBACV,gCACA,WAAU,mBACV,iCACA,WAAU,aACV,mBACA,WAAS,cACT,WAAU,wBACV,WAAU,sBACV,WAAU,2BACV,4BACA,WAAU,sBACV,WAAS,gCACT,WAAU,iBACV,kCACA,WAAU,4BACV,WAAU,4BACV,WAAU,2BACV,WAAS,qBACT,WAAU,UACV,WAAU,mBACV,UAAS,qBACT,WAAU,8BACV,WAAU,oBACV,WAAU,UACV,WAAS,uBACT,WAAS,mBACT,WAAU,gBACV,WAAU,cACV,WAAU,wCACV,UAAU,yBACV,WAAS,4BACT,UAAS,wBACT,WAAU,sCACV,UAAS,mBACT,WAAU,sBACV,WAAU,2BACV,WAAU,8BACV,WAAS,kBACT,WAAU,qBACV,kCACA,WAAS,6BACT,WAAU,qCACV,UAAS,gCACT,WAAU,wBACV,oCACA,WAAS,6BACT,WAAU,qBACV,UAAS,wBACT,WAAU,4BACV,WAAU,mBACV,WAAU,uBACV,WAAU,YACV,WAAU,wBACV,WAAU,gBACV,WAAS,YACT,WAAU,wBACV,WAAU,kBACV,WAAU,qBACV,UAAS,yBACT,WAAU,eACV,WAAU,YACV,gCACA,WAAU,qBACV,WAAU,eACV,WAAU,cACV,2BACA,WAAS,mBACT,WAAU,mBACV,WAAU,4BACV,WAAU,eACV,WAAU,oBACV,WAAU,yBACV,WAAU,kBACV,WAAU,8BACV,qCACA,WAAU,kBACV,kCACA,WAAS,YACT,WAAU,gBACV,WAAU,kBACV,WAAS,6BACT,WAAU,UACV,WAAU,YACV,WAAS,wBACT,WAAU,iCACV,WAAU,YACV,WAAU,YACV,qCACA,WAAU,6BACV,WAAU,sBACV,WAAU,4BACV,WAAS,UACT,WAAU,cACV,2BACA,UAAS,qBACT,WAAU,iBACV,WAAS,qBACT,4BACA,WAAU,eACV,UAAS,eACT,WAAU,kBACV,qBACA,WAAU,WACV,WAAU,uBACV,WAAU,eACV,WAAU,WACV,WAAS,kBACT,WAAU,oBACV,WAAU,cACV,WAAS,+BACT,WAAU,sBACV,WAAU,cACV,WAAU,UACV,WAAS,wBACT,WAAU,mBACV,gCACA,WAAS,yBACT,WAAS,oBACT,WAAU,0BACV,WAAS,2BACT,WAAS,wBACT,gCACA,WAAU,iCACV,WAAS,gCACT,WAAU,uBACV,WAAU,iCACV,WAAS,eACT,6BACA,WAAU,aACV,WAAU,aACV,sCACA,WAAS,2BACT,WAAS,gBACT,WAAU,uBACV,uBACA,8BACA,WAAU,kBACV,WAAU,kBACV,WAAU,uBACV,WAAU,cACV,mCACA,oCACA,WAAU,wBACV,8CACA,WAAU,6BACV,WAAU,yBACV,WAAU,uBACV,sCACA,WAAU,iBACV,WAAU,2BACV,UAAS,yBACT,WAAU,yBACV,kCACA,WAAU,sBACV,WAAU,gCACV,gCACA,WAAU,kCACV,gDACA,WAAU,0BACV,WAAU,WACV,mBACA,WAAU,cACV,WAAU,kBACV,WAAU,mBACV,UAAS,oBACT,WAAU,iBACV,WAAU,kBACV,WAAU,oBACV,8BACA,WAAU,aACV,WAAU,iBACV,WAAU,UACV,WAAU,gBACV,WAAU,oBACV,WAAU,cACV,WAAU,mCACV,+CACA,WAAU,+BACV,WAAS,yBACT,WAAU,wBACV,WAAU,+BACV,WAAU,uBACV,WAAU,eACV,WAAU,cACV,WAAS,uBACT,WAAU,gCACV,WAAU,uCACV,UAAS,oBACT,WAAU,wBACV,WAAS,wBACT,sCACA,WAAU,qBACV,WAAU,yBACV,UAAS,mBACT,WAAU,gBACV,WAAU,uBACV,WAAS,yBACT,WAAS,uBACT,WAAU,+BACV,WAAU,yBACV,WAAU,yBACV,oCACA,WAAU,mBACV,WAAU,2BACV,UAAS,iCACT,WAAU,6BACV,qCACA,WAAU,0BACV,WAAU,2BACV,2BACA,WAAS,yBACT,WAAU,6BACV,WAAU,8BACV,WAAU,sBACV,WAAS,mCACT,WAAU,iCACV,2CACA,WAAU,sCACV,WAAU,oCACV,qCACA,WAAU,qBACV,WAAU,iBACV,WAAS,mBACT,0BACA,WAAU,wBACV,WAAS,4BACT,oCACA,gCACA,WAAU,qBACV,sCACA,qCACA,WAAU,cACV,WAAU,kBACV,UAAS,wBACT,WAAU,qCACV,WAAU,iBACV,oCACA,WAAS,sBACT,WAAU,8BACV,WAAU,8BACV,WAAU,qBACV,UAAS,kBACT,mDACA,WAAU,oBACV,WAAU,2BACV,WAAU,wBACV,WAAU,uBACV,WAAU,cACV,WAAU,kCACV,WAAU,oCACV,WAAU,+BACV,WAAS,kBACT,WAAU,uBACV,WAAS,8BACT,WAAU,uBACV,WAAU,2BACV,WAAU,UACV,WAAS,cACT,WAAU,UACV,WAAU,gCACV,sBACA,WAAS,sBACT,WAAU,0BACV,WAAU,oBACV,WAAS,eACT,WAAU,uBACV,WAAS,oCACT,WAAS,oBACT,WAAS,8BACT,WAAU,oBACV,WAAU,YACV,WAAU,gBACV,WAAU,mBACV,WAAS,uBACT,2BACA,WAAU,gBACV,WAAU,yBACV,WAAU,4BACV,WAAU,oBACV,WAAU,4BACV,WAAU,UACV,WAAS,UACT,WAAU,uBACV,WAAU,sBACV,WAAU,cACV,WAAU,iCACV,WAAU,iBACV,WAAU,qBACV,UAAS,gBACT,WAAU,WACV,WAAU,iBACV,WAAU,qBACV,WAAU,eACV,WAAU,oBACV,kCACA,WAAS,6BACT,WAAU,iCACV,2BACA,WAAU,qBACV,sBACA,WAAU,sBACV,WAAU,mBACV,WAAU,uBACV,qBACA,WAAU,iBACV,WAAU,qBACV,yBACA,gCACA,WAAU,wBACV,WAAU,6BACV,WAAU,0BACV,WAAU,mCACV,WAAU,2BACV,WAAU,+BACV,UAAS,2BACT,WAAS,kCACT,WAAS,6BACT,WAAU,oBACV,WAAU,4BACV,WAAU,oBACV,kCACA,WAAS,iCACT,WAAU,yBACV,WAAU,+BACV,sCACA,WAAU,+BACV,WAAU,sCACV,WAAU,gDACV,WAAU,+BACV,WAAU,sCACV,WAAU,0BACV,WAAS,+BACT,UAAS,sBACT,WAAU,4BACV,WAAU,2BACV,yCACA,WAAU,6BACV,WAAU,wBACV,WAAU,2BACV,WAAU,6BACV,WAAS,iCACT,WAAS,6BACT,WAAS,oCACT,yCACA,WAAU,gBACV,WAAU,gBACV,WAAU,0BACV,mCACA,WAAU,6BACV,WAAU,aACV,WAAU,aACV,4BACH,2C,+BC3yBK,WAAO,8BAET,WAAM,yBACF,yCACH,6BAED,WAAM,0BACF,WAAM,4BACN,WAAM,2BACN,mCACA,WAAM,8BACN,8BACA,+BACH,+BAED,WAAM,6BACF,4BACA,WAAM,qBACN,WAAK,yBACD,uBACH,sCACD,2CACH,iCAEQ,UAAM,WACX,WAAM,iBACN,wBACA,UAAI,UACA,sBACH,qBACD,yBACH,kCAEkB,yBACf,8BACH,uBAEkB,WAAM,kBACrB,WAAM,sBACN,8B,WACI,uBACJ,WAAG,gBACN,mCAEO,+BACJ,WAAM,iBACN,WAAM,2BACF,0B,WACA,wBACI,wCACH,mCACL,UAAG,uBACH,2CACH,2BAEO,WAAM,mBACV,WAAM,uBACN,WAAM,gBACN,WAAM,gBACF,+BACA,8C,WAAe,4BACnB,WAAG,qBACH,4BACH,gCAEO,yCACJ,WAAM,sBACN,WAAM,0BACN,WAAI,yBACJ,oCACH,6CAEO,6BACJ,WAAI,gB,WAAyB,oBAC7B,WAAM,gBACN,WAAK,iBACD,4B,WACA,kBACH,gCACJ,8BAEO,qCACJ,WAAI,+B,WACA,sBACH,qCACD,WAAI,W,UACA,e,WACA,YACH,uBACJ,2BAEO,4BACJ,gCACI,oCACI,kCACA,sCACH,+BACD,uCACJ,UAAG,oBACN,qBACJ,kC,iCC9FY,yBAKT,8BAAoB,kCAChB,WAAK,YACL,UAAK,4BACL,UAAK,2BACR,kCAED,4BACI,WAAK,gBAAgB,6BACrB,WAAM,iBACN,yBACH,6BAED,WAAM,cACF,WAAK,sBACL,sBAIA,GAAK,kHCMT,ODNS,+FAER,mLAGGZ,KAAK,gBAAqB,8DAE7B,qDAPQ,IAOR,kFAGG,WAAK,EAAqB,0GACd,0BAA+BM,GAAO,OAA3C,OAAP,EAAO,gBACV,wCAG6B,OAH7B,SAEK,IAAuB,GACzB,EAAK,EAAqB,2BAC1B,KAAO,eAAK,EAAa,IAAuB,GAAkB,gDAGtE,IAAM,iDAEF,qDAdH,IAcG,gFAEC,qGAEJ,GADG,EAAO,KAAM,MAAK,UAAa,SAClC,QAEO,sBACA,IAAC,gCAA0B,IAAO,gCAG7C,+E,uDAVO,I,0EE9CJ,WAAoB,EAAe,oOAKrC,OALsB,SAChB,EAAU,KAAG,aAAM,KACtB,GAED,EAAM,SAAW,YAAC,OAAyB,mCAC7C,kBACC,GAAI,sCAAAN,KAAA,KACH,qD,IAAA,yB,SAEC,KACA,4CACD,2EAEC,wHAEK,KAAmB,kBAA0C,oBAA7D,OACF,SAAY,YACZ,YAAM,EAAW,EAAY,EAC7B,oDACI,uDARR,IAQQ,+BAEA,SAAM,EAAO,EAAU,G,IAEvB,EAAK,G,mBAA0B,GAAM,SAAO,YAC/C,kBACD,EAAG,GAAW,qBAAuB,GAGjC,OAAM,EAAO,eAChB,MACG,EAEX,I,ICxCY,uFAML,WAAyB,OAAkB,0GACtC,uBAAoB,EAAkB,kBAQvC,OARJ,EAAK,OACL,EAAK,GACL,WAAK,YACR,oBAGG,EAAI,WAAK,IAAiB,E,IAEtB,kBACP,mDAEO,uDAlBC,IAkBD,0BACgF,WAAO,GAE3F,WAAc,MAAC,OAAU,YAEzB,K,SACA,SAAK,mBAAS,EAAC,KAAU,eAC5B,MACJ,I,CFnBD,yCAEI,cACA,aAGA,IADA,qBACA,oBACA,WAGA,qBAAe,EACf,CACA,4BAEA,gBACA,uBACA,mCAA2B,KAE3B,sBACA,yBAAuB,iBACvB,kCAA2B,IAE3B,qCAEA,gBAA2B,WAC3B,2BAKA,OAJA,aACA,8BAAiC,GACjC,iCAEA,CACA,GACA,ODNS,CAAqB,GCU9B,cAIA,kCAGA,aACA,2BACA,yBACA,kCACA,CG5BA,OH4BA,yCAEA,cACA,YAlDQ,UAAa,MAAb,6CAqDA,MAKX,cALD,OAAY,aAAU,eAClB,mFAEA,gBAAyB,6FACzB,OADyB,kCACzB,4CAJQ,kBAAU,kBAKrB,wD,qDAJG,I,gFIxDA,WAAoC,kFAFK,O,KAAjC,qBAAiC,kBAGrCA,KAAK,aAAe,kBAAK,wDACzB,uD,IAAA,8EAEH,6GAEG,OAFH,kCAED,KAAI,uCACA,KAAO,aAAW,wEACrB,qDANG,IAMH,gFAGG,WAAkB,EAAO,gGAC5B,OAD4B,kCAC5B,4CACJ,4F,qDALI,I,qFDND,WAAyC,kGACf,OADe,kCACrCA,KAAK,qBAAiB,kBACtBA,KAAK,oCAA4B,EAAkB,sDACnD,oCAAAA,KAAA,Y,IAAA,kFAEH,2FAMD,OAJA,2BACI,WAAY,YACf,0HAED,SACWA,KAAK,iCAAmB,6FAClC,qDAVG,IAUH,gCAGG,WACH,oE,KAED,EHiBA,G,cKpCA,cAAY,oBACRA,KAAK,Q,KACL,MAAK,C,CCKL,ODJH,yF,yHERsB,oEAAd,EAAc,YAIvB,KAAY,aAAwB,eAAwB,mBAFN,GAAzC,EAAsC,KAAG,sBAGzB,GAArB,OAAM,KAAG,GAAO,OAAK,gCACnB,KAAO,mBAAmB,SAAS,GAAQ,GAAI,uEAKrD,0BAAO,EAAP,uBFHH,IEGG,iFAGJ,WAAiB,kGACb,EAAW,CAAC,EACf,wDACJ,6C,uBDnB8B,8CAMvB,IANK,SAKT,EAAY,EAA6B,OAChC,EAAK,EAAI,IAAS,IACvB,EAAK,EAAO,IAAG,IAAQ,EAAQ,QCYtC,+BDVI,+DACJ,iDAGG,WAAW,UAA4B,yDACnC,4BAAO,EAAP,uBCDA,MDCO,CAAP,C,GAII,GAAI,4CnBIR,OmBJQ,8CAEX,gBACJ,yB,yBnBpBY,wBAAkB,EAO3B,wB,kCAEI,SAAW,GACXA,KAAK,mBACL,EAAK,mBACL,kCAEP,WAEY,wBAAqB,kDAE1B,IAAU,UAAO,kBAAiB,uBAClC,cAAqB,kBAAW,KAAa,kBAC7C,uBAAqB,KAAK,mBAC1B,OmBJQ,I,SnBUJ,GACJ,EAAoB,wCAChB,EAA4B,sDAC/B,gDACJ,sDACJ,kD,oBqB9BY,EAAc,cAMvB,EAA2B,8BAF3B,EAAS,KAA0B,OAG/B,EAAe,UAAM,YACrB,EAAoB,0BACpB,EAAwB,kCACpB,EAAe,0B,EACN,kBACT,EAAG,sCACN,wBAAM,4BACH,EAAoB,eAAI,iBAC3B,sCACJ,0CACJ,4BAEY,EAAiB,sDAE1B,EAAqC,8CACjC,EAAkB,eAAU,iBAC5B,EAAgB,cAAW,gBAC3B,EAAiB,0BACjB,EAAkB,wBAClB,EAAa,kCAChB,sDAEO,EAAoB,0BACxB,EAAoB,kCACpB,EAAmB,0BACnB,EAAqB,0BACjB,EAAU,cACd,EAAG,kDACN,8BACJ,8C,wCpBhCY,EAAU,sCAEnB,EAA0C,gDACtC,EAAwB,gBAAG,kBAC3B,EAA8C,0CAC9C,EAA2B,kBAAI,mB,EAC3B,MAAuB,CAAG,IAE9B,YACH,4BAED,EAAiB,OAAC,SACd,EAAiB,WAAC,aACrB,iBAED,CAPI,CAOJ,MAAqB,KAA2B,IqBqE5C,GrBnEA,cAEA,WAAM,kC,KACN,MAAO,CAAC,E,KACJ,aACA,YAAiB,8FACjB,4BAAY,kB,CAWZ,OAVA,iCAEP,WAED,iBACI,oBAGJ,YACI,OAAO,a,KACH,EAjBJ,GAsBJ,cAEC,kCAED,sBAAwB,cACpB,wBAAoB,EAAO,kBAC3B,mBAAgB,EAAuB,a,KACvC,kBAAoB,EAAO,gB,CsBjDtB,OtBkDD,0CAEH,WACD,OAAO,mB,GACV,+BAGG,WACH,8BAED,6BAEC,WAED,yBACI,iCAEP,W,kCsBnEY,EtB0CT,GsBrCC,gBAGG,WAAK,EAAS,GAAK,oBAAE,eAAM,EAAU,UACrC,gBAAc,EAAW,kBAAa,aACtC,IAKH,cAGG,aAAY,GAAQ,+BACvB,cAED,kBACW,OAAK,KAAQ,GAAQ,QAAQ,YAAE,OAAc,IAAd,UAAc,gBAAwB,YAAE,gBAAS,EAAS,IACnG,qEAED,CAUC,OAVD,iCAEC,WAED,iB,GACI,iBAGJ,YACI,OAAOA,KAAA,MAAK,E,KACf,EApBA,GCJD,GAA6C,aAAU,WAAU,GAAV,oBAFvD,WAAG,GAAG,MAAW,EAAM,EAAC,mBAGvB,uBAED,iBAAU,aACN,IAKA,GAAmB,4CAYnB,OAZmB,qCAGvB,SAAM,GACF,OAAO,SAAoB,CAC9B,gDAED,QAAM,UACF,YAAW,EAAS,YACvB,UAGG,OAZmB,GAgBtB,gBAGG,cACH,MAED,EACI,E,EAJY,oBAMZ,KAAC,2EACD,aAAsC,QAA1B,IAAQ,WAAgB,cAAgB,WAAqB,EAAS,EAAE,WACvF,kFAED,YAAgD,QAAjC,EAAC,EAAiB,aAAe,0B,KAC5C,OAAO,EAAY,M,IAOvB,GAAqB,4CAmBjB,OAnBiB,qCAEpB,YAED,IAAM,UAOF,OANA,EAAY,IAAQ,EAAQ,YAAU,gBAAc,EAAgB,WAAW,GAClF,mDAED,EAAM,IAAmB,EAAe,SAAc,8BAClD,WAAK,MAAQ,OAAkB,Q,EAC3B,SAAY,OACf,C,GACD,iBAGJ,SAAM,IAAY,EAAe,GAC7B,EAAK,OAAQ,G,EACT,aAAY,MAAU,IAAC,EAAkB,GAE7C,KAAO,CAAP,CAnBiB,GAwBb,GAAO,aAEV,WAAE,kCACN,kBAED,aAAM,UACF,cAAY,OAAqB,EAAK,UACzC,0BAED,EAAM,kBAA0B,YAC5B,YAAY,KAAQ,OAAkB,GACzC,IAGG,eAAY,SAAQ,GAAkB,YAG1C,IAKI,GAAY,4CAmBhB,OAnBgB,qCAGhB,SAAM,GACF,MAAK,IAAQ,EAIb,OAHI,UAAQ,UACR,cAA4B,gBAC/B,EAAC,kBACK,C,GACV,0BAGG,SAAa,KACT,WAAQ,GACR,QAAU,SACb,EAAC,+BACF,OAAO,GAAqB,IAAK,G,QAGrC,EAnBgB,GAwBZ,GAAK,4CCxGL,ODwGK,4CAEL,SAAC,G,IACD,MAAO,EAAK,OACf,GAED,QAEQ,IAAO,EAAK,MAChB,EAAC,YAEJ,Q,GAED,+BAEC,YACJ,gB,qCE7IG,SAA6C,GAI7C,MAAM,CACF,cALgB,EAAyB,gBAMzC,kBATa,sBAUhB,aANoB,EAAS,eAQ9B,iBAPC,qBASG,uCAGJ,SAAM,GACF,OAAO,OAAY,E,GACtB,+BAGG,SAAY,GACf,OAED,UAAM,YACF,WAAOA,KAAK,gBAAgB,EAAU,YAE7C,oCDjCD,SAGC,GAHD,OAAY,OAAW,OACnB,wCADQ,YASJ,IAJK,QAAe,OAClB,EAA+B,CACjC,QAEA,EAAO,EAAI,IAAc,IAAO,CAC5B,MAAK,EAAY,OACrB,EAAG,4BACN,CAED,OAAM,C,GACF,uCAEI,SAAc,GAClB,OAAE,c,GACL,+BAGG,SAAK,GACD,cAAgB,EAChB,oCAEP,YAEO,UAA6D,MACjE,ODwGK,GCpGR,cAGG,WAAM,GAAO,oB,KACb,QAAU,E,KACV,IAAM,EAAW,UACb,CEWA,OFXA,yCAEJ,SAAE,KACF,MAAG,MACN,6DAEO,MAAiB,EAAwC,YAC7D,SAAW,WAAY,eACvB,kCAEA,SAAU,EAAM,EAAO,GAC1B,0DAEO,UACJ,OACH,W,GAGG,+BAEH,gBACJ,0D,UElDY,YAST,a,GACoB,oCAEA,SAAoB,OAVxC,4BAAkB,KAAuB,8BACrC,UACA,YACH,a,GAQA,6BAGG,SAAK,IAAqB,GAC1B,OAAOA,KAAA,QAAK,QAAQ,KAAQ,IAAK,EAAK,gBAAc,CACvD,UAED,YACI,a,GACuC,+BAEvC,SAAY,EAAC,EAAkB,GAC3B,OAAAA,KAAI,QAAC,QAAY,KAAO,MAAS,mBAEjC,UACJ,YACA,aAGJ,oCAGQ,SAAYM,EAAe,GAC/B,OAAAN,KAAKa,QAAQ,QAAM,KAAO,IAAQ,EAAG,qBACjCP,QAASA,EACT,qBAEA,OFjBP,GE2BG,GAAM,WAEN,WAAK,EAAI,GAAkB,oBAC3BN,KAAKa,UACL,gBAAa,EAChB,iBACJ,CLzBe,OKyBf,kFCxDY,wFAmBkD,OAA3D,iBAAkC,EAAyB,kBAAxC,qBAAe,kEAAU,kDDqC/C,ICrC+C,wEAhB5C,WAAc,KAAU,oGACxB,KAAe,gBAAQ,KAAG,iBAC1B,OACA,cACA,gDASiB,qDAG2B,IAH3B,0EAKb,WAAK,GAAa,oGAClBb,KAAK,QAAS,QAAO,KAAO,IAAK,EAAY,aAC7C,cACA,sCAAAA,KAAA,KACA,kCAAAA,KAAA,YATa,IASb,8EAEA,WAAgB,GAAO,oGAC1B,iDAED,aACI,gDAEA,0BAAO,EAAP,uBARA,IAQA,0EAEI,WAAK,KAA6B,sFAGtC,O,KAFI,QAAK,kBAAY,oCACjB,SAAK,WAAU,uBAAkB,EACrC,oBACH,6CAED,UACI,uBACA,gDACA,oCAAAA,KAAA,YAXA,IAWA,sEAGJ,WAAW,2GACP,KAAM,QAAKc,QAAQ,KAAU,IAAC,EAAQ,QAAmB,CAC5D,UAEO,YACJ,aACA,gDACI,sCAAAd,KAAA,YAVJ,IAUI,gFAEH,oGAGD,OAFAA,KAAK,0BAAmB,oCACxB,SAAO,WAAK,kBAAyB,E,EACrC,kBACA,KAAO,QAAK,iBAAmB,EAAS,mBAC3C,aAEO,gDACJ,mDAVI,IAUJ,wEAEI,WAAK,KAAiB,oGACtBA,KAAI,QAAC,QAAe,KAAK,IAAK,EAAa,WAC9C,UAAC,gBACE,sCAAAA,KAAA,KACH,qDAND,IAMC,0EAGG,aAAoC,uGACxC,KAAQ,QAAC,aAAmB,IAAK,EAAK,aAClC,UACH,UACJ,gDAEO,qDATH,IASG,6EAEA,WAAW,EAAQ,uGACnB,aAAY,iBAAkB,EAAS,gBAC1C,UACJ,eAEO,gDACJ,qDARI,IAQJ,+EAEI,WAAS,KAAiB,oGACtB,0BAAoB,IAAK,mBAA0B,CACtD,UACD,UACH,gDACJ,qDAPG,IAOH,iF,sGCpGmB,OADX,+BAAa,oCACtB,SAAoB,WAAe,oB,EAAf,kBACnB,oDAED,UAEI,UACI,gDACA,qDD6FP,IC7FO,0EAEA,WAAQ,GAAC,sFAET,O,aAF4B,kBAAK,KAAmB,QAAC,uBACrD,SAAK,WAAU,oB,EACf,kBAAyC,aAAM,QAAK,KAAS,MAAU,a,aAClE,gDACJ,mDAND,IAMC,wFAEA,WAA8B,yGAChC,2DAEF,UACA,0BACJ,gDACJ,qDARY,IAQZ,oFCtBY,WAAQ,uGAIjB,KAAmB,QAAe,0CAAf,aAFnB,gDAEsC,mDDkBzC,IClByC,6EAGlC,WAAe,EAAC,uGACnB,gDAED,MACI,UACH,gDAED,qDAVsC,IAUtC,4EAEI,WAAY,EAAK,uGACb,qBAAmB,KAAgC,IAAiC,EAAC,eACzF,MACA,UACH,gDAED,qDARA,IAQA,0EAEI,WAAI,EAAa,yGACb,KAAI,gBAAY,KAAO,IAAK,EAAK,YAAwB,C,OAExD,WACD,eACH,gDACI,uDART,IAQS,yEAEJ,kHACJ,4CAED,aACI,wBAAO,EAAP,sBACH,mDAPQ,IAOR,8EAGG,WAAe,EAAE,8EAIpB,O,KAHG,QAAI,iBAAqBA,KAAK,QAAS,WAAC,CACxC,OAAK,EACL,WAAO,gBAAY,qBACtB,kBAEK,KAAM,QAAe,QAAE,SAAmB,mBAC5C,aACA,gDACI,oCAAAA,KAAA,YAZP,IAYO,uFAEA,WAAoB,IAAiB,GAAQ,2EAI7C,OAHI,8BAAa,KAAU,QAAM,WAAS,CACtC,SACH,gDACD,kBACA,aAAY,QAAC,qCAChB,UACJ,WACJ,gD,uDAVW,I,0ERnCR,WAAmB,GAAe,oGAAf,qBAAe,wBAblC,aACA,gDACA,mD,IAAA,8EAEA,WAAS,GAA2B,sFAGpC,O,KAFA,QAAkB,kBAAyB,KAAE,+BAC7C,OAAW,aAA2B,4B,EACtC,kBACA,KAAS,gBAA2B,4BACpC,aACA,gDAII,kCAAAA,KAAA,YAZJ,IAYI,0EAMJ,WAAWM,EAAe,yFAGtB,OAFA,aAAM,kBAAe,KAAQ,+BAC7B,SAAU,WAAC,oBAA0B,EACrC,oBACA,KAAM,QAAK,QAAa,KAAC,IAAQ,eACjC,UACA,eAEH,gDAGD,qDAjBI,IAiBJ,0EAEI,WAAU,GAAM,oGACZ,KAAI,gBAAe,WAAgB,aACnC,UACI,gDACA,mDANZ,MAMY,EKmBF,GLfE,cAEA,kCACA,e,SACH,cACJ,6BACD,CAsCQ,OAtCR,gGAIJ,8FACkC,OAA9B,EAAI,KAAY,MAAG,QAAW,kBAC9B,KAAK,QAAW,QAAI,SAAa,EAAY,oBACzC,aACA,gDACA,kDATJ,IASI,wFAEI,8FACuB,OAAnB,EAAK,WAAa,eAAC,kBACtB,2DACJ,oBACJ,gDACJ,kDAPO,IAOP,oFAGG,WAAsB,EAAO,GAAO,oGACpC,KAAK,QAAW,QAAI,KAAM,IAAQ,EAAI,uBAClC,UACA,WACI,gDACA,qDARX,IAQW,uFAEA,WAAc,EAAK,GAAY,oGAC/B,qBAAgB,KAAI,IAAK,EAAc,yBAAwB,CAC/D,UACA,cACA,gDACA,qDAPA,IAOA,qFAEA,WAAa,yGACb,qBAAc,mCACd,UACA,UACA,gDACA,qDAPA,MAOA,EA5CA,IAiDR,YACA,EAAM,EAAwB,iBAAQ,sBACtC,EAAM,EAAkC,wBAAO,GAAC,yB,CAFhD,CAGH,iBSjGO,GToGJ,GAAI,4CAkEH,OAlEG,kFAEA,aAAI,2FAEe,OADnB,EAAG,EAAa,eAAM,GAClB,kBAAI,KAAW,kBACf,aAAI,cACJ,YAAI,6BAAkB,EAAW,EAAC,IAAgB,CAClD,2CAAAN,KAAA,KACA,oCAAAA,KAAA,YARJ,IAQI,mEAEP,sGAEJ,+CAEK,wBAA+B,GACjC,YAAI,6BAA0B,EAAW,IAAY,CACrD,gDACI,mDATI,IASJ,0BAEA,WAAS,GACL,kBAAI,WACJ,EAAK,OACR,gCACJ,cAGL,CACI,yBAEI,WAAI,IAAW,GACf,MAAI,EAA4B,WAAW,EAAC,GAA5C,SAAI,EAAJ,GAAI,U,KACJ,EACI,SACA,+BAAS,EAAgB,QAAE,IAAe,G,GACtC,sBAEH,gBACJ,sCACJ,EADI,QACJ,OACJ,oBAEK,YACF,EAAI,SACJ,EACI,aAAI,oBAAqB,YAAqB,EAAG,CACjD,6BAEI,SAAI,KACJ,e,IACI,YAAU,EAAC,wBACd,8BACJ,OACJ,KACJ,KAED,QAEI,+BAEI,SAAI,G,OACJ,UAAS,KAAK,EAAC,WAAI,EACf,wB,WAEI,EAAK,GACR,UACJ,YACJ,OAlEG,GAuEJ,GAAU,WAEN,aAAI,EAAmB,+B,aACnB,EACA,gBAAM,EACN,WACA,WACA,4CACH,sBACD,KAAK,GAAc,GAG1B,iB,CUnJO,OVqJR,qGAEI,WAAoB,GAAU,2EACD,OAAzB,wBAAe,EAAU,kBACzB,KAAI,gBAAe,oCACf,YACA,gDACA,mDAPZ,IAOY,oEAEH,sGASD,O,KARA,QAAK,mBAAmB,aAAa,WAAY,YACpD,4BACJ,6BAED,EACI,aAAI,kBAAoBA,KAAK,QAAM,WAAc,iDAAE,cAAe,2EACnC,OAA/B,cAAc,EAAM,SAAW,kBAC3B,EAAI,YAAU,2CACd,mDAH6C,GAG7C,kB,KACI,gBAAe,SAAW,EAAa,MAAQ,C,SAElD,wBACD,sCAAAA,KAAA,KACH,qDAhBO,IAgBP,+BAER,wCU7LY,YAAb,8BACI,UACI,QACA,SACA,Y,GAEH,uEAGD,gHACwB,KAAU,IAAK,KAAO,GAAU,yBAGrB,OAHnC,EAAoB,OACpB,OAAU,WAAI,oBAA0B,G,KACxC,IAAK,kBAAO,EAAS,U,KACrB,QAAY,aAAG,EAAQ,SAAM,KAAM,oBAC3B,GAAU,gDACV,kDATP,MASO,EVuIM,GU/HV,GAAY,WAKhB,WAAM,EAAM,GAAmB,+B,kBAC3B,IAAM,EACN,eAAM,E,KAEN,eAAiB,GACjB,qBAAa,GAChB,0BAgBD,sBAA8B,G,KAC1B,mBAAe,GACfA,KAAK,WAAM,OACd,gBAOD,gBAAkB,kBAAsB,K,KACpC,UAAS,gBAAkB,YAC9B,iEAMD,gBAAc,OAA2C,MACrDA,KAAK,OAAK,IAAC,GAAa,KAAU,KAAC,8BACtC,yCAOD,qBAAuB,GAAgB,KACnC,CAyJJ,OAzJI,oCAMJ,gBAAuB,WACnB,EAAO,CACV,SAKD,SACI,O,GACA,KAAI,U,YACA,EACH,eAQL,OAAM,aAAa,SAAC,EAAiB,GACjC,kBAAe,EAAO,WAAW,E,EAAQ,eAAO,eAEhD,cACA,YAAY,cACR,GAAW,2EAEX,wGACA,aAAW,cAAoB,kCAC/B,aAAU,EAAQ,OAAM,EAAS,sBACjC,eAAG,YAAI,gDAAE,kDALE,IAKF,oEACN,wGACHA,KAAK,QAAM,EAAU,OAAO,EAAS,uDACxC,kDAHY,IAGZ,4BAWL,SAAM,G,aACF,EAAK,WACL,uBAAa,IAGhB,4BASK,qBAAiB,EAAiB,W,iCACpC,KAAM,mBAAmB,EAAO,IAChC,6BACA,SAAI,GACA,IACH,8BAAM,yBACH,qBAAc,EAAG,IAAK,SACzB,UACJ,4BASD,C,kCAEQ,SAAM,GACT,gCACJ,iD,GAQG,mCACW,SAAY,GACvB,uBAAkB,EAAO,MAC5B,uDAQD,KAAa,kBAA2C,M,GAEvD,8BAgBG,SAAW,GACd,gCAQD,MAAiC,EAAc,OAC3C,KAAO,iBAAgB,mBAC1B,oDAUG,sBAAY,EAAW,aAC1B,CAUD,OAhNgB,GA2NZ,GAAW,WAQf,WAAU,GAAC,oBACP,WAAM,CACN,CAqFJ,OArFI,qFAaJ,mGACI,YAAOA,KAAK,cAAW,qBAC1B,qCASD,OAAU,mBACN,MAAW,EAAC,KAAQ,SACvB,qBAQD,sBACI,YACH,+BAcA,2DAFD,OAAa,SAAoB,UAWjC,YACI,QAAY,KACf,eASD,IACI,WAAO,IAAK,KACf,uEAaD,kDArFI,MAqFJ,EA/Fe,GAoGX,GAAM,WAET,kCASD,WAAa,E,KACT,IAAO,E,CC5VP,OD6VH,uCAQG,WACH,uCAQD,+BAEC,WAUD,SAAM,E,GACF,mCAEA,SAAa,G,IACb,EAAc,GAWlB,OAXgD,eAAM,SAAW,YAC5D,EAAqB,EAAI,IAAC,C,IAUzB,C,+BAEE,GACH,SAAM,UAEH,GAAU,EAAK,QAAQ,kBACtB,MAEJ,GAML,GAAkB,EAAe,K,GAEhC,mEAGG,WAAK,EAAS,uGACdA,KAAKQ,MAAS,IAAG,QAAK,EAAa,IAAC,gDACpC,oCAAAR,KAAA,YALH,IAKG,wEAEA,WAAK,EAAc,GAAO,iFACf,O,KAAX,aAAW,SACO,WAAY,uBAAyB,EAAG,0CAC7D,OADG,EAAW,OACd,wCAGJ,mD,qDARO,I,qECjbJ,aAAoC,0GACjB,2BAAT,GACS,QADf,EAAM,QACY,iBACrB,kBAGG,EACA,GAIM,EAAK,cAAG,EAAI,EAAC,0CAEA,UAAU,EAAO,EAAS,gBAA7C,EAAM,OACN,EAAK,QAAa,QAHC,2BAKZ,OAAP,sBAAO,kBACP,GAAO,iDAEP,qD,MAAA,EDgVM,GC1UO,cAEJ,kCAAC,aACE,eAAI,E,eACA,GACH,sBAAM,sBACH,kBACH,2BAED,iBAAM,GACT,cACL,KAAC,UACS,GAGjB,iBAED,KAAK,UAAoB,G,KACrB,MAAO,IAAK,GAAU,KAAC,M,QAC1B,kF,ubAAA,I,y8PAnBgB,G,q2TC3BR,GAAa,kDAaxB,WAAoB,EAAqB,EAAmB,GAAmB,MAItC,OAJsC,qBAC7E,cAAM,IADY,UAXpB,SAAS,IAAI,IAGb,sBAAqB,EACrB,cAAc,EAEN,WAAW,IAAI,IACf,gBAAoD,GAwB5D,OAAI,iDAAG,WAAO,GAAkB,uGACK,GADH,EAAc,gCAAU,IAAc,iCAChE,EAAO,EAAK,YAEK,IAAnB,EAAK,aAA2D,QAAhC,IAAK,cAAc,EAAK,gBAAQ,eAAE,IAAI,EAAK,YAAU,yCAChF,MAAI,OAGgE,QAClE,KADL,EAAK,EAAK,OAAO,WAAW,aAAa,EAAK,SAAU,EAAK,YAC/C,yCAAS,MAAI,OAsBO,GApBpC,IACE,EAAK,oBACP,EAAK,kBAAiB,GACtB,EAAK,SAAS,QACd,EAAK,cAAgB,IAErB,EAAK,UAIJ,EAAK,cAAc,EAAK,WAAU,EAAK,cAAc,EAAK,SAAW,IAAI,KAC9E,EAAK,cAAc,EAAK,SAAS,IAAI,EAAK,WAC1C,EAAK,SAAS,IAAI,EAAK,UACjB,EAAW,EAAK,aAAa,EAAK,QAAS,CAAC,GAAK,IAE9C,SAAS,KAAK,EAAK,UAC5B,EAAS,SAAS,KAAK,EAAK,UAC5B,EAAS,MAAM,KAAK,EAAK,OAEzB,EAAS,SAAU,EACnB,EAAS,YAAc,EAAK,aAExB,EAAc,kCACV,EAAK,eAAe,GAAS,iCAG9B,CAAE,QAAS,EAAK,QAAS,OAAI,4CACrC,mDArCG,GAgDJ,WAAQ,iDAAG,WACT,EACA,GAAa,mGAIuE,GAHpF,EAAiB,EAAH,8BACd,IAAc,iCAER,EAAO,EAAK,QAAQ,MAAM,UAAU,MAAK,SAAC,GAAK,OAAK,EAAM,UAAY,CAAO,IAC1E,iDAa+B,GAXpC,GACF,EAAK,SAAS,QAEhB,EAAK,SAAS,IAAI,IACZ,EAAW,EAAK,aAAa,EAAS,EAAK,IACxC,SAAU,EAEnB,EAAS,SAAS,KAAK,EAAK,UAC5B,EAAS,SAAS,KAAK,EAAK,UAC5B,EAAS,MAAM,KAAK,EAAK,OAEzB,EAAS,YAAc,EAAK,aACxB,EAAc,kCAAQ,EAAK,eAAe,GAAS,4CACxD,qDAtBO,GAwBR,eAAe,SAAC,EAAiB,EAAe,GAC9C,IAAM,EAAO,EAAK,OAAO,WAAW,aAAa,CAC/C,MAAO,EAAK,MACZ,UACA,MACA,iBACA,SAAU,EAAK,WAMjB,OAJI,IACF,EAAK,OAAO,IAAI,GAChB,EAAK,QAAQ,SAAS,eAAe,cAAc,IAAI,IAElD,CACT,EAvGE,EAAK,MAAQ,EAAQ,WACrB,EAAK,OAAS,EACV,IAAU,EAAK,SAAW,GAAS,CACzC,CAiHC,OAjHA,oCAED,W,MACE,KAAK,OAAO,SAAQ,SAAC,GACnB,EAAK,mBACL,EAAK,SAAS,SAChB,IACa,QAAb,OAAK,gBAAQ,SAAE,UACd,KAAK,OAAiB,KACtB,KAAK,SAAmB,KACxB,KAAK,MAAgB,KACrB,KAAK,OAAiB,KACtB,KAAK,QAAkB,IAC1B,GAAC,oBAyCD,WAAM,IAC+B,EAD/B,cACkB,KAAK,UAAQ,IAAnC,2BAAqC,KAA1B,EAAO,QAChB,KAAK,OAAO,WAAW,aAAa,EAAS,KAAK,S,CACnD,+BACD,KAAK,SAAS,QACd,KAAK,OAAO,QACZ,KAAK,cAAgB,EACvB,GAAC,8BAyCD,SAAiB,GACf,KAAK,OAAO,SAAQ,SAAC,GAAI,OAAM,EAAK,QAAU,CAAO,GACvD,GAAC,6EAEO,WAAqB,GAAU,iFAEe,OAD9C,EAAuB,KAAK,QAAQ,SAAS,eAAe,OAClE,KAAK,QAAQ,SAAS,eAAe,QAAS,EAAM,SAE9C,KAAK,QAAQ,UAAU,WAAW,GAAK,OAE7C,KAAK,QAAQ,SAAS,eAAe,OAAS,EAAqB,gDACpE,mDATA,MASA,EAnIuB,CAAQ,GCArB,GAAW,WAUtB,WAAoB,EAA6B,GAAe,oBAA5C,eAA6B,WAFhC,mBAAgB,kBAG/B,KAAK,aAAe,KAAK,sBAAsB,SAAU,IACzD,KAAK,gBAAkB,KAAK,sBAAsB,SAAU,IAC5D,KAAK,gBAAkB,KAAK,sBAAsB,SAAU,KAE5D,KAAK,aAAe,IAAI,GAAa,EAAS,KAAK,IAAI,OAAQ,KAAK,iBACpE,KAAK,aAAa,oBAAqB,EACvC,KAAK,UAAY,IAAI,GAAa,EAAS,KAAK,IAAI,OAAQ,KAAK,cACjE,KAAK,UAAY,IAAI,GAAa,EAAS,KAAK,IAAI,QACpD,KAAK,UAAU,aAAe,CAChC,CA8KC,OA9KA,oCAED,W,UACsB,QAApB,OAAK,uBAAe,SAAE,UACrB,KAAK,gBAA0B,KACf,QAAjB,OAAK,oBAAY,SAAE,UAClB,KAAK,aAAuB,KACT,QAApB,OAAK,uBAAe,SAAE,UACrB,KAAK,gBAA0B,KAEhC,KAAK,aAAa,UACjB,KAAK,aAAuB,KAC7B,KAAK,UAAU,UACd,KAAK,UAAoB,KAC1B,KAAK,UAAU,UACd,KAAK,UAAoB,IAC5B,GAEA,6EAGA,8FAEE,GADM,EAAQ,KAAK,QAAQ,aAEjB,gBACkC,OAA1C,KAAK,aAAa,kBAAiB,GAAO,0CAItC,KAAK,aAAa,KAAK,GAAM,gDACpC,kDAZD,IAcA,0EAKA,gHACyC,GADvB,EAAc,gCAAU,IAAc,iCAChD,EAAQ,KAAK,QAAQ,aACjB,yCAAS,MAAI,uBACF,KAAK,UAAU,KAAK,EAAO,EAAgB,GAAe,OAAnE,GACE,OADR,EAAM,SAC4B,MAAlB,EAAO,SAAgC,MAAb,EAAO,GAAU,0CAAS,MAAI,iCAEvE,GAAM,iDACd,kDAZD,IAcA,+EAKA,gHACyC,GADlB,EAAc,gCAAU,IAAc,iCACrD,EAAQ,KAAK,QAAQ,aACjB,yCAAS,MAAI,OAED,OAAtB,KAAK,iBAAiB,SAED,KAAK,UAAU,KAAK,EAAO,EAAgB,GAAe,OAAnE,GACE,OADR,EAAM,SAC4B,MAAlB,EAAO,SAAgC,MAAb,EAAO,GAAU,0CAAS,MAAI,iCAEvE,GAAM,iDACd,kDAfD,IAiBA,+EAOA,WACE,EACA,GAAa,+FAEQ,OADrB,EAAc,gCACd,IAAc,iCAAO,SAEf,KAAK,UAAU,SAAS,EAAS,EAAK,EAAgB,GAAe,gDAC5E,qDAdD,IAgBA,kFAOA,WACE,EACA,GAAa,+FAEQ,OADrB,EAAc,gCACd,IAAc,iCAAO,SAEf,KAAK,aAAa,SAAS,EAAS,EAAK,EAAgB,GAAe,gDAC/E,qDAdD,IAgBA,oFAOA,WACE,EACA,GAAa,+FAIS,OAHtB,EAAc,gCACd,IAAc,iCAEd,KAAK,iBAAiB,SAChB,KAAK,UAAU,SAAS,EAAS,EAAK,EAAgB,GAAe,gDAC5E,qDAfD,IAiBA,4BAGA,WACE,KAAK,UAAU,QACjB,GAEA,+BAGA,WACE,KAAK,aAAa,QACpB,GAEA,iCAGA,WAAmB,WACjB,KAAK,QAAQ,MAAM,UAAU,SAAQ,SAAC,GAAK,OAAK,EAAK,gBAAgB,EAAM,IAC3E,KAAK,UAAU,SACX,KAAK,QAAQ,SAAS,eAAe,SACvC,KAAK,QAAQ,SAAS,eAAe,SAAU,EAEnD,GAAC,6BAEO,SAAgB,GACtB,IAAM,EAAa,EAAM,SAAS,KAAK,eACnC,GAAc,EAAW,SAC3B,EAAW,OAAO,IAAI,GACtB,EAAW,mBAEf,GAAC,4BAEO,WAAc,WACpB,KAAK,QAAQ,MAAM,UAAU,SAAQ,SAAC,GACpC,IAAK,EAAM,SAAS,EAAK,eAAgB,CACvC,IAAM,EAAO,IAAI,KAAK,EAAM,SAAU,EAAK,iBAC3C,EAAM,SAAS,EAAK,eAAiB,EACrC,EAAK,QAAQ,SAAS,eAAe,cAAc,IAAI,EACxD,CAED,GAAI,EAAM,OAAQ,CAChB,IAAM,EAAY,EAAM,SAAS,EAAK,eACtC,EAAU,SAAS,KAAK,EAAM,UAC9B,EAAU,SAAS,KAAK,EAAM,UAC9B,EAAU,MAAM,KAAK,EAAM,OAC3B,EAAM,OAAO,IAAI,GACjB,EAAM,kBACP,CACH,GACF,GAAC,mCAEO,SAAsB,EAAe,GAC3C,IAAM,EAAS,KAAK,QAAQ,oBAC5B,OAAO,IAAI,KAAoB,CAC7B,QACA,UACA,aAAa,EACb,WAAW,EACX,KAAM,IACN,eAAgB,GAEpB,KAAC,EAlMqB,GCNXe,GAAgB,IAAIC,IAAY,CAC3C,WAAY,UAAW,WAAY,WAAY,WAAY,SAAU,WAAY,WACjF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAW,UAAW,WAClF,WAAY,WAAY,WAAY,WAAY,UAAW,WAAY,WAAY,WACnF,WAAY,WAAY,UAAW,WAAY,WAAY,WAAY,WAAY,UACnF,WAAY,WAAY,WAAY,UAAW,WAAY,WAAY,WAAY,UACnF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAW,WAAY,WACnF,WAAY,UAAW,WAAY,UAAW,WAAY,WAAY,WAAY,WAClF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,SAAU,WAAY,WAAY,WAAY,WAAY,WAClF,SAAU,WAAY,UAAW,WAAY,WAAY,SAAU,WAAY,WAC/E,UAAW,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACnF,WAAY,UAAW,WAAY,WAAY,WAAY,UAAW,UAAW,UACjF,WAAY,WAAY,WAAY,UAAW,WAAY,WAAY,WAAY,UACnF,WAAY,UAAW,WAAY,WAAY,WAAY,WAAY,WAAY,WACnF,WAAY,WAAY,WAAY,WAAY,YCVrC,GAAa,WAKxB,WAAY,EAAqB,GAAiB,oBAChD,KAAK,QAAU,EACf,KAAK,OAAS,CAChB,CA2HC,OA3HA,oCAED,WACG,KAAK,QAAkB,KACvB,KAAK,OAAiB,KACtB,KAAK,OAAiB,IACzB,GAEA,qFAOA,WACE,EACA,EACA,GAAiD,iFAEL,GAA5C,KAAK,OAAS,KAAK,OAAO,WAAW,OAChC,EAAK,sBAAQ,IAAI,MAAM,sCAAqC,OACzC,OAAlB,EAAgB,GAAE,SAClB,KAAK,qBAAqB,EAAM,QAAS,EAAO,EAAS,GAAM,gCAC9D,GAAK,gDACb,uDAjBD,IAiBC,mFAEO,WACN,EACA,EACA,EACA,GAAiD,+GAErB,KAAK,oBAAoB,GAAQ,OAA1C,OAAb,EAAa,gBACI,KAAK,2BAA2B,GAAQ,OAAjD,OAAV,EAAU,gBACY,KAAK,OAAQ,YAAY,GAAQ,OAArD,EAAW,OACX,EAAa,EAAY,OAC3B,EAAY,GAEZ,EAAU,EACL,EAAI,EAAC,aAAE,EAAI,GAAU,iBACC,GAAvB,EAAK,EAAY,IAAI,GACtB,EAAc,IAAI,GAAG,kCAElB,KAAK,gBAAgB,EAAS,EAAI,GAAW,QACnD,IAAU,QAER,GAAW,EAAU,IACvB,EAAM,KAAK,IAAI,KAAK,CAAC,KAAK,UAAU,IAAc,CAAE,KAAM,sBAC1D,EAAa,GACb,EAAU,GAER,GAAS,EAAI,EAAa,IAC5B,EAAM,EAAG,GACT,GAAa,IACd,QAf6B,IAAG,wBAkBnC,EAAM,KAAK,IAAI,KAAK,CAAC,KAAK,UAAU,IAAc,CAAE,KAAM,sBAAuB,iDAClF,yDAlCA,IAkCA,8EAEO,WAAsB,EAAiB,EAAY,GAAe,0GAElD,KAAK,OAAQ,QAAQ,EAAS,GAAG,QAA/C,EAAK,QACD,OACR,EAAM,KAAO,KAAK,OAAO,WAAW,SAAS,EAAM,OAErD,KAAK,qBAAqB,GAC1B,EAAW,GAAM,EAAM,gDAEvB,QAAQ,IAAG,yEAAmE,IAAM,yDAEvF,uDAbA,IAaA,kCAEO,SAAqB,GAC3B,OAAO,KAAK,GAAO,SAAQ,SAAC,GAC1B,IAAM,EAAQ,EAAM,GAChB,QAAyB,IAAhB,EAAM,MAAqB,EAAM,GAAO,EAAM,MAClD,MAAM,QAAQ,KACrB,EAAM,GAAO,EAAM,KAAI,SAAC,GACtB,OAAI,GAAQ,EAAK,MAAc,EAAK,MAC7B,CACT,IACJ,GACF,GAAC,yFAEO,WAAiC,GAAe,2FAE1B,KAAK,OAAQ,sBAAsB,GAAQ,mCACjD,KAAK,kBAAkB,GAAQ,6CADnD,mBAAkB,KAClB,aAAY,uDAEf,mDAPA,IAOA,gFAEO,WAAwB,GAAe,uGACtB,KAAK,YAAY,GAAQ,OAKwB,OALlE,EAAQ,OAER,EAAgB,EAAS,gBAAgB,eAC5B,EAAf,EAA2B,EAAc,kBAAkB,SAC9C,EAAS,gBAAgB,kBAAkB,SACtD,EAAY,EAAU,YAAY,KAAI,SAAC,GAAU,OAAK,EAAM,KAAK,IAAC,kBACjE,EAAU,IAAE,gDACpB,mDAVA,IAUA,0EAEO,WAAkB,GAAe,qFACL,OAA5B,EAAM,KAAK,OAAO,WAAU,SACJ,EAAI,kBAAkB,EAAS,KAAa,GAAM,OAC3C,OAD/B,EAAe,OACf,EAAa,EAAgB,GAAE,kBAC9B,EAAI,kBAAkB,EAAS,GAAY,IAAK,gDACxD,mDAPA,IAOA,kFAEO,WAA0B,GAAe,6FACzC,EAAgB,IAAI,IACpB,EAAiB,MAAM,KAAK,IACzB,EAAI,EAAC,YAAE,EAAI,EAAe,QAAM,iBAEvC,OADM,EAAW,EAAe,GAChC,SACkB,KAAK,OAAQ,mBAAmB,EAAS,GAAS,OAEpE,IAFM,EAAG,OACH,EAAU,EAAI,OACX,EAAI,EAAG,EAAI,EAAS,IAC3B,EAAc,IAAI,EAAI,IAAI,IAC3B,QAPwC,IAAG,gDASvC,GAAa,iDACrB,mDAfA,MAeA,EAnIuB,GCKb,GAAW,kDAOtB,WAAY,GAAmB,MAO6B,OAP7B,qBAC7B,cAAM,IACD,QAAU,EACf,EAAK,OAAS,IAAI,GAClB,EAAK,oBACL,EAAK,SAAW,IAAI,GAAY,EAAO,gBACvC,EAAK,MAAQ,IAAI,EAAQ,gBACzB,EAAK,WAAa,IAAI,GAAc,EAAS,EAAK,QAAQ,CAC5D,CA2NC,OA3NA,qFAED,wFAOkC,OAN/B,KAAK,QAAkB,KACxB,KAAK,SAAS,UACb,KAAK,SAAmB,KACzB,KAAK,MAAM,UACV,KAAK,MAAgB,KACtB,KAAK,WAAW,UACf,KAAK,WAAqB,KAAK,SAC1B,KAAK,OAAO,WAAW,UAAS,OACrC,KAAK,OAAiB,KAAK,iDAC7B,kDAZA,IAcD,sEAMA,WAAc,GAAU,iGACe,OADb,EAAU,gCAAU,EAA2B,uBACjE,EAAM,IAAI,gBAAgB,GAAK,kBAC9B,KAAK,WAAW,EAAK,OAAY,EAAW,IAAQ,gDAC5D,mDATD,IAWA,yEAOA,WACE,GAAW,+GAUqD,OAThE,EAAU,gCACV,EAA2C,uBAC3C,EAA2B,gCAGnB,EAAa,QAAgD,IAAxC,KAAK,QAAQ,MAAM,UAAU,QAElD,EAAW,KAAK,OAAO,WAAW,MAAM,eACxC,GAAoB,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,kBAAkB,EACxC,GAAyB,OAAR,QAAQ,IAAR,OAAQ,EAAR,EAAU,wBAAwB,EAAK,UAExD,KAAK,OAAO,WAAW,kBAAkB,CAC7C,qBAAsB,GAAc,EACpC,eAAgB,IAChB,yBAEqB,KAAK,OAAO,UAAU,EAAK,GAAW,QAClC,GADrB,EAAQ,OACd,KAAK,YAAY,IAEb,IAAc,EAAc,kCACN,KAAK,OAAO,WAAW,OAAO,sBACpD,EAAS,SACV,QAFK,EAAS,OAGT,GAAS,IAAI,MAAU,UAAU,GACvC,KAAK,OAAO,WAAW,wBAAwB,GAAQ,QAGf,OAAtC,GAAY,KAAK,QAAQ,aAAa,kBAEnC,GAAQ,QAIW,OAJX,0BAEf,QAAQ,MAAM,sBACd,QAAQ,MAAK,MACT,GAAS,EAAO,MAAM,kBACnB,MAAI,0DAEd,mDA7CD,IA+CA,0EAcA,WAAkB,GAAY,2FACtB,KAAK,OAAO,WAAW,YAAY,GAAK,gDAC/C,mDAhBD,IAkBA,gFAGA,WAAwB,GAAwB,2FACxC,KAAK,OAAO,WAAW,kBAAkB,GAAS,gDACzD,mDALD,IAOA,iCAIA,SAAoB,EAAiB,GACnC,OAAO,KAAK,OAAO,WAAW,oBAAoB,EAAS,EAC7D,GAEA,4EAOA,WAAoB,EAAiB,EAAY,EAAmB,GAAmB,oFACtE,MAAX,GAAyB,MAAN,EAAU,yCAAS,MAAI,uBAC1B,KAAK,OAAO,WAAW,kBAAkB,EAAS,EAAI,GAAU,OAAzE,GAAL,EAAK,QACP,EAAQ,iCACU,KAAK,OAAO,WAAW,gBAAgB,EAAS,EAAI,GAAU,OAAvE,OAAX,EAAM,MAAK,iBACQ,KAAK,OAAO,WAAW,uBAAuB,EAAS,EAAI,GAAU,QAA9E,OAAV,EAAM,KAAI,iBACS,KAAK,OAAO,WAAW,kBAAkB,EAAS,EAAI,GAAU,QAAnF,EAAM,KAAI,wCAEL,GAAK,iDACb,yDAhBD,IAkBA,wBAGA,WACE,IAAM,EAAQ,KAAK,QAAQ,aAC3B,IAAK,EAAO,OAAO,KACnB,IAAM,EAAO,EAAM,OACnB,OAAK,QAAyB,IAAjB,EAAK,SAA0C,OAAjB,EAAK,QACzC,EAAK,QAD6D,IAE3E,GAEA,+BAMA,SAAkB,EAAiB,GAA6B,IAAf,EAAO,wDACtD,OAAO,KAAK,OAAO,WAAW,kBAAkB,EAAS,EAAM,EACjE,GAEA,6EAGA,wGACQ,KAAK,SAAS,iBAAgB,gDACrC,kDALD,IAOA,0EAGA,0GAAwC,OAAtB,EAAc,gCAAQ,kBAC/B,KAAK,SAAS,YAAY,IAAe,gDACjD,kDALD,IAOA,+EAGA,0GAA6C,OAAtB,EAAc,gCAAQ,kBACpC,KAAK,SAAS,iBAAiB,IAAe,gDACtD,kDALD,IAOA,+EAGA,WAAuB,EAAiB,GAAa,6FAAwB,OAAtB,EAAc,gCAAQ,SACrE,KAAK,SAAS,iBAAiB,EAAS,EAAK,GAAe,gDACnE,qDALD,IAOA,kFAGA,WAA0B,EAAiB,GAAa,6FAAwB,OAAtB,EAAc,gCAAQ,SACxE,KAAK,SAAS,oBAAoB,EAAS,EAAK,GAAe,gDACtE,qDALD,IAOA,oFAGA,WAA4B,EAAiB,GAAa,6FAAwB,OAAtB,EAAc,gCAAQ,SAC1E,KAAK,SAAS,sBAAsB,EAAS,EAAK,GAAe,gDACxE,qDALD,IAOA,4BAGA,WACE,KAAK,SAAS,gBAChB,GAEA,+BAGA,WACE,KAAK,SAAS,mBAChB,GAEA,iCAGA,WACE,KAAK,SAAS,qBAChB,GAAC,yBAEO,SAAY,GAClB,KAAK,QAAQ,MAAM,UAAU,KAAK,GAClC,KAAK,QAAQ,MAAM,kBAAkB,KAAK,GAC1C,KAAK,QAAQ,WAAW,IAAI,EAC9B,GAAC,+BAEO,WACN,KAAK,OAAO,WAAW,kBACrB,IACA,IACA,IAEJ,KAAC,EA1OqB,CAAQ,GCInB,GAAW,kDAKtB,WAAY,EAAqB,GAAkB,MAGhC,OAHgC,qBACjD,cAAM,IAoCA,mBAAkB,iDAAG,WAAO,GAA0B,uGAClC,MAAM,EAAM,GAAG,MAAK,OAA7B,OAAX,EAAW,gBACI,EAAY,OAAM,OAAjC,EAAM,OACN,EAAU,IAAI,KAAK,CAAC,GAAS,CAAE,KAAM,eACrC,EAAO,IAAI,KAAK,CAAC,GAAU,WACjC,EAAK,OAAO,QAAQ,GAAM,2CAC3B,mDANyB,GAQlB,aAAa,WACnB,MAAO,CACL,QAAS,EAAK,mBACd,OAAQ,EAAK,kBACb,SAAU,SACV,aAAa,EACb,WAAY,CAAC,QACb,cAAc,EAElB,EApDE,EAAK,OAAS,EACd,EAAK,QAAU,EAAE,CACnB,CAsDC,OAtDA,0CAED,WACE,IAAM,EAAS,SAAS,cAAc,UACtC,EAAO,KAAO,kBACd,EAAO,IAAM,kDACb,EAAO,GAAK,YACZ,EAAO,aAAa,eAAgB,mBACpC,SAAS,qBAAqB,QAAQ,GAAG,YAAY,EACvD,GAAC,4BAED,WACE,KAAK,mBAAmB,KAAK,aAC/B,GAAC,gCAED,SAAmB,GAAY,WAC7B,IACE,GAAI,QAEF,OADA,QAAQ,OAAO,KAAK,cACb,aAAa,KAAK,I,CAE3B,MAAO,GACP,GAAI,KAAK,UAAY,EAAG,OAAO,KAAK,oBACpC,KAAK,IAAM,YAAW,kBAAM,EAAK,mBAAmB,EAAQ,GAAE,IAC/D,CACD,OAAO,IACT,GAAC,+BAEO,WACN,QAAQ,MAAM,6CACd,aAAa,KAAK,IACpB,GAAC,+BAqBO,SAAkB,GACxB,QAAQ,IAAI,YACd,KAAC,EA/DqB,CAAQ,G,6BCPnB,GAAS,WAAtB,4CACU,cAAoE,GAUrE,aAAgE,SAAC,GAEtE,EAAK,SAAS,MAAM,GAAG,SAAQ,SAAC,GAAC,OAAK,EAAE,EAAK,GAC/C,CAKF,CADG,OACF,+BAhBQ,SAAG,GACR,KAAK,SAAS,KAAK,EACrB,GAAC,iBAEM,SAAI,GACT,KAAK,SAAW,KAAK,SAAS,QAAO,SAAC,GAAC,OAAK,IAAM,CAAO,GAC3D,GAAC,oBAOM,WACL,OAAO,IACT,KAAC,EAlBmB,GCGT,GAAmB,kDAM9B,WAAY,EAA6B,GAAoB,MAFhB,OAEgB,qBAC3D,cAAM,IADiC,YALhC,OAAO,EAAgB,YAChC,WAAU,EACV,WAAW,IAAI,GACf,qBAAqB,IAAI,GAAoB,CAI7C,CA6BoB,OA7BnB,mCAED,SAAO,GAEL,GADA,KAAK,QAAU,EACX,EAAQ,CACV,GAAI,KAAK,UAAU,aAAe,EAAkB,YAElD,YADA,KAAK,UAAU,kBAAkB,EAAgB,OAGnD,KAAK,wBACN,CACH,GAAC,oCAED,WACE,IAAM,EAAW,KAAK,UAAU,eAC1B,EAAiB,IAAI,KAC3B,EAAS,OAAO,iBAAiB,GACjC,IAAM,EAAoB,IAAI,KAC9B,EAAS,WACT,EAAS,OAAO,iBAAiB,GACjC,EAAS,YAAc,EACvB,EAAS,YAAc,EACvB,EAAS,SAAW,EACpB,EAAS,OAAO,EAAkB,EAAG,EAAkB,EAAG,EAAkB,GAC5E,KAAK,UAAU,eAAe,WAAa,GAC3C,EAAS,aAAa,MAAQ,KAAe,OAAO,MACpD,EAAS,QAAQ,IAAM,KAAe,OAAO,gBAC/C,GAAC,6BAED,WAAmB,KAAC,EArCU,CAAQ,GCL3B,GAAa,kDAQxB,WAAoB,EAA6B,GAAoB,MAEtC,OAFsC,qBACnE,cAAM,IADY,UAA6B,cAPjD,WAAU,EAED,OAAO,EAAgB,MACvB,WAAW,IAAI,GACf,WAAW,IAAI,GACf,qBAAqB,IAAI,GAIhC,EAAK,wBAAwB,CAC/B,CAqCC,OAnCD,iCAGA,WACE,IAAM,EAAS,IAAI,KAEnB,OADA,KAAK,UAAU,eAAe,UAAU,GACjC,CACT,GAAC,oBAED,SAAO,GACL,KAAK,QAAU,EACX,GACF,KAAK,uBAET,GAAC,8EAED,2GACO,KAAK,QAAO,iDAS6B,OARxC,EAAQ,KAAK,QAAQ,WACrB,GAAM,IAAI,KAAO,cAAc,EAAM,SAAS,EAAM,SAAS,OAAS,IACtE,EAAY,IAAI,KACtB,EAAI,QAAQ,GACN,EAAc,IAAI,KACxB,EAAI,UAAU,GACK,GACb,EADa,GACJ,KAAK,IAAI,EAAU,EAAG,EAAU,EAAG,EAAU,GACtD,EAAS,IAAI,KAAO,EAAa,GAAO,UACxC,KAAK,UAAU,eAAe,YAAY,GAAQ,GAAK,iDAC9D,kDAdA,IAcA,mCAEO,WACN,IAAM,EAAW,KAAK,UAAU,eAChC,EAAS,YAAc,EACvB,EAAS,YAAc,IACvB,KAAK,UAAU,eAAe,WAAa,CAC7C,KAAC,EAhDuB,CAAQ,GCDrB,GAAiB,WA4E5B,WAAoB,EAAqB,GAAoB,oBAAzC,eAxEZ,uBAAoB,EAyE1B,KAAK,QAAU,EACf,KAAK,cAAgB,EAAU,kBAC/B,KAAK,kBAAoB,EAAkB,WAC7C,CANC,OAMA,uCA1ED,WACE,OAAO,KAAK,aACd,GAAC,sBAED,WACE,OAAO,KAAK,iBACd,EAAC,IAED,SAAe,GACT,KAAK,aAAe,IACpB,IAAe,EAAkB,aACnC,KAAK,iBAEL,KAAK,uBAET,GAAC,4BAED,WAGE,GAAIhB,KAAK,QAAQ,eAAe,OAAS,EAAgB,YAAzD,CACA,KAAK,iBAAmB,KAAK,QAAQ,eAAe,SACpD,KAAK,QAAQ,eAAe,SAAW,IACvC,MAA0B,KAAK,UAAvB,EAAK,EAAL,MAAO,EAAM,EAAN,OACf,KAAK,iBAAiB,EAAQ,GAC9B,KAAK,cAAgB,KAAK,QAAQ,mBAClC,KAAK,kBAAoB,EAAkB,YAN2B,CAOxE,GAAC,qBAEO,WACN,IAAM,EAAc,IAAI,KACxB,KAAK,QAAQ,kBAAkB,kBAAkB,GACjD,IAAM,EAAS,IAAI,KACnB,KAAK,QAAQ,eAAe,UAAU,GACtC,IACM,EADW,EAAO,QAAQ,IAAI,KAAK,QAAQ,kBAAkB,UAC5C,IAAI,GACrB,EAAO,KAAK,QAAQ,gBACpB,EAAS,EAAK,EAAI,EAAK,EACvB,EAAM,KAAK,QAAQ,kBAAkB,IACrC,EAAiB,EAAR,EAAY,KAAK,KAAM,GAAO,KAAK,GAAK,KAAQ,GAE/D,MAAO,CAAE,MADK,EAAS,EACP,SAClB,GAAC,8BAEO,SAAiB,EAAgB,GACvC,KAAK,QAAQ,eAAe,aAAa,MAAQ,KAAe,OAAO,KACvE,KAAK,QAAQ,mBAAmB,KAAO,EACvC,KAAK,QAAQ,mBAAmB,KAAO,GAAS,EAChD,KAAK,QAAQ,mBAAmB,MAAQ,EAAQ,EAChD,KAAK,QAAQ,mBAAmB,IAAM,EAAS,EAC/C,KAAK,QAAQ,mBAAmB,OAAS,GAAU,EACnD,KAAK,QAAQ,mBAAmB,yBAChC,KAAK,QAAQ,mBAAmB,SAAS,KAAK,KAAK,QAAQ,kBAAkB,UAC7E,KAAK,QAAQ,mBAAmB,WAAW,KAAK,KAAK,QAAQ,kBAAkB,YAC/E,KAAK,QAAQ,eAAe,OAAS,KAAK,QAAQ,kBACpD,GAAC,kCAEO,WACN,KAAK,QAAQ,eAAe,aAAa,MAAQ,KAAe,OAAO,MACvE,KAAK,QAAQ,kBAAkB,SAAS,KAAK,KAAK,QAAQ,mBAAmB,UAC7E,KAAK,QAAQ,kBAAkB,WAAW,KAAK,KAAK,QAAQ,mBAAmB,YAC/E,KAAK,QAAQ,kBAAkB,yBAC/B,KAAK,QAAQ,eAAe,OAAS,KAAK,QAAQ,kBAClD,KAAK,QAAQ,eAAe,aAAa,MAAQ,KAAe,OAAO,MACvE,KAAK,cAAgB,KAAK,QAAQ,kBAClC,KAAK,kBAAoB,EAAkB,YAC3C,KAAK,QAAQ,eAAe,SAAW,KAAK,iBAC5C,KAAK,QAAQ,eAAe,OAAO,EACrC,KAAC,EA1E2B,GCCjB,GAAY,kDASvB,WAAoB,EAA6B,GAAoB,MAGA,OAHA,qBACnE,cAAM,IADY,UAA6B,cARxC,OAAO,EAAgB,KAChC,WAAU,EACV,WAAW,IAAI,GACf,qBAAqB,IAAI,GAOvB,EAAK,oBAAsB,EAAU,eAAe,mBACpD,EAAK,kBAAoB,EAAU,eAAe,iBAAiB,CACrE,CAiBC,OAjBA,mCAED,SAAO,GACL,KAAK,QAAU,EACf,IAAM,EAAW,KAAK,UAAU,eAChC,EAAS,mBAAqB,EAAS,EAAI,KAAK,oBAChD,EAAS,iBAAmB,EAAS,EAAI,KAAK,kBAC9C,EAAS,aAAa,KAAO,KAAe,OAAO,MACrD,GAAC,8EAED,mGACO,KAAK,QAAO,iDAGsC,OAFjD,EAAQ,KAAK,QAAQ,WAC3B,QAAQ,IAAI,GACN,GAAM,IAAI,KAAO,cAAc,EAAM,SAAS,IAAG,SAEjD,KAAK,UAAU,eAAe,SAAS,GAAK,GAAM,gDACzD,kDATA,MASA,EA9BsB,CAAQ,GCyB3B,GAAgB,CACpB,WACA,aACA,aACA,aACA,gBACA,aACA,eACA,SACA,YACA,eACA,UAAW,CACT,QAAS,KAAU,QACnB,MAAO,KAAU,QAIf,GAAc,GAEP,GAAU,kDAgBrB,WAAY,GAAmB,6BAC7B,cAAM,IATC,SAAW,IAAI,GACf,qBAAqB,IAAI,GAK1B,oBAAyB,GAI/B,EAAK,QAAU,EAEf,IAAM,EAAO,EAAK,QAAQ,gBACpB,EAAS,EAAK,EAAI,EAAK,EA+BR,OA9BrB,EAAK,kBAAoB,IAAI,KAAkB,GAAI,EAAQ,EAAG,KAE9D,EAAK,mBAAqB,IAAI,KAC3B,GAAc,GAAW,EACzB,GAAc,EAAU,EACzB,GAAc,EACd,IAAe,EACf,GACA,KAEF,EAAK,eAEL,KAAe,QAAQ,CAAE,MAAO,KAChC,EAAK,eAAiB,IAAI,KAAe,EAAK,kBAAmB,EAAQ,iBAEzE,EAAK,SAAO,mBACT,EAAgB,MAAQ,IAAI,GAAa,EAAK,QAAO,iBAAO,cAC5D,EAAgB,YAAc,IAAI,GAAmB,EAAK,QAAO,iBAAO,cACxE,EAAgB,KAAO,IAAI,GAAY,EAAK,QAAO,iBAAO,GAG7D,EAAK,eAAiB,EAAK,QAAQ,EAAgB,OACnD,EAAK,eAAe,QAAO,EAAM,CAAE,yBAAyB,IAE5D,OAAO,OAAO,EAAK,SAAS,SAAQ,SAAC,GACnC,EAAK,SAAS,GAAG,EAAK,SAAS,SAC/B,EAAK,mBAAmB,GAAG,EAAK,mBAAmB,QACrD,IAEA,EAAK,kBAAoB,IAAI,GAAkB,EAAO,gBACtD,EAAK,gBAAgB,CACvB,CAmIC,OAnIA,oCAED,WACE,KAAK,kBAAkB,mBACtB,KAAK,kBAA4B,KAClC,KAAK,mBAAmB,mBACvB,KAAK,mBAA6B,KACnC,KAAK,eAAe,UACnB,KAAK,eAAyB,KAC9B,KAAK,QAAkB,KACvB,KAAK,QAAkB,KACvB,KAAK,kBAA4B,IACpC,GAAC,sBAED,WACE,OAAO,KAAK,kBAAkB,UAChC,EAAC,IAED,SAAe,GACb,KAAK,kBAAkB,WAAa,EACpC,KAAK,mBAAmB,QAAQ,KAAK,aACvC,GAEA,oBAGA,WACE,OAAO,KAAK,cACd,GAAC,wBAED,WACE,OAAO,KAAK,kBAAkB,YAChC,GAAC,oBAED,SAAO,GACL,gEAAa,GACT,KAAK,eAAe,SACtB,KAAK,eAAe,OAAO,EAE/B,GAAC,0BAED,SAAa,GACN,IAAM,EAAO,KAAK,QAAQ,iBAC/B,KAAK,kBAAkB,OAAS,EAAK,EAAI,EAAK,EAC9C,KAAK,kBAAkB,yBACvB,KAAK,qBAAqB,EAC5B,GAEA,4BAGA,SAAe,GACb,KAAK,SAAS,GAAG,EACnB,GAAC,+BAED,SAAkB,GACZ,KAAK,eAAe,OAAS,IACjC,KAAK,eAAe,QAAO,GAC3B,KAAK,eAAiB,KAAK,QAAQ,GACnC,KAAK,eAAe,QAAO,GAC7B,GAAC,kCAED,SAAqB,GACnB,KAAK,eAAe,QAAU,CAChC,GAAC,8BAED,WACE,IAAM,EAAS,KAAK,aAAe,EAAkB,aACrD,KAAK,WAAa,EAAS,EAAkB,YAAc,EAAkB,aAC7E,KAAK,mBAAmB,QAAQ,KAAK,aACvC,GAAC,yEAED,WAAiB,GAAU,iFACkB,OAArC,EAAS,KAAK,QAAQ,UAAU,GAAK,SACrC,KAAK,eAAe,OAAO,EAAO,EAAG,EAAO,EAAG,EAAO,GAAG,GAAK,gDACrE,mDALA,IAKA,6BAED,SAAgB,GAEd,GADA,QAAQ,IAAI,KAAK,mBACb,EAAQ,CACV,GAAmD,IAA/C,OAAO,KAAK,KAAK,mBAAmB,OAAc,OACtD,KAAK,eAAe,aAAa,KAAO,KAAK,kBAAkB,KAC/D,KAAK,eAAe,aAAa,MAAQ,KAAK,kBAAkB,MAChE,KAAK,eAAe,aAAa,OAAS,KAAK,kBAAkB,OACjE,KAAK,eAAe,aAAa,MAAQ,KAAK,kBAAkB,K,MAEhE,KAAK,kBAAkB,KAAO,KAAK,eAAe,aAAa,KAC/D,KAAK,kBAAkB,MAAQ,KAAK,eAAe,aAAa,MAChE,KAAK,kBAAkB,OAAS,KAAK,eAAe,aAAa,OACjE,KAAK,kBAAkB,MAAQ,KAAK,eAAe,aAAa,MAEhE,KAAK,eAAe,aAAa,KAAO,EACxC,KAAK,eAAe,aAAa,MAAQ,EACzC,KAAK,eAAe,aAAa,OAAS,EAC1C,KAAK,eAAe,aAAa,MAAQ,CAE7C,GAAC,kCAEO,SAAqB,GAC3B,IAAM,EAAS,EAAK,EAAI,EAAK,EAC7B,KAAK,mBAAmB,MAAS,GAAc,EAAU,EACzD,KAAK,mBAAmB,MAAS,GAAc,EAAU,EACzD,KAAK,mBAAmB,IAAM,GAAc,EAC5C,KAAK,mBAAmB,QAAU,GAAc,EAChD,KAAK,mBAAmB,wBAC1B,GAKA,0BAEQ,WACN,KAAK,2BAA2B,KAAK,kBACvC,GAAC,wCAEO,SAA2B,GACjC,EAAO,SAAS,EAAI,GACpB,EAAO,SAAS,EAAI,GACpB,EAAO,SAAS,EAAI,GACpB,EAAO,OAAO,IAAI,KAAQ,EAAG,EAAG,GAClC,GAAC,2BAEO,WAAa,WACnB,KAAK,eAAe,cAAgB,GACpC,KAAK,eAAe,eAAgB,EACpC,KAAK,eAAe,eAAgB,EACpC,KAAK,eAAe,UAAU,EAAG,EAAG,GAEpC,KAAK,eAAe,iBAAiB,cAAc,kBAAM,EAAK,SAAS,QAAQ,EAAK,IACpF,KAAK,eAAe,iBAAiB,QAAQ,kBAAM,EAAK,SAAS,QAAQ,EAAK,GAChF,KAAC,EAxLoB,CAAQ,GC/ClB,GAAa,kDAIxB,WAAY,GAAmB,MAGI,OAHJ,qBAC7B,cAAM,IACD,QAAU,EACf,EAAK,UAAY,IAAI,KAAY,CACnC,CAwBC,OAxBA,oCAED,WACG,KAAK,UAAoB,KACzB,KAAK,QAAkB,IAC1B,GAAC,qBAED,SAAQ,GACN,IAAM,EAAS,KAAK,QAAQ,YAE5B,OADA,KAAK,UAAU,cAAc,KAAK,QAAQ,MAAM,SAAU,GACnD,KAAK,UAAU,iBAAiB,EACzC,GAAC,wBAED,WACE,IAAM,EAAQ,KAAK,QAAQ,KAAK,QAAQ,MAAM,mBACxC,EAAW,KAAK,qBAAqB,GAC3C,OAAO,EAAS,OAAS,EAAI,EAAS,GAAK,IAC7C,GAAC,kCAEO,SAAqB,GAC3B,IAAM,EAAS,KAAK,QAAQ,oBAC5B,OAAI,EAAK,QAAU,IAAM,IAAgB,OAAN,QAAM,IAAN,OAAM,EAAN,EAAQ,SAAU,EAAU,EAExD,EAAK,QAAO,SAAC,GAAI,OAAK,EAAO,OAAM,SAAC,GAAK,OAAK,EAAM,gBAAgB,EAAK,OAAS,CAAC,GAAC,GAC7F,KAAC,EAhCuB,CAAQ,G,4DCe5B,GAAkB,kDAQtB,WAAY,EAAqB,EAAc,GAAyB,2BACtE,gBAEK,YAAc,EACnB,EAAK,OAAS,EACd,EAAK,WAAa,IAAI,KAAQ,EAAW,EAAG,EAAW,GAGvD,EAAK,OAAS,IAAI,KAAe,MACjC,EAAK,OAAO,SAAW,EAAK,mCAG5B,IAAM,EAAe,IAAI,KAAkB,EAAK,WAAW,EAAG,EAAK,WAAW,GAQvB,OAPvD,EAAa,QAAQ,OAAS,KAC9B,EAAa,QAAQ,UAAY,KACjC,EAAa,QAAQ,UAAY,KACjC,EAAa,QAAQ,iBAAkB,EACvC,EAAa,eAAgB,EAC7B,EAAK,aAAe,EAEpB,EAAK,uBAAyB,IAAI,KAAqB,CACzD,CA6MC,OA7MA,oCAED,WACE,KAAK,aAAa,UACjB,KAAK,aAAuB,KAC7B,KAAK,OAAO,UACX,KAAK,OAAiB,IACzB,GAAC,qBAED,SAAQ,EAAe,GACrB,KAAK,aAAa,QAAQ,EAAO,GACjC,KAAK,WAAW,IAAY,EAAR,EAAoB,EAAT,GAG/B,KAAK,OAAO,SAAS,SAAS,WAAW,MAAM,IAC7C,KAAK,WAAW,EAChB,KAAK,WAAW,EAChB,EAAI,KAAK,WAAW,EACpB,EAAI,KAAK,WAAW,EAExB,GAAC,oBAED,SAAO,EAAyB,EAAkB,GAGhD,IAAM,EAAmB,EAAY,YACrC,EAAY,aAAc,EAK1B,EAAS,gBAAgB,KAAK,cAE9B,IAAM,EAAwB,KAAK,YAAY,iBAC/C,KAAK,YAAY,iBAAmB,KAAK,uBACzC,EAAS,OAAO,KAAK,YAAa,KAAK,QACvC,KAAK,YAAY,iBAAmB,EAGpC,KAAK,OAAO,SAAS,SAAS,YAAY,MAAQ,EAAW,aAE7D,KAAK,OAAO,SAAS,SAAS,aAAa,MAAQ,KAAK,aAAa,QAErE,KAAK,OAAO,SAAS,SAAS,iBAAiB,MAAQ,EAAW,QAI9D,KAAK,gBAIP,EAAS,gBAAgB,MACzB,KAAK,OAAO,OAAO,KAEnB,EAAS,gBAAgB,GACzB,KAAK,OAAO,OAAO,IAIrB,EAAY,YAAc,CAC5B,GAAC,wBAED,WACE,2KAOF,GAAC,0BACD,WACE,u8HAwGF,GAAC,8CAED,WACE,OAAO,IAAI,KAAe,CACxB,SAAU,CACR,eAAgB,CAAE,MAAO,GAEzB,iBAAkB,GAElB,YAAa,GAEb,aAAc,GACd,aAAc,CAAE,MAAO,IAAI,IAAM,WAEjC,qBAAsB,CAAE,MAAO,IAAI,KAAQ,EAAG,EAAG,EAAG,IACpD,WAAY,CAAE,MAAO,KAAK,OAAO,MACjC,UAAW,CAAE,MAAO,KAAK,OAAO,KAChC,WAAY,CACV,MAAO,IAAI,KACT,KAAK,WAAW,EAChB,KAAK,WAAW,EAChB,EAAI,KAAK,WAAW,EACpB,EAAI,KAAK,WAAW,KAI1B,aAAc,KAAK,aACnB,eAAgB,KAAK,gBAEzB,KAAC,EA1OqB,CAAQ,MCGnB,GAAc,WA+EzB,WAAoB,EAA6B,GAAuB,+BAApD,eAA6B,gBA9EjD,iBAAc,SAAS,cAAc,OACrC,mBAAgB,IAAI,IAEZ,kBAAc,EAUL,qBAAkB,6BAE3B,8BAA0B,EAC1B,wBAAoB,EACpB,mBAAgB,EAChB,iBAAc,EACd,iBAAc,IAEd,eAAW,EACX,gBAAY,EAGZ,WAAQ,IAAI,IAAM,IAAK,IAAK,KAE5B,kBAAe,IAAI,KAAoB,CAC7C,YAAY,EACZ,QAAS,EACT,aAAa,IAGP,mBAAgB,CACtB,KAAM,CAAE,KAAM,GACd,MAAM,EACN,aAAc,QACd,UAAW,GACX,UAAW,GACX,WAAY,EACZ,WAAY,GA+JN,oBAAiB,kBAAO,EAAK,yBAA0B,CAAI,EAC3D,YAAS,kBAAO,EAAK,mBAAoB,CAAK,EAE9C,cAAW,WACjB,EAAK,YAAc,YAAY,MAC/B,EAAK,SAAU,EAEf,YAAW,WACL,YAAY,MAAQ,EAAK,aAAe,EAAK,cAC/C,EAAK,SAAU,EAEnB,GAAG,EAAK,YACV,EAEQ,eAAY,WAClB,EAAK,SAAU,CACjB,EAEQ,kBAAe,WACrB,EAAK,yBAA0B,GAC1B,EAAK,yBAA2B,EAAK,oBACxC,EAAK,SAAU,EAEnB,EAEQ,aAAU,WAChB,EAAK,cAAgB,YAAY,KACnC,EAEQ,aAAU,WAEhB,EAAK,mBAAoB,EACzB,IAAM,EAAe,YAAY,MACjC,YAAW,WACL,EAAK,cAAgB,IACpB,EAAK,yBAA2B,EAAK,oBACxC,EAAK,SAAU,EAEnB,GAAG,IACL,EAEQ,wBAAqB,SAAC,GAC5B,EAAK,SAAS,OAAO,SAAQ,SAAC,GAE5B,EAAK,OAAS,CAChB,IACA,EAAK,QACP,EAvKE,KAAK,aAAe,KAAK,kBAEzB,KAAK,SAAW,IAAI,KAAe,EAAU,KAAK,cAClD,KAAK,SAAS,QAAQ,OAAO,WAAY,OAAO,YAClD,CAqOC,OArOA,iCAxCD,WACE,OAAO,KAAK,QACd,EAAC,IAED,SAAW,GACL,KAAK,WAAa,IACjB,KAAK,aAAa,KAAK,kBAC5B,KAAK,QAAU,EACf,KAAK,SAAW,EAClB,GAAC,mBAED,WACE,OAAO,KAAK,SACd,EAAC,IAED,SAAY,GACL,KAAK,WACV,KAAK,UAAY,EACb,GAAS,KAAK,SAClB,KAAK,YAAY,MAAM,WAAa,EAAU,UAAY,WAC5D,GAAC,wBAED,WACE,OAAO,KAAK,cAAc,YAC5B,EAAC,IAED,SAAiB,GACf,KAAK,cAAc,aAAe,EAClC,KAAK,gBAAgB,aAAa,MAAM,IAAI,EAC9C,GAAC,eAED,W,MACE,OAAmB,QAAZ,OAAK,eAAO,eAAE,MACvB,GAAC,qBASD,W,QACE,KAAK,QAAS,EAEd,OAAO,oBAAoB,SAAU,KAAK,UAE1C,KAAK,aAAa,UACjB,KAAK,aAAuB,KAEZ,QAAjB,OAAK,oBAAY,SAAE,UAClB,KAAK,aAAuB,KAEX,QAAlB,OAAK,qBAAa,SAAE,UACnB,KAAK,cAAwB,KAE7B,KAAK,SAAmB,KAEzB,KAAK,cAAc,QAClB,KAAK,cAAwB,KAE7B,KAAK,SAAmB,KAEzB,KAAK,YAAY,SAChB,KAAK,YAAsB,KAE3B,KAAK,cAAwB,KAE7B,KAAK,QAAkB,KACvB,KAAK,SAAmB,KAExB,KAAK,QAAkB,KACvB,KAAK,gBAA0B,KAE/B,KAAK,MAAgB,IACxB,GAAC,qBAED,SAAQ,EAAe,GACrB,KAAK,SAAS,QAAQ,EAAO,EAC/B,GAAC,oBAED,WAAM,I,MAAA,EAAAA,KACJ,GAAK,KAAK,aAAgB,KAAK,SAA/B,CAEA,KAAK,oBAEL,KAAK,QAAQ,WAAW,UAAS,SAAC,GAEhC,EAAO,SAAS,aAAe,EAAO,SAEtC,EAAO,SAAW,EAAK,YACzB,IAEA,IAAM,EAAuB,QAAV,OAAK,aAAK,eAAE,YACjB,QAAV,EAAAA,KAAK,aAAK,eAAE,aAAc,IAAY,KAAK,MAAM,WAAa,KAAK,OAEvE,KAAK,SAAS,UAEA,QAAV,OAAK,aAAK,eAAE,aAAc,IAAY,KAAK,MAAM,WAAa,GAElE,KAAK,QAAQ,WAAW,UAAS,SAAC,GAEhC,EAAO,SAAW,EAAO,SAAS,oBAC3B,EAAO,SAAS,YACzB,IAEA,KAAK,YAAY,IAAM,KAAK,SAAS,WAAW,YAChD,KAAK,mBAzBoC,CA0B3C,GAAC,+BAEO,WAAiB,IACgB,EADhB,cACF,KAAK,eAAa,IAAvC,2BAAyC,KAA9B,EAAM,QACf,EAAO,SAAS,KAAK,iBAAmB,EAAO,QAC/C,EAAO,SAAU,C,CAClB,+BACH,GAAC,+BAEO,WAAiB,IACgB,EADhB,cACF,KAAK,eAAa,IAAvC,2BAAyC,KAA9B,EAAM,aAC+B,IAA1C,EAAO,SAAS,KAAK,mBACvB,EAAO,QAAU,EAAO,SAAS,KAAK,iB,CAEzC,+BACH,GAAC,6BAEO,WACN,IAAM,EAAQ,KAAK,QAAQ,WACrB,EAAS,KAAK,QAAQ,YACvB,GAAU,IAEf,KAAK,MAAQ,EACb,KAAK,SAAS,eAAiB,KAAK,QAAQ,oBAC5C,KAAK,cAEL,KAAK,YAAY,EAAO,GACxB,KAAK,WAAW,EAAO,GACvB,KAAK,eAAe,EAAO,GAC3B,KAAK,mBACL,KAAK,mBAEL,KAAK,aAAc,EACrB,GAAC,yBAEO,WACN,IAAM,EAAW,KAAK,QAAQ,UAAU,eAClC,EAAa,KAAK,QAAQ,gBAChC,EAAS,iBAAiB,UAAW,KAAK,WAC1C,EAAS,iBAAiB,eAAgB,KAAK,gBAC/C,EAAS,iBAAiB,OAAQ,KAAK,QACvC,EAAS,iBAAiB,aAAc,KAAK,cAC7C,EAAW,iBAAiB,QAAS,KAAK,SAC1C,EAAS,iBAAiB,QAAS,KAAK,SACxC,OAAO,iBAAiB,SAAU,KAAK,UACvC,KAAK,QAAQ,UAAU,mBAAmB,GAAG,KAAK,mBACpD,GAAC,8BAmDO,WACN,KAAK,QAAQ,sBAAsB,YAAY,KAAK,aAEpD,KAAK,YAAY,MAAM,aAAe,WACtC,KAAK,YAAY,MAAM,SAAW,WAClC,KAAK,YAAY,MAAM,OAAS,OAChC,KAAK,YAAY,MAAM,WAAa,OACpC,KAAK,YAAY,MAAM,cAAgB,OACvC,KAAK,YAAY,MAAM,IAAM,IAC7B,KAAK,YAAY,MAAM,KAAO,GAChC,GAAC,8BAEO,WACN,KAAK,SAAW,IAAI,KAAW,MAC/B,KAAK,SAAS,SAAS,WAAW,MAAM,IACrC,EAAI,KAAK,SAAS,WAAW,YAAe,KAAK,SAAS,gBAC1D,EAAI,KAAK,SAAS,WAAW,aAAgB,KAAK,SAAS,iBAE9D,KAAK,SAAS,QAAQ,KAAK,SAC7B,GAAC,4BAEO,SAAe,EAAc,GACnC,KAAK,cAAgB,IAAI,GACvB,IAAI,KAAQ,OAAO,WAAY,OAAO,aACtC,EACA,GAKF,KAAK,gBAAkB,KAAK,cAAc,OAAO,SAAS,SAC1D,KAAK,gBAAgB,aAAa,MAAM,IAAI,KAAK,cAAc,cAC/D,KAAK,gBAAgB,qBAAqB,MAAM,EAAI,KAAK,cAAc,UACvE,KAAK,gBAAgB,qBAAqB,MAAM,EAAI,KAAK,cAAc,UACvE,KAAK,gBAAgB,qBAAqB,MAAM,EAAI,KAAK,cAAc,WACvE,KAAK,gBAAgB,qBAAqB,MAAM,EAAI,KAAK,cAAc,WAEvE,KAAK,SAAS,QAAQ,KAAK,cAC7B,GAAC,wBAEO,SAAW,EAAc,GAC/B,KAAK,QAAU,IAAI,KAAQ,EAAO,GAAQ,GAAO,GACjD,KAAK,SAAS,QAAQ,KAAK,SAE3B,KAAK,QAAQ,SAAU,EACvB,KAAK,QAAQ,OAAO,aAAe,IACnC,KAAK,QAAQ,OAAO,QAAU,GAC9B,KAAK,QAAQ,OAAO,cAAgB,EACpC,KAAK,QAAQ,OAAO,mBAAqB,MACzC,KAAK,QAAQ,OAAO,SAAW,GAC/B,KAAK,QAAQ,OAAO,gBAAkB,EACxC,GAAC,yBAEO,SAAY,EAAc,GAChC,KAAK,SAAW,IAAI,KAAW,EAAO,GACtC,KAAK,SAAS,QAAQ,KAAK,SAC7B,GAAC,6BAEO,WAEN,OADA,KAAK,aAAe,IAAI,IAAa,OAAO,WAAY,OAAO,aACxD,IAAI,KAAkB,OAAO,WAAY,OAAO,YAAa,CAClE,aAAc,KAAK,aACnB,aAAa,GAEjB,KAAC,EAzTwB,GChBd,GAAY,kDAYvB,WAAY,GAAmB,MASH,OATG,qBAC7B,cAAM,IAXR,WAAa,IAAI,IAKjB,WAAU,EAOR,EAAK,QAAU,EACf,EAAK,UAAY,EAAQ,QAAQ,UACjC,EAAK,SAAW,IAAI,KAAc,CAAE,OAAO,EAAM,WAAW,IAC5D,EAAK,SAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,IAE9D,EAAK,iBACL,EAAK,eAAiB,IAAI,GAAe,EAAK,QAAS,EAAK,UAC5D,EAAK,qBAAqB,CAC5B,CAyEC,OAzEA,oCAED,W,QACE,KAAK,SAAS,WAAW,SACzB,KAAK,SAAS,UACd,KAAK,eAAe,UACnB,KAAK,eAAyB,KAC9B,KAAK,SAAmB,KACxB,KAAK,WAAqB,KAC1B,KAAK,UAAoB,KACzB,KAAK,QAAkB,KACP,QAAjB,OAAK,oBAAY,SAAE,UACJ,QAAf,OAAK,kBAAU,SAAE,QACnB,GAAC,oBAED,SAAO,GACL,IAAIA,KAAK,QAAT,CACA,IAAM,EAAQ,KAAK,QAAQ,WACrB,EAAS,KAAK,QAAQ,YAC5B,KAAK,SAAS,OAAO,EAAO,GAC5B,KAAK,WAAW,OAAO,EAAO,EAJZ,CAKpB,GAAC,qBAED,WACE,OAAO,IAAI,KAAQ,KAAK,SAAS,WAAW,YAAa,KAAK,SAAS,WAAW,aACpF,GAAC,gCAED,WACE,IAAM,EAAQ,KAAK,UAAU,YACvB,EAAS,KAAK,UAAU,aAC9B,KAAK,SAAS,QAAQ,EAAO,GAC7B,KAAK,eAAe,QAAQ,EAAO,GACnC,KAAK,WAAW,QAAQ,EAAO,EACjC,GAAC,2BAED,SAAc,EAAiB,GAC7B,IAAM,EAAqB,KAAK,UAG1B,EADaA,KAAK,SAAS,WACH,WAAU,GAGnC,KAAK,eACR,KAAK,aAAe,IAAI,KAAc,CAAE,OAAQ,EAAY,WAAW,IACvE,KAAK,aAAa,sBAAuB,GAGvC,IACF,KAAK,aAAa,QAAQ,EAAW,EAAG,EAAW,GACnD,KAAK,QAAQ,UAAU,aAAa,IAMtC,IAAM,EAAQ,KAAK,QAAQ,WACrB,EAAiB,GAAU,KAAK,QAAQ,YAC9C,KAAK,aAAa,OAAO,EAAO,GAChC,IAAM,EAAS,KAAK,aAAa,WAAW,YAI5C,OAFI,GAAY,KAAK,QAAQ,UAAU,aAAa,GAE7C,CACT,GAAC,4BAEO,WACN,KAAK,SAAS,sBAAuB,EACrC,KAAK,UAAU,YAAY,KAAK,SAAS,YAEzC,KAAK,WAAW,WAAW,MAAM,SAAW,WAC5C,KAAK,WAAW,WAAW,MAAM,IAAM,MACvC,KAAK,WAAW,WAAW,MAAM,cAAgB,OACjD,KAAK,UAAU,YAAY,KAAK,WAAW,WAC7C,KAAC,EA/FsB,CAAQ,GCDpB,GAAS,kDAIpB,WAAoB,GAAmB,MAIlB,OAJkB,qBACrC,cAAM,IADY,UAFpB,yBAAyB,IAAI,IAAM,UAIjC,EAAK,MAAQ,IAAI,KACjB,EAAK,WAAW,EAAQ,SACxB,EAAK,cAAc,CACrB,CA0CC,OA1CA,oCAED,WACE,KAAK,MAAM,SAAS,OAAS,EAC5B,KAAK,MAAgB,IACxB,GAAC,iBAED,SAAI,GACF,KAAK,MAAM,IAAI,EACjB,GAAC,oBAED,SAAO,GACL,KAAK,MAAM,OAAO,EACpB,GAAC,sBAED,SAAS,GACP,KAAK,QAAQ,MAAM,UAAU,KAAK,GAClC,KAAK,QAAQ,MAAM,kBAAkB,KAAK,GAC1C,KAAK,MAAM,IAAI,EACjB,GAAC,yBAED,SAAY,GACV,IAAI,EAAQ,KAAK,QAAQ,MAAM,UAAU,QAAQ,GAC7C,GAAS,GAAG,KAAK,QAAQ,MAAM,UAAU,OAAO,EAAO,IAC3D,EAAQ,KAAK,QAAQ,MAAM,kBAAkB,QAAQ,KACxC,GAAG,KAAK,QAAQ,MAAM,kBAAkB,OAAO,EAAO,GAC/D,EAAM,QAAQ,EAAM,kBAC1B,GAAC,wBAEO,SAAW,GACjB,KAAK,MAAM,YAAoB,OAAP,QAAO,IAAP,OAAO,EAAP,EAAS,kBAAmB,KAAK,sBAC3D,GAAC,yBAEO,WACN,IAAM,EAAS,IAAI,IAAiB,SAAU,IAC9C,EAAO,SAAS,IAAI,EAAG,EAAG,GAC1B,KAAK,MAAM,IAAI,GACf,IAAM,EAAS,IAAI,IAAiB,SAAU,IAC9C,EAAO,SAAS,KAAK,EAAG,IAAM,GAC9B,KAAK,MAAM,IAAI,GACf,IAAM,EAAe,IAAI,IAAa,SAAU,KAChD,KAAK,MAAM,IAAI,EACjB,KAAC,EAnDmB,CAAQ,G,UCFjB,GAAQ,WAGnB,iCACE,KAAK,YAAc,IACrB,CAWC,OAXA,oCAED,WACG,KAAK,YAAsB,IAC9B,GAAC,kBAED,SAAK,EAAiB,GAA2C,IAAvB,EAAQ,uDAAG,EAAG,EAAK,uDAAG,EACxD,EAAI,EAAU,EACd,EAAI,EAAU,EACd,EAAI,EAAU,EACpB,KAAK,GAAG,EAAQ,CAAE,WAAU,QAAO,IAAG,IAAG,KAC3C,KAAC,EAhBkB,IpBHrB,SAAY,GACV,+BACD,CAFD,CAAY,QAAQ,KAYpB,IAAa,GAAS,WAAtB,iCACU,YAAM,eACX,GAAS,cAAgB,CACxB,aAAa,EACb,WAAW,EACX,QAAS,IA6Bf,CADG,OACF,oCAzBC,WACE,KAAK,OAAO,cAAc,QAAQ,OAAS,EAC1C,KAAK,OAAiB,IACzB,GAAC,uBAED,SAAU,EAAiB,GACzB,KAAK,OAAO,GAAO,QAAQ,KAAK,GAChC,KAAK,OAAO,GAAO,aAAc,EACjC,KAAK,OAAO,EACd,GAAC,qBAED,SAAQ,GACN,KAAK,OAAO,GAAO,WAAY,EAC/B,KAAK,OAAO,EACd,GAAC,oBAED,SAAO,GACL,GAAI,KAAK,OAAO,GAAO,aAAe,KAAK,OAAO,GAAO,UAAW,CAElE,IADA,IAAM,EAAU,KAAK,OAAO,GAAO,QAC1B,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAClC,EAAQ,KAEV,EAAQ,OAAS,CAClB,CACH,KAAC,EAjCmB,GqBVT,GAAQ,WAInB,WAAY,GAA6B,oBAHzC,cAAW,IAAI,KACf,iBAAc,IAAI,KAGhB,KAAK,yBAAyB,EAChC,CAUC,OAVA,qDAEO,SAAyB,GAA6B,WAC5D,EAAW,YAAc,SAAC,GACxB,EAAK,YAAY,EAAI,EAAM,QAC3B,EAAK,YAAY,EAAI,EAAM,QAC3B,IAAM,EAAS,EAAW,wBAC1B,EAAK,SAAS,GAAM,EAAM,QAAU,EAAO,OAAS,EAAO,MAAQ,EAAO,MAAS,EAAI,EACvF,EAAK,SAAS,IAAO,EAAM,QAAU,EAAO,MAAQ,EAAO,OAAS,EAAO,KAAQ,EAAI,CACzF,CACF,KAAC,EAhBkB,GCQR,GAAU,WAiBrB,WAAY,GAAsB,WAChC,GADgC,oBAblC,WAAa,KAWL,0BAAsB,EAwKtB,YAAS,WACX,EAAK,sBACL,EAAK,OAAO,EAAK,MAAM,QACX,EAAK,QAAQ,QAAS,EAEpC,EAAK,iBAEL,sBAAsB,EAAK,QAE7B,EAAK,sBACD,EAAK,OAAO,EAAK,MAAM,MAC7B,EAEQ,oBAAiB,WAIvB,EAAK,cAAc,kBAHM,WACvB,EAAK,cAAc,OAAO,EAAK,WAAY,EAAK,YAClD,GAEF,EAeQ,YAAS,WACf,EAAK,cACP,GAxMO,EAAQ,UAAW,MAAM,IAAI,MAAM,oCACxC,KAAK,QAAU,EACf,KAAK,OAAS,IAAI,GAClB,KAAK,MAAQ,KAAK,WAClB,KAAK,MAAQ,IAAI,GAAS,MAC1B,KAAK,SAAW,IAAI,GAAY,MAChC,KAAK,MAAQ,IAAI,GAAS,KAAK,SAAS,SAAS,YAEjD,KAAK,UAAY,IAAI,GAAU,MAC/B,KAAK,OAAO,QAAQ,GAAS,eAE7B,KAAK,eAAiB,GACtB,KAAK,UAAY,IAAI,GAAa,MAClC,KAAK,MAAQ,IAAI,KAAM,GACvB,KAAK,YAAc,IAAI,GACvB,KAAK,qBACL,KAAK,QACP,CA+LC,OA/LA,oCAED,W,UACE,KAAK,qBAAsB,EAEjB,QAAV,OAAK,aAAK,SAAE,IAAI,SAEc,QAA9B,OAAK,QAAQ,yBAAiB,SAAE,UACL,QAA3B,OAAK,QAAQ,sBAAc,SAAE,UAC5B,KAAK,QAAkB,KAExB,KAAK,MAAM,WAAW,OAAS,EAC/B,KAAK,MAAM,UAAU,SAAQ,SAAC,GAC5B,EAAM,mBACF,EAAM,SAAS,YAAY,EAAM,SAAS,oBAC9C,EAAM,SAAS,UACX,MAAM,QAAQ,EAAM,UAAW,EAAM,SAAS,SAAQ,SAAC,GAAG,OAAK,EAAI,SAAS,IAC3E,EAAM,SAAS,SACtB,IACA,KAAK,MAAM,UAAU,OAAS,EAC9B,KAAK,MAAM,kBAAkB,OAAS,EACrC,KAAK,MAAgB,KAEtB,KAAK,UAAU,UACd,KAAK,UAAoB,KAC1B,KAAK,MAAM,UACV,KAAK,MAAgB,KACtB,KAAK,SAAS,UACb,KAAK,MAAgB,KACrB,KAAK,SAAmB,KACzB,KAAK,OAAO,UACX,KAAK,OAAiB,KACvB,KAAK,UAAU,UACd,KAAK,UAAoB,KAC1B,KAAK,YAAY,UAChB,KAAK,YAAsB,KAE3B,KAAK,MAAgB,KACtB,KAAK,eAAe,OAAS,EAC7B,KAAK,oBACP,GAAC,sBAED,WACE,OAAO,KAAK,MAAM,KACpB,GAAC,yBAED,WACE,OAAO,KAAK,SAAS,QACvB,GAAC,2BAED,WACE,OAAO,KAAK,SAAS,UACvB,GAAC,uBAED,WACE,OAAO,KAAK,UAAU,YACxB,GAAC,0BAED,WACE,OAAO,KAAK,SACd,GAAC,2BAED,WACE,OAAO,KAAK,cAAc,UAC5B,GAAC,6BAED,WACE,OAAO,KAAK,gBAAgB,UAC9B,GAAC,iCAED,WACE,OAAO,KAAK,QAAQ,SACtB,GAAC,2BAED,WACE,IAAM,EAAU,KAAK,sBACrB,OAAO,IAAI,KAAQ,EAAQ,YAAa,EAAQ,aAClD,GAAC,+BAED,WACE,OAAO,KAAK,cACd,GAAC,yBAED,WACE,OAAO,KAAK,WACd,GAAC,uBAED,SAAU,GAER,GADA,EAAK,SAAS,sBACT,EAAK,SAAS,MAAO,OAAO,IAAI,KAUrC,IATA,IAAM,EAAU,EAAK,SAAS,MAAM,MAC9B,EAAW,EAAK,SAAS,WAAW,SAGtC,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EAEL,EAAI,EAAG,EAAI,EAAQ,QAAU,EANpB,GAMmCU,IACnD,GAAW,EAAS,KAAK,EAAQ,IACjC,GAAW,EAAS,KAAK,EAAQ,IACjC,GAAW,EAAS,KAAK,EAAQ,IACjC,IAGF,OAAO,IAAI,KACT,EAAU,EAAU,EAAK,SAAS,EAClC,EAAU,EAAU,EAAK,SAAS,EAClC,EAAU,EAAU,EAAK,SAAS,EAEtC,GAEA,0BACA,SAAa,GACX,KAAK,MAAM,WAAW,KAAK,EAC7B,GAAC,8BAED,SAAiB,GACf,KAAK,eAAe,KAAK,EAC3B,GAAC,iCAED,SAAoB,GAClB,IAAM,EAAQ,KAAK,eAAe,QAAQ,GAC1C,KAAK,eAAe,OAAO,EAAO,EACpC,GAAC,qBAED,SAAQ,GACN,OAAO,KAAK,UAAU,QAAQ,EAChC,GAAC,wBAED,WACE,OAAO,KAAK,UAAU,YACxB,GAAC,wBAED,WACE,KAAK,UAAU,QAAQ,EAAgB,OAAO,iBAChD,GAAC,kCAED,SAAqB,GACnB,KAAK,UAAU,qBAAqB,EACtC,GAAC,0BAED,WACE,KAAK,UAAU,eACf,KAAK,SAAS,oBAChB,GAAC,iCAsBO,WACN,IAAM,EAAQ,KAAK,MAAM,WACzB,KAAK,MAAM,WAAW,SAAQ,SAAC,GAAS,OAAK,EAAU,OAAO,EAAM,GACtE,GAAC,gCAEO,WACN,OAAO,iBAAiB,SAAU,KAAK,OACzC,GAAC,gCAEO,WACN,OAAO,oBAAoB,SAAU,KAAK,OAC5C,GAAC,sBAMO,WACN,MAAO,CACL,WAAY,GACZ,UAAW,GACX,kBAAmB,GAEvB,KAAC,EAlOoB,G,oBCPV,GAAa,WAA1B,iCACE,UAAqC,GAG7B,iBAA0C,CAChD,MAAO,KACP,MAAO,IACP,KAAM,IAGA,iBAAc,yBAsFxB,CADG,OACF,oCApFC,WACG,KAAK,KAAe,KACpB,KAAK,YAAsB,IAC9B,GAAC,mFAED,WAA2B,GAAe,oGACnC,KAAK,OAAM,sBAAQ,IAAI,MAAMV,KAAK,aAAY,uBAE7C,KAAK,kBAAkB,GAAQ,uBACZ,KAAK,eAAe,GAAQ,OAArC,OAAV,EAAU,gBACS,KAAK,cAAc,GAAQ,OAApC,OAAV,EAAU,iBACc,KAAK,mBAAmB,GAAQ,QAK9D,IALM,EAAe,OACf,EAAU,KAAK,KAAK,GAEpB,EAAqC,GAElC,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAC5B,EAAS,EAAQ,GACjB,EAAa,EAAO,UAAU,MAC9B,EAAO,KAAK,cAAc,GAChC,EAAO,IAAS,EAAa,EAAW,IAAM,EAAa,EAC5D,yBAEM,GAAM,iDACd,mDArBA,IAqBA,gFAEO,WAAwB,GAAe,8EACxC,KAAK,KAAK,GAAQ,gCACM,KAAK,OAAQ,WAAW,kBACjD,EACA,KACA,GACD,OAJD,KAAK,KAAK,GAAQ,uDAMrB,mDAVA,IAUA,4EAEO,WAAoB,GAAe,4GAEhB,KAAK,YAAY,GAAQ,OACoC,OAD9E,EAAQ,OACR,EAAY,EAAS,gBAAgB,eAAe,kBAAkB,SAAQ,kBAC7E,EAAU,YAAY,KAAI,SAAC,GAAU,OAAK,EAAM,KAAK,KAAC,yDAEtD,CAAC,EAAG,EAAG,IAAE,yDAEnB,mDAVA,IAUA,0EAEO,WAAkB,GAAe,mGACT,KAAK,OAAQ,WAAW,kBACpD,EACA,KACA,GACD,OAEoC,OAN/B,EAAe,OAMf,EAAa,EAAgB,GAAE,kBAC9B,KAAK,OAAQ,WAAW,kBAAkB,EAAS,GAAY,IAAK,gDAC5E,mDAXA,IAWA,iFAEO,WAAyB,GAAe,iGAChB,KAAK,OAAQ,WAAW,OAAO,sBAAsB,GAAQ,OAAtE,OAAf,EAAe,yBACd,EAAgB,KAAG,gDAC3B,mDALA,IAKA,2BAEO,SAAc,GACpB,OAAI,EAAO,KAAa,EAAO,KAAK,MAChC,EAAO,SAAiB,EAAO,SAAS,MACrC,EAAO,QAChB,GAGA,6EACQ,WAAqB,GAAe,6GAChB,KAAK,OAAQ,WAAW,kBAChD,EACA,KACA,GACD,OAE6B,OANxB,EAAW,OAMX,EAAU,EAAY,GAAE,SACL,KAAK,OAAQ,WAAW,kBAAkB,EAAS,GAAQ,OACtC,OADxC,EAAU,OACV,EAAe,EAAW,MAAM,GAAG,MAAK,UACrB,KAAK,OAAQ,WAAW,kBAAkB,EAAS,GAAa,QAClD,OADjC,EAAU,OACV,EAA0B,QAAjB,IAAW,cAAM,eAAE,MAAK,kBAChC,KAAK,YAAY,IAAW,GAAC,iDACrC,mDAdD,MAcC,EA/FuB,GCiDb,GAAY,kDAmBvB,WAAoB,EAA6B,GAAe,MA6jB9D,OA7jB8D,qBAC9D,cAAM,IADY,UAA6B,QAlBjD,aAA2C,GAEnC,SAAS,IAAI,KACb,WAAW,IAAI,KACf,gBAAkC,KAClC,YAAY,YACZ,gBAAgB,gBAEhB,UAAU,IAAI,GAEtB,UAAU,CACR,KAAK,EACL,aAAa,EACb,mBAAmB,EACnB,QAAQ,EACR,eAAgB,GAuiBV,0BAA0B,SAAC,EAAgB,GAGjD,IAFA,IAAI,EAAM,EACJ,EAAoB,GACjB,EAAI,EAAG,EAAI,EAAO,OAAQ,IACjC,EAAQ,KAAK,GAEb,GAAO,EAAO,GAAG,SAAS,WAAW,WAAW,MAGlD,IAAM,EAAU,EAAO,KAAI,SAAC,EAAM,GAChC,IAAM,EAAQ,EAAK,SAAS,MAC5B,OAAQ,EAAa,IAAI,YAAY,EAAM,OAAO,KAAI,SAAC,GAAa,OAAK,EAAQ,EAAQ,EAAE,IAA3E,EAClB,IAEA,EAAS,SAAS,EAAK,eAAe,GACxC,EAEQ,iBAAiB,SAAC,GAExB,IADA,IAAM,EAAa,GACV,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAClC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,GAAG,OAAQ,IACrC,EAAW,KAAK,EAAQ,GAAG,IAG/B,OAAO,CACT,EAAE,CA3jBF,CA0kBC,OA1kBA,oCAED,WACG,KAAK,OAAiB,KACtB,KAAK,SAAmB,KACV,OAAO,OAAO,KAAK,YAC3B,SAAQ,SAAC,GACd,EAAM,mBACN,EAAM,SAAS,SAAQ,SAAC,GAAK,OAAK,EAAuB,EAAc,GACzE,IACC,KAAK,WAAqB,KAC3B,KAAK,QAAQ,UACZ,KAAK,QAAkB,IAC1B,GAEA,mEAIA,WAAW,GAAW,qGACE,KAAK,OAAO,UAAU,GAAI,OAId,OAJ5B,EAAM,OACN,EAAO,EAAO,MACd,EAAU,KAAK,aACrB,KAAK,WAAW,GAAW,EAC3B,KAAK,QAAQ,WAAW,IAAI,GAAM,kBAC3B,GAAI,gDACZ,mDAXD,IAaA,wEAKA,WAAgB,GAAW,iGACF,KAAK,YAAY,GAAI,OAIZ,OAJ1B,EAAQ,QACL,SAAS,oBAClB,EAAS,QAAU,KAAK,aACxB,KAAK,QAAQ,WAAW,IAAI,GAC5B,KAAK,iBAAiB,GAAU,kBACzB,GAAQ,gDAChB,mDAZD,IAeA,kFAKA,WAA0B,GAAoB,+GAQxB,OANlB,EAOE,EAPF,WACA,EAME,EANF,cACA,EAKE,EALF,WACA,EAIE,EAJF,cACA,EAGE,EAHF,YACA,EAEE,EAFF,WACA,EACE,EADF,mBAAkB,SAGc,KAAK,eAAe,GAAmB,OAAlD,OAAkD,SAAjE,EAAM,EAAN,OAAQ,EAAO,EAAP,QAAO,SAEH,EAAO,UAAU,GAAY,SAAC,GAC5C,GAAY,EAAW,EAAM,OAAQ,EAAM,MAAO,MACxD,IAAE,OAOD,OATK,EAAK,OAIL,EAAyB,CAC7B,KAAM,GACN,KAAM,GACN,GAAI,GACJ,mBAAoB,IACrB,UAEsB,EAAQ,kBAAkB,EAAM,QAAS,KAAY,GAAK,QAAnE,IAAR,EAAQ,QACA,OAAM,uBAAQ,IAAI,MAAM,kDAAiD,QACtD,GAA3B,EAAO,EAAS,GAAG,SAChB,uBAAQ,IAAI,MAAM,6CAA4C,QAChD,OAAvB,EAAO,GAAK,EAAK,MAAM,UAEW,EAAQ,OAAO,sBAAsB,GAAE,QAG5C,GAH7B,EAAO,mBAAkB,OAErB,EAAgC,GAChC,EAAuB,IACvB,EAAa,kCACO,KAAK,cAAc,GAAO,QAAhD,EAAa,OACb,EAAa,OAAO,KAAK,GAAe,yBAGpC,KAAK,UACT,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACD,YAEG,EAAa,kCACT,KAAK,cAAc,EAAO,EAAa,EAAY,GAAO,yBAG5D,EAAO,WAAW,UAAS,QACP,OAA1B,KAAK,cAAgB,KAAK,kBACnB,GAAM,iDACd,mDA9DD,IA8DC,4EAEO,WACN,EACA,EACA,EACA,GAAsB,mFAG2B,OAD3C,EAAiB,KAAK,IAAI,WAAW,OAC3C,KAAK,IAAI,WAAW,OAAS,KAAK,cAAe,SAE7B,KAAK,IAAI,WAAW,uBACtC,EACA,GACA,SAAC,EAAkB,GACb,GAAY,EAAW,EAAU,EAAO,OAC9C,IACD,OANK,EAAK,OAQX,EAAO,KAAO,EAAM,KAAI,SAAC,GAAI,OAAK,IAAI,KAAK,CAAC,GAAO,kBAAkB,IACrE,KAAK,IAAI,WAAW,OAAS,EAAe,gDAC7C,yDArBA,IAqBA,wEAEO,WACN,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAAoF,+EAEhF,EAAU,gCACN,KAAK,oBACT,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACD,6CAEK,KAAK,2BACT,EACA,EACA,EACA,EACA,GACD,gDAEJ,iEAhCA,IAgCA,6EAEO,WAAqB,GAA4B,qFAItB,GAH3B,EAAS,IAAI,GACnB,KAAK,cAAgB,EACf,EAAQ,KAAK,IAAI,OAAO,WAAW,MACnC,EAAU,EAAO,YACnB,EAAM,SAAQ,gCAAQ,EAAQ,YAAY,EAAM,UAAS,WACzD,EAAM,OAAO,OAAM,kCAAQ,EAAQ,eAAc,EAAM,EAAM,OAAO,MAAK,YACzE,EAAM,eAAc,kCAAQ,EAAQ,kBAAkB,EAAM,gBAAe,yBAEzE,EAAQ,OAAO,wBACnB,KAAK,IAAI,OAAO,WAAW,OAAO,oBACnC,YAEG,EAAkB,kCACd,KAAK,oBAAoB,EAAS,GAAmB,iCAGtD,CAAE,SAAQ,YAAS,iDAC3B,mDApBA,IAoBA,kFAEO,WAA0B,EAAqB,GAA2B,2EAChF,EAAQ,wBAAwB,GAAoB,2CACrD,qDAJA,IAIA,kFAEO,WACN,EACA,EAKA,EACA,EACA,EACA,EACA,EACA,GAAoF,gGAE9E,EAAkB,GAElB,EAAgB,OAAO,KAAK,GAAW,wIAGrC,EAAe,EAAc,GAC7B,EAAoB,EAAW,GAChC,EAAO,KAAK,KAAe,EAAO,KAAK,GAAgB,IAEnD,EAAI,EAAC,YAAE,EAAI,EAAkB,QAAM,iCACjB,EAAQ,kBAAkB,EAAG,EAAkB,IAAI,GAAM,OAA5E,EAAU,OAChB,EAAM,KAAI,MAAV,EAAK,YAAS,IAAY,OAFkB,IAAG,uBAK3C,EAAgD,GAClD,EACF,EAAW,SAAQ,SAAC,GAClB,IAAM,EAAW,EAAc,GAC/B,EAAW,GAAa,EAAM,QAAO,SAAC,GAAE,OAAK,EAAS,IAAI,IAAI,EAAG,GACnE,IAEA,EAAW,EAAK,WAAa,EAGzB,EAAkB,OAAO,KAAK,GAC3B,EAAI,EAAC,aAAE,EAAI,EAAgB,QAAM,iBAEA,GADlC,EAAiB,EAAgB,KACjC,EAAQ,EAAW,IAEf,OAAM,kCACK,EAAK,sBAAsB,EAAO,GAAO,GAAK,QAA3D,EAAI,OACJ,GAAsC,QAA7B,IAAc,UAAe,eAAE,SAAU,EACxD,EAAO,KAAK,GAAc,GAAkB,CAC1C,KAAM,EAAK,WAAW,EAAM,mBAC5B,UACA,wBAEF,EAAO,KAAK,GAAc,GAAkB,CAC1C,KAAM,KACN,OAAQ,GACR,QAfsC,IAAG,wBAmB3C,GAAY,EAAW,EAAgB,OAAb,QAAa,IAAb,OAAa,EAAb,EAAe,OAAQ,QACrD,EAAM,OAAS,EAAE,2CAzCV,EAAI,EAAC,YAAE,EAAI,EAAc,QAAM,0DAAE,IAAG,0DA2C9C,iEA/DA,IA+DA,yFAEO,WACN,EAKA,EACA,EACA,EACA,GAAU,yFAE2B,GAArC,EAAO,KAAK,KAAK,eAAiB,IAC9B,EAAa,iBACNU,EAAI,EAAC,YAAE,EAAI,EAAW,QAAM,iBAEsB,OADnD,EAAY,EAAW,GACvB,EAAW,MAAM,KAAK,EAAc,GAAW,KAAI,SACtC,KAAK,sBAAsB,EAAO,GAAU,GAAK,OAA9D,EAAI,OACV,EAAO,KAAK,KAAK,eAAe,GAAa,CAC3C,KAAM,KAAK,WAAW,GACtB,OAAQ,EAAc,GAAW,QACjC,QAPmC,IAAG,gEAUvB,KAAK,iBAAiB,GAAM,QAAzC,EAAI,OACV,EAAO,KAAK,KAAK,eAAe,KAAK,WAAa,CAChD,KAAM,KAAK,WAAW,GACtB,OAAQ,GACR,iDAEL,2DA/BA,IAkCD,8EAKA,WAAsB,EAAiB,GAAc,iFACkC,GAA/E,EAAQ,KAAK,QAAQ,MAAM,UAAU,MAAK,SAAC,GAAK,OAAK,EAAM,UAAY,CAAO,IAC1E,sBAAQ,IAAI,MAAM,uCAAsC,gCAC3D,EAAM,KAAK,sBAAsB,EAAO,GAAO,KAAK,iBAAiB,IAAM,gDACnF,qDATD,IAWA,8BAIA,SAAiB,GAAU,WACzB,OAAO,IAAI,SAAa,SAAC,GACvB,EAAK,SAAS,MAAM,GAAM,SAAC,GAAW,OAAK,EAAQ,EAAO,GAAE,EAAK,QACnE,GACF,GAEA,mCACQ,SAAsB,EAAiB,GAAoC,IAArB,EAAa,wDACnE,EAAwB,GACxB,EAAuB,GACvB,EAAuB,GAEvB,EAAe,IAAI,IAEnB,EAAW,mBAEX,EAAS,EAAgB,KAAK,cAAgB,KAAK,IAAI,OAC7D,IAAK,EAAQ,MAAM,IAAI,MAAM,iCAC7B,IAAM,EAAS,EAAO,WAAW,aAAa,CAC5C,QAAS,EAAM,QACf,MACA,gBAAgB,EAChB,aAGF,IAAK,EAAO,SAAS,MAAO,MAAM,IAAI,MAAM,6BAE5C,IAAM,EAAe,EAAO,SAAS,WAAW,SAC1C,EAAgB,EAAO,SAAS,WAAW,UAE3C,EAAmB,EAAO,SAAS,OAAO,QAAO,SAAC,GAAK,OAAqB,IAAhB,EAAM,KAAW,IAC7E,EAA2B,GAC3B,EAAgB,EAAO,SACzB,EAAmB,EACvB,EAAU,SAAQ,SAAC,GACjB,EAAa,KAAK,EAAc,EAAM,gBACtC,EAAM,cAAgB,GACxB,IAGA,IADA,IAAI,EAAW,EACN,EAAI,EAAG,EAAI,EAAO,SAAS,MAAM,MAAO,IAAK,CACpD,IAAM,EAAQ,EAAO,SAAS,MAAM,MAAM,GAErC,EAAa,IAAI,KACpB,EAAY,KAAK,EAAa,MAAM,EAAI,IACxC,EAAY,KAAK,EAAa,MAAM,EAAI,EAAQ,IAChD,EAAY,KAAK,EAAa,MAAM,EAAI,EAAQ,IAEhD,EAAW,KAAK,EAAc,KAAK,IACnC,EAAa,IAAI,EAAO,MAG1B,IAAM,EAAQ,EAAa,IAAI,GAC/B,EAAW,KAAK,EACjB,CAED,IAAM,EAAmB,IAAI,IACvB,EAAkB,IAAI,IAAgB,aAAa,KAAK,GAAc,GACtE,EAAmB,IAAI,IAAgB,YAAY,KAAK,GAAa,GAE3E,EAAiB,aAAa,WAAY,GAC1C,EAAiB,aAAa,YAAa,GAC3C,EAAiB,SAAS,GAC1B,EAAiB,OAAS,EAC1B,EAAiB,uBAEjB,EAAO,WAAW,aAAa,EAAM,aAAS,EAAW,GACzD,IAAM,EAAO,IAAI,KAAK,EAAkB,GAExC,OAAO,KAAK,iBAAiB,EAC/B,GAAC,wBAEO,SAAW,GAA8B,IAAnB,EAAI,uDAAG,aACnC,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAS,EACtC,GAAC,4EAEO,WAAoB,GAAiB,yHAClB,EAAO,WAAW,oBAAoB,GAAE,OAOpC,OAPvB,EAAU,OAEV,EAA6B,GAE7B,EAAU,EAAW,SAAS,GAAG,SAAS,GAAG,SAC7C,EAAa,EAAQ,KAAI,SAAC,GAAW,OAAK,EAAO,SAAS,IAEhE,KAAK,QAAQ,OAAS,EAAO,SACD,KAAK,QAAQ,qBAAqB,GAAE,OAA1D,EAAa,OACb,EAAU,OAAO,OAAO,GAErB,EAAI,EAAC,aAAE,EAAI,EAAW,QAAM,iBAKL,OAJxB,EAAS,EAAQ,GACjB,EAAgB,GACtB,KAAK,uBAAuB,EAAQ,GAE9B,EAAW,EAAW,GAAE,UACL,EAAO,WAAW,kBAAkB,EAAG,GAAS,QAAnE,EAAU,OACV,EAAO,KAAK,cAAc,GAC1B,EAAS,EAAQ,GAEvB,EAAW,GAAQ,CACjB,IAAK,IAAI,IAAY,GACrB,UACA,QAbmC,IAAG,iDAgBnC,GAAU,iDAClB,mDA/BA,IA+BA,2BAEO,SAAc,GACpB,OAAI,EAAO,KAAa,EAAO,KAAK,MAChC,EAAO,SAAiB,EAAO,SAAS,MACrC,EAAO,QAChB,GAAC,oCAEO,SAAuB,EAAkB,GAAgB,WACzD,EAAM,EAAY,SAAS,KAAI,SAAC,GAAU,OAAK,EAAM,SAAS,IACpE,EAAO,KAAI,MAAX,EAAM,YAAS,IACf,EAAY,SAAS,SAAQ,SAAC,GACxB,EAAM,SAAS,QACjB,EAAK,uBAAuB,EAAO,EAEvC,GACF,GAAC,wBAEO,WACN,IAAM,EAAS,KAAK,QAAQ,MAAM,UAClC,IAAK,EAAO,OAAQ,OAAO,EAC3B,IAAM,EAAS,EAAO,KAAI,SAAC,GAAK,OAAK,EAAM,OAAO,IAClD,OAAO,KAAK,IAAG,MAAR,KAAI,YAAQ,IAAU,CAC/B,GAAC,0EAEO,WAAkB,GAAW,qGACX,KAAK,UAAU,GAAI,OAGF,OAHnC,EAAS,OACT,EAAW,KAAK,YAAY,GAC5B,EAAY,KAAK,aAAa,GACpC,KAAK,yBAAyB,GAAW,kBAClC,IAAI,KAAK,EAAU,IAA6B,gDACxD,mDARA,IAUD,8BACQ,SAAiB,GAEvB,KAAK,IAAI,OAAO,WAAW,MAAM,OAAO,EAAQ,SAAW,CAAE,KAAM,GACnE,IAAM,EAAQ,KAAK,QAAQ,MAC3B,EAAM,UAAU,KAAK,GACrB,EAAM,kBAAkB,KAAK,EAC/B,GAAC,sCAEO,SAAyB,GAC/B,EAAU,SAAQ,SAAC,GACjB,EAAK,SAAS,WAAa,GAC3B,EAAK,SAAS,UACb,EAAK,SAAkC,SAC1C,GACF,GAAC,0BAEO,SAAa,GACnB,IAAM,EAAiB,KAAK,QAAQ,oBACpC,OAAO,EAAU,KAAI,SAAC,GACpB,IAAM,EAAW,EAAK,SACtB,OAAO,IAAI,KAAoB,CAC7B,MAAO,EAAS,MAChB,YAAkC,IAArB,EAAS,QACtB,QAAS,EAAS,QAClB,KAAM,EACN,kBAEJ,GACF,GAAC,wEAEO,WAAgB,GAAW,qGACZ,KAAK,KAAK,GAAI,OAIyC,OAJtE,EAAM,QACL,mBAED,EAAkD,IAAvC,EAAO,SAAS,GAAG,SAAS,OACvC,EAAS,EAAW,EAAO,SAAS,GAAG,SAAW,CAAC,EAAO,SAAS,IAAG,kBACrE,GAAgB,gDACxB,mDATA,IASA,yBAEO,SAAY,GAElB,IAAM,IACJ,EAAO,QAAU,IAEb,EAAO,GAAG,SAAS,WAAW,SAAS,QACvC,EAAO,GAAG,SAAS,WAAW,SAAS,MACvC,EAAW,IAAI,IASrB,OARI,GACF,KAAK,6BAA6B,EAAU,GAC5C,KAAK,wBAAwB,EAAQ,KAErC,KAAK,wBAAwB,EAAU,GACvC,KAAK,mBAAmB,EAAQ,IAElC,KAAK,YAAY,EAAQ,GAClB,CACT,GAAC,qCAEO,SAAwB,EAA0B,GAExD,EAAS,aAAa,YAAa,EAAO,GAAG,SAAS,WAAW,YACjE,EAAS,aAAa,WAAY,EAAO,GAAG,SAAS,WAAW,UAChE,EAAS,aAAa,SAAU,EAAO,GAAG,SAAS,WAAW,OAChE,GAAC,0CAEO,SAA6B,EAA0B,GAG7D,IAFA,IAAI,EAAkB,EAClB,EAAmB,EACd,EAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CACtC,IACM,EADO,EAAO,GACI,SAAS,WAEjC,GAAmB,EAAW,WAAW,MAAM,OAC/C,GAAoB,EAAW,SAAS,MAAM,MAC/C,CAED,IAAM,EAAiB,IAAI,YAAY,GACjC,EAAgB,IAAI,aAAa,GACjC,EAAc,IAAI,aAAa,GAErC,KAAK,UAAU,EAAQ,aAAc,GACrC,KAAK,UAAU,EAAQ,WAAY,GACnC,KAAK,UAAU,EAAQ,SAAU,GAEjC,EAAS,aAAa,YAAa,IAAI,IAAgB,EAAgB,IACvE,EAAS,aAAa,WAAY,IAAI,IAAgB,EAAe,IACrE,EAAS,aAAa,SAAU,IAAI,IAAgB,EAAa,GACnE,GAAC,uBAEO,SAAU,EAAgB,EAAa,GAE7C,IADA,IAAI,EAAS,EACJ,EAAI,EAAG,EAAI,EAAO,OAAQ,IAAK,CACtC,IAAM,EAAO,EAAO,GACpB,EAAI,IAAI,EAAK,SAAS,WAAW,GAAK,MAAO,GAC7C,GAAU,EAAK,SAAS,WAAW,GAAK,MAAM,MAC/C,CACH,GAAC,gCAEO,SAAmB,EAAgB,GAOzC,IANA,IAAM,EAAU,EAAO,KAAI,SAAC,GAC1B,IAAM,EAAQ,EAAK,SAAS,MAC5B,OAAO,EAAQ,EAAM,MAAQ,EAC/B,IAEM,EAAa,GACV,EAAI,EAAG,EAAI,EAAQ,OAAQ,IAClC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,GAAG,OAAQ,IACrC,EAAW,KAAK,EAAQ,GAAG,IAG/B,EAAS,SAAS,EACpB,GAAC,yBA6BO,SAAY,EAAgB,GAClC,IAAM,EAAe,EAAO,KAAI,SAAC,GAC/B,IAAM,EAAQ,EAAK,SAAS,MAC5B,OAAO,EAAQ,EAAM,MAAQ,CAC/B,IACI,EAAQ,EACR,EAAgB,EACpB,EAAS,OAAS,EAAa,KAAI,SAAC,GAClC,IAAM,EAAS,CAAE,QAAO,QAAO,iBAG/B,OAFA,IACA,GAAS,EACF,CACT,GACF,KAAC,EA/lBsB,CAAQ,G,oBCtBpB,GAAa,WAmBxB,WAAY,EAAqB,GAAe,oBAlBhD,aAAoC,GAGpC,kBAAe,GAEf,cAAW,IACX,aAAU,EACV,gBAAa,IACb,YAAS,IACT,gBAAa,SACb,kBAAe,EAEP,kBAAe,IAAI,KAAkB,CAAE,SAAS,IAChD,mBAAgB,IAAI,KAM1B,KAAK,QAAU,EACf,KAAK,IAAM,EACX,KAAK,yBACP,CAoPC,OApPA,oCAED,WAAO,WACa,OAAO,KAAK,KAAK,SACzB,SAAQ,SAAC,GAAQ,OAAK,EAAK,aAAa,EAAS,IAC1D,KAAK,QAAkB,KACxB,KAAK,aAAa,UACjB,KAAK,aAAuB,KAC7B,KAAK,cAAc,UAClB,KAAK,cAAwB,KAC7B,KAAK,QAAkB,KACvB,KAAK,IAAc,IACtB,GAAC,2EAED,WAAmB,GAAe,iFACqD,GAA/E,EAAQ,KAAK,QAAQ,MAAM,UAAU,MAAK,SAAC,GAAK,OAAK,EAAM,UAAY,CAAO,IAC1E,sBAAQ,IAAI,MAAM,sCAAqC,uBAC3D,KAAK,mBAAmB,EAAK,UAAK,EAAM,UAAU,gDACzD,mDANA,IAMA,gCAED,SAAmB,GAA4B,IAAf,EAAE,uDAAG,EAAM,KACzC,GAAI,KAAK,QAAQ,GAAK,MAAM,IAAI,MAAK,4CAAsC,IAC3E,MAAyB,KAAK,iBAAiB,GAAvC,EAAI,EAAJ,KAAM,EAAM,EAAN,OACR,EAAQ,KAAK,QAAQ,WACrB,EAAS,KAAK,aAAa,EAAI,GACrC,KAAK,iBAAiB,EAAO,EAAQ,EAAO,GAC5C,KAAK,aAAa,EAAQ,GAC1B,KAAK,WAAW,EAAO,EAAQ,GAC/B,KAAK,QAAQ,SAAS,eAAe,cAAc,IAAI,EAAO,KAChE,GAAC,0BAED,SAAa,GACX,IAAM,EAAS,KAAK,QAAQ,GAE5B,UADO,KAAK,QAAQ,IACf,EAAQ,MAAM,IAAI,MAAK,4BAAsB,EAAE,gBACpD,EAAuB,EAAO,MAC9B,EAAuB,EAAO,WAC9B,EAAO,GAAG,UACV,EAAO,OAAO,SAChB,GAAC,0BAEO,SAAa,EAAuB,GAC1C,IAAM,EAAgB,IAAI,KAAc,EAAK,EAAG,EAAK,GAAG,QAAQ,KAAK,GAAK,GAC1E,KAAK,gBAAgB,EAAe,GACpC,KAAK,gBAAgB,EAAe,EAEtC,GAAC,8BAEO,SAAiB,EAAa,EAAgB,EAAc,GAClE,KAAK,eAAe,EAAO,EAAQ,EAAO,GAC1C,KAAK,wBAAwB,GAC7B,KAAK,iBAAiB,EACxB,GAAC,wBAEO,SAAW,EAAa,EAAgB,GAC9C,IAAM,EAAkC,OAAjB,EAAM,aAAoC,IAAjB,EAAM,OACjD,GAAgB,EAAM,IAAI,GAG/B,IAFA,IAAM,EAAW,EAAM,SAAS,QAAO,SAAC,GAAG,OAAK,IAAQ,GAAS,IAAQ,EAAO,IAAI,IAE3E,EAAI,EAAS,OAAS,EAAG,GAAK,EAAG,IACxC,EAAM,OAAO,EAAS,IAIxB,IAAM,EAAoB,EAAM,WAChC,EAAM,WAAa,KAGnB,EAAM,iBAAmB,KAAK,cAG9B,IAAM,EAAW,KAAK,QAAQ,cAC9B,EAAS,gBAAgB,EAAO,IAChC,EAAS,OAAO,EAAO,EAAO,QAG9B,EAAM,iBAAmB,KAEzB,KAAK,WAAW,EAAQ,KAAK,QAG7B,KAAK,WAAW,EAAsB,GAAd,KAAK,QAG7B,EAAS,gBAAgB,MACzB,EAAM,WAAa,EAEnB,IAAK,IAAI,EAAI,EAAS,OAAS,EAAG,GAAK,EAAG,IACxC,EAAM,IAAI,EAAS,IAGhB,GAAgB,EAAM,kBAC7B,GAAC,8BAEO,SAAiB,GACvB,EAAO,OAAO,SAAS,EAAI,KAAK,GAAK,EACrC,EAAO,KAAK,IAAI,EAAO,OACzB,GAAC,qCAEO,SAAwB,GAC9B,EAAO,GAAG,QAAQ,iBAAkB,EACpC,EAAO,OAAO,QAAQ,iBAAkB,CAC1C,GAAC,4BAEO,SAAe,EAAa,EAAgB,EAAc,GAChE,IAAM,EAAc,KAAK,qBAAqB,GAC9C,EAAO,KAAK,SAAS,IAAI,EAAO,EAAG,EAAc,KAAK,aAAc,EAAO,GAC3E,EAAM,IAAI,EAAO,KACnB,GAeA,6BAEQ,SAAgB,EAAgB,GACtC,IAAM,EAAgB,KAAK,oBAAoB,GACzC,EAAQ,IAAI,KAAK,EAAe,GAEtC,EAAM,YAAc,EACpB,EAAO,KAAK,IAAI,GAEhB,EAAM,MAAM,GAAK,CACnB,GAAC,6BAEO,SAAgB,EAAgB,GACtC,EAAO,UAAU,SAAW,EAC5B,EAAO,UAAU,SAAU,EAC3B,EAAO,KAAK,IAAI,EAAO,UACzB,GAAC,iCAEO,SAAoB,GAC1B,OAAO,IAAI,KAAkB,CAC3B,IAAK,EAAO,GAAG,QACf,QAAS,KAAK,QACd,aAAa,EACb,YAAY,EACZ,eAAgB,KAAK,QAAQ,qBAEjC,GAEA,qCACQ,WAAuB,WAC7B,KAAK,cAAc,WAAY,EAC/B,KAAK,cAAc,YAAa,EAGhC,KAAK,cAAc,SAAS,SAAW,CAAE,MAAO,KAAK,UACrD,KAAK,cAAc,gBAAkB,SAAC,GACpC,EAAO,SAAS,SAAW,EAAK,cAAc,SAAS,SACvD,EAAO,eAAiB,6DAEtB,EAAO,eAAe,QAPR,4DACA,wEAMqC,eAEvD,CACF,GAAC,0BAEO,SAAa,EAAY,GAQ/B,OAPA,KAAK,QAAQ,GAAM,CACjB,KAAM,IAAI,IACV,GAAI,IAAI,KAAkB,KAAK,WAAY,KAAK,YAChD,OAAQ,IAAI,KAAkB,KAAK,WAAY,KAAK,YACpD,UAAW,IAAI,KACf,OAAQ,KAAK,aAAa,IAErB,KAAK,QAAQ,EACtB,GAAC,0BAEO,SAAa,GACnB,OAAO,IAAI,MACR,EAAK,EAAI,EACV,EAAK,EAAI,EACT,EAAK,EAAI,GACR,EAAK,EAAI,EACV,EACA,KAAK,aAET,GAAC,8BAEO,SAAiB,GACvB,IAAM,EAAW,EAAM,SAEvB,GADA,EAAS,qBACL,EAAS,YAAa,CACxB,IAAM,EAAO,IAAI,KACjB,EAAS,YAAY,QAAQ,GAC7B,EAAK,GAAK,IACV,EAAK,GAAK,IACV,IAAM,EAAS,IAAI,KAEnB,OADA,EAAS,YAAY,UAAU,GACxB,CAAE,OAAM,SAChB,CACD,MAAM,IAAI,MAAK,0DAAoD,EAAM,MAC3E,GAAC,kCAEO,SAAqB,GAI3B,IAHA,IAAM,EAAU,EAAM,SAAS,MACzB,EAAW,EAAM,SAAS,WAAW,SACvC,EAAc,OAAO,UAChB,EAAI,EAAG,GAAK,EAAQ,MAAO,IAAK,CACvC,IAAM,EAAU,EAAS,KAAK,EAAQ,MAAM,IACxC,EAAU,IAAa,EAAc,EAC1C,CACD,OAAO,CACT,GAAC,wBAEO,SAAW,EAAgB,GACjC,IAAM,EAAyB,IAAI,KAAe,MAClD,EAAuB,WAAY,EAEnC,IAAM,EAAuB,IAAI,KAAe,MAChD,EAAqB,WAAY,EAEjC,EAAO,UAAU,SAAU,EAG3B,EAAO,UAAU,SAAW,EAE5B,EAAO,UAAU,SAAS,SAAS,SAAS,MAAQ,EAAO,GAAG,QAC9D,EAAuB,SAAS,EAAE,MAAkB,EAAT,EAAc,IAEzD,IAAM,EAAW,KAAK,QAAQ,cAC9B,EAAS,gBAAgB,EAAO,QAChC,EAAS,OAAO,EAAO,UAAW,EAAO,QAGzC,EAAO,UAAU,SAAW,EAE5B,EAAO,UAAU,SAAS,SAAS,SAAS,MAAQ,EAAO,OAAO,QAClE,EAAqB,SAAS,EAAE,MAAkB,EAAT,EAAc,IAEvD,EAAS,gBAAgB,EAAO,IAChC,EAAS,OAAO,EAAO,UAAW,EAAO,QAEzC,EAAO,UAAU,SAAU,CAC7B,KAAC,EA3QuB,GC5Bb,GAAS,WAAtB,iCACE,cAAkC,GAE1B,aAAe,IAwFzB,CADG,OACF,oCAtFC,WACG,KAAK,SAAmB,IAC3B,GAAC,6BAED,SAAgB,GACd,KAAK,QAAU,CACjB,GAAC,wBAED,SAAW,GAAqC,IAAhB,EAAK,uDAAG,SACtC,GAAqB,OAAjBV,KAAK,QACP,MAAM,IAAI,MAAM,4DAElB,KAAK,SAAS,GAAe,IAAI,KAAK,QACtC,KAAK,SAAS,GAAa,SAAS,EACtC,GAAC,4BAED,SACE,EACA,EACA,EACA,EACA,GACoB,IAApB,EAAK,uDAAG,aAER,GAAK,EAAK,MAAV,CACA,IAAM,EAAQ,EAAK,MAAM,MAAM,MAAM,GACrC,GAAK,EAAL,CACA,IAAM,EAAc,EAAM,kBAAkB,WAAW,SAAS,MAChE,KAAK,KAAK,EAAaiB,EAAa,EAAc,EAAO,EAF7C,CAFK,CAKnB,GAAC,kBAED,SACE,EACA,EACA,EACA,GACoB,IAApB,EAAK,uDAAG,aAEF,EAAiB,KAAK,SAAS,GAChC,EAAe,OAAO,IACzB,EAAe,SAAS,EAAc,EAAO,GAE/C,EAAe,eAAe,GAE9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,OAAS,EAAG,GAAK,EAAG,CAClD,IAAM,EAAQ,CAAC,EAAY,IAAK,EAAY,EAAI,IAC1C,EAAM,CAAC,EAAY,EAAI,IAAK,EAAY,EAAI,IAEjC,IAAb,EAAM,IAAyB,IAAb,EAAM,IAAuB,IAAX,EAAI,IAAuB,IAAX,EAAI,IAC5D,EAAe,SAAS,EAAM,GAAI,EAAM,GAAI,EAAI,GAAI,EAAI,GACzD,CACH,GAAC,uBAED,SACE,EACA,EACA,EACA,GACoB,IAApB,EAAK,uDAAG,aAEF,EAAiB,KAAK,SAAS,GAChC,EAAe,OAAO,IACzB,EAAe,SAAS,EAAc,EAAO,GAE/C,EAAe,eAAe,GAC9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAEnC,IADA,IAAM,EAAU,EAAS,GAChB,EAAI,EAAG,EAAI,EAAQ,OAAS,EAAG,GAAK,EAAG,CAC9C,IAAM,EAAQ,CAAC,EAAQ,GAAI,EAAQ,EAAI,IACjC,EAAM,CAAC,EAAQ,EAAI,GAAI,EAAQ,EAAI,IACzC,EAAe,aAAa,CAAC,EAAO,GACrC,CAEL,GAAC,uBAED,SAAU,GACR,IAAM,EAAiB,KAAK,SAAS,GACrC,IAAK,EAAgB,MAAM,IAAI,MAAK,uCAAiC,IACrE,IAAM,EAAa,EAAe,cAClC,OAAO,IAAI,KAAK,CAAC,GAAa,CAAE,KAAM,mBAMxC,KAAC,EA1FmB,GCCT,GAAS,WAAtB,iCACE,eAA+D,GACvD,eAAY,wCA2FtB,CADG,OACF,oCAzFC,WACG,KAAK,UAAoB,IAC5B,GAAC,0BAED,SAAa,EAAY,GACN,KAAK,YAAY,GACzB,QAAQ,aAAa,EAChC,GAAC,sBAED,SAAS,EAAY,GACF,KAAK,YAAY,GACzB,QAAQ,aAAa,EAAM,EAAG,EAAM,EAAG,EAAM,EACxD,GAAC,sBAED,SAAS,EAAY,GACF,KAAK,YAAY,GACzB,MAAQ,CACnB,GAAC,yBAED,SAAY,EAAY,GAA6B,IAAT,EAAK,uDAAG,EAClD,KAAK,UAAU,GAAM,CAAE,QAAS,EAAe,QACjD,GAAC,sBAED,SAAS,EAAY,EAAoB,GACvC,IAAM,EAAS,EAAK,IAAI,EAAI,EAAK,IAAI,EAC/B,EAAQ,EAAK,IAAI,EAAI,EAAK,IAAI,EAE9B,EAAc,KAAK,IAAI,EAAY,GACnC,EAAY,KAAK,IAAI,EAAQ,GAEnC,OAAkB,IAAd,GAAmC,IAAhB,EAA0B,EAE1C,EAAc,CACvB,GAAC,4BAED,SAAe,EAAY,EAAgB,EAAmB,GAC5D,GAAK,EAAK,MAAV,CACA,IAAM,EAAQ,EAAK,MAAM,MAAM,MAAM,GACrC,GAAK,EAAL,CACA,EAAM,KAAK,SAAS,qBACpB,QAAQ,IAAI,GACZ,IAAM,GAAO,IAAI,KAAO,cAAc,EAAM,MACtC,EAAc,EAAM,kBAAkB,WAAW,SAAS,MAChE,KAAK,KAAK,EAAI,EAAa,GACvB,GACF,KAAK,UAAU,EAAI,EAAM,EAPf,CAFK,CAWnB,GAAC,kBAED,SAAK,EAAY,EAAgC,GAM/C,IALA,IAAM,EAAW,KAAK,YAAY,GAC5B,EAAQ,KAAK,SAAS,EAAK,IAAK,KAChC,EAAU,KAAK,IAAI,EAAI,IAAI,GAAK,EAChC,EAAU,KAAK,IAAI,EAAI,IAAI,GAAK,EAE7B,EAAI,EAAG,EAAI,EAAY,OAAS,EAAG,GAAK,EAAG,CAClD,IAAM,EAAQ,EAAE,EAAY,GAAK,GAAW,GAAQ,EAAY,EAAI,GAAK,GAAW,GAC9E,EAAM,EAAE,EAAY,EAAI,GAAK,GAAW,GAAQ,EAAY,EAAI,GAAK,GAAW,GAErE,IAAb,EAAM,IAAyB,IAAb,EAAM,IAAuB,IAAX,EAAI,IAAuB,IAAX,EAAI,IAC5D,EAAS,QAAQ,KAAK,EAAM,GAAI,EAAM,GAAI,EAAI,GAAI,EAAI,GAAI,IAC3D,CACH,GAAC,uBAED,SAAU,EAAY,EAA8B,GAClD,IAAM,EAAW,KAAK,YAAY,GAC5B,EAAQ,KAAK,SAAS,EAAK,IAAK,KAChC,EAAU,KAAK,IAAI,EAAI,IAAI,GAAK,EAChC,EAAU,KAAK,IAAI,EAAI,IAAI,GAAK,EAErB,EAAc,mBACtB,SAAQ,SAAC,GAChB,EAAS,QAAQ,KACf,EAAQ,KAAK,QAAQ,aACpB,EAAQ,OAAO,EAAI,GAAW,GAC9B,EAAQ,OAAO,EAAI,GAAW,EAEnC,GACF,GAAC,uBAED,SAAU,EAAY,GACH,KAAK,YAAY,GACzB,QAAQ,KAAK,EACxB,GAAC,yBAEO,SAAY,GAClB,IAAK,KAAK,UAAU,GAAK,MAAM,IAAI,MAAM,KAAK,WAC9C,OAAO,KAAK,UAAU,EACxB,KAAC,EA5FmB,G,8BCChB,GAAY,IAAI,KAAQ,EAAG,EAAG,GAC9B,GAAU,MAGH,GAAiB,WAC5B,IAAM,EAAM,IAAI,KACV,EAAM,IAAI,KACV,EAAU,IAAI,KACd,EAAY,IAAI,KAEtB,OAAO,SAAuB,EAA0B,GAgBtD,IAhBgG,IAAlB,EAAc,uDAAG,EACzF,EAAQ,GAGR,EAAY,KAAK,IAAI,GADH,GAElB,EAAe,KAAK,IAAI,KAAU,QAAU,GAE5C,EAAY,EAAS,WACrB,EAAe,EAAS,aAAa,YACrC,EAAa,EAAY,EAAU,MAAQ,EAAa,MAExD,EAAW,CAAC,EAAG,EAAG,GAClB,EAA+B,CAAC,IAAK,IAAK,KAC1C,EAAS,IAAI,MAAM,GAEnB,EAAgB,GACb,EAAI,EAAG,EAAI,EAAY,GAAK,EAAG,CAClC,GACF,EAAS,GAAK,EAAU,KAAK,GAC7B,EAAS,GAAK,EAAU,KAAK,EAAI,GACjC,EAAS,GAAK,EAAU,KAAK,EAAI,KAEjC,EAAS,GAAK,EACd,EAAS,GAAK,EAAI,EAClB,EAAS,GAAK,EAAI,GAGpB,IAAQ,EAAY,EAAZ,EAAG,EAAS,EAAT,EAAG,EAAM,EAAN,EAkBd,GAjBA,EAAE,oBAAoB,EAAc,EAAS,IAC7C,EAAE,oBAAoB,EAAc,EAAS,IAC7C,EAAE,oBAAoB,EAAc,EAAS,IAC7C,EAAU,UAAU,GAGpB,EAAO,GAAE,UAAM,KAAK,MAAM,EAAE,EAAI,GAAU,YAAI,KAAK,MAAM,EAAE,EAAI,GAAU,YAAI,KAAK,MAChF,EAAE,EAAI,IAER,EAAO,GAAE,UAAM,KAAK,MAAM,EAAE,EAAI,GAAU,YAAI,KAAK,MAAM,EAAE,EAAI,GAAU,YAAI,KAAK,MAChF,EAAE,EAAI,IAER,EAAO,GAAE,UAAM,KAAK,MAAM,EAAE,EAAI,GAAU,YAAI,KAAK,MAAM,EAAE,EAAI,GAAU,YAAI,KAAK,MAChF,EAAE,EAAI,IAIJ,EAAO,KAAO,EAAO,IAAM,EAAO,KAAO,EAAO,IAAM,EAAO,KAAO,EAAO,GAK/E,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CAE1B,IAAM,GAAS,EAAI,GAAK,EAClB,EAAW,EAAO,GAClB,EAAW,EAAO,GAClB,EAAK,EAAU,EAAS,IACxB,EAAK,EAAU,EAAS,IAExB,EAAI,UAAM,EAAQ,YAAI,GACtB,EAAW,UAAM,EAAQ,YAAI,GAEnC,GAAI,KAAe,GAAY,EAAS,GAAc,CAGpD,IAAM,EAAc,EAAS,GAAa,OACpC,EAAiB,EAAQ,IAAI,IAAgB,EAC7C,EACJ,KAAK,KAAK,EAAc,IAAI,MAAc,KAAK,KAAK,EAAc,IAAI,IACxE,GAAI,GAAkB,EAAqB,CACzC,IAAM,EAAO,IAAI,IACjB,EAAK,MAAM,KAAK,GAChB,EAAK,IAAI,KAAK,GACd,EAAM,KAAK,EACZ,CAED,EAAS,GAAe,I,MACb,KAAQ,IAEnB,EAAS,GAAQ,CACf,OAAQ,EAAS,GACjB,OAAQ,EAAS,GACjB,OAAQ,EAAQ,SAGrB,CACF,CAGD,IAAK,IAAM,KAAO,EAChB,GAAI,EAAS,GAAM,CACjB,MAA2B,EAAS,GAA5B,EAAM,EAAN,OAAQ,EAAM,EAAN,OAChB,EAAI,oBAAoB,EAAc,GACtC,EAAI,oBAAoB,EAAc,GAEtC,IAAM,EAAO,IAAI,IACjB,EAAK,MAAM,KAAK,GAChB,EAAK,IAAI,KAAK,GACd,EAAM,KAAK,EACZ,CAGH,OAAO,CACT,CACF,CA7G8B,GAgHjB,GAAsB,WACjC,IAAM,EAAQ,IAAI,KACZ,EAAQ,IAAI,KACZ,EAAW,IAAI,KACf,EAAc,IAAI,KAClB,EAAS,IAAI,IACb,EAAS,IAAI,IACb,EAAY,IAAI,IAEtB,OAAO,SAA4B,EAAa,GAAuC,IAAxB,EAAU,uDAAG,IAAI,IAM9E,GALI,EAAS,aACX,EAAS,cAIP,EAAS,WAAa,GACxB,OAAO,KAGT,IAAQ,EAAkB,EAAlB,OAAQ,EAAU,EAAV,MAOhB,GALA,EAAO,KAAK,GACZ,EAAO,MAAM,KAGmC,IAA5B,EAAM,OAAO,IAAI,IAEnC,OAAO,KAIT,EAAM,MAAM,EAAM,QAAQ,YAC1B,EAAY,8BAA8B,EAAO,EAAO,OAIxD,IADA,IAAI,EAAiB,EACZ,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAM,EAAK,EAAO,GACZ,EAAK,GAAQ,EAAI,GAAK,GAI5B,GAFA,EAAU,MAAM,KAAK,GACrB,EAAU,IAAI,KAAK,GAE8B,IAA/C,EAAY,gBAAgB,EAAU,MACW,IAAjD,EAAY,gBAAgB,EAAU,OACtC,CAEA,EAAO,KAAK,GACZ,EAAiB,EACjB,K,CACK,GACL,EAAY,cAAc,EAA8B,IAAnB,EAAuB,EAAO,MAAQ,EAAO,KAClF,CAQA,GAAyB,KANF,IAAnB,EACE,EAAO,MAEP,EAAO,KAGP,WAAW,GACf,SAIF,GAAuB,MADvB,EAEE,KAEH,CACF,CAED,GAAuB,IAAnB,EAAsB,CAMxB,GAJA,EAAO,MAAM,GAAO,YACpB,EAAO,MAAM,GAAO,YAGhB,EAAM,IAAI,GAAS,EAAG,CACxB,IAAM,EAAM,EAAO,MACnB,EAAO,MAAQ,EAAO,IACtB,EAAO,IAAM,CACd,CAGD,IAAM,EAAK,EAAO,MAAM,IAAI,GACtB,EAAK,EAAO,IAAI,IAAI,GACpB,EAAK,EAAO,MAAM,IAAI,GACtB,EAAK,EAAO,IAAI,IAAI,GAI1B,OAAI,IAAO,GAAM,IAAO,GAHL,EAAK,IACL,EAAK,EAGf,MAIT,EAAS,WAAW,EAAO,MAAO,EAAO,OACrCC,EAAS,IAAI,GAAS,EACxB,EAAW,MAAM,KAAK,EAAO,OAE7B,EAAW,MAAM,KAAK,EAAO,OAG/B,EAAS,WAAW,EAAO,IAAK,EAAO,KACnC,EAAS,IAAI,GAAS,EACxB,EAAW,IAAI,KAAK,EAAO,KAE3B,EAAW,IAAI,KAAK,EAAO,KAGtB,EACR,CAED,OAAO,IACT,CACF,CAnHmC,GAsHtB,GAAoB,WAC/B,IAAM,EAAW,IAAI,IACrB,OAAO,SAA0B,EAAc,GAAkC,IAAlB,yDAAc,KAC3E,EAAS,MAAM,KAAK,GACpB,EAAS,IAAI,KAAK,GAElB,EAAS,MAAM,GAAK,IACpB,EAAS,IAAI,GAAK,IAElB,EAAM,cAAc,EAAU,EAChC,CACF,CAXiC,GAcpB,GAAoB,WAC/B,IAAM,EAAM,IAAI,KACV,EAAM,IAAI,KAEhB,OAAO,SAA0B,EAAc,GAI7C,OAHA,EAAI,YAAY,EAAK,MAAO,EAAK,IAAK,IACtC,GAAiB,EAAO,EAAK,GAEtB,EAAI,EAAI,EAAI,CACrB,CACF,CAViC,GAYpB,GAA8B,WACzC,IAAM,EAAW,IAAI,KACf,EAAY,IAAI,KAAQ,EAAG,EAAG,GACpC,OAAO,SAAoC,GAEzC,OADA,EAAK,MAAM,GAAU,YACd,KAAK,IAAI,EAAS,IAAI,KAAe,EAAM,EACpD,CACF,CAP2C,GAUrC,SAAU,GAA+B,GAK7C,OAJI,EAAI,aACN,EAAI,SAGC,KAAK,IAAI,EAAI,MAAM,OAAO,IAAI,MAAe,EACtD,CAGM,SAAU,GAAmB,EAAU,GAI3C,IAFA,IAAM,EAAY,EAAI,OAClB,EAAU,EACL,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAQ,EAAe,EAAf,MAAO,EAAQ,EAAR,IACT,EAAK,EAAU,GACjB,EAAM,kBAAkB,IAAO,IACjC,IAGE,EAAI,kBAAkB,IAAO,IAC/B,GAEH,CAED,OAAO,GAAW,CACpB,CAIO,IAAM,GAAwB,WACnC,IAAM,EAAU,IAAI,IACd,EAAW,IAAI,KACf,EAAY,IAAI,KAChB,EAAY,IAAI,KAChB,EAAQ,IAAI,IACZ,EAAO,IAAI,KAEjB,OAAO,SAA8B,EAAU,EAAa,GAe1D,GAdA,EAAM,KAAK,GACX,EAAK,KAAK,GAGV,EAAM,MAAM,EAAI,EAChB,EAAM,IAAI,EAAI,EACd,EAAK,EAAE,EAAI,EACX,EAAK,EAAE,EAAI,EACX,EAAK,EAAE,EAAI,EACX,EAAK,aAAc,EACnB,EAAK,SAID,GAAmB,EAAO,EAAM,GAAU,CAC5C,EAAM,MAAM,GACZ,EAAU,WAAW,EAAQ,MAAO,EAAM,OAC1C,EAAU,WAAW,EAAQ,IAAK,EAAM,OAExC,IAAI,EAAK,EAAU,SAAW,EAAS,SACnC,EAAK,EAAU,SAAW,EAAS,SASvC,OAPA,EAAK,KAAK,IAAI,KAAK,IAAI,EAAI,GAAI,GAC/B,EAAK,KAAK,IAAI,KAAK,IAAI,EAAI,GAAI,GAEzB,KAAK,IAAI,EAAK,IAAO,IACzB,EAAe,KAAK,IAAI,aAAa,CAAC,EAAI,MAGrC,CACR,CAED,OAAO,CACT,CACF,CA3CqC,GA8CxB,GAAyB,WACpC,IAAM,EAAiB,IAAI,KACrB,EAAY,IAAI,KAChB,EAAe,IAAI,KACnB,EAAc,IAAI,KAExB,OAAO,SAA+B,EAAU,EAAW,GACrD,EAAI,aACN,EAAI,SAGN,EAAW,KAAK,GAGhB,IAAQ,EAAU,EAAV,MACR,GAAI,GAA+B,GACjC,OAAO,EAOT,GAHA,EAAK,MAAM,GAE8C,IAArC,EAAM,OAAO,IAAI,GAEnC,OAAO,EAKT,GAD0B,EAAM,cAAc,EAAM,GAC7B,CACrB,IAGI,EAHI,EAAe,EAAf,MAAO,EAAQ,EAAR,IAIX,GAAU,EAmBd,OAlBI,EAAM,WAAW,GAAa,EAAI,WAAW,GAC/C,EAAY,GAEZ,EAAY,EACZ,GAAU,GAIZ,EAAa,YAAY,EAAW,EAAW,IAC/C,GAAiB,EAAI,MAAO,EAAc,GAGtC,EAAY,EAAI,EAAa,EAC3B,EAAS,EAAI,KAAK,GACjB,EAAM,KAAK,GACP,EAAS,EAAM,KAAK,GAC1B,EAAI,KAAK,IAEP,CACR,CAED,OAAO,CACT,CACF,CA1DsC,GA6DzB,GAAmB,WAC9B,IAAM,EAAU,IAAI,IAEpB,OAAO,SAAyB,EAAa,GAAiC,IAAlB,yDAAgB,GAC1E,GAAqB,GAGrB,IADA,IAAM,EAAc,CAAC,CAAC,EAAG,IAChB,EAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAAK,CAC/C,IAAM,EAAa,EAAY,GACzB,EAAU,EAAS,GACzB,EAAW,GAAK,EAAQ,GACxB,EAAY,KAAK,IAAI,aAAa,CAAC,EAAQ,GAAI,IAChD,CAED,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,OAAQ,EAAI,EAAG,IAAK,CAClD,IAAQ,EAAe,EAAf,MAAO,EAAQ,EAAR,IACf,EAAQ,MAAM,YAAY,EAAO,EAAK,EAAY,GAAG,IACrD,EAAQ,IAAI,YAAY,EAAO,EAAK,EAAY,GAAG,IAEnD,EAAO,KAEL,IAAI,aAAa,CACf,EAAQ,MAAM,EACd,EAAQ,MAAM,EACd,EAAQ,MAAM,EAEd,EAAQ,IAAI,EACZ,EAAQ,IAAI,EACZ,EAAQ,IAAI,IAGjB,CAED,OAAO,CACT,CACF,CAnCgC,GAsC1B,SAAU,GAAgB,GAG9B,IAHyD,IAAb,yDAAS,KAC/C,EAAY,IAAI,aAA4B,EAAf,EAAM,QACrC,EAAI,EACC,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAAK,CAC5C,IAAM,EAAO,EAAM,GACnB,EAAU,KAAO,EAAK,GACtB,EAAU,KAAa,OAAN,EAAa,EAAK,GAAK,EACxC,EAAU,KAAO,EAAK,GACtB,EAAU,KAAO,EAAK,GACtB,EAAU,KAAa,OAAN,EAAa,EAAK,GAAK,EACxC,EAAU,KAAO,EAAK,EACvB,CAED,IAAM,EAAW,IAAI,IACf,EAAa,IAAI,IAAgB,EAAW,GAAG,GAErD,OADA,EAAS,aAAa,WAAY,GAC3B,CACT,CAGM,SAAU,GAAqB,GACnC,EAAS,MAAK,SAAC,EAAG,GAChB,OAAO,EAAE,GAAK,EAAE,EAClB,IAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,IAAM,EAAU,EAAS,GACnB,EAAc,EAAS,EAAI,GAE7B,EAAQ,IAAM,EAAY,KAC5B,EAAY,GAAK,KAAK,IAAI,EAAY,GAAI,EAAQ,IAClD,EAAS,OAAO,EAAG,GACnB,IAEH,CACH,CChdA,ICNY,GDMC,GAAa,WAaxB,WAAoB,GAAmB,oBAAnB,eAZpB,YAAS,CACP,aAAc,QACd,cAAc,EACd,mBAAmB,EACnB,QAAQ,EACR,WAAW,EACX,OAAQ,GACR,MAAO,QAGT,oBAAiC,EAES,CAgKzC,OAhK0C,oCAE3C,WACE,KAAK,eAAe,SAAQ,SAAC,GAC3B,EAAK,SAAS,UACV,MAAM,QAAQ,EAAK,UAAW,EAAK,SAAS,SAAQ,SAAC,GAAG,OAAK,EAAI,SAAS,IACzE,EAAK,SAAS,SACrB,IAEA,KAAK,eAAiB,EACxB,GAAC,2EAED,WAAmB,GAAW,qFAW5B,IAVM,EAAQ,KAAK,QAAQ,WAGrB,EAAa,IAAI,IACrB,IAAI,IACJ,IAAI,IAAwB,CAAE,MAAO,KAAK,OAAO,SAG/C,EAAY,KAAK,YAAY,EAAO,KAAK,OAAQ,EAAO,GAErD,GACO,EAAK,OACT,OACN,EAAO,MAI0B,OAArC,KAAK,eAAe,KAAK,GAAY,kBAE9B,GAAU,gDAClB,mDAvBA,IAuBA,6CAED,WAAa,EAAc,EAAa,EAAY,GAAe,yGASjE,IAAW,KARX,EAAM,OAAO,GAGP,EAAa,GACnB,EAAM,mBAAkB,GAAM,IAExB,EAAQ,EAAM,SAAS,SACvB,aAAa,EAAM,aACP,EAAM,WACV,aAAR,GACF,EAAM,gBAAgB,GAS1B,OANA,EAAW,KAAK,GACV,EAAiB,YAAsB,GAAY,GAEzD,EAAW,OAAS,EACpB,EAAM,eAAU,WAEX,QAKL,OAFM,EAAM,IAAI,KAAQ,QAAe,WAElC,QAWL,OARM,EAAQ,GAAc,EAAgB,IAAI,KAAc,EAAG,EAAG,GAAI,IAEpE,EAAO,WACT,EAAM,MAAK,SAAC,EAAG,GACb,OAAO,KAAK,IAAI,EAAE,MAAM,EAAG,EAAE,IAAI,GAAK,KAAK,IAAI,EAAE,MAAM,EAAG,EAAE,IAAI,EAClE,SACD,WAEI,QAEL,EAAM,IAAI,GAGJ,EAAoB,GACpB,EAAW,IAAI,IACf,EAAU,IAAI,KACd,EAAU,IAAI,KAAe,wHAGZ,GAAf,EAAO,EAAM,IACf,GAA2B,GAAK,4DAI9B,EAAc,KAAK,IAAI,EAAK,MAAM,EAAG,EAAK,IAAI,GAC9C,EAAkB,GACxB,EAAI,UAAU,CACZ,iBAAkB,SAAC,GACjB,OAAK,EAAO,SAKZ,EAAI,IAAI,EAAI,KAAK,IAAI,EAAa,EAAI,IAAI,GAC1C,EAAQ,OAAO,KAAK,EAAK,OACzB,EAAK,MAAM,EAAQ,WAAW,cAE1B,EAAI,cAAc,EAAQ,WAI1B,EAAQ,aAAa,EAAK,IACrB,EAAQ,OAAO,kBAAkB,GAAW,EAAK,aAI5D,EAEA,mBAAoB,SAAC,GAInB,GAFyB,KAAK,IAAI,EAAI,EAAE,EAAG,EAAI,EAAE,EAAG,EAAI,EAAE,GAEnC,EACrB,OAAO,EAIT,GAAI,GAA+B,GACjC,OAAO,EAIT,GAAI,GAAmB,EAAK,GAC1B,OAAO,EAKT,GAFA,GAAsB,EAAK,EAAM,GAE7B,GAAiB,EAAI,MAAO,GAC9B,OAAO,EAGT,GAAI,EAAS,WAAa,MACxB,OAAO,EAUT,GALI,GAAqB,EAAK,EAAM,IAClC,GAAqB,GAIC,IAApB,EAAS,OAAc,CACzB,mBAAiB,EAAS,EAAS,OAAS,GAAE,GAAvC,EAAE,KAAE,EAAE,KACb,OAAc,IAAP,GAAqB,IAAP,CACtB,CAED,OAAO,CACT,IAGF,GAAgB,EAAM,EAAU,GAAY,0CA1ErC,EAAI,EAAG,EAAI,EAAM,OAAM,aAAE,EAAI,GAAC,0IAAE,IAAG,wBA6E5C,EAAW,SAAS,UACpB,EAAW,SAAW,GAAgB,EAAY,GAAG,8CACtD,EA7KuB,G,UElBb,GAAgB,4CAkJ1B,OAlJ0B,0CAE3B,SAAc,GAIZ,IAFA,IAAI,EAAU,IACV,GAAe,EACV,EAAI,EAAG,EAAI,EAAO,OAAQ,EAAI,EAAG,IAAK,CAC7C,IAAM,EAAI,EAAO,GACb,EAAE,EAAIC,IACR,EAAc,EACd,EAAU,EAAE,EAEf,CAGD,IAAM,EAAK,EAAO,GAIlB,SAAS,EAAY,EAAY,EAAY,GAC3C,IAAM,GAAO,EAAE,EAAI,EAAE,IAAM,EAAE,EAAI,EAAE,IAAM,EAAE,EAAI,EAAE,IAAM,EAAE,EAAI,EAAE,GAE/D,OAAY,IAAR,EACK,EAIF,EAAM,EAAI,EAAI,CACvB,CAEA,SAAS,EAAO,EAAa,GAC3B,OAAQ,EAAG,EAAI,EAAG,IAAM,EAAG,EAAI,EAAG,IAAM,EAAG,EAAI,EAAG,IAAM,EAAG,EAAI,EAAG,EACpE,CAhBA,EAAO,GAAe,EAAO,GAC7B,EAAO,GAAK,EA8BZ,IAFA,IAAI,EAAI,EACF,GAJN,EAAS,EAAO,MARhB,SAAiB,EAAa,GAE5B,IAAM,EAAI,EAAY,EAAI,EAAI,GAC9B,OAAU,IAAN,EAAgB,EAAO,EAAI,IAAO,EAAO,EAAI,IAAO,EAAI,EAE/C,IAAN,GAAW,EAAI,CACxB,KAMiB,OACR,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,KAAO,EAAI,EAAI,GAAmD,IAA9C,EAAY,EAAI,EAAO,GAAI,EAAO,EAAI,KACxD,IAGF,EAAO,GAAK,EAAO,GACnB,GACD,CAGD,GAAI,EAAI,EAAG,OAAO,KAIlB,IADA,IAAM,EAAO,CAAC,EAAO,GAAI,EAAO,GAAI,EAAO,IAClC,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,KAAgF,IAAzE,EAAY,EAAK,EAAK,OAAS,GAAI,EAAK,EAAK,OAAS,GAAI,EAAO,KACtE,EAAK,MAGP,EAAK,KAAK,EAAO,GAClB,CAED,OAAO,CACT,GAAC,iCAED,SAAoB,EAAgB,EAAa,EAAwB,GACvE,IAAQ,EAAe,EAAf,MAAO,EAAQ,EAAR,IACT,EAAK,EAAM,EACX,EAAK,EAAM,EAEX,EAAK,EAAM,EACX,EAAK,EAAI,EAEf,GAAI,IAAO,EAAI,OAAO,EAEtB,GAAI,EAAK,GAAM,EAAK,EAAI,OAAO,EAC/B,GAAI,EAAK,GAAM,EAAK,EAAI,OAAO,EAE/B,IAAM,EAAK,EAAMC,EACX,EAAK,EAAI,EACf,GAAI,EAAK,GAAM,EAAK,EAAI,OAAO,EAC/B,GAAI,EAAK,GAAM,EAAK,EAGlB,OAAI,IAAO,GAAM,IAAkB,EAQrC,IAEM,EADK,EAAK,EAOV,EAAM,GAHA,EAAK,KALN,EAAK,IAMJ,EAAK,GAIjB,OAAI,KAAK,KAAK,KAAS,KAAK,KAAK,EAKnC,GAAC,qCAED,SAAwB,EAAgB,GAItC,IAHA,IAAI,EAAY,EACV,EAAW,EAAS,EAAS,OAAS,GACxC,EAAgB,EAAS,MAAM,EAAI,EAAS,IAAI,EAC3C,EAAI,EAAG,EAAI,EAAS,OAAQ,EAAI,EAAG,IAAK,CAC/C,IAAM,EAAO,EAAS,GAChB,EAAgB,EAAK,MAAM,EAAI,EAAK,IAAI,EAC1C,KAAK,oBAAoB,EAAO,EAAM,EAAe,IACvD,IAGF,EAAgB,CACjB,CAED,OAAO,CACT,GAEA,6BACA,SAAgB,EAAW,GACzB,SAAS,EAAI,EAAY,EAAY,GACnC,OAAQ,EAAE,EAAI,EAAE,IAAM,EAAE,EAAI,EAAE,IAAM,EAAE,EAAI,EAAE,IAAM,EAAE,EAAI,EAAE,EAC5D,CAEA,IAAM,EAAI,EAAG,MACP,EAAI,EAAG,IAEP,EAAI,EAAG,MACP,EAAI,EAAG,IAEb,OAAO,EAAI,EAAG,EAAG,KAAO,EAAI,EAAG,EAAG,IAAM,EAAI,EAAG,EAAG,KAAO,EAAI,EAAG,EAAG,EACrE,KAAC,EAlJ0B,GCEhB,GAAW,WAStB,WAAoB,EAAsC,GAAkB,oBAAxD,2BAAsC,qBAR1D,eAAY,IAAI,MAAM,GAAG,KAAK,GAAG,KAAI,kBAAM,IAAI,IAAS,IACxD,cAAW,IAAI,MAAM,IAAI,KAAK,GAAG,KAAI,kBAAM,IAAI,GAAO,IACtD,uBAA2B,GAC3B,UAAO,IAAI,GACX,kBAAc,EACd,oBAAgB,EAChB,mBAAgB,cAE+D,CA0L9E,OA1L+E,sCAEhF,SAAU,EAAY,GAAiB,WACrC,IAAK,EAAK,SAAS,WACjB,MAAM,IAAI,MAAM,mCAGlB,EAAK,SAAS,WAAW,UAAU,CACjC,iBAAkB,SAChB,EACA,EACA,EACA,GASA,IANA,IAAQ,EAAa,EAAb,IAAK,EAAQ,EAAR,IACT,EAAQ,EAER,EAAO,IACP,GAAQ,IACR,EAAO,IACF,EAAI,EAAG,GAAK,EAAG,IACtB,IAAK,IAAI,EAAI,EAAG,GAAK,EAAG,IACtB,IAAK,IAAI,EAAI,EAAG,GAAK,EAAG,IAAK,CAC3B,IAAM,EAAI,EAAK,UAAU,GACzB,EAAE,EAAU,IAAN,EAAU,EAAI,EAAI,EAAI,EAC5B,EAAE,EAAU,IAAN,EAAU,EAAI,EAAI,EAAI,EAC5B,EAAE,EAAU,IAAN,EAAU,EAAI,EAAIC,EAAI,EAE5B,EAAE,EAAI,EACN,EAAE,aAAa,EAAK,qBACpB,IAEI,EAAE,EAAI,IAAM,EAAO,EAAE,GACrB,EAAE,EAAI,IAAM,EAAO,EAAE,GACrB,EAAE,EAAI,IAAM,EAAO,EAAE,EAC1B,CAML,IAAM,EAAiB,EAAK,kBAAkB,EAAQ,IAAM,EAAK,cAC3D,EAAyB,EAAK,kBAAkB,IAAU,GAChE,EAAgB,OAAS,EACzB,EAAK,kBAAkB,GAAS,EAChC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAe,OAAQ,EAAI,EAAG,IAAK,CACrD,IAAM,EAAO,EAAe,GACtB,EAAK,EAAKC,MAAM,EAChB,EAAK,EAAK,MAAM,EAChB,EAAK,EAAK,IAAI,EACd,EAAK,EAAK,IAAI,EACpB,KAAI,EAAK,GAAQ,EAAK,GAItB,KAFmB,EAAK,MACP,EAAK,GAGH,EAAK,GACP,EAAK,GAGtB,EAAgB,KAAK,EACtB,CAED,GAA+B,IAA3B,EAAgB,OAClB,OAAO,KAIT,IAAM,EAAO,EAAK,KAAK,cAAc,EAAK,WAC1C,IAAK,EAAM,OAAO,KAClB,IAAM,EAAQ,EAAK,KAAI,SAAC,EAAG,GACzB,IAAM,EAAQ,GAAM,EAAI,GAAK,EAAK,QAC5B,EAAO,EAAK,SAAS,GAG3B,OAFA,EAAK,MAAM,KAAK,GAChB,EAAK,IAAI,KAAK,GACP,CACT,IAGA,GAAI,EAAK,KAAK,wBAAwB,EAAgB,GAAG,MAAO,GAAS,IAAM,EAC7E,OAAO,KAKT,IADA,IAAI,EAAY,EACP,EAAI,EAAG,EAAI,EAAK,OAAQ,EAAI,EAAG,IAAK,CAC3C,IAAM,EAAI,EAAK,GACT,EAAa,EAAK,KAAK,wBAAwB,EAAG,GAQxD,GANU,IAAN,IACF,EAAY,GAKV,IAAc,EAChB,OAAO,IAEV,CAGD,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,EAAI,EAAG,IAEvC,IADA,IAAM,EAAU,EAAM,GACbC,EAAI,EAAG,EAAK,EAAgB,OAAQ,EAAI,EAAI,IACnD,GAAI,EAAK,KAAK,gBAAgB,EAAS,EAAgB,IACrD,OAAO,KAKb,OAAO,EAAY,IAAM,EAAI,KAAkB,IACjD,EAEA,mBAAoB,SAAC,EAAK,EAAO,EAAW,GAC1C,IAAM,EAAa,EAAR,EACL,EAAI,EACJ,EAAI,EAAK,EACT,EAAI,EAAK,EAGf,GAAI,EAEF,OADA,EAAQ,KAAK,EAAG,EAAG,GACZ,EAAK,YAId,IAAM,EAAkB,EAAK,cACzB,EAAK,kBAAkB,GACvB,EAAK,cACT,GAA2B,aAAvB,EAAK,cAA8B,CAErC,IAAM,EAAW,EAAI,EAClB,IAAI,EAAI,GACR,IAAI,EAAI,GACR,eAAe,EAAI,GAKtB,GAJA,EAAS,aAAa,EAAK,qBAGT,EAAK,KAAK,wBAAwB,EAAU,GAC9C,IAAM,EAEpB,OADA,EAAQ,KAAK,EAAG,EAAG,GACZ,EAAK,W,MAET,GAA2B,iBAAvB,EAAK,cAAkC,CAIhD,IAFA,IAAM,EAAW,CAAC,EAAI,EAAG,EAAI,EAAG,EAAI,GAE3B,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAM,EAAI,EAAS,GAInB,GAHA,EAAE,aAAa,EAAK,qBAEF,EAAK,KAAK,wBAAwB,EAAG,GACvC,IAAM,EAEpB,OADA,EAAQ,KAAK,EAAG,EAAG,GACZ,EAAK,WAEf,CAGD,IAAM,EAAQ,CAAC,EAAK,SAAS,GAAI,EAAK,SAAS,GAAI,EAAK,SAAS,IAEjE,EAAM,GAAG,MAAM,KAAK,EAAI,GACxB,EAAM,GAAG,IAAI,KAAK,EAAI,GAEtB,EAAM,GAAG,MAAM,KAAK,EAAI,GACxB,EAAM,GAAG,IAAI,KAAK,EAAI,GAEtB,EAAM,GAAG,MAAM,KAAK,EAAI,GACxB,EAAM,GAAG,IAAI,KAAK,EAAI,GAEtB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAErB,IADA,IAAM,EAAI,EAAM,GACP,EAAI,EAAG,EAAK,EAAgB,OAAQ,EAAI,EAAI,IACnD,GAAI,EAAK,KAAK,gBAAgB,EAAG,EAAgB,IAE/C,OADA,EAAQ,KAAK,EAAG,EAAG,GACZ,EAAK,WAInB,CAED,OAAO,CACT,GAEJ,KAAC,EAnMqB,IFUxB,SAAY,GACV,qBACA,gBACD,CAHD,CAAY,QAAmB,KAK/B,IAAa,GAAe,WAwB1B,WAAoB,GAAmB,oBAAnBvB,KAAKwB,QAAL,EAvBpB,cAAgC,GAAoB,IAEpD,oBAAiB,IAAI,IAEb,eAAW,EAEX,qBAA4B,GAC5B,gCAA4B,EAC5B,2BAAuB,EAEvB,aAAU,IACV,aAAU,IACV,YAAS,IACT,YAAS,IAET,cAAW,IAAI,KACf,cAAW,IAAI,KACf,cAAW,IAAI,KACf,yBAAsB,IAAI,KAC1B,mBAAyB,GAEzB,YAAS,IAAI,GAAY,KAAK,oBAAqB,KAAK,eAG9D,KAAK,sBACL,KAAK,WACP,CAwMC,OAxMA,gDAED,WACE,KAAK,eAAiB,IAAI,IAC1B,IAAM,EAAM,KAAK,eAAe,SAChC,EAAI,WAAY,EAChB,EAAI,MAAM,IAAI,UAAU,sBACxB,KAAK,eAAe,YAAc,EAClC,KAAK,eAAe,SAAS,GAAK,GAClC,KAAK,eAAe,MAAM,UAAU,GACpC,KAAK,eAAe,eAAgB,EACpC,KAAK,QAAQ,YAAY,IAAI,KAAK,eACpC,GAAC,2BAED,WACE,KAAK,MAAQ,KAAK,QAAQ,MAAM,YAAY,EAC5C,KAAK,MAAQ,KAAK,QAAQ,MAAM,YAAY,EAC5C,KAAK,OAAS,KAAK,QAAQ,MAAM,SAAS,EAC1C,KAAK,OAAS,KAAK,QAAQ,MAAM,SAAS,EAC1C,KAAK,gBAAgB,OAAS,EAC9B,KAAK,UAAW,EAEhB,IAAM,EAASxB,KAAKwB,QAAQ,YAK5B,GAJK,EAAO,QACV,KAAK,QAAQ,WAAW,IAAI,GAG1B,aAAkB,KAAmB,CACvC,IACM,EADM,KAAK,IAAK,KAAU,QAAU,EAAO,IAAO,GACnC,KAAK,eAAe,SAAS,EAClD,KAAK,eAAe,MAAM,KAAK,EAAS,EAAO,QAAS,EAAQ,EACjE,CACH,GAAC,4BAED,WACE,KAAK,UAAW,EAChB,KAAK,eAAe,SAAU,EAC1B,KAAK,gBAAgB,SACvB,KAAK,sBAAuB,GAG9B,KAAK,WACP,GAAC,oBAED,WACE,GAAK,KAAK,SAAV,CAEA,IAAM,EAAK,KAAK,QAAQ,MAAM,YAAY,EACpC,EAAK,KAAK,QAAQ,MAAM,YAAY,EAEpC,EAAK,KAAK,QAAQ,MAAM,SAAS,EACjC,EAAK,KAAK,QAAQ,MAAM,SAAS,EAEvC,GAAI,KAAK,WAAa,GAAoB,IAExC,KAAK,gBAAgB,OAAS,GAE9B,KAAK,gBAAgB,GAAK,KAAK,OAC/B,KAAK,gBAAgB,GAAK,KAAK,OAC/B,KAAK,gBAAgB,GAAK,EAE1B,KAAK,gBAAgB,GAAK,EAC1B,KAAK,gBAAgB,GAAK,KAAK,OAC/B,KAAK,gBAAgB,GAAK,EAE1B,KAAK,gBAAgB,GAAK,EAC1B,KAAK,gBAAgB,GAAK,EAC1B,KAAK,gBAAgB,GAAK,EAE1B,KAAK,gBAAgB,GAAKxB,KAAK,OAC/B,KAAK,gBAAgB,IAAM,EAC3B,KAAK,gBAAgB,IAAM,EAE3B,KAAK,gBAAgB,IAAM,KAAK,OAChC,KAAK,gBAAgB,IAAM,KAAK,OAChC,KAAK,gBAAgB,IAAM,EAEvB,IAAO,KAAK,OAAS,IAAO,KAAK,QACnC,KAAK,2BAA4B,GAGnC,KAAK,MAAQ,EACb,KAAK,MAAQ,EACb,KAAK,eAAe,SAAU,OAI9B,GAD2B,KAAK,IAAI,EAAK,KAAK,QAAU,GAAK,KAAK,IAAI,EAAK,KAAK,QAAU,EAClE,CAGtB,IACM,EAAS,GADL,KAAK,gBAAgB,OAAS,EAAI,GAExC,GAAY,EAChB,GAAI,KAAK,gBAAgB,OAAS,EAEhC,KAAK,SAAS,IAAI,KAAK,gBAAgB,EAAK,GAAI,KAAK,gBAAgB,EAAK,EAAI,IAC9E,KAAK,SAAS,IAAI,KAAK,gBAAgB,GAAK,KAAK,gBAAgB,EAAK,IACtE,KAAK,SAAS,IAAI,KAAK,UAAU,YAGjC,KAAK,SAAS,IAAI,KAAK,gBAAgB,GAAK,KAAK,gBAAgB,EAAK,IACtE,KAAK,SAAS,IAAI,EAAI,GACtB,KAAK,SAAS,IAAI,KAAK,UAAU,YAGjC,EADY,KAAK,SAAS,IAAI,KAAK,UACjB,IAGhB,GACF,KAAK,gBAAgB,GAAM,EAC3B,KAAK,gBAAgB,EAAK,GAAK,GAE/B,KAAK,gBAAgB,KAAK,EAAI,EAAI,GAGpC,KAAK,2BAA4B,EACjC,KAAK,eAAe,SAAU,EAE9BA,KAAK,MAAQ,EACb,KAAK,MAAQ,CACd,CAGH,KAAK,sBA9Ee,CA+EtB,GAAC,kCAED,WACE,GAAI,KAAK,0BAA2B,CAClC,GAAI,KAAK,WAAa,GAAoB,MAAO,CAC/C,IAAM,EAAW,KAAK,gBAAgB,OACtC,KAAK,gBAAgB,KACnB,KAAK,gBAAgB,GACrB,KAAK,gBAAgB,GACrB,KAAK,gBAAgB,IAGvBA,KAAK,eAAe,SAAS,aAC3B,WACA,IAAI,IAAuB,KAAK,gBAAiB,GAAG,IAGtD,KAAK,gBAAgB,OAAS,C,MAE9B,KAAK,eAAe,SAAS,aAC3B,WACA,IAAI,IAAuB,KAAK,gBAAiB,GAAG,IAIxD,KAAK,2BAA4B,CAClC,CACH,GAAC,uBAED,WAAS,WACQ,KAAK,QAAQ,MAAM,kBAC3B,SAAQ,SAAC,GACd,EAAK,OAAO,EACd,IACA,KAAK,sBAAuB,CAC9B,GAAC,oBAED,SAAO,GACD,KAAK,sBAAwB,KAAK,gBAAgB,OAAS,GAC7D,KAAK,gBAAgB,EAEzB,GAAC,6BAED,SAAgB,GAKd,IAAM,EAAS,KAAK,QAAQ,YAO5B,IANA,KAAK,oBACF,KAAK,EAAM,aACX,YAAY,EAAO,oBACnB,YAAY,EAAO,kBAGf,KAAK,cAAc,OAAS,KAAK,gBAAgB,QACtD,KAAK,cAAc,KAAK,IAAI,KAG9B,KAAK,cAAc,OAAS,KAAK,gBAAgB,OAEjD,IAAK,IAAI,EAAI,EAAG,EAAI,KAAK,gBAAgB,OAAQ,EAAI,EAAG,GAAK,EAAG,CAC9D,IAAM,EAAO,KAAK,cAAc,GAC1B,GAAS,EAAI,GAAK,EACxB,EAAK,MAAM,EAAI,KAAK,gBAAgB,GACpC,EAAK,MAAM,EAAI,KAAK,gBAAgB,EAAI,GAExC,EAAK,IAAI,EAAI,KAAK,gBAAgB,GAClC,EAAK,IAAI,EAAI,KAAK,gBAAgB,EAAQ,EAC3C,CAED,IAAM,EAAoB,GAC1B,KAAK,OAAO,UAAU,EAAO,GACzB,KAAK,YACP,KAAK,WAAW,EAAO,EAE3B,KAAC,EAnOyB,GGGf,GAAY,WAkBvB,WAAY,GAAsB,WAChC,GADgC,oBA0BlC,sBAAmB,WACjB,EAAK,QAAQ,aACf,EAMA,yBAAsB,WACpB,EAAK,QAAQ,aACf,EAMA,0BAAuB,WACrB,EAAK,QAAQ,QACf,EAiHA,oBAAiB,WACf,EAAK,IAAI,SAAS,gBACpB,EAMA,iBAAc,WACZ,OAAO,EAAK,IAAI,SAAS,aAC3B,EAQA,sBAAmB,SAAC,EAAiB,GACnC,EAAK,IAAI,SAAS,iBAAiB,EAAS,EAC9C,GAhLO,EAAQ,UAAW,MAAM,IAAI,MAAM,oCACxC,KAAK,QAAU,IAAI,GAAW,GAC9B,KAAK,IAAM,IAAI,GAAW,KAAK,SAC/B,KAAK,KAAO,IAAI,EAAQ,KAAK,SAC7B,KAAK,KAAO,IAAI,EAAQ,KAAK,SAC7B,KAAK,QAAU,IAAI,EAAW,KAAK,QAAS,KAAK,KACjD,KAAK,MAAQ,IAAI,EAAY,KAAK,IAAK,KAAK,QAAS,KAAK,SAC1D,KAAK,OAAS,IAAI,EAAmB,KAAK,IAAK,KAAK,SACpD,KAAK,WAAa,IAAI,EAAc,KAAK,SACzC,KAAK,MAAQ,IAAI,EAAM,KAAK,SAC5B,KAAK,cAAgB,IAAI,GAAc,KAAK,QAAS,KAAK,KAC1D,KAAK,eAAiB,IAAI,GAAc,KAAK,SAC7C,KAAK,IAAM,IAAI,GACf,KAAK,IAAM,IAAI,GACf,KAAK,KAAO,IAAI,GAAY,KAAK,QAAS,KAAK,KAC/C,KAAK,QAAU,IAAI,GAAW,KAAK,QAAS,KAAK,KACjD,KAAK,gBAAkB,IAAI,GAAgB,KAAK,SAChD,EAAc,IAAM,KAAK,IACzB,EAAc,QAAU,KAAK,OAC/B,CAqMC,OA3KD,8CAIA,WACE,KAAK,QAAQ,gBACf,GAEA,sEAMA,WAAc,GAAU,6FAAoB,OAAlB,EAAU,gCAAQ,SACpC,KAAK,IAAI,QAAQ,EAAM,GAAW,gDACzC,mDARD,IAUA,qBAQA,SAAQ,EAAe,EAAoB,EAAyB,GAClE,KAAK,KAAK,QAAQ,EAAM,EAAW,EAAiB,EACtD,GAEA,qBAKA,SAAQ,GACN,KAAK,KAAK,QAAQ,EACpB,GAEA,yEAMA,WAAiB,GAAW,6FAAoB,OAAlB,EAAU,gCAAQ,SACxC,KAAK,IAAI,WAAW,EAAK,GAAW,gDAC3C,mDARD,IAUA,yBAeA,SAAY,GACV,KAAK,IAAI,YAAY,EACvB,GAEA,iCAKA,SAAoB,GAClB,OAAO,KAAK,IAAI,oBAAoB,EACtC,GAEA,2BAOA,SAAc,EAAiB,EAAY,GACzC,OAAO,KAAK,IAAI,cAAc,EAAS,EAAI,EAC7C,GAEA,wBAIA,WACE,OAAO,KAAK,IAAI,YAClB,GAEA,+BAOA,SAAkB,EAAiB,GAA6B,IAAf,EAAO,wDACtD,OAAO,KAAK,IAAI,kBAAkB,EAAS,EAAM,EACnD,GA4BA,sEAQA,wFA2B4B,OA1B1B,KAAK,KAAK,UACT,KAAK,KAAe,KACrB,KAAK,KAAK,UACT,KAAK,KAAe,KACrB,KAAK,QAAQ,UACZ,KAAK,QAAkB,KACxB,KAAK,QAAQ,UACZ,KAAK,QAAkB,KACxB,KAAK,MAAM,UACV,KAAK,MAAgB,KACtB,KAAK,OAAO,UACX,KAAK,OAAiB,KACvB,KAAK,WAAW,UACf,KAAK,WAAqB,KAC3B,KAAK,MAAM,UACV,KAAK,MAAgB,KACtB,KAAK,cAAc,UAClB,KAAK,cAAwB,KAC9B,KAAK,IAAI,UACR,KAAK,IAAc,KACpB,KAAK,IAAI,UACR,KAAK,IAAc,KACpB,KAAK,eAAe,UACnB,KAAK,eAAyB,KAC9B,KAAK,QAAkB,KACxB,KAAK,KAAK,UACT,KAAK,KAAe,KAAK,UACpB,KAAK,IAAI,UAAS,QACvB,KAAK,IAAc,KAAK,iDAC1B,kDAtCD,MAsCC,EA3OsB,E,4kCCtBrByB,EAAYC,OAAOC,eACnBC,EAAsBF,OAAOG,sBAC7BC,EAAeJ,OAAOK,UAAUC,eAChCC,EAAeP,OAAOK,UAAUG,qBAChCC,EAAkB,SAACC,EAAKC,EAAKC,GAAK,OAAKD,KAAOD,EAAMX,EAAUW,EAAKC,EAAK,CAAEE,YAAY,EAAMC,cAAc,EAAMC,UAAU,EAAMH,UAAWF,EAAIC,GAAOC,CAAK,EAC3JI,EAAiB,SAACC,EAAGC,GACvB,IAAK,IAAIC,KAAQD,IAAMA,EAAI,CAAC,GACtBd,EAAagB,KAAKF,EAAGC,IACvBV,EAAgBQ,EAAGE,EAAMD,EAAEC,IAC/B,GAAIjB,EAAmB,KACkB,EADlB,cACJA,EAAoBgB,IAAE,IAAvC,IAAK,EAAL,qBAAyC,CAAhCC,EAAI,QACPZ,EAAaa,KAAKF,EAAGC,IACvBV,EAAgBQ,EAAGE,EAAMD,EAAEC,GAC/B,CAAC,gCACH,OAAOF,CACT,EACII,EAAY,SAAC3B,GAEb,OAAO4B,QAAQ5B,EAEnB,EACI6B,EAAa,SAACC,EAAIC,GAAG,OAAK,WAC5B,OAAOA,IAAO,EAAID,EAAGxB,OAAO0B,KAAKF,GAAI,MAAMC,EAAM,CAAEE,QAAS,CAAC,IAAKA,QAASF,GAAMA,EAAIE,OACvF,CAAC,EACGC,EAAU,SAACC,EAAQC,EAAaC,GAClC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAY,SAACvB,GACf,IACEwB,EAAKL,EAAUM,KAAKzB,GACtB,CAAE,MAAO0B,GACPJ,EAAOI,EACT,CACF,EACIC,EAAW,SAAC3B,GACd,IACEwB,EAAKL,EAAUS,MAAM5B,GACvB,CAAE,MAAO0B,GACPJ,EAAOI,EACT,CACF,EACIF,EAAO,SAAC1C,GAAC,OAAKA,EAAE+C,KAAOR,EAAQvC,EAAEkB,OAASoB,QAAQC,QAAQvC,EAAEkB,OAAO8B,KAAKP,EAAWI,EAAS,EAChGH,GAAML,EAAYA,EAAUY,MAAMd,EAAQC,IAAcO,OAC1D,GACF,EAGIO,EAAiBrB,EAAW,CAC9B,oBAAmB,WACnB,IAIEsB,EAAqBtB,EAAW,CAClC,qBAAoB,SAACI,EAASmB,GAC5B,IAAIC,EAAc,WAChB,IAAIC,EAAiC,qBAAbC,UAA4BA,SAASC,cAAgBD,SAASC,cAAcC,SAAM,EAG1G,OADEH,EAAaA,GAAcI,EACtB,SAASC,GAEd,SAASC,IAIP,OAHIC,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCE,EACT,CACA,SAASC,IAIP,OAHIJ,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCI,EACT,CACA,SAASC,IAIP,OAHIN,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCM,EACT,CACA,SAASC,IAIP,OAHIR,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCQ,EACT,CACA,SAASC,IAIP,OAHIV,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCU,EACT,CACA,SAASC,IAIP,OAHIZ,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCY,EACT,CAOA,SAASC,IAIP,OAHId,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCc,EACT,CACA,IACIC,EAAqBC,EADrBC,EAAgC,qBAjDpCpB,EAAcA,GAAe,CAAC,GAiDoBA,EAAc,CAAC,EAEjEoB,EAAc,MAAI,IAAIzC,SAAQ,SAASC,EAASC,GAC9CqC,EAAsBtC,EACtBuC,EAAqBtC,CACvB,IACA,IACIvB,EADA+D,EAAkB,CAAC,EAEvB,IAAK/D,KAAO8D,EACNA,EAAOnE,eAAeK,KACxB+D,EAAgB/D,GAAO8D,EAAO9D,IAGlC,IAgBIgE,EAAOC,EAAWC,EAClBC,EACAC,EAlBAC,EAAa,GACbC,EAAc,iBACdC,EAAQ,SAASC,EAAQC,GAC3B,MAAMA,CACR,EACIC,EAAuC,kBAAXC,OAC5BC,EAAiD,oBAAlBC,cAC/BC,EAAyC,kBAAZC,GAAoD,kBAArBA,EAAQC,UAA0D,kBAA1BD,EAAQC,SAASC,KACrHC,EAAyBpB,EAA+B,yBAAK,EAC7DqB,EAAkB,GACtB,SAASC,EAAWC,GAClB,OAAIvB,EAAmB,WACdA,EAAmB,WAAEuB,EAAMF,GAE7BA,EAAkBE,CAC3B,CAIA,GAAIP,EAAqB,CAuDvB,IAAIQ,EArDFH,EADEP,EACgBlE,EAAU,QAAQ6E,QAAQJ,GAAmB,IAE7CK,EAAY,IAEhCxB,EAAQ,SAAoByB,EAAUC,GAMpC,OALKvB,IACHA,EAASzD,EAAU,OAChB0D,IACHA,EAAW1D,EAAU,SACvB+E,EAAWrB,EAAoB,UAAEqB,GAC1BtB,EAAqB,aAAEsB,EAAUC,EAAS,KAAO,OAC1D,EACAxB,EAAa,SAAqBuB,GAChC,IAAIE,EAAM3B,EAAMyB,GAAU,GAK1B,OAJKE,EAAI9C,SACP8C,EAAM,IAAIC,WAAWD,IAEvBE,EAAOF,EAAI9C,QACJ8C,CACT,EACA1B,EAAY,SAAoBwB,EAAUK,EAAQC,GAC3C5B,IACHA,EAASzD,EAAU,OAChB0D,IACHA,EAAW1D,EAAU,SACvB+E,EAAWrB,EAAoB,UAAEqB,GACjCtB,EAAiB,SAAEsB,GAAU,SAASO,EAAMC,GACtCD,EACFD,EAAQC,GAERF,EAAOG,EAAKpD,OAChB,GACF,EACIkC,EAAc,KAAEmB,OAAS,IAC3B5B,EAAcS,EAAc,KAAE,GAAGoB,QAAQ,MAAO,MAElD9B,EAAaU,EAAc,KAAEqB,MAAM,GACnCrB,EAAY,GAAE,qBAAqB,SAASsB,GAC1C,KAAMA,aAAcC,IAClB,MAAMD,CAEV,IACAtB,EAAY,GAAE,qBAAsBwB,IACpChC,EAAQ,SAASC,EAAQC,GACvB,GAAI+B,KAEF,MADAzB,EAAkB,SAAIP,EAChBC,EAERM,EAAc,KAAEP,EAClB,EACAV,EAAgB,QAAI,WAClB,MAAO,4BACT,EAEA,IACEwB,EAAoB5E,EAAU,iBAChC,CAAE,MAAOiB,IAEP,MADA8E,QAAQC,MAAM,2GACR/E,EACR,CACAgF,EAAOC,OAAStB,EAAkBsB,MACpC,MAAWlC,GAAsBE,KAC3BA,EACFO,EAAkB0B,KAAKC,SAASC,KACH,qBAAbzE,UAA4BA,SAASC,gBACrD4C,EAAkB7C,SAASC,cAAcC,KAEvCH,IACF8C,EAAkB9C,GAGlB8C,EADuC,IAArCA,EAAgB6B,QAAQ,SACR7B,EAAgB8B,OAAO,EAAG9B,EAAgB+B,YAAY,KAAO,GAE7D,GAEhBpC,GACFd,EAAQ,SAAoByB,EAAUC,GAMpC,OALKvB,IACHA,EAASzD,EAAU,OAChB0D,IACHA,EAAW1D,EAAU,SACvB+E,EAAWrB,EAAoB,UAAEqB,GAC1BtB,EAAqB,aAAEsB,EAAUC,EAAS,KAAO,OAC1D,EACAxB,EAAa,SAAqBuB,GAChC,IAAIE,EAAM3B,EAAMyB,GAAU,GAK1B,OAJKE,EAAI9C,SACP8C,EAAM,IAAIC,WAAWD,IAEvBE,EAAOF,EAAI9C,QACJ8C,CACT,EACA1B,EAAY,SAAoBwB,EAAUK,EAAQC,GAC3C5B,IACHA,EAASzD,EAAU,OAChB0D,IACHA,EAAW1D,EAAU,SACvB+E,EAAWrB,EAAoB,UAAEqB,GACjCtB,EAAiB,SAAEsB,GAAU,SAASO,EAAMC,GACtCD,EACFD,EAAQC,GAERF,EAAOG,EAAKpD,OAChB,GACF,IAEAmB,EAAQ,SAASmD,GACf,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIG,KAAK,MACFH,EAAII,YACb,EACI5C,IACFV,EAAa,SAASiD,GACpB,IAAIC,EAAM,IAAIC,eAId,OAHAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIK,aAAe,cACnBL,EAAIG,KAAK,MACF,IAAI3B,WAAWwB,EAAIM,SAC5B,GAEFzD,EAAY,SAASkD,EAAKrB,EAAQC,GAChC,IAAIqB,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIK,aAAe,cACnBL,EAAItB,OAAS,WACO,KAAdsB,EAAI5C,QAA+B,GAAd4C,EAAI5C,QAAe4C,EAAIM,SAC9C5B,EAAOsB,EAAIM,UAGb3B,GACF,EACAqB,EAAIrB,QAAUA,EACdqB,EAAIG,KAAK,KACX,GAEe,SAASI,GACxBrF,SAASqF,MAAQA,CACnB,GAGE7C,GACyB,qBAAhB8C,cACTjB,EAAOiB,YAAclH,EAAU,cAAckH,aAGjD,IAAIC,EAAM/D,EAAc,OAAK2C,QAAQqB,IAAIC,KAAKtB,SAC1CuB,EAAMlE,EAAiB,UAAK2C,QAAQwB,KAAKF,KAAKtB,SAClD,IAAKzG,KAAO+D,EACNA,EAAgBpE,eAAeK,KACjC8D,EAAO9D,GAAO+D,EAAgB/D,IAGlC+D,EAAkB,KACdD,EAAkB,YACpBO,EAAaP,EAAkB,WAC7BA,EAAoB,cACtBQ,EAAcR,EAAoB,aAChCA,EAAa,OACfS,EAAQT,EAAa,MACvB,IAAIoE,EAAc,GAMlB,SAASC,EAASC,GACXD,EAASE,QACZF,EAASE,MAAQ,CAAC,GACfF,EAASE,MAAMD,KAClBD,EAASE,MAAMD,GAAQ,EACvBJ,EAAII,GAER,CACA,IAOIE,EANAC,EAAc,SAAStI,GACdA,CACb,EACmBuI,QAAQC,KACPD,QAAQE,MACEF,QAAQG,gBAElC7E,EAAmB,aACrBwE,EAAaxE,EAAmB,YAClC,IAIIlB,EACAgG,EALAC,EAAgB/E,EAAsB,gBAAK,EACpB,kBAAhBgF,aACTvC,GAAM,mCAIR,IAAIwC,GAAQ,EAEZ,SAASlD,EAAOmD,EAAWZ,GACpBY,GACHzC,GAAM,qBAAuB6B,EAEjC,CACA,SAASa,EAAmBC,GAC1B,IAAIC,EAAc,IAAIC,YAAYF,GAClCvL,KAAK0L,OAAS,SAASpD,GAIrB,OAHIA,EAAKpD,kBAAkByG,oBACzBrD,EAAO,IAAIL,WAAWK,IAEjBkD,EAAYE,OAAO5I,KAAK0I,EAAalD,EAC9C,CACF,CACA,IAAIsD,EAAqC,qBAAhBH,YAA8B,IAAIH,EAAmB,aAAU,EACxF,SAASO,EAAkBC,EAAMC,EAAKC,GAIpC,IAFA,IAAIC,GADJF,KAAS,GACUC,EACfE,EAASH,EACND,EAAKI,IAAW,MAAQA,GAAUD,MACrCC,EACJ,GAAIA,EAASH,EAAM,IAAMD,EAAKK,UAAYP,EACxC,OAAOA,EAAYF,OAAOI,EAAKK,SAASJ,IAAQ,EAAGG,IAAW,IAG9D,IADA,IAAIE,EAAM,GACHL,EAAMG,GAAQ,CACnB,IAAIG,EAAKP,EAAKC,MAAU,GACxB,GAAW,IAALM,EAAN,CAIA,IAAIC,EAAyB,GAApBR,EAAKC,MAAU,GACxB,GAAkB,MAAR,IAALM,GAAL,CAIA,IAAIE,EAAyB,GAApBT,EAAKC,MAAU,GAMxB,IAJEM,EADgB,MAAR,IAALA,IACQ,GAALA,IAAY,GAAKC,GAAM,EAAIC,GAEtB,EAALF,IAAW,GAAKC,GAAM,GAAKC,GAAM,EAAwB,GAApBT,EAAKC,MAAU,IAEnD,MACPK,GAAOI,OAAOC,aAAaJ,OACtB,CACL,IAAIK,EAAKL,EAAK,MACdD,GAAOI,OAAOC,aAAa,MAAQC,GAAM,GAAI,MAAa,KAALA,EACvD,CAZA,MAFEN,GAAOI,OAAOC,cAAmB,GAALJ,IAAY,EAAIC,EAH9C,MAFEF,GAAOI,OAAOC,aAAaJ,EAoB/B,CAEF,OAAOD,CACT,CACA,SAASO,EAAaC,EAAKZ,GAEzB,OADAY,KAAS,GACIf,EAAkBxG,IAAoBuH,EAAKZ,GAAkB,EAC5E,CACA,SAASa,EAAkBT,EAAKN,EAAMgB,EAAQC,GAE5C,KAAMA,EAAkB,GACtB,OAAO,EAGT,IAFA,IAAIC,EAHJF,KAAY,EAIRb,EAASa,EAASC,EAAkB,EAC/BrM,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIuM,EAAIb,EAAIc,WAAWxM,GACvB,GAAIuM,GAAK,OAASA,GAAK,MAErBA,EAAI,QAAc,KAAJA,IAAa,IAAW,KAD7Bb,EAAIc,aAAaxM,GAG5B,GAAIuM,GAAK,IAAK,CACZ,GAAIH,GAAUb,EACZ,MACFH,EAAKgB,MAAa,GAAKG,CACzB,MAAO,GAAIA,GAAK,KAAM,CACpB,GAAIH,EAAS,GAAKb,EAChB,MACFH,EAAKgB,MAAa,GAAK,IAAMG,GAAK,EAClCnB,EAAKgB,MAAa,GAAK,IAAU,GAAJG,CAC/B,MAAO,GAAIA,GAAK,MAAO,CACrB,GAAIH,EAAS,GAAKb,EAChB,MACFH,EAAKgB,MAAa,GAAK,IAAMG,GAAK,GAClCnB,EAAKgB,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCnB,EAAKgB,MAAa,GAAK,IAAU,GAAJG,CAC/B,KAAO,CACL,GAAIH,EAAS,GAAKb,EAChB,MACFH,EAAKgB,MAAa,GAAK,IAAMG,GAAK,GAClCnB,EAAKgB,MAAa,GAAK,IAAMG,GAAK,GAAK,GACvCnB,EAAKgB,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCnB,EAAKgB,MAAa,GAAK,IAAU,GAAJG,CAC/B,CACF,CAEA,OADAnB,EAAKgB,IAAW,GAAK,EACdA,EAASE,CAClB,CACA,SAASG,EAAaf,EAAKgB,EAAQL,GACjC,OAAOF,EAAkBT,EAAK/G,IAAoB+H,EAAQL,EAC5D,CACA,SAASM,EAAgBjB,GAEvB,IADA,IAAIkB,EAAM,EACD5M,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIuM,EAAIb,EAAIc,WAAWxM,GACnBuM,GAAK,OAASA,GAAK,QACrBA,EAAI,QAAc,KAAJA,IAAa,IAA4B,KAAtBb,EAAIc,aAAaxM,IAChDuM,GAAK,MACLK,EAEFA,GADOL,GAAK,KACL,EACAA,GAAK,MACL,EAEA,CACX,CACA,OAAOK,CACT,CACA,IA2GIpI,EAAQE,GAAOE,GAAQE,GAAQE,GAASE,GAAQE,GAASyH,GAASvH,GA3GlEwH,GAAsC,qBAAhB/B,YAA8B,IAAIH,EAAmB,iBAAc,EAC7F,SAASmC,GAAcb,EAAKZ,GAI1B,IAHA,IAAIE,EAASU,EACTb,EAAMG,GAAU,EAChBwB,EAAS3B,EAAMC,EAAiB,IAC3BD,GAAO2B,IAAWjI,IAAoBsG,IAAQ,MACnDA,EAEJ,IADAG,EAASH,GAAO,GACHa,EAAM,IAAMY,GACvB,OAAOA,GAAa9B,OAAOrG,IAAmB8G,SAASS,IAAQ,EAAGV,IAAW,IAG7E,IADA,IAAIE,EAAM,GACD1L,EAAI,IAAKA,GAAKsL,EAAiB,KAAMtL,EAAG,CAC/C,IAAIiN,EAAWpI,IAAoBqH,EAAU,EAAJlM,IAAU,GACnD,GAAgB,GAAZiN,EACF,MACFvB,GAAOI,OAAOC,aAAakB,EAC7B,CACA,OAAOvB,CAEX,CACA,SAASwB,GAAcxB,EAAKgB,EAAQL,GAIlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAIT,IAFA,IAAIc,EAAWT,EACXU,GAFJf,GAAmB,GAEkC,EAAbX,EAAI7D,OAAawE,EAAkB,EAAIX,EAAI7D,OAC1E7H,EAAI,EAAGA,EAAIoN,IAAmBpN,EAAG,CACxC,IAAIiN,EAAWvB,EAAIc,WAAWxM,GAC9B6E,IAAoB6H,IAAW,GAAKO,EACpCP,GAAU,CACZ,CAEA,OADA7H,IAAoB6H,IAAW,GAAK,EAC7BA,EAASS,CAClB,CACA,SAASE,GAAiB3B,GACxB,OAAoB,EAAbA,EAAI7D,MACb,CACA,SAASyF,GAAcpB,EAAKZ,GAG1B,IAFA,IAAItL,EAAI,EACJ0L,EAAM,KACD1L,GAAKsL,EAAiB,IAAI,CACjC,IAAIiC,EAAQtI,IAAoBiH,EAAU,EAAJlM,IAAU,GAChD,GAAa,GAATuN,EACF,MAEF,KADEvN,EACEuN,GAAS,MAAO,CAClB,IAAIvB,EAAKuB,EAAQ,MACjB7B,GAAOI,OAAOC,aAAa,MAAQC,GAAM,GAAI,MAAa,KAALA,EACvD,MACEN,GAAOI,OAAOC,aAAawB,EAE/B,CACA,OAAO7B,CACT,CACA,SAAS8B,GAAc9B,EAAKgB,EAAQL,GAKlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAGT,IAFA,IAAIc,EANJT,KAAY,EAORlB,EAAS2B,EAAWd,EAAkB,EACjCrM,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIiN,EAAWvB,EAAIc,WAAWxM,GAC9B,GAAIiN,GAAY,OAASA,GAAY,MAEnCA,EAAW,QAAqB,KAAXA,IAAoB,IAAuB,KAD3CvB,EAAIc,aAAaxM,GAKxC,GAFAiF,IAAoByH,IAAW,GAAKO,GACpCP,GAAU,GACG,EAAIlB,EACf,KACJ,CAEA,OADAvG,IAAoByH,IAAW,GAAK,EAC7BA,EAASS,CAClB,CACA,SAASM,GAAiB/B,GAExB,IADA,IAAIkB,EAAM,EACD5M,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIiN,EAAWvB,EAAIc,WAAWxM,GAC1BiN,GAAY,OAASA,GAAY,SACjCjN,EACJ4M,GAAO,CACT,CACA,OAAOA,CACT,CAqBA,SAASnI,GAA2BiJ,GAClClJ,EAASkJ,EACTjI,EAAc,MAAIf,GAAQ,IAAIiJ,UAAUD,GACxCjI,EAAe,OAAIX,GAAS,IAAI8I,WAAWF,GAC3CjI,EAAe,OAAIP,GAAS,IAAI2I,WAAWH,GAC3CjI,EAAe,OAAIb,GAAS,IAAI2C,WAAWmG,GAC3CjI,EAAgB,QAAIT,GAAU,IAAI8I,YAAYJ,GAC9CjI,EAAgB,QAAIL,GAAU,IAAI2I,YAAYL,GAC9CjI,EAAgB,QAAIoH,GAAU,IAAImB,aAAaN,GAC/CjI,EAAgB,QAAIH,GAAU,IAAI2I,aAAaP,EACjD,CAbI7G,IACFrC,EAASiB,EAAe,QAa1B,IAuBIyI,GAvBAC,GAAiB1I,EAAuB,gBAAK,SACjD,GAAIoB,EACFtC,EAAakB,EAAmB,WAChCjB,EAASiB,EAAe,YAExB,GAAIA,EAAmB,WACrBlB,EAAakB,EAAmB,gBAGhC,MADAlB,EAAa,IAAIkG,YAAY2D,OAAO,CAAE,QAAWD,GAAiB,MAAO,QAAW,MAAoB,QAAU,KACjG3J,kBAAkByG,mBAKjC,MAJAtB,EAAI,+NACAlD,GACF2B,QAAQqB,IAAI,qHAER9J,MAAM,cAId4E,IACFC,EAASD,EAAWC,QAEtB2J,GAAiB3J,EAAO6J,WACxB5J,GAA2BD,GAE3B,IAAI8J,GAAe,GACfC,GAAa,GACbC,GAAa,GACbC,GAAa,GACbC,GAAgB,GAGhBC,GAA0B,EAC9B,SAASxG,KACP,OAAOqC,GAAiBmE,GAA0B,CACpD,CAaA,SAASC,MACc,EACjB/H,IAECpB,EAAiB,UAAMoJ,GAAGC,KAAKC,aAClCF,GAAGC,OACLD,GAAGG,mBAAoB,EACvBC,GAAIH,OACJI,GAAqBX,IACvB,CAgCA,IAAIY,GAAkB,EAClBC,GAAuB,KACvBC,GAAwB,KAI5B,SAASC,GAAiBzP,GACxBsP,KACI1J,EAA+B,wBACjCA,EAA+B,uBAAE0J,GAErC,CACA,SAASI,GAAoB1P,GAK3B,GAJAsP,KACI1J,EAA+B,wBACjCA,EAA+B,uBAAE0J,IAEZ,GAAnBA,KAC2B,OAAzBC,KACFI,cAAcJ,IACdA,GAAuB,MAErBC,IAAuB,CACzB,IAAII,EAAWJ,GACfA,GAAwB,KACxBI,GACF,CAEJ,CAGA,SAASvH,GAAMwH,GACTjK,EAAgB,SAClBA,EAAgB,QAAEiK,GAEhB7I,GACFuB,QAAQC,MAAM,wBAAyB,IAAI1I,OAAQgQ,OAErDhG,EADA+F,GAAQ,IAERhF,GAAQ,EACK,EACbgF,EAAO,SAAWA,EAAO,+CACzB,IAAIpM,EAAI,IAAImH,YAAYmF,aAAaF,GAErC,MADAlK,EAAmBlC,GACbA,CACR,CAhBAmC,EAAwB,gBAAI,CAAC,EAC7BA,EAAwB,gBAAI,CAAC,EAgB7B,IAOIoK,GAwGAC,GACAC,GAhHAC,GAAgB,wCACpB,SAASC,GAAU7I,GACjB,OAAOA,EAAS8I,WAAWF,GAC7B,CACA,SAASG,GAAU/I,GACjB,OAAOA,EAAS8I,WAAW,UAC7B,CAMA,SAASE,GAAUC,GACjB,IACE,GAAIA,GAAQR,IAAkB5F,EAC5B,OAAO,IAAI1C,WAAW0C,GAExB,GAAIpE,EACF,OAAOA,EAAWwK,GAElB,KAAM,iDAEV,CAAE,MAAO1I,GACPO,GAAMP,EACR,CACF,CAhBKsI,GADLJ,GAAiB,qBAEfA,GAAiB9I,EAAW8I,KAuG9B,IAAIS,GAAa,CAAE,MAAO,WACxB,KAAM,WACR,EAAG,MAAO,SAASC,EAAIC,GACrBC,YAAW,WACTC,GAAmCH,EAAIC,EACzC,GAAG,EACL,GAIA,SAAStB,GAAqByB,GAC5B,KAAOA,EAAU9I,OAAS,GAAG,CAC3B,IAAI4H,EAAWkB,EAAUC,QACzB,GAAuB,mBAAZnB,EAAX,CAIA,IAAIoB,EAAOpB,EAASoB,KACA,kBAATA,OACY,IAAjBpB,EAASqB,IACX5C,GAAU6C,IAAIF,EAAd3C,GAEAA,GAAU6C,IAAIF,EAAd3C,CAAoBuB,EAASqB,KAG/BD,OAAsB,IAAjBpB,EAASqB,IAAiB,KAAOrB,EAASqB,IATjD,MAFErB,EAAShK,EAab,CACF,CACA,SAASuL,GAAuBC,EAAMC,GACpC,GAAID,GAAQ,GAAKA,EAAO3M,IAAmBuD,SAAiB,EAAPoJ,GAAeC,EAAQ,EAC1E,OAAQ,GACV,GAAa,GAATA,EACF,OAAO,EACLA,GAAS,aACXA,EAAQC,KACV,IAAIC,EAAwBjH,QAAQC,KAAKnF,IAAqBoM,IAAkC,GAC5FC,EAAkB,EACtB,GAAIF,GAAyBH,IACV9G,QAAQG,gBAAgBrF,IAAqBoM,IAAkC,EAAGD,EAAuB,IACxGA,IAEhBE,EAAkB,IADhBJ,GAEW,IACX,OAAO,EAGb,IAAI5J,EAAM6C,QAAQoH,OAAOtM,IAAqBgM,GAAQ,EAAGC,GACzD,GAAI5J,GAAO,EACT,OAAOA,EAAMgK,EACf,KAAM,+CAAiDhK,CACzD,CACA7B,EAA+B,uBAAIuL,GAiCnC,IA6MIQ,GA7MAC,GAAU,CAAEC,cAAe,GAAIC,eAAgB,GAAIC,iBAAkB,GAAIC,oBAAqB,WAEhG,IADA,IAAIC,EAAkBC,UAAUC,oBACvBhS,EAAI,EAAGA,EAAI8R,IAAmB9R,EACrCyR,GAAQQ,sBAEZ,EAAGrD,YAAa,WAEd,IADA,IAAIsD,EAAKC,GAAQ,KACRnS,EAAI,EAAGA,EAAI,KAAWA,EAC7BmF,IAAoB+M,EAAK,EAAIlS,IAAM,GAAK,EAC1CiF,IAAoBiN,EAAK,KAAO,GAAKA,EACrC,IAAIE,EAAUF,EAAK,IACnBjN,IAAoBmN,IAAY,GAAKA,EACrC,IAAIC,EAAYF,GAAQ,KACxB,IAASnS,EAAI,EAAGA,EAAI,MAAOA,EACzBmF,IAAoBkN,EAAY,EAAIrS,IAAM,GAAK,EACjDmK,QAAQE,MAAMlF,IAAqB+M,EAAK,KAAO,EAAGG,GAClDlI,QAAQE,MAAMlF,IAAqB+M,EAAK,IAAM,EAAGA,GACjDI,GAAyBJ,GAAK3L,EAAuB,GACrDgM,GAA4CL,EAC9C,EAAGM,WAAY,WACf,EAAGC,SAAU,CAAC,EAAGC,mBAAoB,GAAIC,gBAAiB,WACxD,KAAOlB,GAAQiB,mBAAmB7K,OAAS,GACzC4J,GAAQiB,mBAAmBE,KAA3BnB,GAEFoB,IACF,EAAGC,+BAAgC,SAASZ,EAAIa,GAC9C5I,QAAQE,MAAMlF,IAAqB+M,EAAK,IAAM,EAAG,GACjD/H,QAAQE,MAAMlF,IAAqB+M,EAAK,IAAM,EAAG,GACjDT,GAAQkB,kBACRxI,QAAQE,MAAMlF,IAAqB+M,EAAK,GAAK,EAAGa,GAChD5I,QAAQE,MAAMlF,IAAqB+M,EAAK,GAAK,EAAG,GAChDlB,GAAuBkB,EAAK,EAAG,YAC/BI,GAAyB,EAAG,EAAG,EACjC,EAAGU,cAAe,SAAS7M,GACZA,CACf,EAAG8M,WAAY,SAASF,GACtB,IAAIb,EAAKgB,KACLhB,IACFT,GAAQqB,+BAA+BZ,EAAIa,GACvClM,GACFsM,YAAY,CAAE,IAAO,SAG3B,EAAGC,aAAc,WACf3B,GAAQqB,+BAA+BI,MAAkB,GACzDC,YAAY,CAAE,IAAO,cACvB,EAAGE,oBAAqB,WACtB,IAAK,IAAIC,KAAK7B,GAAQgB,SAAU,EAC1Bc,EAAU9B,GAAQgB,SAASa,KAChBC,EAAQC,QACrB/B,GAAQgC,mBAAmBF,EAAQC,OAEvC,CACA/B,GAAQgB,SAAW,CAAC,EACpB,IAAK,IAAIzS,EAAI,EAAGA,EAAIyR,GAAQC,cAAc7J,SAAU7H,EAAG,EACjDwT,EAAS/B,GAAQC,cAAc1R,IAC5B0T,WACT,CACAjC,GAAQC,cAAgB,GACxB,IAAS1R,EAAI,EAAGA,EAAIyR,GAAQE,eAAe9J,SAAU7H,EAAG,CACtD,IAAIwT,EACAD,GADAC,EAAS/B,GAAQE,eAAe3R,IACfuT,QACrB9B,GAAQkC,eAAeJ,GACvBC,EAAOE,WACT,CACAjC,GAAQE,eAAiB,EAC3B,EAAGgC,eAAgB,SAASJ,GAC1B,GAAKA,EAAL,CAEA,GAAIA,EAAQK,iBAAkB,CAC5B,IAAIvB,EAAYpN,IAAoBsO,EAAQK,iBAAmB,MAAQ,GACvE3O,IAAoBsO,EAAQK,iBAAmB,MAAQ,GAAK,EAC5DC,GAAMxB,GACNwB,GAAMN,EAAQK,iBAChB,CACAL,EAAQK,iBAAmB,EACvBL,EAAQO,mBAAqBP,EAAQQ,WACvCF,GAAMN,EAAQQ,WAChBR,EAAQQ,UAAY,EAChBR,EAAQC,SACVD,EAAQC,OAAOD,QAAU,KAZnB,CAaV,EAAGE,mBAAoB,SAASD,GAC9B/B,GAAQuC,iCAAgC,kBAC/BvC,GAAQgB,SAASe,EAAOD,QAAQK,kBACvCnC,GAAQC,cAAcuC,KAAKT,GAC3B/B,GAAQE,eAAeuC,OAAOzC,GAAQE,eAAehJ,QAAQ6K,GAAS,GACtE/B,GAAQkC,eAAeH,EAAOD,SAC9BC,EAAOD,aAAU,CACnB,GACF,EAAGS,gCAAiC,SAASnD,GAC3C5L,IAAoBkP,KAAiD,GAAK,EAC1E,IACEtD,GACF,CAAE,QACA5L,IAAoBkP,KAAiD,GAAK,CAC5E,CACF,EAAGC,sBAAuB,SAASxM,GACnC,EAAGyM,WAAY,WACb,IAAK,IAAIrU,KAAKyR,GAAQG,iBACpBH,GAAQG,iBAAiB5R,IAE7B,EAAGsU,uBAAwB,SAASd,EAAQe,GAC1Cf,EAAOgB,UAAY,SAASlR,GAC1B,IAAImR,EAAInR,EAAQ,KACZoR,EAAMD,EAAO,IAGjB,GAFIjB,EAAOD,UACT9B,GAAQkD,oCAAsCnB,EAAOD,QAAQK,kBAC3Da,EAAgB,cAAKA,EAAgB,cAAKvB,KAAiB,CAC7D,IAAI0B,EAASnD,GAAQgB,SAASgC,EAAEI,cAOhC,OANID,EACFA,EAAOpB,OAAOL,YAAY7P,EAAEsE,KAAM6M,EAAgB,cAElDrM,QAAQC,MAAM,0CAA4CqM,EAAM,uBAAyBD,EAAgB,aAAI,4CAE/GhD,GAAQkD,yCAAsC,EAEhD,CACA,GAAY,gCAARD,EACFI,UACK,GAAY,gBAARJ,EACTK,GAAYzR,EAAEsE,WACT,GAAY,kBAAR8M,GArIf,SAAuBM,GACrB,GAAInO,EACF,KAAM,wFACR,IAAKmO,EACH,KAAM,qDACR,IAAIzB,EAAU9B,GAAQgB,SAASuC,GAC/B,GAAIzB,EAAS,CACXtO,IAAoB+P,EAAc,KAAO,GAAK,EAC9C,IAAIxB,EAASD,EAAQC,OACrB/B,GAAQgC,mBAAmBD,EAC7B,CACF,CA2HMyB,CAAcR,EAAU,aACnB,GAAY,eAARC,GA3Jf,SAAoBM,GAClB,GAAInO,EACF,KAAM,qFACR,IAAKmO,EACH,KAAM,kDACR/P,IAAoB+P,EAAc,KAAO,GAAK,EAC9C,IAAIzB,EAAU9B,GAAQgB,SAASuC,GAC/BzB,EAAQC,OAAOE,YACfjC,GAAQkC,eAAeJ,GACvB9B,GAAQE,eAAeuC,OAAOzC,GAAQE,eAAehJ,QAAQ4K,EAAQC,QAAS,GAC9ED,EAAQC,OAAOD,aAAU,CAC3B,CAiJM2B,CAAWT,EAAU,aAChB,GAAY,iBAARC,GAjJf,SAAsBM,GACpB,GAAInO,EACF,KAAM,uFACR,IAAKmO,EACH,KAAM,oDACMvD,GAAQgB,SAASuC,GACvBxB,OAAOL,YAAY,CAAE,IAAO,UACtC,CA2IMgC,CAAaV,EAAU,aAClB,GAAY,WAARC,EACTlB,EAAO4B,QAAS,EACZb,GACFA,EAAkBf,GAChBA,EAAO6B,aACT7B,EAAO6B,oBACA7B,EAAO6B,iBAEX,GAAY,UAARX,EACTlL,EAAI,UAAYiL,EAAY,SAAI,KAAOA,EAAQ,WAC1C,GAAY,aAARC,EACT/K,EAAI,UAAY8K,EAAY,SAAI,KAAOA,EAAQ,WAC1C,GAAY,UAARC,EACTY,MAAM,UAAYb,EAAY,SAAI,KAAOA,EAAQ,WAC5C,GAAY,SAARC,EAAgB,CACVlB,EAAOD,SAAWpJ,QAAQC,KAAKjF,IAAqBqO,EAAOD,QAAQK,iBAAmB,IAAM,IAEzGnC,GAAQgC,mBAAmBD,EAE/B,MAAO,GAAY,gBAARkB,EACT,IACEa,GAAKd,EAAc,WACrB,CAAE,MAAOe,GACP,GAAIA,aAAcvN,GAChB,OACF,MAAMuN,CACR,KACiB,eAARd,EACTjD,GAAQgC,mBAAmBD,GACV,mBAARkB,EACTjD,GAAQ2C,sBAAsB9Q,EAAEsE,MACL,iBAAlBtE,EAAEsE,KAAK6N,OAChBjC,EAAOL,YAAY7P,EAAEsE,MAErB+B,EAAI,kCAAoC+K,GAE1CjD,GAAQkD,yCAAsC,CAChD,EACAnB,EAAO9L,QAAU,SAASpE,GACxBqG,EAAI,0BAA4BrG,EAAE8D,SAAW,IAAM9D,EAAEoS,OAAS,KAAOpS,EAAEqS,QACzE,EACIlP,IACF+M,EAAOoC,GAAG,WAAW,SAAShO,GAC5B4L,EAAOgB,UAAU,CAAE5M,QACrB,IACA4L,EAAOoC,GAAG,SAAS,SAAShO,GAC1B4L,EAAO9L,QAAQE,EACjB,IACA4L,EAAOoC,GAAG,QAAQ,SAAShO,GAC3B,KAEF4L,EAAOL,YAAY,CAAE,IAAO,OAAQ,UAAa1N,EAA4B,qBAAKzB,EAAY,WAAcO,EAAY,WAAcgG,GACxI,EAAG0H,qBAAsB,WACvB,IAAI4D,EAAgB9O,EAAW,wBAC/B0K,GAAQC,cAAcuC,KAAK,IAAI1L,OAAOsN,GACxC,EAAGC,aAAc,WAKf,OAJoC,GAAhCrE,GAAQC,cAAc7J,SACxB4J,GAAQQ,uBACRR,GAAQ6C,uBAAuB7C,GAAQC,cAAc,KAEhDD,GAAQC,cAAckB,KAC/B,EAAGmD,aAAc,SAASC,GAExB,IADA,IAAI1C,EAAI/J,YAAY0M,MAAQD,EACrBzM,YAAY0M,MAAQ3C,IAE7B,GAKA7N,EAA4B,oBAJ5B,SAA6ByQ,EAAUC,GACrCC,GAA6BF,EAAUC,GACvCE,GAAaH,EACf,EAKAzQ,EAAyB,iBAHzB,SAA0ByG,EAAK4E,GAC7B,OAAO5C,GAAU6C,IAAI7E,EAAdgC,CAAmB4C,EAC5B,EAOEU,GADE/K,EACoB,WACpB,IAAI6M,EAAI5M,EAAgB,SACxB,OAAc,IAAP4M,EAAE,GAAWA,EAAE,GAAK,GAC7B,EACSzM,EACa,WACpB,OAAO0C,YAAY0M,MAAQxQ,EAAsC,6BACnE,EAEsB,WACpB,OAAO8D,YAAY0M,KACrB,EACF,IAAIK,IAAmC,EACvC,SAASC,GAAS3U,GAEhB,OADAqD,IAAoBuR,OAAwB,GAAK5U,EAC1CA,CACT,CA2BA,SAAS6U,GAAcC,GACrBpX,KAAKoX,OAASA,EACdpX,KAAK4M,IAAMwK,EAAS,GACpBpX,KAAKqX,SAAW,SAASzW,GACvB+E,IAAoB3F,KAAK4M,IAAM,IAAM,GAAKhM,CAC5C,EACAZ,KAAKsX,SAAW,WACd,OAAO3R,IAAoB3F,KAAK4M,IAAM,IAAM,EAC9C,EACA5M,KAAKuX,eAAiB,SAASC,GAC7B7R,IAAoB3F,KAAK4M,IAAM,IAAM,GAAK4K,CAC5C,EACAxX,KAAKyX,eAAiB,WACpB,OAAO9R,IAAoB3F,KAAK4M,IAAM,IAAM,EAC9C,EACA5M,KAAK0X,aAAe,SAASC,GAC3BhS,IAAoB3F,KAAK4M,MAAQ,GAAK+K,CACxC,EACA3X,KAAK4X,WAAa,SAASC,GACzBA,EAASA,EAAS,EAAI,EACtB7S,IAAmBhF,KAAK4M,IAAM,KAAO,GAAKiL,CAC5C,EACA7X,KAAK8X,WAAa,WAChB,OAAkD,GAA3C9S,IAAmBhF,KAAK4M,IAAM,KAAO,EAC9C,EACA5M,KAAK+X,aAAe,SAASC,GAC3BA,EAAWA,EAAW,EAAI,EAC1BhT,IAAmBhF,KAAK4M,IAAM,KAAO,GAAKoL,CAC5C,EACAhY,KAAKiY,aAAe,WAClB,OAAkD,GAA3CjT,IAAmBhF,KAAK4M,IAAM,KAAO,EAC9C,EACA5M,KAAKwP,KAAO,SAAS5O,EAAM4W,GACzBxX,KAAKqX,SAASzW,GACdZ,KAAKuX,eAAeC,GACpBxX,KAAK0X,aAAa,GAClB1X,KAAK4X,YAAW,GAChB5X,KAAK+X,cAAa,EACpB,EACA/X,KAAKkY,QAAU,WACbrN,QAAQsN,IAAIxS,IAAqB3F,KAAK4M,IAAM,GAAK,EAAG,EACtD,EACA5M,KAAKoY,YAAc,WAEjB,OAAgB,IADLvN,QAAQwN,IAAI1S,IAAqB3F,KAAK4M,IAAM,GAAK,EAAG,EAEjE,CACF,CAUA,IAAI0L,GAAO,CAAEC,UAAW,SAASzQ,GAE/B,MADkB,gEACC0Q,KAAK1Q,GAAUW,MAAM,EAC1C,EAAGgQ,eAAgB,SAASC,EAAOC,GAEjC,IADA,IAAIC,EAAK,EACAlY,EAAIgY,EAAMnQ,OAAS,EAAG7H,GAAK,EAAGA,IAAK,CAC1C,IAAImY,EAAOH,EAAMhY,GACJ,MAATmY,EACFH,EAAM9D,OAAOlU,EAAG,GACE,OAATmY,GACTH,EAAM9D,OAAOlU,EAAG,GAChBkY,KACSA,IACTF,EAAM9D,OAAOlU,EAAG,GAChBkY,IAEJ,CACA,GAAID,EACF,KAAOC,EAAIA,IACTF,EAAMI,QAAQ,MAGlB,OAAOJ,CACT,EAAGK,UAAW,SAASrR,GACrB,IAAIsR,EAAgC,MAAnBtR,EAAKuR,OAAO,GAAYC,EAAoC,MAApBxR,EAAK4B,QAAQ,GAUtE,OATA5B,EAAO4Q,GAAKG,eAAe/Q,EAAKyR,MAAM,KAAKC,QAAO,SAASC,GACzD,QAASA,CACX,KAAKL,GAAYM,KAAK,OACRN,IACZtR,EAAO,KAELA,GAAQwR,IACVxR,GAAQ,MAEFsR,EAAa,IAAM,IAAMtR,CACnC,EAAGE,QAAS,SAASF,GACnB,IAAI6R,EAASjB,GAAKC,UAAU7Q,GAAO8R,EAAOD,EAAO,GAAIE,EAAMF,EAAO,GAClE,OAAKC,GAASC,GAGVA,IACFA,EAAMA,EAAInQ,OAAO,EAAGmQ,EAAIlR,OAAS,IAE5BiR,EAAOC,GALL,GAMX,EAAGC,SAAU,SAAShS,GACpB,GAAa,MAATA,EACF,MAAO,IAGT,IAAIiS,GADJjS,GADAA,EAAO4Q,GAAKS,UAAUrR,IACVc,QAAQ,MAAO,KACNe,YAAY,KACjC,OAAmB,IAAfoQ,EACKjS,EACFA,EAAK4B,OAAOqQ,EAAY,EACjC,EAAGC,QAAS,SAASlS,GACnB,OAAO4Q,GAAKC,UAAU7Q,GAAM,EAC9B,EAAG4R,KAAM,WACP,IAAIO,EAAQC,MAAM/X,UAAU0G,MAAM3F,KAAKiX,UAAW,GAClD,OAAOzB,GAAKS,UAAUc,EAAMP,KAAK,KACnC,EAAGU,MAAO,SAASC,EAAGC,GACpB,OAAO5B,GAAKS,UAAUkB,EAAI,IAAMC,EAClC,GAqBA,IAAIC,GAAU,CAAExW,QAAS,WAEvB,IADA,IAAIyW,EAAe,GAAIC,GAAmB,EACjC3Z,EAAIqZ,UAAUxR,OAAS,EAAG7H,IAAM,IAAM2Z,EAAkB3Z,IAAK,CACpE,IAAIgH,EAAOhH,GAAK,EAAIqZ,UAAUrZ,GAAK6O,GAAG+K,MACtC,GAAoB,kBAAT5S,EACT,MAAM,IAAI6S,UAAU,6CACf,IAAK7S,EACV,MAAO,GAET0S,EAAe1S,EAAO,IAAM0S,EAC5BC,EAAsC,MAAnB3S,EAAKuR,OAAO,EACjC,CAIA,OAAQoB,EAAmB,IAAM,KAHjCD,EAAe9B,GAAKG,eAAe2B,EAAajB,MAAM,KAAKC,QAAO,SAASC,GACzE,QAASA,CACX,KAAKgB,GAAkBf,KAAK,OAC2B,GACzD,EAAGkB,SAAU,SAASC,EAAMC,GAG1B,SAASC,EAAKC,GAEZ,IADA,IAAItZ,EAAQ,EACLA,EAAQsZ,EAAIrS,QACE,KAAfqS,EAAItZ,GADiBA,KAK3B,IADA,IAAIuZ,EAAMD,EAAIrS,OAAS,EAChBsS,GAAO,GACK,KAAbD,EAAIC,GADOA,KAIjB,OAAIvZ,EAAQuZ,EACH,GACFD,EAAInS,MAAMnH,EAAOuZ,EAAMvZ,EAAQ,EACxC,CAhBAmZ,EAAON,GAAQxW,QAAQ8W,GAAMnR,OAAO,GACpCoR,EAAKP,GAAQxW,QAAQ+W,GAAIpR,OAAO,GAoBhC,IAJA,IAAIwR,EAAYH,EAAKF,EAAKtB,MAAM,MAC5B4B,EAAUJ,EAAKD,EAAGvB,MAAM,MACxB5Q,EAASyS,KAAKC,IAAIH,EAAUvS,OAAQwS,EAAQxS,QAC5C2S,EAAkB3S,EACb7H,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1B,GAAIoa,EAAUpa,KAAOqa,EAAQra,GAAI,CAC/Bwa,EAAkBxa,EAClB,KACF,CAEF,IAAIya,EAAc,GAClB,IAASza,EAAIwa,EAAiBxa,EAAIoa,EAAUvS,OAAQ7H,IAClDya,EAAYxG,KAAK,MAGnB,OADAwG,EAAcA,EAAYC,OAAOL,EAAQtS,MAAMyS,KAC5B5B,KAAK,IAC1B,GACI3J,GAAM,CAAE0L,KAAM,GAAI7L,KAAM,WAC5B,EAAG8L,SAAU,WACb,EAAGC,SAAU,SAASC,EAAKC,GACzB9L,GAAI0L,KAAKG,GAAO,CAAEE,MAAO,GAAIC,OAAQ,GAAIF,OACzClM,GAAGqM,eAAeJ,EAAK7L,GAAIkM,WAC7B,EAAGA,WAAY,CAAElS,KAAM,SAASmS,GAC9B,IAAIC,EAAMpM,GAAI0L,KAAKS,EAAOxU,KAAK0U,MAC/B,IAAKD,EACH,MAAM,IAAIxM,GAAG0M,WAAW,IAE1BH,EAAOC,IAAMA,EACbD,EAAOI,UAAW,CACpB,EAAGC,MAAO,SAASL,GACjBA,EAAOC,IAAIN,IAAIW,MAAMN,EAAOC,IAC9B,EAAGK,MAAO,SAASN,GACjBA,EAAOC,IAAIN,IAAIW,MAAMN,EAAOC,IAC9B,EAAGM,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQiU,GACjD,IAAKV,EAAOC,MAAQD,EAAOC,IAAIN,IAAIgB,SACjC,MAAM,IAAIlN,GAAG0M,WAAW,IAG1B,IADA,IAAIS,EAAY,EACPhc,EAAI,EAAGA,EAAI6H,EAAQ7H,IAAK,CAC/B,IAAI6Y,EACJ,IACEA,EAASuC,EAAOC,IAAIN,IAAIgB,SAASX,EAAOC,IAC1C,CAAE,MAAO/X,IACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CACA,QAAe,IAAX1C,GAAmC,IAAdmD,EACvB,MAAM,IAAInN,GAAG0M,WAAW,GAE1B,GAAe,OAAX1C,QAA8B,IAAXA,EACrB,MACFmD,IACAJ,EAAQC,EAAS7b,GAAK6Y,CACxB,CAIA,OAHImD,IACFZ,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExB+F,CACT,EAAGG,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQiU,GAClD,IAAKV,EAAOC,MAAQD,EAAOC,IAAIN,IAAIqB,SACjC,MAAM,IAAIvN,GAAG0M,WAAW,IAE1B,IACE,IAAK,IAAIvb,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1Bob,EAAOC,IAAIN,IAAIqB,SAAShB,EAAOC,IAAKO,EAAQC,EAAS7b,GAEzD,CAAE,MAAOsD,IACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CAIA,OAHI1T,IACFuT,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExBjW,CACT,GAAKqc,gBAAiB,CAAEN,SAAU,SAASV,GACzC,IAAKA,EAAIL,MAAMnT,OAAQ,CACrB,IAAIgR,EAAS,KACb,GAAIpS,EAAqB,CACvB,IACIiH,EAAM4O,EAAOC,MADH,KAEVP,EAAY,EAChB,IACEA,EAAYlW,EAAO0W,SAAS9V,EAAQ+V,MAAMC,GAAIhP,EAAK,EAJvC,IAImD,KACjE,CAAE,MAAOpK,IACP,IAAIA,GAAEqZ,WAAWC,SAAS,OAGxB,MAAMtZ,GAFN0Y,EAAY,CAGhB,CAEEnD,EADEmD,EAAY,EACLtO,EAAI3F,MAAM,EAAGiU,GAAWW,SAAS,SAEjC,IAEb,KAA4B,oBAAVrW,QAAiD,mBAAjBA,OAAOuW,OAExC,QADfhE,EAASvS,OAAOuW,OAAO,cAErBhE,GAAU,MAEgB,mBAAZiE,UAED,QADfjE,EAASiE,cAEPjE,GAAU,MAGd,IAAKA,EACH,OAAO,KAETwC,EAAIL,MAAQ+B,GAAmBlE,GAAQ,EACzC,CACA,OAAOwC,EAAIL,MAAMpK,OACnB,EAAGwL,SAAU,SAASf,EAAK2B,GACb,OAARA,GAAwB,KAARA,GAClBxT,EAAI2B,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,IAEF,GAAP+B,GACF3B,EAAIJ,OAAOhH,KAAK+I,EAEtB,EAAGtB,MAAO,SAASL,GACbA,EAAIJ,QAAUI,EAAIJ,OAAOpT,OAAS,IACpC2B,EAAI2B,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,GAEjB,GAAKgC,iBAAkB,CAAEb,SAAU,SAASf,EAAK2B,GACnC,OAARA,GAAwB,KAARA,GAClBrT,EAAIwB,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,IAEF,GAAP+B,GACF3B,EAAIJ,OAAOhH,KAAK+I,EAEtB,EAAGtB,MAAO,SAASL,GACbA,EAAIJ,QAAUI,EAAIJ,OAAOpT,OAAS,IACpC8B,EAAIwB,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,GAEjB,IAIA,SAASiC,GAAUC,GACjBA,EAzoCF,SAAqBA,EAAMC,GAGzB,OAFKA,IACHA,EAASvT,GACJyQ,KAAK+C,KAAKF,EAAOC,GAAUA,CACpC,CAqoCSE,CAAYH,EAAM,OACzB,IAAIjR,EAAMqR,GAAU,MAAOJ,GAC3B,OAAKjR,GANP,SAAoBsR,EAASL,GAC3BxY,IAAmB8Y,KAAK,EAAGD,EAASA,EAAUL,EAChD,CAMEO,CAAWxR,EAAKiR,GACTjR,GAFE,CAGX,CACA,IAAIyR,GAAQ,CAAEC,UAAW,KAAMC,MAAO,SAASA,GAC7C,OAAOF,GAAMG,WAAW,KAAM,IAAK,MAAa,EAClD,EAAGA,WAAY,SAASC,EAAQC,EAAOC,EAAMnD,GAC3C,GAAIjM,GAAGqP,SAASD,IAASpP,GAAGsP,OAAOF,GACjC,MAAM,IAAIpP,GAAG0M,WAAW,IAErBoC,GAAMC,YACTD,GAAMC,UAAY,CAAE7E,IAAK,CAAEnS,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASC,OAAQZ,GAAMU,SAASE,OAAQC,MAAOb,GAAMU,SAASG,MAAOC,OAAQd,GAAMU,SAASI,OAAQC,OAAQf,GAAMU,SAASK,OAAQC,MAAOhB,GAAMU,SAASM,MAAOC,QAASjB,GAAMU,SAASO,QAASC,QAASlB,GAAMU,SAASQ,SAAWzD,OAAQ,CAAE0D,OAAQnB,GAAMxC,WAAW2D,SAAYzO,KAAM,CAAEzJ,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWlD,OAAQ,CAAE0D,OAAQnB,GAAMxC,WAAW2D,OAAQnD,KAAMgC,GAAMxC,WAAWQ,KAAMQ,MAAOwB,GAAMxC,WAAWgB,MAAO4C,SAAUpB,GAAMxC,WAAW4D,SAAUC,KAAMrB,GAAMxC,WAAW6D,KAAMC,MAAOtB,GAAMxC,WAAW8D,QAAWC,KAAM,CAAEtY,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASa,SAAUxB,GAAMU,SAASc,UAAY/D,OAAQ,CAAC,GAAKgE,OAAQ,CAAExY,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWlD,OAAQvM,GAAGwQ,qBAEv3B,IAAIzY,EAAOiI,GAAGiP,WAAWC,EAAQC,EAAOC,EAAMnD,GAsB9C,OArBIjM,GAAGyQ,MAAM1Y,EAAKqX,OAChBrX,EAAKyX,SAAWV,GAAMC,UAAU7E,IAAInS,KACpCA,EAAKuU,WAAawC,GAAMC,UAAU7E,IAAIqC,OACtCxU,EAAK2Y,SAAW,CAAC,GACR1Q,GAAG2Q,OAAO5Y,EAAKqX,OACxBrX,EAAKyX,SAAWV,GAAMC,UAAUvN,KAAKzJ,KACrCA,EAAKuU,WAAawC,GAAMC,UAAUvN,KAAK+K,OACvCxU,EAAK6Y,UAAY,EACjB7Y,EAAK2Y,SAAW,MACP1Q,GAAG6Q,OAAO9Y,EAAKqX,OACxBrX,EAAKyX,SAAWV,GAAMC,UAAUsB,KAAKtY,KACrCA,EAAKuU,WAAawC,GAAMC,UAAUsB,KAAK9D,QAC9BvM,GAAG8Q,SAAS/Y,EAAKqX,QAC1BrX,EAAKyX,SAAWV,GAAMC,UAAUwB,OAAOxY,KACvCA,EAAKuU,WAAawC,GAAMC,UAAUwB,OAAOhE,QAE3CxU,EAAKqV,UAAYC,KAAKjG,MAClB8H,IACFA,EAAOwB,SAASvB,GAASpX,EACzBmX,EAAO9B,UAAYrV,EAAKqV,WAEnBrV,CACT,EAAGgZ,wBAAyB,SAAShZ,GACnC,OAAKA,EAAK2Y,SAEN3Y,EAAK2Y,SAAS9T,SACT7E,EAAK2Y,SAAS9T,SAAS,EAAG7E,EAAK6Y,WACjC,IAAIlY,WAAWX,EAAK2Y,UAHlB,IAAIhY,WAAW,EAI1B,EAAGsY,kBAAmB,SAASjZ,EAAMkZ,GACnCA,KAAiB,EACjB,IAAIC,EAAenZ,EAAK2Y,SAAW3Y,EAAK2Y,SAAS1X,OAAS,EAC1D,KAAIkY,GAAgBD,GAApB,CAGAA,EAAcxF,KAAK3Z,IAAImf,EAAaC,GAAgBA,EADxB,QAC+D,EAAI,SAAW,GACtF,GAAhBA,IACFD,EAAcxF,KAAK3Z,IAAImf,EAAa,MACtC,IAAIE,EAAcpZ,EAAK2Y,SACvB3Y,EAAK2Y,SAAW,IAAIhY,WAAWuY,GAC3BlZ,EAAK6Y,UAAY,GACnB7Y,EAAK2Y,SAASU,IAAID,EAAYvU,SAAS,EAAG7E,EAAK6Y,WAAY,EARrD,CASV,EAAGS,kBAAmB,SAAStZ,EAAMuZ,GAEnC,GADAA,KAAa,EACTvZ,EAAK6Y,WAAaU,EAEtB,GAAe,GAAXA,EACFvZ,EAAK2Y,SAAW,KAChB3Y,EAAK6Y,UAAY,MACZ,CACL,IAAIO,EAAcpZ,EAAK2Y,SACvB3Y,EAAK2Y,SAAW,IAAIhY,WAAW4Y,GAC3BH,GACFpZ,EAAK2Y,SAASU,IAAID,EAAYvU,SAAS,EAAG6O,KAAKC,IAAI4F,EAASvZ,EAAK6Y,aAEnE7Y,EAAK6Y,UAAYU,CACnB,CACF,EAAG9B,SAAU,CAAED,QAAS,SAASxX,GAC/B,IAAIwZ,EAAO,CAAC,EAsBZ,OArBAA,EAAKtF,IAAMjM,GAAG8Q,SAAS/Y,EAAKqX,MAAQrX,EAAK/G,GAAK,EAC9CugB,EAAKC,IAAMzZ,EAAK/G,GAChBugB,EAAKnC,KAAOrX,EAAKqX,KACjBmC,EAAKE,MAAQ,EACbF,EAAKG,IAAM,EACXH,EAAKI,IAAM,EACXJ,EAAK9E,KAAO1U,EAAK0U,KACbzM,GAAGyQ,MAAM1Y,EAAKqX,MAChBmC,EAAKjD,KAAO,KACHtO,GAAG2Q,OAAO5Y,EAAKqX,MACxBmC,EAAKjD,KAAOvW,EAAK6Y,UACR5Q,GAAG6Q,OAAO9Y,EAAKqX,MACxBmC,EAAKjD,KAAOvW,EAAKsY,KAAKrX,OAEtBuY,EAAKjD,KAAO,EAEdiD,EAAKK,MAAQ,IAAIvE,KAAKtV,EAAKqV,WAC3BmE,EAAKM,MAAQ,IAAIxE,KAAKtV,EAAKqV,WAC3BmE,EAAKO,MAAQ,IAAIzE,KAAKtV,EAAKqV,WAC3BmE,EAAKQ,QAAU,KACfR,EAAKS,OAASvG,KAAK+C,KAAK+C,EAAKjD,KAAOiD,EAAKQ,SAClCR,CACT,EAAG9B,QAAS,SAAS1X,EAAMwZ,QACP,IAAdA,EAAKnC,OACPrX,EAAKqX,KAAOmC,EAAKnC,WAEI,IAAnBmC,EAAKnE,YACPrV,EAAKqV,UAAYmE,EAAKnE,gBAEN,IAAdmE,EAAKjD,MACPQ,GAAMuC,kBAAkBtZ,EAAMwZ,EAAKjD,KAEvC,EAAGoB,OAAQ,SAASR,EAAQC,GAC1B,MAAMnP,GAAGiS,cAAc,GACzB,EAAGtC,MAAO,SAAST,EAAQC,EAAOC,EAAMnD,GACtC,OAAO6C,GAAMG,WAAWC,EAAQC,EAAOC,EAAMnD,EAC/C,EAAG2D,OAAQ,SAASsC,EAAUC,EAASC,GACrC,GAAIpS,GAAGyQ,MAAMyB,EAAS9C,MAAO,CAC3B,IAAIiD,EACJ,IACEA,EAAWrS,GAAGsS,WAAWH,EAASC,EACpC,CAAE,MAAO3d,IACT,CACA,GAAI4d,EACF,IAAK,IAAIlhB,KAAKkhB,EAAS3B,SACrB,MAAM,IAAI1Q,GAAG0M,WAAW,GAG9B,QACOwF,EAAShD,OAAOwB,SAASwB,EAASK,MACzCL,EAAShD,OAAO9B,UAAYC,KAAKjG,MACjC8K,EAASK,KAAOH,EAChBD,EAAQzB,SAAS0B,GAAYF,EAC7BC,EAAQ/E,UAAY8E,EAAShD,OAAO9B,UACpC8E,EAAShD,OAASiD,CACpB,EAAGtC,OAAQ,SAASX,EAAQC,UACnBD,EAAOwB,SAASvB,GACvBD,EAAO9B,UAAYC,KAAKjG,KAC1B,EAAG0I,MAAO,SAASZ,EAAQC,GACzB,IAAIpX,EAAOiI,GAAGsS,WAAWpD,EAAQC,GACjC,IAAK,IAAIhe,KAAK4G,EAAK2Y,SACjB,MAAM,IAAI1Q,GAAG0M,WAAW,WAEnBwC,EAAOwB,SAASvB,GACvBD,EAAO9B,UAAYC,KAAKjG,KAC1B,EAAG2I,QAAS,SAAShY,GACnB,IAAIya,EAAU,CAAC,IAAK,MACpB,IAAK,IAAIC,KAAQ1a,EAAK2Y,SACf3Y,EAAK2Y,SAASje,eAAeggB,IAGlCD,EAAQpN,KAAKqN,GAEf,OAAOD,CACT,EAAGxC,QAAS,SAASd,EAAQwD,EAASC,GACpC,IAAI5a,EAAO+W,GAAMG,WAAWC,EAAQwD,EAAS,MAAa,GAE1D,OADA3a,EAAKsY,KAAOsC,EACL5a,CACT,EAAGuY,SAAU,SAASvY,GACpB,IAAKiI,GAAG6Q,OAAO9Y,EAAKqX,MAClB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,OAAO3U,EAAKsY,IACd,GAAK/D,WAAY,CAAEQ,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GACjE,IAAIlC,EAAWnE,EAAOxU,KAAK2Y,SAC3B,GAAIkC,GAAYrG,EAAOxU,KAAK6Y,UAC1B,OAAO,EACT,IAAItC,EAAO7C,KAAKC,IAAIa,EAAOxU,KAAK6Y,UAAYgC,EAAU5Z,GACtD,GAAIsV,EAAO,GAAKoC,EAAS9T,SACvBmQ,EAAQqE,IAAIV,EAAS9T,SAASgW,EAAUA,EAAWtE,GAAOtB,QAE1D,IAAK,IAAI7b,EAAI,EAAGA,EAAImd,EAAMnd,IACxB4b,EAAQC,EAAS7b,GAAKuf,EAASkC,EAAWzhB,GAE9C,OAAOmd,CACT,EAAGhB,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQ4Z,EAAUC,GAI5D,GAHI9F,EAAQpX,SAAWF,IAAmBE,SACxCkd,GAAS,IAEN7Z,EACH,OAAO,EACT,IAAIjB,EAAOwU,EAAOxU,KAElB,GADAA,EAAKqV,UAAYC,KAAKjG,MAClB2F,EAAQnQ,YAAc7E,EAAK2Y,UAAY3Y,EAAK2Y,SAAS9T,UAAW,CAClE,GAAIiW,EAGF,OAFA9a,EAAK2Y,SAAW3D,EAAQnQ,SAASoQ,EAAQA,EAAShU,GAClDjB,EAAK6Y,UAAY5X,EACVA,EACF,GAAuB,IAAnBjB,EAAK6Y,WAAgC,IAAbgC,EAGjC,OAFA7a,EAAK2Y,SAAW3D,EAAQ7T,MAAM8T,EAAQA,EAAShU,GAC/CjB,EAAK6Y,UAAY5X,EACVA,EACF,GAAI4Z,EAAW5Z,GAAUjB,EAAK6Y,UAEnC,OADA7Y,EAAK2Y,SAASU,IAAIrE,EAAQnQ,SAASoQ,EAAQA,EAAShU,GAAS4Z,GACtD5Z,CAEX,CAEA,GADA8V,GAAMkC,kBAAkBjZ,EAAM6a,EAAW5Z,GACrCjB,EAAK2Y,SAAS9T,UAAYmQ,EAAQnQ,SACpC7E,EAAK2Y,SAASU,IAAIrE,EAAQnQ,SAASoQ,EAAQA,EAAShU,GAAS4Z,QAE7D,IAAK,IAAIzhB,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1B4G,EAAK2Y,SAASkC,EAAWzhB,GAAK4b,EAAQC,EAAS7b,GAInD,OADA4G,EAAK6Y,UAAYnF,KAAK3Z,IAAIiG,EAAK6Y,UAAWgC,EAAW5Z,GAC9CA,CACT,EAAGiX,OAAQ,SAAS1D,EAAQS,EAAQ8F,GAClC,IAAIF,EAAW5F,EAQf,GAPe,IAAX8F,EACFF,GAAYrG,EAAOqG,SACC,IAAXE,GACL9S,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,QACxBwD,GAAYrG,EAAOxU,KAAK6Y,WAGxBgC,EAAW,EACb,MAAM,IAAI5S,GAAG0M,WAAW,IAE1B,OAAOkG,CACT,EAAG1C,SAAU,SAAS3D,EAAQS,EAAQhU,GACpC8V,GAAMkC,kBAAkBzE,EAAOxU,KAAMiV,EAAShU,GAC9CuT,EAAOxU,KAAK6Y,UAAYnF,KAAK3Z,IAAIya,EAAOxU,KAAK6Y,UAAW5D,EAAShU,EACnE,EAAGmX,KAAM,SAAS5D,EAAQoC,EAAS3V,EAAQ4Z,EAAUG,EAAMC,GACzD,GAAgB,IAAZrE,EACF,MAAM,IAAI3O,GAAG0M,WAAW,IAE1B,IAAK1M,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,MACzB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAIrP,EACA4V,EACAvC,EAAWnE,EAAOxU,KAAK2Y,SAC3B,GAAc,EAARsC,GAActC,EAAS/a,SAAWA,EAGjC,CAUL,IATIid,EAAW,GAAKA,EAAW5Z,EAAS0X,EAAS1X,UAE7C0X,EADEA,EAAS9T,SACA8T,EAAS9T,SAASgW,EAAUA,EAAW5Z,GAEvCuR,MAAM/X,UAAU0G,MAAM3F,KAAKmd,EAAUkC,EAAUA,EAAW5Z,IAGzEia,GAAY,IACZ5V,EAAMgR,GAAUrV,IAEd,MAAM,IAAIgH,GAAG0M,WAAW,IAE1BrP,KAAS,EACT5H,IAAmB2b,IAAIV,EAAUrT,IAAQ,EAC3C,MAjBE4V,GAAY,EACZ5V,EAAMqT,EAASwC,WAiBjB,MAAO,CAAE7V,MAAK4V,YAChB,EAAG7C,MAAO,SAAS7D,EAAQQ,EAASC,EAAQhU,EAAQma,GAClD,IAAKnT,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,MACzB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,GAAgB,EAAZyG,EACF,OAAO,EAEUrE,GAAMxC,WAAWgB,MAAMf,EAAQQ,EAAS,EAAG/T,EAAQgU,GAAQ,GAC9E,OAAO,CACT,IAkBA,IAAIhN,GAAK,CAAEiK,KAAM,KAAMmJ,OAAQ,GAAIC,QAAS,CAAC,EAAGC,QAAS,GAAIC,UAAW,EAAGC,UAAW,KAAMC,YAAa,IAAKvT,aAAa,EAAOC,mBAAmB,EAAMuT,iBAAkB,CAAC,EAAGC,SAAU,CAAEC,UAAW,CAAEC,KAAM,EAAGC,MAAO,IAAOpH,WAAY,KAAMuF,cAAe,CAAC,EAAG8B,YAAa,KAAMC,eAAgB,EAAGC,WAAY,SAAS9b,EAAM+b,GAGrU,GADAA,EAAOA,GAAQ,CAAC,IADhB/b,EAAOyS,GAAQxW,QAAQ4L,GAAG+K,MAAO5S,IAG/B,MAAO,CAAEA,KAAM,GAAIJ,KAAM,MAC3B,IAAIoc,EAAW,CAAEC,cAAc,EAAMC,cAAe,GACpD,IAAK,IAAI5B,KAAQ0B,OACI,IAAfD,EAAKzB,KACPyB,EAAKzB,GAAQ0B,EAAS1B,IAG1B,GAAIyB,EAAKG,cAAgB,EACvB,MAAM,IAAIrU,GAAG0M,WAAW,IAO1B,IALA,IAAIvD,EAAQJ,GAAKG,eAAe/Q,EAAKyR,MAAM,KAAKC,QAAO,SAASC,GAC9D,QAASA,CACX,KAAI,GACAwK,EAAUtU,GAAGiK,KACbsK,EAAe,IACVpjB,EAAI,EAAGA,EAAIgY,EAAMnQ,OAAQ7H,IAAK,CACrC,IAAIqjB,EAASrjB,IAAMgY,EAAMnQ,OAAS,EAClC,GAAIwb,GAAUN,EAAKhF,OACjB,MASF,GAPAoF,EAAUtU,GAAGsS,WAAWgC,EAASnL,EAAMhY,IACvCojB,EAAexL,GAAK0B,MAAM8J,EAAcpL,EAAMhY,IAC1C6O,GAAGyU,aAAaH,MACbE,GAAUA,GAAUN,EAAKE,gBAC5BE,EAAUA,EAAQI,QAAQzK,OAGzBuK,GAAUN,EAAKS,OAElB,IADA,IAAItS,EAAQ,EACLrC,GAAG6Q,OAAOyD,EAAQlF,OAAO,CAC9B,IAAIiB,EAAOrQ,GAAGsQ,SAASiE,GAIvB,GAHAA,EAAe3J,GAAQxW,QAAQ2U,GAAK1Q,QAAQkc,GAAelE,GAE3DiE,EADatU,GAAGiU,WAAWM,EAAc,CAAEF,cAAeH,EAAKG,gBAC9Ctc,KACbsK,IAAU,GACZ,MAAM,IAAIrC,GAAG0M,WAAW,GAE5B,CAEJ,CACA,MAAO,CAAEvU,KAAMoc,EAAcxc,KAAMuc,EACrC,EAAGM,QAAS,SAAS7c,GAEnB,IADA,IAAII,IACS,CACX,GAAI6H,GAAG6U,OAAO9c,GAAO,CACnB,IAAIiX,EAAQjX,EAAKiX,MAAM8F,WACvB,OAAK3c,EAE8B,MAA5B6W,EAAMA,EAAMhW,OAAS,GAAagW,EAAQ,IAAM7W,EAAO6W,EAAQ7W,EAD7D6W,CAEX,CACA7W,EAAOA,EAAOJ,EAAKwa,KAAO,IAAMpa,EAAOJ,EAAKwa,KAC5Cxa,EAAOA,EAAKmX,MACd,CACF,EAAG6F,SAAU,SAASC,EAAU7F,GAE9B,IADA,IAAI8F,EAAO,EACF9jB,EAAI,EAAGA,EAAIge,EAAMnW,OAAQ7H,IAChC8jB,GAAQA,GAAQ,GAAKA,EAAO9F,EAAMxR,WAAWxM,GAAK,EAEpD,OAAQ6jB,EAAWC,IAAS,GAAKjV,GAAGwT,UAAUxa,MAChD,EAAGkc,YAAa,SAASnd,GACvB,IAAIkd,EAAOjV,GAAG+U,SAAShd,EAAKmX,OAAOle,GAAI+G,EAAKwa,MAC5Cxa,EAAKod,UAAYnV,GAAGwT,UAAUyB,GAC9BjV,GAAGwT,UAAUyB,GAAQld,CACvB,EAAGqd,eAAgB,SAASrd,GAC1B,IAAIkd,EAAOjV,GAAG+U,SAAShd,EAAKmX,OAAOle,GAAI+G,EAAKwa,MAC5C,GAAIvS,GAAGwT,UAAUyB,KAAUld,EACzBiI,GAAGwT,UAAUyB,GAAQld,EAAKod,eAG1B,IADA,IAAIb,EAAUtU,GAAGwT,UAAUyB,GACpBX,GAAS,CACd,GAAIA,EAAQa,YAAcpd,EAAM,CAC9Buc,EAAQa,UAAYpd,EAAKod,UACzB,KACF,CACAb,EAAUA,EAAQa,SACpB,CAEJ,EAAG7C,WAAY,SAASpD,EAAQC,GAC9B,IAAIkG,EAAUrV,GAAGsV,UAAUpG,GAC3B,GAAImG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,EAASnG,GAGnC,IADA,IAAI+F,EAAOjV,GAAG+U,SAAS7F,EAAOle,GAAIme,GACzBpX,EAAOiI,GAAGwT,UAAUyB,GAAOld,EAAMA,EAAOA,EAAKod,UAAW,CAC/D,IAAII,EAAWxd,EAAKwa,KACpB,GAAIxa,EAAKmX,OAAOle,KAAOke,EAAOle,IAAMukB,IAAapG,EAC/C,OAAOpX,CAEX,CACA,OAAOiI,GAAG0P,OAAOR,EAAQC,EAC3B,EAAGF,WAAY,SAASC,EAAQC,EAAOC,EAAM3C,GAC3C,IAAI1U,EAAO,IAAIiI,GAAGwV,OAAOtG,EAAQC,EAAOC,EAAM3C,GAE9C,OADAzM,GAAGkV,YAAYnd,GACRA,CACT,EAAG0d,YAAa,SAAS1d,GACvBiI,GAAGoV,eAAerd,EACpB,EAAG8c,OAAQ,SAAS9c,GAClB,OAAOA,IAASA,EAAKmX,MACvB,EAAGuF,aAAc,SAAS1c,GACxB,QAASA,EAAK2c,OAChB,EAAG/D,OAAQ,SAASvB,GAClB,OAA0B,SAAX,MAAPA,EACV,EAAGqB,MAAO,SAASrB,GACjB,OAA0B,SAAX,MAAPA,EACV,EAAGyB,OAAQ,SAASzB,GAClB,OAA0B,SAAX,MAAPA,EACV,EAAG0B,SAAU,SAAS1B,GACpB,OAA0B,QAAX,MAAPA,EACV,EAAGC,SAAU,SAASD,GACpB,OAA0B,SAAX,MAAPA,EACV,EAAGE,OAAQ,SAASF,GAClB,OAA0B,QAAX,MAAPA,EACV,EAAGsG,SAAU,SAAStG,GACpB,OAA0B,SAAX,MAAPA,EACV,EAAGuG,UAAW,CAAE,EAAK,EAAG,KAAM,EAAG,EAAK,IAAK,KAAM,IAAK,EAAK,KAAM,KAAM,MAAQC,kBAAmB,SAAS/Y,GACzG,IAAImW,EAAQhT,GAAG2V,UAAU9Y,GACzB,GAAqB,qBAAVmW,EACT,MAAM,IAAIliB,MAAM,2BAA6B+L,GAE/C,OAAOmW,CACT,EAAG6C,wBAAyB,SAASC,GACnC,IAAIC,EAAQ,CAAC,IAAK,IAAK,MAAa,EAAPD,GAI7B,OAHW,IAAPA,IACFC,GAAS,KAEJA,CACT,EAAGC,gBAAiB,SAASje,EAAMge,GACjC,OAAI/V,GAAGG,qBAGH4V,EAAMhI,SAAS,MAAsB,IAAZhW,EAAKqX,SAEvB2G,EAAMhI,SAAS,MAAsB,IAAZhW,EAAKqX,SAE9B2G,EAAMhI,SAAS,MAAsB,GAAZhW,EAAKqX,MANhC,EAGA,CAOX,EAAGkG,UAAW,SAASpL,GACrB,IAAImL,EAAUrV,GAAGgW,gBAAgB9L,EAAK,KACtC,OAAImL,IAECnL,EAAIsF,SAASE,OAEX,EADE,EAEX,EAAGuG,UAAW,SAAS/L,EAAKiF,GAC1B,IACanP,GAAGsS,WAAWpI,EAAKiF,GAC9B,OAAO,EACT,CAAE,MAAO1a,IACT,CACA,OAAOuL,GAAGgW,gBAAgB9L,EAAK,KACjC,EAAGgM,UAAW,SAAShM,EAAKiF,EAAOgH,GACjC,IAAIpe,EACJ,IACEA,EAAOiI,GAAGsS,WAAWpI,EAAKiF,EAC5B,CAAE,MAAO1a,IACP,OAAOA,GAAE2hB,KACX,CACA,IAAIf,EAAUrV,GAAGgW,gBAAgB9L,EAAK,MACtC,GAAImL,EACF,OAAOA,EAET,GAAIc,EAAO,CACT,IAAKnW,GAAGyQ,MAAM1Y,EAAKqX,MACjB,OAAO,GAET,GAAIpP,GAAG6U,OAAO9c,IAASiI,GAAG4U,QAAQ7c,KAAUiI,GAAG+K,MAC7C,OAAO,EAEX,MACE,GAAI/K,GAAGyQ,MAAM1Y,EAAKqX,MAChB,OAAO,GAGX,OAAO,CACT,EAAGiH,QAAS,SAASte,EAAMib,GACzB,OAAKjb,EAGDiI,GAAG6Q,OAAO9Y,EAAKqX,MACV,GACEpP,GAAGyQ,MAAM1Y,EAAKqX,QACmB,MAAtCpP,GAAG6V,wBAAwB7C,IAA0B,IAARA,GACxC,GAGJhT,GAAGgW,gBAAgBje,EAAMiI,GAAG6V,wBAAwB7C,IATlD,EAUX,EAAGsD,aAAc,KAAMC,OAAQ,SAASC,EAAUC,GAChDD,EAAWA,GAAY,EACvBC,EAASA,GAAUzW,GAAGsW,aACtB,IAAK,IAAIzI,EAAK2I,EAAU3I,GAAM4I,EAAQ5I,IACpC,IAAK7N,GAAGsT,QAAQzF,GACd,OAAOA,EAGX,MAAM,IAAI7N,GAAG0M,WAAW,GAC1B,EAAGgK,UAAW,SAAS7I,GACrB,OAAO7N,GAAGsT,QAAQzF,EACpB,EAAG8I,aAAc,SAASpK,EAAQiK,EAAUC,GACrCzW,GAAG4W,WACN5W,GAAG4W,SAAW,WACd,EACA5W,GAAG4W,SAASpkB,UAAY,CAAEqkB,OAAQ,CAAE3U,IAAK,WACvC,OAAOzR,KAAKsH,IACd,EAAGqZ,IAAK,SAASjD,GACf1d,KAAKsH,KAAOoW,CACd,GAAK2I,OAAQ,CAAE5U,IAAK,WAClB,OAAkC,KAAb,QAAbzR,KAAKuiB,MACf,GAAK+D,QAAS,CAAE7U,IAAK,WACnB,OAAkC,KAAb,QAAbzR,KAAKuiB,MACf,GAAKgE,SAAU,CAAE9U,IAAK,WACpB,OAAoB,KAAbzR,KAAKuiB,KACd,KAEF,IAAIiE,EAAY,IAAIjX,GAAG4W,SACvB,IAAK,IAAI9M,KAAKyC,EACZ0K,EAAUnN,GAAKyC,EAAOzC,GAExByC,EAAS0K,EACT,IAAIpJ,EAAK7N,GAAGuW,OAAOC,EAAUC,GAG7B,OAFAlK,EAAOsB,GAAKA,EACZ7N,GAAGsT,QAAQzF,GAAMtB,EACVA,CACT,EAAG2K,YAAa,SAASrJ,GACvB7N,GAAGsT,QAAQzF,GAAM,IACnB,EAAG2C,kBAAmB,CAAEpW,KAAM,SAASmS,GACrC,IAAI4K,EAASnX,GAAGoX,UAAU7K,EAAOxU,KAAK0U,MACtCF,EAAOD,WAAa6K,EAAO7K,WACvBC,EAAOD,WAAWlS,MACpBmS,EAAOD,WAAWlS,KAAKmS,EAE3B,EAAG0D,OAAQ,WACT,MAAM,IAAIjQ,GAAG0M,WAAW,GAC1B,GAAK2K,MAAO,SAASpL,GACnB,OAAOA,GAAO,CAChB,EAAGqL,MAAO,SAASrL,GACjB,OAAa,IAANA,CACT,EAAGsL,QAAS,SAASC,EAAIC,GACvB,OAAOD,GAAM,EAAIC,CACnB,EAAGpL,eAAgB,SAASJ,EAAKC,GAC/BlM,GAAGqT,QAAQpH,GAAO,CAAEK,WAAYJ,EAClC,EAAGkL,UAAW,SAASnL,GACrB,OAAOjM,GAAGqT,QAAQpH,EACpB,EAAGyL,UAAW,SAAS1I,GAGrB,IAFA,IAAIoE,EAAS,GACTuE,EAAQ,CAAC3I,GACN2I,EAAM3e,QAAQ,CACnB,IAAI4e,EAAID,EAAM5T,MACdqP,EAAOhO,KAAKwS,GACZD,EAAMvS,KAAKtQ,MAAM6iB,EAAOC,EAAExE,OAC5B,CACA,OAAOA,CACT,EAAGyE,OAAQ,SAASC,EAAUlX,GACJ,oBAAbkX,IACTlX,EAAWkX,EACXA,GAAW,GAEb9X,GAAGgU,iBACChU,GAAGgU,eAAiB,GACtBlZ,EAAI,YAAckF,GAAGgU,eAAiB,2EAExC,IAAIZ,EAASpT,GAAG0X,UAAU1X,GAAGiK,KAAK+E,OAC9B+I,EAAY,EAChB,SAASC,EAAW3C,GAElB,OADArV,GAAGgU,iBACIpT,EAASyU,EAClB,CACA,SAASzgB,EAAKygB,GACZ,GAAIA,EACF,OAAKzgB,EAAKqjB,aAIV,GAHErjB,EAAKqjB,SAAU,EACRD,EAAW3C,MAIhB0C,GAAa3E,EAAOpa,QACxBgf,EAAW,KAEf,CACA5E,EAAO8E,SAAQ,SAASlJ,GACtB,IAAKA,EAAM3d,KAAKwmB,OACd,OAAOjjB,EAAK,MAEdoa,EAAM3d,KAAKwmB,OAAO7I,EAAO8I,EAAUljB,EACrC,GACF,EAAGoa,MAAO,SAAS3d,EAAM6iB,EAAMY,GAC7B,IAEI/c,EAFAkS,EAAsB,MAAf6K,EACPqD,GAAUrD,EAEd,GAAI7K,GAAQjK,GAAGiK,KACb,MAAM,IAAIjK,GAAG0M,WAAW,IACnB,IAAKzC,IAASkO,EAAQ,CAC3B,IAAIzI,EAAS1P,GAAGiU,WAAWa,EAAY,CAAEV,cAAc,IAGvD,GAFAU,EAAapF,EAAOvX,KACpBJ,EAAO2X,EAAO3X,KACViI,GAAGyU,aAAa1c,GAClB,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAK1M,GAAGyQ,MAAM1Y,EAAKqX,MACjB,MAAM,IAAIpP,GAAG0M,WAAW,GAE5B,CACA,IAAIsC,EAAQ,CAAE3d,OAAM6iB,OAAMY,aAAY1B,OAAQ,IAC1CgF,EAAY/mB,EAAK2d,MAAMA,GAW3B,OAVAoJ,EAAUpJ,MAAQA,EAClBA,EAAM/E,KAAOmO,EACTnO,EACFjK,GAAGiK,KAAOmO,EACDrgB,IACTA,EAAK2c,QAAU1F,EACXjX,EAAKiX,OACPjX,EAAKiX,MAAMoE,OAAOhO,KAAK4J,IAGpBoJ,CACT,EAAGC,QAAS,SAASvD,GACnB,IAAIpF,EAAS1P,GAAGiU,WAAWa,EAAY,CAAEV,cAAc,IACvD,IAAKpU,GAAGyU,aAAa/E,EAAO3X,MAC1B,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAI3U,EAAO2X,EAAO3X,KACdiX,EAAQjX,EAAK2c,QACbtB,EAASpT,GAAG0X,UAAU1I,GAC1B7c,OAAO0B,KAAKmM,GAAGwT,WAAW0E,SAAQ,SAASjD,GAEzC,IADA,IAAIX,EAAUtU,GAAGwT,UAAUyB,GACpBX,GAAS,CACd,IAAI9f,EAAO8f,EAAQa,UACf/B,EAAOrF,SAASuG,EAAQtF,QAC1BhP,GAAGyV,YAAYnB,GAEjBA,EAAU9f,CACZ,CACF,IACAuD,EAAK2c,QAAU,KACf,IAAIlY,EAAMzE,EAAKiX,MAAMoE,OAAOtZ,QAAQkV,GACpCjX,EAAKiX,MAAMoE,OAAO/N,OAAO7I,EAAK,EAChC,EAAGkT,OAAQ,SAASR,EAAQC,GAC1B,OAAOD,EAAOM,SAASE,OAAOR,EAAQC,EACxC,EAAGQ,MAAO,SAASxX,EAAMiX,EAAMnD,GAC7B,IACIiD,EADSlP,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IACvBnX,KAChBoX,EAAQpG,GAAKoB,SAAShS,GAC1B,IAAKgX,GAAmB,MAAVA,GAA2B,OAAVA,EAC7B,MAAM,IAAInP,GAAG0M,WAAW,IAE1B,IAAI2I,EAAUrV,GAAGiW,UAAU/G,EAAQC,GACnC,GAAIkG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASG,MACnB,MAAM,IAAI3P,GAAG0M,WAAW,IAE1B,OAAOwC,EAAOM,SAASG,MAAMT,EAAQC,EAAOC,EAAMnD,EACpD,EAAGqM,OAAQ,SAASngB,EAAMiX,GAIxB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACDpP,GAAG2P,MAAMxX,EAAMiX,EAAM,EAC9B,EAAGmJ,MAAO,SAASpgB,EAAMiX,GAIvB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACDpP,GAAG2P,MAAMxX,EAAMiX,EAAM,EAC9B,EAAGoJ,UAAW,SAASrgB,EAAMiX,GAG3B,IAFA,IAAIqJ,EAAOtgB,EAAKyR,MAAM,KAClBhE,EAAI,GACCzU,EAAI,EAAGA,EAAIsnB,EAAKzf,SAAU7H,EACjC,GAAKsnB,EAAKtnB,GAAV,CAEAyU,GAAK,IAAM6S,EAAKtnB,GAChB,IACE6O,GAAGuY,MAAM3S,EAAGwJ,EACd,CAAE,MAAO3a,IACP,GAAe,IAAXA,GAAE2hB,MACJ,MAAM3hB,EACV,CAPU,CASd,EAAGikB,MAAO,SAASvgB,EAAMiX,EAAMnD,GAM7B,MALmB,qBAARA,IACTA,EAAMmD,EACNA,EAAO,KAETA,GAAQ,KACDpP,GAAG2P,MAAMxX,EAAMiX,EAAMnD,EAC9B,EAAG+D,QAAS,SAAS2C,EAASgG,GAC5B,IAAK/N,GAAQxW,QAAQue,GACnB,MAAM,IAAI3S,GAAG0M,WAAW,IAE1B,IACIwC,EADSlP,GAAGiU,WAAW0E,EAAS,CAAEzJ,QAAQ,IAC1BnX,KACpB,IAAKmX,EACH,MAAM,IAAIlP,GAAG0M,WAAW,IAE1B,IAAIgG,EAAU3J,GAAKoB,SAASwO,GACxBtD,EAAUrV,GAAGiW,UAAU/G,EAAQwD,GACnC,GAAI2C,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASQ,QACnB,MAAM,IAAIhQ,GAAG0M,WAAW,IAE1B,OAAOwC,EAAOM,SAASQ,QAAQd,EAAQwD,EAASC,EAClD,EAAG/C,OAAQ,SAASgJ,EAAUC,GAC5B,IAIYC,EAAS3G,EAJjB4G,EAAchQ,GAAK1Q,QAAQugB,GAC3BI,EAAcjQ,GAAK1Q,QAAQwgB,GAC3BI,EAAWlQ,GAAKoB,SAASyO,GACzBxG,EAAWrJ,GAAKoB,SAAS0O,GAM7B,GAHAC,EADS9Y,GAAGiU,WAAW2E,EAAU,CAAE1J,QAAQ,IAC1BnX,KAEjBoa,EADSnS,GAAGiU,WAAW4E,EAAU,CAAE3J,QAAQ,IAC1BnX,MACZ+gB,IAAY3G,EACf,MAAM,IAAInS,GAAG0M,WAAW,IAC1B,GAAIoM,EAAQ9J,QAAUmD,EAAQnD,MAC5B,MAAM,IAAIhP,GAAG0M,WAAW,IAE1B,IASI2F,EATAH,EAAWlS,GAAGsS,WAAWwG,EAASG,GAClChO,EAAWL,GAAQK,SAAS2N,EAAUI,GAC1C,GAA2B,MAAvB/N,EAASvB,OAAO,GAClB,MAAM,IAAI1J,GAAG0M,WAAW,IAG1B,GAA2B,OAD3BzB,EAAWL,GAAQK,SAAS4N,EAAUE,IACzBrP,OAAO,GAClB,MAAM,IAAI1J,GAAG0M,WAAW,IAG1B,IACE2F,EAAWrS,GAAGsS,WAAWH,EAASC,EACpC,CAAE,MAAO3d,IACT,CACA,GAAIyd,IAAaG,EAAjB,CAGA,IAAI8D,EAAQnW,GAAGyQ,MAAMyB,EAAS9C,MAC1BiG,EAAUrV,GAAGkW,UAAU4C,EAASG,EAAU9C,GAC9C,GAAId,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAG1B,GADAA,EAAUhD,EAAWrS,GAAGkW,UAAU/D,EAASC,EAAU+D,GAASnW,GAAGiW,UAAU9D,EAASC,GAElF,MAAM,IAAIpS,GAAG0M,WAAW2I,GAE1B,IAAKyD,EAAQtJ,SAASI,OACpB,MAAM,IAAI5P,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyU,aAAavC,IAAaG,GAAYrS,GAAGyU,aAAapC,GAC3D,MAAM,IAAIrS,GAAG0M,WAAW,IAE1B,GAAIyF,IAAY2G,IACdzD,EAAUrV,GAAGgW,gBAAgB8C,EAAS,MAEpC,MAAM,IAAI9Y,GAAG0M,WAAW2I,GAG5B,IACMrV,GAAG0T,iBAA+B,cACpC1T,GAAG0T,iBAA+B,aAAEkF,EAAUC,EAElD,CAAE,MAAOpkB,IACPqG,EAAI,wCAA0C8d,EAAW,OAASC,EAAW,0BAA4BpkB,GAAEqS,QAC7G,CACA9G,GAAGoV,eAAelD,GAClB,IACE4G,EAAQtJ,SAASI,OAAOsC,EAAUC,EAASC,EAC7C,CAAE,MAAO3d,IACP,MAAMA,EACR,CAAE,QACAuL,GAAGkV,YAAYhD,EACjB,CACA,IACMlS,GAAG0T,iBAA6B,YAClC1T,GAAG0T,iBAA6B,WAAEkF,EAAUC,EAChD,CAAE,MAAOpkB,IACPqG,EAAI,sCAAwC8d,EAAW,OAASC,EAAW,0BAA4BpkB,GAAEqS,QAC3G,CA1CA,CA2CF,EAAGgJ,MAAO,SAAS3X,GACjB,IACI+W,EADSlP,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IACvBnX,KAChBoX,EAAQpG,GAAKoB,SAAShS,GACtBJ,EAAOiI,GAAGsS,WAAWpD,EAAQC,GAC7BkG,EAAUrV,GAAGkW,UAAUhH,EAAQC,GAAO,GAC1C,GAAIkG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASM,MACnB,MAAM,IAAI9P,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyU,aAAa1c,GAClB,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IACM1M,GAAG0T,iBAAiC,gBACtC1T,GAAG0T,iBAAiC,eAAEvb,EAE1C,CAAE,MAAO1D,IACPqG,EAAI,0CAA4C3C,EAAO,0BAA4B1D,GAAEqS,QACvF,CACAoI,EAAOM,SAASM,MAAMZ,EAAQC,GAC9BnP,GAAGyV,YAAY1d,GACf,IACMiI,GAAG0T,iBAA+B,cACpC1T,GAAG0T,iBAA+B,aAAEvb,EACxC,CAAE,MAAO1D,IACPqG,EAAI,wCAA0C3C,EAAO,0BAA4B1D,GAAEqS,QACrF,CACF,EAAGiJ,QAAS,SAAS5X,GACnB,IACIJ,EADSiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IACzB5c,KAClB,IAAKA,EAAKyX,SAASO,QACjB,MAAM,IAAI/P,GAAG0M,WAAW,IAE1B,OAAO3U,EAAKyX,SAASO,QAAQhY,EAC/B,EAAG8X,OAAQ,SAAS1X,GAClB,IACI+W,EADSlP,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IACvBnX,KAChBoX,EAAQpG,GAAKoB,SAAShS,GACtBJ,EAAOiI,GAAGsS,WAAWpD,EAAQC,GAC7BkG,EAAUrV,GAAGkW,UAAUhH,EAAQC,GAAO,GAC1C,GAAIkG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASK,OACnB,MAAM,IAAI7P,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyU,aAAa1c,GAClB,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IACM1M,GAAG0T,iBAAiC,gBACtC1T,GAAG0T,iBAAiC,eAAEvb,EAE1C,CAAE,MAAO1D,IACPqG,EAAI,0CAA4C3C,EAAO,0BAA4B1D,GAAEqS,QACvF,CACAoI,EAAOM,SAASK,OAAOX,EAAQC,GAC/BnP,GAAGyV,YAAY1d,GACf,IACMiI,GAAG0T,iBAA+B,cACpC1T,GAAG0T,iBAA+B,aAAEvb,EACxC,CAAE,MAAO1D,IACPqG,EAAI,wCAA0C3C,EAAO,0BAA4B1D,GAAEqS,QACrF,CACF,EAAGwJ,SAAU,SAASnY,GACpB,IACIkY,EADSrQ,GAAGiU,WAAW9b,GACTJ,KAClB,IAAKsY,EACH,MAAM,IAAIrQ,GAAG0M,WAAW,IAE1B,IAAK2D,EAAKb,SAASc,SACjB,MAAM,IAAItQ,GAAG0M,WAAW,IAE1B,OAAO9B,GAAQxW,QAAQ4L,GAAG4U,QAAQvE,EAAKnB,QAASmB,EAAKb,SAASc,SAASD,GACzE,EAAG6I,KAAM,SAAS/gB,EAAMghB,GACtB,IACIphB,EADSiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAASwE,IAC1BphB,KAClB,IAAKA,EACH,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAK3U,EAAKyX,SAASD,QACjB,MAAM,IAAIvP,GAAG0M,WAAW,IAE1B,OAAO3U,EAAKyX,SAASD,QAAQxX,EAC/B,EAAGqhB,MAAO,SAASjhB,GACjB,OAAO6H,GAAGkZ,KAAK/gB,GAAM,EACvB,EAAGkhB,MAAO,SAASlhB,EAAMiX,EAAM+J,GAC7B,IAAIphB,EACgB,kBAATI,EAETJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAASwE,IAC9BphB,KAEdA,EAAOI,EAET,IAAKJ,EAAKyX,SAASC,QACjB,MAAM,IAAIzP,GAAG0M,WAAW,IAE1B3U,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEqX,KAAa,KAAPA,GAA0B,KAAZrX,EAAKqX,KAAchC,UAAWC,KAAKjG,OACvF,EAAGkS,OAAQ,SAASnhB,EAAMiX,GACxBpP,GAAGqZ,MAAMlhB,EAAMiX,GAAM,EACvB,EAAGmK,OAAQ,SAAS1L,EAAIuB,GACtB,IAAI7C,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B1M,GAAGqZ,MAAM9M,EAAOxU,KAAMqX,EACxB,EAAGoK,MAAO,SAASrhB,EAAMuZ,EAAKC,EAAKwH,GACjC,IAAIphB,EACgB,kBAATI,EAETJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAASwE,IAC9BphB,KAEdA,EAAOI,EAET,IAAKJ,EAAKyX,SAASC,QACjB,MAAM,IAAIzP,GAAG0M,WAAW,IAE1B3U,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEqV,UAAWC,KAAKjG,OAChD,EAAGqS,OAAQ,SAASthB,EAAMuZ,EAAKC,GAC7B3R,GAAGwZ,MAAMrhB,EAAMuZ,EAAKC,GAAK,EAC3B,EAAG+H,OAAQ,SAAS7L,EAAI6D,EAAKC,GAC3B,IAAIpF,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B1M,GAAGwZ,MAAMjN,EAAOxU,KAAM2Z,EAAKC,EAC7B,EAAGgI,SAAU,SAASxhB,EAAM4F,GAC1B,GAAIA,EAAM,EACR,MAAM,IAAIiC,GAAG0M,WAAW,IAE1B,IAAI3U,EACgB,kBAATI,EAETJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IAC7B5c,KAEdA,EAAOI,EAET,IAAKJ,EAAKyX,SAASC,QACjB,MAAM,IAAIzP,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyQ,MAAM1Y,EAAKqX,MAChB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAK1M,GAAG2Q,OAAO5Y,EAAKqX,MAClB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAI2I,EAAUrV,GAAGgW,gBAAgBje,EAAM,KACvC,GAAIsd,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1Btd,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEuW,KAAMvQ,EAAKqP,UAAWC,KAAKjG,OAC3D,EAAGwS,UAAW,SAAS/L,EAAI9P,GACzB,IAAIwO,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,IAE1B1M,GAAG2Z,SAASpN,EAAOxU,KAAMgG,EAC3B,EAAG8b,MAAO,SAAS1hB,EAAMyZ,EAAOC,GAC9B,IACI9Z,EADSiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IACzB5c,KAClBA,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEqV,UAAW3B,KAAK3Z,IAAI8f,EAAOC,IAC3D,EAAGzX,KAAM,SAASjC,EAAM6a,EAAO5D,EAAMoH,EAAUC,GAC7C,GAAa,KAATte,EACF,MAAM,IAAI6H,GAAG0M,WAAW,IAS1B,IAAI3U,EACJ,GAPAqX,EAAuB,qBAATA,EAAuB,IAAMA,EAEzCA,EADU,IAFZ4D,EAAyB,kBAAVA,EAAqBhT,GAAG4V,kBAAkB5C,GAASA,GAGlD,KAAP5D,EAAc,MAEd,EAGW,kBAATjX,EACTJ,EAAOI,MACF,CACLA,EAAO4Q,GAAKS,UAAUrR,GACtB,IAEEJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,SAAkB,OAAR3B,KAC/Bjb,IAChB,CAAE,MAAOtD,IACT,CACF,CACA,IAAIqlB,GAAU,EACd,GAAY,GAAR9G,EACF,GAAIjb,GACF,GAAY,IAARib,EACF,MAAM,IAAIhT,GAAG0M,WAAW,SAG1B3U,EAAOiI,GAAG2P,MAAMxX,EAAMiX,EAAM,GAC5B0K,GAAU,EAGd,IAAK/hB,EACH,MAAM,IAAIiI,GAAG0M,WAAW,IAK1B,GAHI1M,GAAG8Q,SAAS/Y,EAAKqX,QACnB4D,IAAS,KAEC,MAARA,IAAkBhT,GAAGyQ,MAAM1Y,EAAKqX,MAClC,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKoN,EAAS,CACZ,IAAIzE,EAAUrV,GAAGqW,QAAQte,EAAMib,GAC/B,GAAIqC,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,EAE5B,CACY,IAARrC,GACFhT,GAAG2Z,SAAS5hB,EAAM,GAEpBib,IAAS,OACT,IAAIzG,EAASvM,GAAG2W,aAAa,CAAE5e,OAAMI,KAAM6H,GAAG4U,QAAQ7c,GAAOib,QAAOrG,UAAU,EAAMiG,SAAU,EAAGtG,WAAYvU,EAAKuU,WAAYyN,SAAU,GAAIvgB,OAAO,GAASgd,EAAUC,GAClKlK,EAAOD,WAAWlS,MACpBmS,EAAOD,WAAWlS,KAAKmS,IAErB3V,EAAqB,cAAe,EAARoc,IACzBhT,GAAGga,YACNha,GAAGga,UAAY,CAAC,GACZ7hB,KAAQ6H,GAAGga,YACfha,GAAGga,UAAU7hB,GAAQ,EACrB2C,EAAI,2CAA6C3C,KAGrD,IACE,GAAI6H,GAAG0T,iBAA6B,WAAG,CACrC,IAAIuG,EAAgB,EACM,KAAb,QAARjH,KACHiH,GAAiBja,GAAG2T,SAASC,UAAUC,MAEf,KAAb,QAARb,KACHiH,GAAiBja,GAAG2T,SAASC,UAAUE,OAEzC9T,GAAG0T,iBAA6B,WAAEvb,EAAM8hB,EAC1C,CACF,CAAE,MAAOxlB,IACPqG,EAAI,sCAAwC3C,EAAO,iCAAmC1D,GAAEqS,QAC1F,CACA,OAAOyF,CACT,EAAGK,MAAO,SAASL,GACjB,GAAIvM,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAEtBH,EAAO4N,WACT5N,EAAO4N,SAAW,MACpB,IACM5N,EAAOD,WAAWM,OACpBL,EAAOD,WAAWM,MAAML,EAE5B,CAAE,MAAO9X,IACP,MAAMA,EACR,CAAE,QACAuL,GAAGkX,YAAY3K,EAAOsB,GACxB,CACAtB,EAAOsB,GAAK,IACd,EAAGqM,SAAU,SAAS3N,GACpB,OAAqB,OAAdA,EAAOsB,EAChB,EAAGoC,OAAQ,SAAS1D,EAAQS,EAAQ8F,GAClC,GAAI9S,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,IAAKH,EAAOI,WAAaJ,EAAOD,WAAW2D,OACzC,MAAM,IAAIjQ,GAAG0M,WAAW,IAE1B,GAAc,GAAVoG,GAAyB,GAAVA,GAAyB,GAAVA,EAChC,MAAM,IAAI9S,GAAG0M,WAAW,IAI1B,OAFAH,EAAOqG,SAAWrG,EAAOD,WAAW2D,OAAO1D,EAAQS,EAAQ8F,GAC3DvG,EAAOwN,SAAW,GACXxN,EAAOqG,QAChB,EAAG9F,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GAEjD,GADA5F,KAAY,EACRhU,EAAS,GAAK4Z,EAAW,EAC3B,MAAM,IAAI5S,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,GAAI1M,GAAGyQ,MAAMlE,EAAOxU,KAAKqX,MACvB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKH,EAAOD,WAAWQ,KACrB,MAAM,IAAI9M,GAAG0M,WAAW,IAE1B,IAAI0N,EAA8B,qBAAbxH,EACrB,GAAKwH,GAEE,IAAK7N,EAAOI,SACjB,MAAM,IAAI3M,GAAG0M,WAAW,SAFxBkG,EAAWrG,EAAOqG,SAIpB,IAAIzF,EAAYZ,EAAOD,WAAWQ,KAAKP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GAGxE,OAFKwH,IACH7N,EAAOqG,UAAYzF,GACdA,CACT,EAAGG,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQ4Z,EAAUC,GAE5D,GADA7F,KAAY,EACRhU,EAAS,GAAK4Z,EAAW,EAC3B,MAAM,IAAI5S,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,GAAI1M,GAAGyQ,MAAMlE,EAAOxU,KAAKqX,MACvB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKH,EAAOD,WAAWgB,MACrB,MAAM,IAAItN,GAAG0M,WAAW,IAEtBH,EAAOI,UAA2B,KAAfJ,EAAOyG,OAC5BhT,GAAGiQ,OAAO1D,EAAQ,EAAG,GAEvB,IAAI6N,EAA8B,qBAAbxH,EACrB,GAAKwH,GAEE,IAAK7N,EAAOI,SACjB,MAAM,IAAI3M,GAAG0M,WAAW,SAFxBkG,EAAWrG,EAAOqG,SAIpB,IAAIyH,EAAe9N,EAAOD,WAAWgB,MAAMf,EAAQQ,EAASC,EAAQhU,EAAQ4Z,EAAUC,GACjFuH,IACH7N,EAAOqG,UAAYyH,GACrB,IACM9N,EAAOpU,MAAQ6H,GAAG0T,iBAAgC,eACpD1T,GAAG0T,iBAAgC,cAAEnH,EAAOpU,KAChD,CAAE,MAAO1D,IACPqG,EAAI,yCAA2CyR,EAAOpU,KAAO,0BAA4B1D,GAAEqS,QAC7F,CACA,OAAOuT,CACT,EAAGnK,SAAU,SAAS3D,EAAQS,EAAQhU,GACpC,GAAIgH,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAIM,EAAS,GAAKhU,GAAU,EAC1B,MAAM,IAAIgH,GAAG0M,WAAW,IAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,IAAK1M,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,QAAUpP,GAAGyQ,MAAMlE,EAAOxU,KAAKqX,MACxD,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKH,EAAOD,WAAW4D,SACrB,MAAM,IAAIlQ,GAAG0M,WAAW,KAE1BH,EAAOD,WAAW4D,SAAS3D,EAAQS,EAAQhU,EAC7C,EAAGmX,KAAM,SAAS5D,EAAQoC,EAAS3V,EAAQ4Z,EAAUG,EAAMC,GAEzD,GADArE,KAAa,EACM,KAAP,EAAPoE,IAAmC,KAAP,EAARC,IAAiD,KAAb,QAAfzG,EAAOyG,OACnD,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,IAAKH,EAAOD,WAAW6D,KACrB,MAAM,IAAInQ,GAAG0M,WAAW,IAE1B,OAAOH,EAAOD,WAAW6D,KAAK5D,EAAQoC,EAAS3V,EAAQ4Z,EAAUG,EAAMC,EACzE,EAAG5C,MAAO,SAAS7D,EAAQQ,EAASC,EAAQhU,EAAQma,GAElD,OADAnG,KAAY,EACPT,GAAWA,EAAOD,WAAW8D,MAG3B7D,EAAOD,WAAW8D,MAAM7D,EAAQQ,EAASC,EAAQhU,EAAQma,GAFvD,CAGX,EAAGmH,OAAQ,SAAS/N,GAClB,OAAO,CACT,EAAGgO,MAAO,SAAShO,EAAQ1G,EAAK5D,GAC9B,IAAKsK,EAAOD,WAAWiO,MACrB,MAAM,IAAIva,GAAG0M,WAAW,IAE1B,OAAOH,EAAOD,WAAWiO,MAAMhO,EAAQ1G,EAAK5D,EAC9C,EAAGuY,SAAU,SAASriB,EAAM+b,GAI1B,IAHAA,EAAOA,GAAQ,CAAC,GACXlB,MAAQkB,EAAKlB,OAAS,EAC3BkB,EAAKlY,SAAWkY,EAAKlY,UAAY,SACX,SAAlBkY,EAAKlY,UAAyC,WAAlBkY,EAAKlY,SACnC,MAAM,IAAIlL,MAAM,0BAA4BojB,EAAKlY,SAAW,KAE9D,IAAIvD,EACA8T,EAASvM,GAAG5F,KAAKjC,EAAM+b,EAAKlB,OAE5Bha,EADOgH,GAAGkZ,KAAK/gB,GACDmW,KACdzP,EAAM,IAAInG,WAAWM,GAQzB,OAPAgH,GAAG8M,KAAKP,EAAQ1N,EAAK,EAAG7F,EAAQ,GACV,SAAlBkb,EAAKlY,SACPvD,EAAM6D,EAAkBuC,EAAK,GACF,WAAlBqV,EAAKlY,WACdvD,EAAMoG,GAERmB,GAAG4M,MAAML,GACF9T,CACT,EAAGgiB,UAAW,SAAStiB,EAAMY,EAAMmb,IACjCA,EAAOA,GAAQ,CAAC,GACXlB,MAAQkB,EAAKlB,OAAS,IAC3B,IAAIzG,EAASvM,GAAG5F,KAAKjC,EAAM+b,EAAKlB,MAAOkB,EAAK9E,MAC5C,GAAoB,kBAATrW,EAAmB,CAC5B,IAAI8F,EAAM,IAAInG,WAAWoF,EAAgB/E,GAAQ,GAC7C2hB,EAAiBpd,EAAkBvE,EAAM8F,EAAK,EAAGA,EAAI7F,QACzDgH,GAAGsN,MAAMf,EAAQ1N,EAAK,EAAG6b,OAAgB,EAAQxG,EAAKrB,OACxD,KAAO,KAAI8H,YAAYC,OAAO7hB,GAG5B,MAAM,IAAIjI,MAAM,yBAFhBkP,GAAGsN,MAAMf,EAAQxT,EAAM,EAAGA,EAAKyG,gBAAY,EAAQ0U,EAAKrB,OAG1D,CACA7S,GAAG4M,MAAML,EACX,EAAGxB,IAAK,WACN,OAAO/K,GAAGyT,WACZ,EAAGoH,MAAO,SAAS1iB,GACjB,IAAIuX,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IAC3C,GAAoB,OAAhBjF,EAAO3X,KACT,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAK1M,GAAGyQ,MAAMf,EAAO3X,KAAKqX,MACxB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAI2I,EAAUrV,GAAGgW,gBAAgBtG,EAAO3X,KAAM,KAC9C,GAAIsd,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1BrV,GAAGyT,YAAc/D,EAAOvX,IAC1B,EAAG2iB,yBAA0B,WAC3B9a,GAAGuY,MAAM,QACTvY,GAAGuY,MAAM,SACTvY,GAAGuY,MAAM,iBACX,EAAGwC,qBAAsB,WACvB/a,GAAGuY,MAAM,QACTvY,GAAGqM,eAAerM,GAAGuX,QAAQ,EAAG,GAAI,CAAEzK,KAAM,WAC1C,OAAO,CACT,EAAGQ,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQiU,GAClD,OAAOjU,CACT,IACAgH,GAAG0Y,MAAM,YAAa1Y,GAAGuX,QAAQ,EAAG,IACpCnX,GAAI4L,SAAShM,GAAGuX,QAAQ,EAAG,GAAInX,GAAIoN,iBACnCpN,GAAI4L,SAAShM,GAAGuX,QAAQ,EAAG,GAAInX,GAAIgO,kBACnCpO,GAAG0Y,MAAM,WAAY1Y,GAAGuX,QAAQ,EAAG,IACnCvX,GAAG0Y,MAAM,YAAa1Y,GAAGuX,QAAQ,EAAG,IACpC,IAAIyD,EAr3CN,WACE,GAAsB,kBAAXC,QAA4D,oBAA9BA,OAAwB,gBAAkB,CACjF,IAAIC,EAAe,IAAIxiB,WAAW,GAClC,OAAO,WAEL,OADAuiB,OAAOE,gBAAgBD,GAChBA,EAAa,EACtB,CACF,CAAO,GAAItjB,EACT,IACE,IAAIwjB,EAAgBrmB,IACpB,OAAO,WACL,OAAOqmB,EAA2B,YAAE,GAAG,EACzC,CACF,CAAE,MAAO3mB,IACT,CAEF,OAAO,WACL4E,GAAM,eACR,CACF,CAk2CsBgiB,GACpBrb,GAAGsb,aAAa,OAAQ,SAAUN,GAClChb,GAAGsb,aAAa,OAAQ,UAAWN,GACnChb,GAAGuY,MAAM,YACTvY,GAAGuY,MAAM,eACX,EAAGgD,yBAA0B,WAC3Bvb,GAAGuY,MAAM,SACT,IAAIiD,EAAYxb,GAAGuY,MAAM,cACzBvY,GAAGuY,MAAM,iBACTvY,GAAGgP,MAAM,CAAEA,MAAO,WAChB,IAAIjX,EAAOiI,GAAGiP,WAAWuM,EAAW,KAAM,MAAa,IAYvD,OAXAzjB,EAAKyX,SAAW,CAAEE,OAAQ,SAASR,EAAQC,GACzC,IAAItB,GAAMsB,EACN5C,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAC1B,IAAIjU,EAAM,CAAEyW,OAAQ,KAAMF,MAAO,CAAE8F,WAAY,QAAUtF,SAAU,CAAEc,SAAU,WAC7E,OAAO/D,EAAOpU,IAChB,IAEA,OADAM,EAAIyW,OAASzW,EACNA,CACT,GACOV,CACT,GAAK,CAAC,EAAG,gBACX,EAAG0jB,sBAAuB,WACpB7kB,EAAc,MAChBoJ,GAAGsb,aAAa,OAAQ,QAAS1kB,EAAc,OAE/CoJ,GAAGgQ,QAAQ,WAAY,cAErBpZ,EAAe,OACjBoJ,GAAGsb,aAAa,OAAQ,SAAU,KAAM1kB,EAAe,QAEvDoJ,GAAGgQ,QAAQ,WAAY,eAErBpZ,EAAe,OACjBoJ,GAAGsb,aAAa,OAAQ,SAAU,KAAM1kB,EAAe,QAEvDoJ,GAAGgQ,QAAQ,YAAa,eAEdhQ,GAAG5F,KAAK,aAAc,GACrB4F,GAAG5F,KAAK,cAAe,GACvB4F,GAAG5F,KAAK,cAAe,EACtC,EAAGshB,iBAAkB,WACf1b,GAAG0M,aAEP1M,GAAG0M,WAAa,SAAoB0J,EAAOre,GACzCtH,KAAKsH,KAAOA,EACZtH,KAAKkrB,SAAW,SAASC,GACvBnrB,KAAK2lB,MAAQwF,CACf,EACAnrB,KAAKkrB,SAASvF,GACd3lB,KAAKqW,QAAU,UACjB,EACA9G,GAAG0M,WAAWla,UAAY,IAAI1B,MAC9BkP,GAAG0M,WAAWla,UAAUqpB,YAAc7b,GAAG0M,WACzC,CAAC,IAAIwL,SAAQ,SAAS4D,GACpB9b,GAAGiS,cAAc6J,GAAQ,IAAI9b,GAAG0M,WAAWoP,GAC3C9b,GAAGiS,cAAc6J,GAAMhb,MAAQ,2BACjC,IACF,EAAGib,WAAY,WACb/b,GAAG0b,mBACH1b,GAAGwT,UAAY,IAAIjJ,MAAM,MACzBvK,GAAGgP,MAAMF,GAAO,CAAC,EAAG,KACpB9O,GAAG8a,2BACH9a,GAAG+a,uBACH/a,GAAGub,2BACHvb,GAAG+T,YAAc,CAAE,MAASjF,GAC9B,EAAG7O,KAAM,SAASkM,EAAOC,EAAQ5S,GAC/BwG,GAAGC,KAAKC,aAAc,EACtBF,GAAG0b,mBACH9kB,EAAc,MAAIuV,GAASvV,EAAc,MACzCA,EAAe,OAAIwV,GAAUxV,EAAe,OAC5CA,EAAe,OAAI4C,GAAS5C,EAAe,OAC3CoJ,GAAGyb,uBACL,EAAGO,KAAM,WACPhc,GAAGC,KAAKC,aAAc,EACtB,IAAI+b,EAASrlB,EAAgB,QACzBqlB,GACFA,EAAO,GACT,IAAK,IAAI9qB,EAAI,EAAGA,EAAI6O,GAAGsT,QAAQta,OAAQ7H,IAAK,CAC1C,IAAIob,EAASvM,GAAGsT,QAAQniB,GACnBob,GAGLvM,GAAG4M,MAAML,EACX,CACF,EAAG2P,QAAS,SAASC,EAASC,GAC5B,IAAIhN,EAAO,EAKX,OAJI+M,IACF/M,GAAQ,KACNgN,IACFhN,GAAQ,KACHA,CACT,EAAGiN,WAAY,SAASlkB,EAAMmkB,GAC5B,IAAI7jB,EAAMuH,GAAGuc,YAAYpkB,EAAMmkB,GAC/B,OAAI7jB,EAAI+jB,OACC/jB,EAAIoe,OAEJ,IAEX,EAAG0F,YAAa,SAASpkB,EAAMmkB,GAC7B,IAEEnkB,GADIuX,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAS2H,KAC9BnkB,IAChB,CAAE,MAAO1D,IACT,CACA,IAAIgE,EAAM,CAAEoc,QAAQ,EAAO2H,QAAQ,EAAOhjB,MAAO,EAAG+Y,KAAM,KAAMpa,KAAM,KAAM0e,OAAQ,KAAM4F,cAAc,EAAOC,WAAY,KAAMC,aAAc,MAC/I,IACE,IAAIjN,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IAC3CzW,EAAIgkB,cAAe,EACnBhkB,EAAIikB,WAAahN,EAAOvX,KACxBM,EAAIkkB,aAAejN,EAAO3X,KAC1BU,EAAI8Z,KAAOxJ,GAAKoB,SAAShS,GACzBuX,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAS2H,IACxC7jB,EAAI+jB,QAAS,EACb/jB,EAAIN,KAAOuX,EAAOvX,KAClBM,EAAIoe,OAASnH,EAAO3X,KACpBU,EAAI8Z,KAAO7C,EAAO3X,KAAKwa,KACvB9Z,EAAIoc,OAAyB,MAAhBnF,EAAOvX,IACtB,CAAE,MAAO1D,IACPgE,EAAIe,MAAQ/E,GAAE2hB,KAChB,CACA,OAAO3d,CACT,EAAGmkB,WAAY,SAAS1N,EAAQ/W,EAAMgkB,EAASC,GAC7ClN,EAA2B,kBAAXA,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAE1D,IADA,IAAI/F,EAAQhR,EAAKyR,MAAM,KAAKiT,UACrB1T,EAAMnQ,QAAQ,CACnB,IAAI8jB,EAAO3T,EAAMpF,MACjB,GAAK+Y,EAAL,CAEA,IAAIxI,EAAUvL,GAAK0B,MAAMyE,EAAQ4N,GACjC,IACE9c,GAAGuY,MAAMjE,EACX,CAAE,MAAO7f,IACT,CACAya,EAASoF,CANC,CAOZ,CACA,OAAOA,CACT,EAAGyI,WAAY,SAAS7N,EAAQC,EAAO6N,EAAYb,EAASC,GAC1D,IAAIjkB,EAAO4Q,GAAK0B,MAAwB,kBAAXyE,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAASC,GAC5EC,EAAOpP,GAAGkc,QAAQC,EAASC,GAC/B,OAAOpc,GAAGsY,OAAOngB,EAAMiX,EACzB,EAAG6N,eAAgB,SAAS/N,EAAQC,EAAOpW,EAAMojB,EAASC,EAAUvJ,GAClE,IAAI1a,EAAOgX,EAAQpG,GAAK0B,MAAwB,kBAAXyE,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAASC,GAASD,EAC7FE,EAAOpP,GAAGkc,QAAQC,EAASC,GAC3BrkB,EAAOiI,GAAGsY,OAAOngB,EAAMiX,GAC3B,GAAIrW,EAAM,CACR,GAAoB,kBAATA,EAAmB,CAE5B,IADA,IAAIsS,EAAM,IAAId,MAAMxR,EAAKC,QAChB7H,EAAI,EAAG4M,EAAMhF,EAAKC,OAAQ7H,EAAI4M,IAAO5M,EAC5Cka,EAAIla,GAAK4H,EAAK4E,WAAWxM,GAC3B4H,EAAOsS,CACT,CACArL,GAAGqZ,MAAMthB,EAAa,IAAPqX,GACf,IAAI7C,EAASvM,GAAG5F,KAAKrC,EAAM,KAC3BiI,GAAGsN,MAAMf,EAAQxT,EAAM,EAAGA,EAAKC,OAAQ,EAAG6Z,GAC1C7S,GAAG4M,MAAML,GACTvM,GAAGqZ,MAAMthB,EAAMqX,EACjB,CACA,OAAOrX,CACT,EAAGujB,aAAc,SAASpM,EAAQC,EAAOhD,EAAOC,GAC9C,IAAIjU,EAAO4Q,GAAK0B,MAAwB,kBAAXyE,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAASC,GAC5EC,EAAOpP,GAAGkc,UAAU/P,IAASC,GAC5BpM,GAAGsb,aAAajE,QACnBrX,GAAGsb,aAAajE,MAAQ,IAC1B,IAAIpL,EAAMjM,GAAGuX,QAAQvX,GAAGsb,aAAajE,QAAS,GAyC9C,OAxCArX,GAAGqM,eAAeJ,EAAK,CAAE7R,KAAM,SAASmS,GACtCA,EAAOI,UAAW,CACpB,EAAGC,MAAO,SAASL,GACbH,GAAUA,EAAOzW,QAAUyW,EAAOzW,OAAOqD,QAC3CoT,EAAO,GAEX,EAAGU,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQiU,GAEjD,IADA,IAAIE,EAAY,EACPhc,EAAI,EAAGA,EAAI6H,EAAQ7H,IAAK,CAC/B,IAAI6Y,EACJ,IACEA,EAASmC,GACX,CAAE,MAAO1X,IACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CACA,QAAe,IAAX1C,GAAmC,IAAdmD,EACvB,MAAM,IAAInN,GAAG0M,WAAW,GAE1B,GAAe,OAAX1C,QAA8B,IAAXA,EACrB,MACFmD,IACAJ,EAAQC,EAAS7b,GAAK6Y,CACxB,CAIA,OAHImD,IACFZ,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExB+F,CACT,EAAGG,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQiU,GAClD,IAAK,IAAI9b,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1B,IACEib,EAAOW,EAAQC,EAAS7b,GAC1B,CAAE,MAAOsD,IACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CAKF,OAHI1T,IACFuT,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExBjW,CACT,IACO6O,GAAG0Y,MAAMvgB,EAAMiX,EAAMnD,EAC9B,EAAGiR,cAAe,SAASrqB,GACzB,GAAIA,EAAIsqB,UAAYtqB,EAAIuqB,UAAYvqB,EAAIwd,MAAQxd,EAAI6d,SAClD,OAAO,EACT,GAA8B,qBAAnBvW,eACT,MAAM,IAAIrJ,MAAM,oMACX,IAAIgG,EAQT,MAAM,IAAIhG,MAAM,iDAPhB,IACE+B,EAAI6d,SAAWxC,GAAmBpX,EAAMjE,EAAIoH,MAAM,GAClDpH,EAAI+d,UAAY/d,EAAI6d,SAAS1X,MAC/B,CAAE,MAAOvE,IACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CAIJ,EAAG2Q,eAAgB,SAASnO,EAAQC,EAAOlV,EAAKkiB,EAASC,GACvD,SAASkB,IACP7sB,KAAK8sB,aAAc,EACnB9sB,KAAK+sB,OAAS,EAChB,CAsEA,GArEAF,EAAe9qB,UAAU0P,IAAM,SAA4B1F,GACzD,KAAIA,EAAM/L,KAAKuI,OAAS,GAAKwD,EAAM,GAAnC,CAGA,IAAIihB,EAAcjhB,EAAM/L,KAAKitB,UACzBC,EAAWnhB,EAAM/L,KAAKitB,UAAY,EACtC,OAAOjtB,KAAKmtB,OAAOD,GAAUF,EAH7B,CAIF,EACAH,EAAe9qB,UAAUqrB,cAAgB,SAAsCD,GAC7EntB,KAAKmtB,OAASA,CAChB,EACAN,EAAe9qB,UAAUsrB,YAAc,WACrC,IAAI5jB,EAAM,IAAIC,eAGd,GAFAD,EAAIE,KAAK,OAAQH,GAAK,GACtBC,EAAIG,KAAK,QACHH,EAAI5C,QAAU,KAAO4C,EAAI5C,OAAS,KAAsB,MAAf4C,EAAI5C,QACjD,MAAM,IAAIxG,MAAM,iBAAmBmJ,EAAM,aAAeC,EAAI5C,QAC9D,IACIymB,EADAC,EAAaC,OAAO/jB,EAAIgkB,kBAAkB,mBAE1CC,GAAkBJ,EAAS7jB,EAAIgkB,kBAAkB,mBAAgC,UAAXH,EACtEK,GAAYL,EAAS7jB,EAAIgkB,kBAAkB,sBAAmC,SAAXH,EACnEL,EAAY,QACXS,IACHT,EAAYM,GACd,IAuBIK,EAAa5tB,KACjB4tB,EAAWR,eAAc,SAASF,GAChC,IAAI5rB,EAAQ4rB,EAAWD,EACnBpS,GAAOqS,EAAW,GAAKD,EAAY,EAKvC,GAJApS,EAAMG,KAAKC,IAAIJ,EAAK0S,EAAa,GACU,qBAAhCK,EAAWb,OAAOG,KAC3BU,EAAWb,OAAOG,GA7BV,SAASzS,EAAMC,GACzB,GAAID,EAAOC,EACT,MAAM,IAAIra,MAAM,kBAAoBoa,EAAO,KAAOC,EAAK,4BACzD,GAAIA,EAAK6S,EAAa,EACpB,MAAM,IAAIltB,MAAM,QAAUktB,EAAa,uCACzC,IAAIM,EAAO,IAAInkB,eAUf,GATAmkB,EAAKlkB,KAAK,MAAOH,GAAK,GAClB+jB,IAAeN,GACjBY,EAAKC,iBAAiB,QAAS,SAAWrT,EAAO,IAAMC,GAChC,oBAAdzS,aACT4lB,EAAK/jB,aAAe,eAClB+jB,EAAKE,kBACPF,EAAKE,iBAAiB,sCAExBF,EAAKjkB,KAAK,QACJikB,EAAKhnB,QAAU,KAAOgnB,EAAKhnB,OAAS,KAAuB,MAAhBgnB,EAAKhnB,QACpD,MAAM,IAAIxG,MAAM,iBAAmBmJ,EAAM,aAAeqkB,EAAKhnB,QAC/D,YAAsB,IAAlBgnB,EAAK9jB,SACA,IAAI9B,WAAW4lB,EAAK9jB,UAAY,IAEhC0T,GAAmBoQ,EAAKhkB,cAAgB,IAAI,EAEvD,CAOkCmkB,CAAM1sB,EAAOuZ,IAEF,qBAAhC+S,EAAWb,OAAOG,GAC3B,MAAM,IAAI7sB,MAAM,iBAClB,OAAOutB,EAAWb,OAAOG,EAC3B,KACIS,GAAaJ,IACfN,EAAYM,EAAa,EACzBA,EAAavtB,KAAKmtB,OAAO,GAAG5kB,OAC5B0kB,EAAYM,EACZrjB,EAAI,gFAENlK,KAAKiuB,QAAUV,EACfvtB,KAAKkuB,WAAajB,EAClBjtB,KAAK8sB,aAAc,CACrB,EAC8B,qBAAnBpjB,eAAgC,CACzC,IAAKzC,EACH,KAAM,sHACR,IAAIknB,EAAY,IAAItB,EACpBnrB,OAAO0sB,iBAAiBD,EAAW,CAAE5lB,OAAQ,CAAEkJ,IAAK,WAIlD,OAHKzR,KAAK8sB,aACR9sB,KAAKqtB,cAEArtB,KAAKiuB,OACd,GAAKhB,UAAW,CAAExb,IAAK,WAIrB,OAHKzR,KAAK8sB,aACR9sB,KAAKqtB,cAEArtB,KAAKkuB,UACd,KACA,IAAI3B,EAAa,CAAEG,UAAU,EAAOzM,SAAUkO,EAChD,MACM5B,EAAa,CAAEG,UAAU,EAAOljB,OAEtC,IAAIlC,EAAOiI,GAAG+c,WAAW7N,EAAQC,EAAO6N,EAAYb,EAASC,GACzDY,EAAWtM,SACb3Y,EAAK2Y,SAAWsM,EAAWtM,SAClBsM,EAAW/iB,MACpBlC,EAAK2Y,SAAW,KAChB3Y,EAAKkC,IAAM+iB,EAAW/iB,KAExB9H,OAAO0sB,iBAAiB9mB,EAAM,CAAE6Y,UAAW,CAAE1O,IAAK,WAChD,OAAOzR,KAAKigB,SAAS1X,MACvB,KACA,IAAIsT,EAAa,CAAC,EA2BlB,OA1BWna,OAAO0B,KAAKkE,EAAKuU,YACvB4L,SAAQ,SAASzF,GACpB,IAAIqM,EAAK/mB,EAAKuU,WAAWmG,GACzBnG,EAAWmG,GAAQ,WAEjB,OADAzS,GAAGkd,cAAcnlB,GACV+mB,EAAGhqB,MAAM,KAAM0V,UACxB,CACF,IACA8B,EAAWQ,KAAO,SAAyBP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GAC1E5S,GAAGkd,cAAcnlB,GACjB,IAAI2Y,EAAWnE,EAAOxU,KAAK2Y,SAC3B,GAAIkC,GAAYlC,EAAS1X,OACvB,OAAO,EACT,IAAIsV,EAAO7C,KAAKC,IAAIgF,EAAS1X,OAAS4Z,EAAU5Z,GAChD,GAAI0X,EAASxX,MACX,IAAK,IAAI/H,EAAI,EAAGA,EAAImd,EAAMnd,IACxB4b,EAAQC,EAAS7b,GAAKuf,EAASkC,EAAWzhB,QAG5C,IAASA,EAAI,EAAGA,EAAImd,EAAMnd,IACxB4b,EAAQC,EAAS7b,GAAKuf,EAASxO,IAAI0Q,EAAWzhB,GAGlD,OAAOmd,CACT,EACAvW,EAAKuU,WAAaA,EACXvU,CACT,EAAGgnB,oBAAqB,SAAS7P,EAAQC,EAAOlV,EAAKkiB,EAASC,EAAUxjB,EAAQC,EAASmmB,EAAgBnM,EAAQoM,GAC/GC,QAAQjf,OACR,IAAIkf,EAAWhQ,EAAQvE,GAAQxW,QAAQ2U,GAAK0B,MAAMyE,EAAQC,IAAUD,EAEpE,SAASkQ,EAAYC,GACnB,SAASC,EAAOC,GACVN,GACFA,IACGD,GACHhf,GAAGid,eAAe/N,EAAQC,EAAOoQ,EAAYpD,EAASC,EAAUvJ,GAE9Dja,GACFA,IACF8H,IACF,CACA,IAAI8e,GAAU,EACd5oB,EAAuB,eAAEshB,SAAQ,SAASuH,GACpCD,GAEAC,EAAkB,UAAEN,KACtBM,EAAe,OAAEJ,EAAWF,EAAUG,GAAQ,WACxCzmB,GACFA,IACF6H,IACF,IACA8e,GAAU,EAEd,IACKA,GACHF,EAAOD,EACX,CACA5e,KACkB,iBAAPxG,EAnzCb,SAAmBA,EAAKrB,EAAQC,EAAS6mB,GACvC,IAAIC,EAAOD,EAAiD,GAAf,MAAQzlB,EACrDlD,EAAUkD,GAAK,SAAS2lB,GACtBjnB,EAAOinB,EAAa,sBAAwB3lB,EAAM,8BAClDrB,EAAO,IAAIF,WAAWknB,IAClBD,GACFjf,IACJ,IAAG,SAASmf,GACV,IAAIhnB,EAGF,KAAM,sBAAwBoB,EAAM,YAFpCpB,GAIJ,IACI8mB,GACFlf,IACJ,CAoyCIqf,CAAU7lB,GAAK,SAASolB,GACtBD,EAAYC,EACd,GAAGxmB,GAEHumB,EAAYnlB,EAEhB,EAAG8lB,UAAW,WACZ,OAAOtoB,OAAOsoB,WAAatoB,OAAOuoB,cAAgBvoB,OAAOwoB,iBAAmBxoB,OAAOyoB,WACrF,EAAGC,QAAS,WACV,MAAO,SAAW1oB,OAAOmC,SAASwmB,QACpC,EAAGC,WAAY,GAAIC,cAAe,YAAaC,cAAe,SAASjW,EAAO1R,EAAQC,GACpFD,EAASA,GAAU,WACnB,EACAC,EAAUA,GAAW,WACrB,EACA,IAAIknB,EAAY/f,GAAG+f,YACnB,IACE,IAAIS,EAAcT,EAAU3lB,KAAK4F,GAAGmgB,UAAWngB,GAAGqgB,WACpD,CAAE,MAAO5rB,IACP,OAAOoE,EAAQpE,GACjB,CACA+rB,EAAYC,gBAAkB,WAC5B9lB,EAAI,eACK6lB,EAAYxW,OAClB0W,kBAAkB1gB,GAAGsgB,cAC1B,EACAE,EAAYG,UAAY,WACtB,IACIC,EADKJ,EAAYxW,OACA4W,YAAY,CAAC5gB,GAAGsgB,eAAgB,aACjDO,EAAQD,EAAYE,YAAY9gB,GAAGsgB,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQ3W,EAAMtR,OACpC,SAASsmB,IACK,GAAR0B,EACFpoB,IAEAC,GACJ,CACAyR,EAAM4N,SAAQ,SAAS/f,GACrB,IAAI+oB,EAAaL,EAAMM,IAAInhB,GAAGuc,YAAYpkB,GAAM0e,OAAOnG,SAAUvY,GACjE+oB,EAAWP,UAAY,aACrBI,EACSC,GAAQC,GACf3B,GACJ,EACA4B,EAAWroB,QAAU,WACnBmoB,IACID,EAAKC,GAAQC,GACf3B,GACJ,CACF,IACAsB,EAAY/nB,QAAUA,CACxB,EACA2nB,EAAY3nB,QAAUA,CACxB,EAAGuoB,gBAAiB,SAAS9W,EAAO1R,EAAQC,GAC1CD,EAASA,GAAU,WACnB,EACAC,EAAUA,GAAW,WACrB,EACA,IAAIknB,EAAY/f,GAAG+f,YACnB,IACE,IAAIS,EAAcT,EAAU3lB,KAAK4F,GAAGmgB,UAAWngB,GAAGqgB,WACpD,CAAE,MAAO5rB,IACP,OAAOoE,EAAQpE,GACjB,CACA+rB,EAAYC,gBAAkB5nB,EAC9B2nB,EAAYG,UAAY,WACtB,IAAIU,EAAKb,EAAYxW,OACrB,IACE,IAAI4W,EAAcS,EAAGT,YAAY,CAAC5gB,GAAGsgB,eAAgB,WACvD,CAAE,MAAO7rB,IAEP,YADAoE,EAAQpE,GAEV,CACA,IAAIosB,EAAQD,EAAYE,YAAY9gB,GAAGsgB,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQ3W,EAAMtR,OACpC,SAASsmB,IACK,GAAR0B,EACFpoB,IAEAC,GACJ,CACAyR,EAAM4N,SAAQ,SAAS/f,GACrB,IAAImpB,EAAaT,EAAM3e,IAAI/J,GAC3BmpB,EAAWX,UAAY,WACjB3gB,GAAGuc,YAAYpkB,GAAMqkB,QACvBxc,GAAG6P,OAAO1X,GAEZ6H,GAAGid,eAAelU,GAAK1Q,QAAQF,GAAO4Q,GAAKoB,SAAShS,GAAOmpB,EAAWtX,QAAQ,GAAM,GAAM,KAC1F+W,EACSC,GAAQC,GACf3B,GACJ,EACAgC,EAAWzoB,QAAU,WACnBmoB,IACID,EAAKC,GAAQC,GACf3B,GACJ,CACF,IACAsB,EAAY/nB,QAAUA,CACxB,EACA2nB,EAAY3nB,QAAUA,CACxB,GACI0oB,GAAW,CAAEC,SAAU,CAAC,EAAGC,iBAAkB,EAAGC,MAAO,IAAKC,YAAa,SAASC,EAAOzpB,EAAM0pB,GACjG,GAAgB,MAAZ1pB,EAAK,GACP,OAAOA,EAET,IAAI+R,EACJ,IAAe,MAAX0X,EACF1X,EAAMlK,GAAG+K,UACJ,CACL,IAAI+W,EAAY9hB,GAAG0W,UAAUkL,GAC7B,IAAKE,EACH,MAAM,IAAI9hB,GAAG0M,WAAW,GAC1BxC,EAAM4X,EAAU3pB,IAClB,CACA,GAAmB,GAAfA,EAAKa,OAAa,CACpB,IAAK6oB,EACH,MAAM,IAAI7hB,GAAG0M,WAAW,IAE1B,OAAOxC,CACT,CACA,OAAOnB,GAAK0B,MAAMP,EAAK/R,EACzB,EAAG4pB,OAAQ,SAAS/f,EAAM7J,EAAM0G,GAC9B,IACE,IAAIqa,EAAOlX,EAAK7J,EAClB,CAAE,MAAO1D,IACP,GAAIA,IAAKA,GAAEsD,MAAQgR,GAAKS,UAAUrR,KAAU4Q,GAAKS,UAAUxJ,GAAG4U,QAAQngB,GAAEsD,OACtE,OAAQ,GAEV,MAAMtD,EACR,CAoBA,OAnBA2B,IAAoByI,IAAQ,GAAKqa,EAAKjN,IACtC7V,IAAoByI,EAAM,IAAM,GAAK,EACrCzI,IAAoByI,EAAM,IAAM,GAAKqa,EAAK1H,IAC1Cpb,IAAoByI,EAAM,KAAO,GAAKqa,EAAK9J,KAC3ChZ,IAAoByI,EAAM,KAAO,GAAKqa,EAAKzH,MAC3Crb,IAAoByI,EAAM,KAAO,GAAKqa,EAAKxH,IAC3Ctb,IAAoByI,EAAM,KAAO,GAAKqa,EAAKvH,IAC3Cvb,IAAoByI,EAAM,KAAO,GAAKqa,EAAKzM,KAC3CrW,IAAoByI,EAAM,KAAO,GAAK,EACtCqC,GAAU,CAACgY,EAAK5K,OAAS,GAAIrN,GAAaiY,EAAK5K,MAAO7C,KAAKuW,IAAI/gB,KAAe,EAAIA,GAAa,GAAkE,EAA7DwK,KAAKC,KAAKD,KAAKwW,MAAMhhB,GAAa,YAAa,eAAqB,KAAOwK,KAAK+C,MAAMvN,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAK7K,IAAoByI,EAAM,KAAO,GAAKqC,GAAQ,GAAI9K,IAAoByI,EAAM,KAAO,GAAKqC,GAAQ,GACzV9K,IAAoByI,EAAM,KAAO,GAAK,KACtCzI,IAAoByI,EAAM,KAAO,GAAKqa,EAAKlH,OAC3C5b,IAAoByI,EAAM,KAAO,GAAKqa,EAAKtH,MAAMsQ,UAAY,IAAM,EACnE9rB,IAAoByI,EAAM,KAAO,GAAK,EACtCzI,IAAoByI,EAAM,KAAO,GAAKqa,EAAKrH,MAAMqQ,UAAY,IAAM,EACnE9rB,IAAoByI,EAAM,KAAO,GAAK,EACtCzI,IAAoByI,EAAM,KAAO,GAAKqa,EAAKpH,MAAMoQ,UAAY,IAAM,EACnE9rB,IAAoByI,EAAM,KAAO,GAAK,EACtCqC,GAAU,CAACgY,EAAK1H,MAAQ,GAAIvQ,GAAaiY,EAAK1H,KAAM/F,KAAKuW,IAAI/gB,KAAe,EAAIA,GAAa,GAAkE,EAA7DwK,KAAKC,KAAKD,KAAKwW,MAAMhhB,GAAa,YAAa,eAAqB,KAAOwK,KAAK+C,MAAMvN,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAK7K,IAAoByI,EAAM,KAAO,GAAKqC,GAAQ,GAAI9K,IAAoByI,EAAM,KAAO,GAAKqC,GAAQ,GAChV,CACT,EAAGihB,QAAS,SAAS/f,EAAMmK,EAAQxO,EAAKiV,EAAOhG,GAC7C,IAAID,EAAUjX,IAAmBoD,MAAMkJ,EAAMA,EAAOrE,GACpDiC,GAAGoQ,MAAM7D,EAAQQ,EAASC,EAAQjP,EAAKiV,EACzC,EAAGoP,QAAS,SAASjqB,EAAMiX,GAKzB,MAH8B,OAD9BjX,EAAO4Q,GAAKS,UAAUrR,IACbA,EAAKa,OAAS,KACrBb,EAAOA,EAAK4B,OAAO,EAAG5B,EAAKa,OAAS,IACtCgH,GAAGuY,MAAMpgB,EAAMiX,EAAM,GACd,CACT,EAAGiT,QAAS,SAASlqB,EAAMiX,EAAMnD,GAC/B,OAAe,MAAPmD,GACN,KAAK,MACL,KAAK,KACL,KAAK,MACL,KAAK,KACL,KAAK,MACH,MACF,QACE,OAAQ,GAGZ,OADApP,GAAG2P,MAAMxX,EAAMiX,EAAMnD,GACd,CACT,EAAGqW,WAAY,SAASnqB,EAAM0G,EAAK0jB,GACjC,GAAIA,GAAW,EACb,OAAQ,GACV,IAAI9pB,EAAMuH,GAAGsQ,SAASnY,GAClB4F,EAAM0N,KAAKC,IAAI6W,EAASzkB,EAAgBrF,IACxC+pB,EAAU/sB,IAAmBoJ,EAAMd,IAAQ,GAG/C,OAFAH,EAAanF,EAAKoG,EAAK0jB,EAAU,GACjC9sB,IAAmBoJ,EAAMd,IAAQ,GAAKykB,EAC/BzkB,CACT,EAAG0kB,SAAU,SAAStqB,EAAMuqB,GAC1B,IAAY,EAARA,EACF,OAAQ,GAEV,IAAI3qB,EAGJ,KADAA,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IAC7B5c,MAEZ,OAAQ,GAEV,IAAIge,EAAQ,GAOZ,OANY,EAAR2M,IACF3M,GAAS,KACC,EAAR2M,IACF3M,GAAS,KACC,EAAR2M,IACF3M,GAAS,KACPA,GAAS/V,GAAGgW,gBAAgBje,EAAMge,IAC5B,EAEH,CACT,EAAG4M,MAAO,SAASxqB,EAAM6a,EAAO4P,GAC9B,IAAIC,EAAU7iB,GAAG0W,UAAUkM,GAG3B,OAFIC,GACF7iB,GAAG4M,MAAMiW,GACJ7iB,GAAG5F,KAAKjC,EAAM6a,EAAO,EAAG4P,EAAWA,GAAW/U,EACvD,EAAGiV,QAAS,SAASvW,EAAQwW,EAAKC,EAAQhW,GAExC,IADA,IAAIvU,EAAM,EACDtH,EAAI,EAAGA,EAAI6xB,EAAQ7xB,IAAK,CAC/B,IAAIkM,EAAMjH,IAAoB2sB,EAAU,EAAJ5xB,IAAU,GAC1C4M,EAAM3H,IAAoB2sB,GAAW,EAAJ5xB,EAAQ,KAAO,GAChD8xB,EAAOjjB,GAAG8M,KAAKP,EAAQ9W,IAAoB4H,EAAKU,EAAKiP,GACzD,GAAIiW,EAAO,EACT,OAAQ,EAEV,GADAxqB,GAAOwqB,EACHA,EAAOllB,EACT,KACJ,CACA,OAAOtF,CACT,EAAGyqB,SAAU,SAAS3W,EAAQwW,EAAKC,EAAQhW,GAEzC,IADA,IAAIvU,EAAM,EACDtH,EAAI,EAAGA,EAAI6xB,EAAQ7xB,IAAK,CAC/B,IAAIkM,EAAMjH,IAAoB2sB,EAAU,EAAJ5xB,IAAU,GAC1C4M,EAAM3H,IAAoB2sB,GAAW,EAAJ5xB,EAAQ,KAAO,GAChD8xB,EAAOjjB,GAAGsN,MAAMf,EAAQ9W,IAAoB4H,EAAKU,EAAKiP,GAC1D,GAAIiW,EAAO,EACT,OAAQ,EACVxqB,GAAOwqB,CACT,CACA,OAAOxqB,CACT,EAAG0qB,aAAS,EAAQjhB,IAAK,WAGvB,OAFAqf,GAAS4B,SAAW,EACV/sB,IAAoBmrB,GAAS4B,QAAU,IAAM,EAEzD,EAAGC,OAAQ,SAAS/lB,GAElB,OADUD,EAAaC,EAEzB,EAAGgmB,gBAAiB,SAASxV,GAC3B,IAAItB,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAC1B,OAAOH,CACT,EAAG+W,MAAO,SAASC,EAAKC,GACtB,OAAOD,CACT,GACA,SAASE,GAAe5V,EAAIhI,EAAKsd,GAC/B,GAAInrB,EACF,OAAO0rB,GAAoC,EAAG,EAAG7V,EAAIhI,EAAKsd,GAC5D5B,GAAS4B,QAAUA,EACnB,IACE,IAAI5W,EAASgV,GAAS8B,gBAAgBxV,GACtC,OAAQhI,GACN,KAAK,EAEH,OADI5D,EAAMsf,GAASrf,OACT,GACA,GAGElC,GAAG5F,KAAKmS,EAAOpU,KAAMoU,EAAOyG,MAAO,EAAG/Q,GACjC4L,GAEnB,KAAK,EACL,KAAK,EAeL,KAAK,GACL,KAAK,GACH,OAAO,EAfT,KAAK,EACH,OAAOtB,EAAOyG,MAChB,KAAK,EACH,IAAI/Q,EAAMsf,GAASrf,MAEnB,OADAqK,EAAOyG,OAAS/Q,EACT,EAET,KAAK,GACCA,EAAMsf,GAASrf,MAGnB,OADAlM,IAAoBiM,EADP,IACwB,GAAK,EACnC,EAKT,KAAK,GACL,KAAK,EAKL,QACE,OAAQ,GAJV,KAAK,EAEH,OADAyF,GAAS,KACD,EAKd,CAAE,MAAOjT,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,KACAA,GAAE2hB,KACZ,CACF,CACA,SAASuN,GAAa9V,EAAI+V,EAAIT,GAC5B,GAAInrB,EACF,OAAO0rB,GAAoC,EAAG,EAAG7V,EAAI+V,EAAIT,GAC3D5B,GAAS4B,QAAUA,EACnB,IACE,IAAI5W,EAASgV,GAAS8B,gBAAgBxV,GACtC,OAAQ+V,GACN,KAAK,MACL,KAAK,MAKL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MAqBL,KAAK,MAKL,KAAK,MACH,OAAKrX,EAAOC,IAEL,GADG,GAvBZ,KAAK,MACH,IAAKD,EAAOC,IACV,OAAQ,GACV,IAAIqX,EAAOtC,GAASrf,MAEpB,OADA9L,IAAoBytB,IAAS,GAAK,EAC3B,EAET,KAAK,MACH,OAAKtX,EAAOC,KAEJ,IADE,GAGZ,KAAK,MACCqX,EAAOtC,GAASrf,MACpB,OAAOlC,GAAGua,MAAMhO,EAAQqX,EAAIC,GAY9B,QACExqB,GAAM,qBAAuBuqB,GAEnC,CAAE,MAAOnvB,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,KACAA,GAAE2hB,KACZ,CACF,CACA,SAAS0N,GAAY3rB,EAAM6a,EAAOmQ,GAChC,GAAInrB,EACF,OAAO0rB,GAAoC,EAAG,EAAGvrB,EAAM6a,EAAOmQ,GAChE5B,GAAS4B,QAAUA,EACnB,IACE,IAAI/C,EAAWmB,GAAS6B,OAAOjrB,GAC3BiX,EAAO+T,EAAU5B,GAASrf,MAAQ,EAEtC,OADalC,GAAG5F,KAAKgmB,EAAUpN,EAAO5D,GACxBvB,EAChB,CAAE,MAAOpZ,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,KACAA,GAAE2hB,KACZ,CACF,CACA,IAAI2N,GAAqB,CAAC,EAC1B,SAASC,GAAeC,GACtB,KAAOA,EAAYjrB,QAAQ,CACzB,IAAIqE,EAAM4mB,EAAYlgB,MACZkgB,EAAYlgB,KACtBmgB,CAAI7mB,EACN,CACF,CACA,SAAS8mB,GAA2BC,GAClC,OAAO3zB,KAAmB,aAAE6F,IAAoB8tB,IAAY,GAC9D,CACA,IAAIC,GAAuB,CAAC,EACxBC,GAAkB,CAAC,EACnBC,GAAmB,CAAC,EACpBC,GAAS,GACTC,GAAS,GACb,SAASC,GAAsBvV,GAC7B,QAAc,IAAVA,EACF,MAAO,WAGT,IAAIwV,GADJxV,EAAQA,EAAMlW,QAAQ,iBAAkB,MAC1B0E,WAAW,GACzB,OAAIgnB,GAAKH,IAAUG,GAAKF,GACf,IAAMtV,EAENA,CAEX,CACA,SAASyV,GAAoBzV,EAAO0V,GAElC,OADA1V,EAAQuV,GAAsBvV,GACvB,IAAI2V,SAAS,OAAQ,mBAAqB3V,EAAQ,uEAAlD,CAA0H0V,EACnI,CACA,SAASE,GAAYC,EAAeC,GAClC,IAAIC,EAAaN,GAAoBK,GAAW,SAASne,GACvDrW,KAAK8hB,KAAO0S,EACZx0B,KAAKqW,QAAUA,EACf,IAAIhG,EAAQ,IAAIhQ,MAAMgW,GAAShG,WACjB,IAAVA,IACFrQ,KAAKqQ,MAAQrQ,KAAKqd,WAAa,KAAOhN,EAAM7H,QAAQ,qBAAsB,IAE9E,IAUA,OATAisB,EAAW1yB,UAAYL,OAAOmmB,OAAO0M,EAAcxyB,WACnD0yB,EAAW1yB,UAAUqpB,YAAcqJ,EACnCA,EAAW1yB,UAAUsb,SAAW,WAC9B,YAAqB,IAAjBrd,KAAKqW,QACArW,KAAK8hB,KAEL9hB,KAAK8hB,KAAO,KAAO9hB,KAAKqW,OAEnC,EACOoe,CACT,CACA,IAAIC,QAAgB,EACpB,SAASC,GAAmBte,GAC1B,MAAM,IAAIqe,GAAcre,EAC1B,CACA,SAASue,GAA8BC,EAASC,EAAgBC,GAI9D,SAASC,EAAWC,GAClB,IAAIC,EAAmBH,EAAkBE,GACrCC,EAAiB3sB,SAAWssB,EAAQtsB,QACtCosB,GAAmB,mCAErB,IAAK,IAAIj0B,EAAI,EAAGA,EAAIm0B,EAAQtsB,SAAU7H,EACpCy0B,GAAaN,EAAQn0B,GAAIw0B,EAAiBx0B,GAE9C,CAXAm0B,EAAQpN,SAAQ,SAAS7mB,GACvBkzB,GAAiBlzB,GAAQk0B,CAC3B,IAUA,IAAIM,EAAiB,IAAItb,MAAMgb,EAAevsB,QAC1C8sB,EAAoB,GACpBC,EAAa,EACjBR,EAAerN,SAAQ,SAAS8N,EAAI70B,GAC9BmzB,GAAgB7xB,eAAeuzB,GACjCH,EAAe10B,GAAKmzB,GAAgB0B,IAEpCF,EAAkB1gB,KAAK4gB,GAClB3B,GAAqB5xB,eAAeuzB,KACvC3B,GAAqB2B,GAAM,IAE7B3B,GAAqB2B,GAAI5gB,MAAK,WAC5BygB,EAAe10B,GAAKmzB,GAAgB0B,KAClCD,IACiBD,EAAkB9sB,QACnCysB,EAAWI,EAEf,IAEJ,IACiC,IAA7BC,EAAkB9sB,QACpBysB,EAAWI,EAEf,CAoDA,IAAII,GAAsB,CAAC,EAwD3B,SAASC,GAAiB5X,GACxB,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,QACE,MAAM,IAAItD,UAAU,sBAAwBsD,GAElD,CAQA,IAAI6X,QAAmB,EACvB,SAASC,GAAiB/oB,GAGxB,IAFA,IAAI5E,EAAM,GACN4tB,EAAIhpB,EACDvH,IAAmBuwB,IAAM,IAC9B5tB,GAAO0tB,GAAiBrwB,IAAmBuwB,MAAQ,IAErD,OAAO5tB,CACT,CACA,IAAI6tB,QAAe,EACnB,SAASC,GAAkBzf,GACzB,MAAM,IAAIwf,GAAaxf,EACzB,CACA,SAAS8e,GAAaY,EAASC,EAAoBC,GAEjD,GADAA,EAAUA,GAAW,CAAC,IAChB,mBAAoBD,GACxB,MAAM,IAAIzb,UAAU,2DAEtB,IAAImE,EAAQsX,EAAmBlU,KAI/B,GAHKiU,GACHD,GAAkB,SAAWpX,EAAQ,iDAEnCmV,GAAgB7xB,eAAe+zB,GAAU,CAC3C,GAAIE,EAAQC,6BACV,OAEAJ,GAAkB,yBAA2BpX,EAAQ,UAEzD,CAGA,GAFAmV,GAAgBkC,GAAWC,SACpBlC,GAAiBiC,GACpBnC,GAAqB5xB,eAAe+zB,GAAU,CAChD,IAAI1kB,EAAYuiB,GAAqBmC,UAC9BnC,GAAqBmC,GAC5B1kB,EAAUoW,SAAQ,SAASvkB,GACzBA,GACF,GACF,CACF,CAsBA,SAASizB,GAAsBC,GAC7B,KAAMp2B,gBAAgBq2B,IACpB,OAAO,EAET,KAAMD,aAAiBC,IACrB,OAAO,EAMT,IAJA,IAAIC,EAAYt2B,KAAKu2B,GAAGC,QAAQC,gBAC5BC,EAAO12B,KAAKu2B,GAAG3pB,IACf+pB,EAAaP,EAAMG,GAAGC,QAAQC,gBAC9BG,EAAQR,EAAMG,GAAG3pB,IACd0pB,EAAUO,WACfH,EAAOJ,EAAUQ,OAAOJ,GACxBJ,EAAYA,EAAUO,UAExB,KAAOF,EAAWE,WAChBD,EAAQD,EAAWG,OAAOF,GAC1BD,EAAaA,EAAWE,UAE1B,OAAOP,IAAcK,GAAcD,IAASE,CAC9C,CAIA,SAASG,GAA4B30B,GAInC0zB,GAAsC1zB,EAFtBm0B,GAAGC,QAAQC,gBAAgB3U,KAEE,4BAC/C,CACA,IAAIkV,IAAoB,EACxB,SAASC,GAAgBC,GACzB,CAQA,SAASC,GAAmBZ,GAC1BA,EAAG3kB,MAAMtP,OAAS,EACgB,IAAnBi0B,EAAG3kB,MAAMtP,OAT1B,SAAuBi0B,GACjBA,EAAGa,SACLb,EAAGc,aAAaC,cAAcf,EAAGa,UAEjCb,EAAGC,QAAQC,gBAAgBa,cAAcf,EAAG3pB,IAEhD,CAKI2qB,CAAchB,EAElB,CACA,SAASiB,GAAgBN,GACvB,MAAiC,qBAAtBO,mBACTD,GAAkB,SAASE,GACzB,OAAOA,CACT,EACOR,IAETF,GAAoB,IAAIS,mBAAkB,SAASE,GACjD,IAAK,IAAIpe,EAASoe,EAAK5zB,QAASwV,EAAOpV,KAAMoV,EAASoe,EAAK5zB,OAAQ,CACjE,IAAIwyB,EAAKhd,EAAOjX,MACXi0B,EAAG3pB,IAGNuqB,GAAmBZ,GAFnBztB,QAAQwB,KAAK,2BAA6BisB,EAAG3pB,IAIjD,CACF,IAKAqqB,GAAkB,SAASS,GACzBV,GAAkBY,WAAWF,EAAQnB,GACvC,GANAiB,GAAkB,SAASE,GAEzB,OADAV,GAAkBzb,SAASmc,EAASA,EAAQnB,GAAImB,EAAQnB,IACjDmB,CACT,GAIuBR,GACzB,CACA,SAASW,KAIP,GAHK73B,KAAKu2B,GAAG3pB,KACXmqB,GAA4B/2B,MAE1BA,KAAKu2B,GAAGuB,wBAEV,OADA93B,KAAKu2B,GAAG3kB,MAAMtP,OAAS,EAChBtC,KAEP,IA5DgC+3B,EA4D5BC,EAAQR,GAAgB91B,OAAOmmB,OAAOnmB,OAAOu2B,eAAej4B,MAAO,CAAEu2B,GAAI,CAAEj0B,OA5D/Cy1B,EA4DiF/3B,KAAKu2B,GA3DjH,CAAE3kB,MAAOmmB,EAAEnmB,MAAOsmB,gBAAiBH,EAAEG,gBAAiBJ,wBAAyBC,EAAED,wBAAyBlrB,IAAKmrB,EAAEnrB,IAAK4pB,QAASuB,EAAEvB,QAASY,SAAUW,EAAEX,SAAUC,aAAcU,EAAEV,mBA8DrL,OAFAW,EAAMzB,GAAG3kB,MAAMtP,OAAS,EACxB01B,EAAMzB,GAAG2B,iBAAkB,EACpBF,CAEX,CACA,SAASG,KACFn4B,KAAKu2B,GAAG3pB,KACXmqB,GAA4B/2B,MAE1BA,KAAKu2B,GAAG2B,kBAAoBl4B,KAAKu2B,GAAGuB,yBACtChC,GAAkB,yCAEpBmB,GAAgBj3B,MAChBm3B,GAAmBn3B,KAAKu2B,IACnBv2B,KAAKu2B,GAAGuB,0BACX93B,KAAKu2B,GAAGa,cAAW,EACnBp3B,KAAKu2B,GAAG3pB,SAAM,EAElB,CACA,SAASwrB,KACP,OAAQp4B,KAAKu2B,GAAG3pB,GAClB,CACA,IAAIyrB,QAAgB,EAChBC,GAAgB,GACpB,SAASC,KACP,KAAOD,GAAc/vB,QAAQ,CAC3B,IAAInG,EAAMk2B,GAAchlB,MACxBlR,EAAIm0B,GAAG2B,iBAAkB,EACzB91B,EAAY,QACd,CACF,CACA,SAASo2B,KAYP,OAXKx4B,KAAKu2B,GAAG3pB,KACXmqB,GAA4B/2B,MAE1BA,KAAKu2B,GAAG2B,kBAAoBl4B,KAAKu2B,GAAGuB,yBACtChC,GAAkB,yCAEpBwC,GAAc3jB,KAAK3U,MACU,IAAzBs4B,GAAc/vB,QAAgB8vB,IAChCA,GAAcE,IAEhBv4B,KAAKu2B,GAAG2B,iBAAkB,EACnBl4B,IACT,CAQA,SAASq2B,KACT,CACA,IAAIoC,GAAqB,CAAC,EAC1B,SAASC,GAAoBC,EAAOC,EAAYC,GAC9C,QAAwC,IAApCF,EAAMC,GAAYE,cAA0B,CAC9C,IAAIC,EAAWJ,EAAMC,GACrBD,EAAMC,GAAc,WAIlB,OAHKD,EAAMC,GAAYE,cAAc92B,eAAe+X,UAAUxR,SAC5DutB,GAAkB,aAAe+C,EAAY,iDAAmD9e,UAAUxR,OAAS,uBAAyBowB,EAAMC,GAAYE,cAAgB,MAEzKH,EAAMC,GAAYE,cAAc/e,UAAUxR,QAAQlE,MAAMrE,KAAM+Z,UACvE,EACA4e,EAAMC,GAAYE,cAAgB,GAClCH,EAAMC,GAAYE,cAAcC,EAASC,UAAYD,CACvD,CACF,CACA,SAASE,GAAmBva,EAAOpc,EAAO42B,GACpC/yB,EAAOnE,eAAe0c,UACH,IAAjBwa,QAA2D,IAAhC/yB,EAAOuY,GAAOoa,oBAA0E,IAA9C3yB,EAAOuY,GAAOoa,cAAcI,KACnGpD,GAAkB,gCAAkCpX,EAAQ,WAE9Dga,GAAoBvyB,EAAQuY,EAAOA,GAC/BvY,EAAOnE,eAAek3B,IACxBpD,GAAkB,uFAAyFoD,EAAe,MAE5H/yB,EAAOuY,GAAOoa,cAAcI,GAAgB52B,IAE5C6D,EAAOuY,GAASpc,OACK,IAAjB42B,IACF/yB,EAAOuY,GAAOwa,aAAeA,GAGnC,CACA,SAASC,GAAgBza,EAAO0M,EAAagO,EAAmB9B,EAAeT,EAAWwC,EAAevC,EAAQwC,GAC/Gt5B,KAAK8hB,KAAOpD,EACZ1e,KAAKorB,YAAcA,EACnBprB,KAAKo5B,kBAAoBA,EACzBp5B,KAAKs3B,cAAgBA,EACrBt3B,KAAK62B,UAAYA,EACjB72B,KAAKq5B,cAAgBA,EACrBr5B,KAAK82B,OAASA,EACd92B,KAAKs5B,SAAWA,EAChBt5B,KAAKu5B,qBAAuB,EAC9B,CACA,SAASC,GAAc5sB,EAAK6sB,EAAUC,GACpC,KAAOD,IAAaC,GACbD,EAAS3C,QACZhB,GAAkB,gCAAkC4D,EAAa5X,KAAO,wBAA0B2X,EAAS3X,MAE7GlV,EAAM6sB,EAAS3C,OAAOlqB,GACtB6sB,EAAWA,EAAS5C,UAEtB,OAAOjqB,CACT,CACA,SAAS+sB,GAAoCnG,EAAa0D,GACxD,GAAe,OAAXA,EAIF,OAHIl3B,KAAK45B,aACP9D,GAAkB,uBAAyB91B,KAAK8hB,MAE3C,EAEJoV,EAAOX,IACVT,GAAkB,gBAAkB+D,GAAa3C,GAAU,UAAYl3B,KAAK8hB,MAEzEoV,EAAOX,GAAG3pB,KACbkpB,GAAkB,mDAAqD91B,KAAK8hB,MAE9E,IAAIgY,EAAc5C,EAAOX,GAAGC,QAAQC,gBAEpC,OADU+C,GAActC,EAAOX,GAAG3pB,IAAKktB,EAAa95B,KAAKy2B,gBAE3D,CACA,SAASsD,GAAyBvG,EAAa0D,GAC7C,IAAItqB,EACJ,GAAe,OAAXsqB,EAIF,OAHIl3B,KAAK45B,aACP9D,GAAkB,uBAAyB91B,KAAK8hB,MAE9C9hB,KAAKg6B,gBACPptB,EAAM5M,KAAKi6B,iBACS,OAAhBzG,GACFA,EAAY7e,KAAK3U,KAAKs3B,cAAe1qB,GAEhCA,GAEA,EAGNsqB,EAAOX,IACVT,GAAkB,gBAAkB+D,GAAa3C,GAAU,UAAYl3B,KAAK8hB,MAEzEoV,EAAOX,GAAG3pB,KACbkpB,GAAkB,mDAAqD91B,KAAK8hB,OAEzE9hB,KAAKk6B,SAAWhD,EAAOX,GAAGC,QAAQ0D,SACrCpE,GAAkB,oCAAsCoB,EAAOX,GAAGc,aAAeH,EAAOX,GAAGc,aAAavV,KAAOoV,EAAOX,GAAGC,QAAQ1U,MAAQ,sBAAwB9hB,KAAK8hB,MAExK,IAAIgY,EAAc5C,EAAOX,GAAGC,QAAQC,gBAEpC,GADA7pB,EAAM4sB,GAActC,EAAOX,GAAG3pB,IAAKktB,EAAa95B,KAAKy2B,iBACjDz2B,KAAKg6B,eAIP,YAH2B,IAAvB9C,EAAOX,GAAGa,UACZtB,GAAkB,mDAEZ91B,KAAKm6B,eACX,KAAK,EACCjD,EAAOX,GAAGc,eAAiBr3B,KAC7B4M,EAAMsqB,EAAOX,GAAGa,SAEhBtB,GAAkB,oCAAsCoB,EAAOX,GAAGc,aAAeH,EAAOX,GAAGc,aAAavV,KAAOoV,EAAOX,GAAGC,QAAQ1U,MAAQ,sBAAwB9hB,KAAK8hB,MAExK,MACF,KAAK,EACHlV,EAAMsqB,EAAOX,GAAGa,SAChB,MACF,KAAK,EACH,GAAIF,EAAOX,GAAGc,eAAiBr3B,KAC7B4M,EAAMsqB,EAAOX,GAAGa,aACX,CACL,IAAIgD,EAAelD,EAAc,QACjCtqB,EAAM5M,KAAKq6B,SAASztB,EAAK0tB,IAAiB,WACxCF,EAAqB,QACvB,KACoB,OAAhB5G,GACFA,EAAY7e,KAAK3U,KAAKs3B,cAAe1qB,EAEzC,CACA,MACF,QACEkpB,GAAkB,+BAGxB,OAAOlpB,CACT,CACA,SAAS2tB,GAAuC/G,EAAa0D,GAC3D,GAAe,OAAXA,EAIF,OAHIl3B,KAAK45B,aACP9D,GAAkB,uBAAyB91B,KAAK8hB,MAE3C,EAEJoV,EAAOX,IACVT,GAAkB,gBAAkB+D,GAAa3C,GAAU,UAAYl3B,KAAK8hB,MAEzEoV,EAAOX,GAAG3pB,KACbkpB,GAAkB,mDAAqD91B,KAAK8hB,MAE1EoV,EAAOX,GAAGC,QAAQ0D,SACpBpE,GAAkB,mCAAqCoB,EAAOX,GAAGC,QAAQ1U,KAAO,sBAAwB9hB,KAAK8hB,MAE/G,IAAIgY,EAAc5C,EAAOX,GAAGC,QAAQC,gBAEpC,OADU+C,GAActC,EAAOX,GAAG3pB,IAAKktB,EAAa95B,KAAKy2B,gBAE3D,CACA,SAAS+D,GAA6B5tB,GAIpC,OAHI5M,KAAKy6B,gBACP7tB,EAAM5M,KAAKy6B,cAAc7tB,IAEpBA,CACT,CACA,SAAS8tB,GAA6B9tB,GAChC5M,KAAKs3B,eACPt3B,KAAKs3B,cAAc1qB,EAEvB,CACA,SAAS+tB,GAA+BzD,GACvB,OAAXA,GACFA,EAAe,QAEnB,CACA,SAAS0D,GAAgBhuB,EAAK6sB,EAAUC,GACtC,GAAID,IAAaC,EACf,OAAO9sB,EAET,QAA+B,IAA3B8sB,EAAa7C,UACf,OAAO,KAET,IAAIgE,EAAKD,GAAgBhuB,EAAK6sB,EAAUC,EAAa7C,WACrD,OAAW,OAAPgE,EACK,KAEFnB,EAAaJ,SAASuB,EAC/B,CACA,SAASC,KACP,OAAOp5B,OAAO0B,KAAK23B,IAAqBxyB,MAC1C,CACA,SAASyyB,KACP,IAAIH,EAAK,GACT,IAAK,IAAII,KAAKF,GACRA,GAAoB/4B,eAAei5B,IACrCJ,EAAGlmB,KAAKomB,GAAoBE,IAGhC,OAAOJ,CACT,CACA,SAASK,GAAiB7M,GACxBgK,GAAgBhK,EACZiK,GAAc/vB,QAAU8vB,IAC1BA,GAAcE,GAElB,CAOA,IAAIwC,GAAsB,CAAC,EAW3B,SAASI,GAAqBC,EAAQxuB,GAEpC,OADAA,EAXF,SAA0BwuB,EAAQxuB,GAIhC,SAHY,IAARA,GACFkpB,GAAkB,+BAEbsF,EAAOvE,WACZjqB,EAAMwuB,EAAOtE,OAAOlqB,GACpBwuB,EAASA,EAAOvE,UAElB,OAAOjqB,CACT,CAEQyuB,CAAiBD,EAAQxuB,GACxBmuB,GAAoBnuB,EAC7B,CACA,SAAS0uB,GAAgBv5B,EAAWw5B,GAUlC,OATKA,EAAO/E,SAAY+E,EAAO3uB,KAC7B+nB,GAAmB,8CAEG4G,EAAOlE,iBACXkE,EAAOnE,UAEzBzC,GAAmB,oDAErB4G,EAAO3pB,MAAQ,CAAEtP,MAAO,GACjBk1B,GAAgB91B,OAAOmmB,OAAO9lB,EAAW,CAAEw0B,GAAI,CAAEj0B,MAAOi5B,KACjE,CACA,SAASC,GAA+B5uB,GACtC,IAAI6uB,EAAaz7B,KAAK07B,WAAW9uB,GACjC,IAAK6uB,EAEH,OADAz7B,KAAKwX,WAAW5K,GACT,KAET,IAAIopB,EAAqBmF,GAAqBn7B,KAAKy2B,gBAAiBgF,GACpE,QAA2B,IAAvBzF,EAA+B,CACjC,GAA0C,IAAtCA,EAAmBO,GAAG3kB,MAAMtP,MAG9B,OAFA0zB,EAAmBO,GAAG3pB,IAAM6uB,EAC5BzF,EAAmBO,GAAGa,SAAWxqB,EAC1BopB,EAA0B,QAEjC,IAAI6E,EAAK7E,EAA0B,QAEnC,OADAh2B,KAAKwX,WAAW5K,GACTiuB,CAEX,CACA,SAASc,IACP,OAAI37B,KAAKg6B,eACAsB,GAAgBt7B,KAAKy2B,gBAAgB2C,kBAAmB,CAAE5C,QAASx2B,KAAK47B,YAAahvB,IAAK6uB,EAAYpE,aAAcr3B,KAAMo3B,SAAUxqB,IAEpI0uB,GAAgBt7B,KAAKy2B,gBAAgB2C,kBAAmB,CAAE5C,QAASx2B,KAAM4M,OAEpF,CACA,IAKIivB,EALAC,EAAa97B,KAAKy2B,gBAAgB4C,cAAcoC,GAChDM,EAA0BtD,GAAmBqD,GACjD,IAAKC,EACH,OAAOJ,EAAkB74B,KAAK9C,MAI9B67B,EADE77B,KAAKk6B,QACE6B,EAAwBC,iBAExBD,EAAwBE,YAEnC,IAAIC,EAAKtB,GAAgBa,EAAYz7B,KAAKy2B,gBAAiBoF,EAAOpF,iBAClE,OAAW,OAAPyF,EACKP,EAAkB74B,KAAK9C,MAE5BA,KAAKg6B,eACAsB,GAAgBO,EAAOpF,gBAAgB2C,kBAAmB,CAAE5C,QAASqF,EAAQjvB,IAAKsvB,EAAI7E,aAAcr3B,KAAMo3B,SAAUxqB,IAEpH0uB,GAAgBO,EAAOpF,gBAAgB2C,kBAAmB,CAAE5C,QAASqF,EAAQjvB,IAAKsvB,GAE7F,CASA,SAASC,GAAkBzd,EAAO+X,EAAiBmD,EAAaM,EAASF,EAAgB4B,EAAazB,EAAeM,EAAeR,EAAgBI,EAAU/C,GAC5Jt3B,KAAK8hB,KAAOpD,EACZ1e,KAAKy2B,gBAAkBA,EACvBz2B,KAAK45B,YAAcA,EACnB55B,KAAKk6B,QAAUA,EACfl6B,KAAKg6B,eAAiBA,EACtBh6B,KAAK47B,YAAcA,EACnB57B,KAAKm6B,cAAgBA,EACrBn6B,KAAKy6B,cAAgBA,EACrBz6B,KAAKi6B,eAAiBA,EACtBj6B,KAAKq6B,SAAWA,EAChBr6B,KAAKs3B,cAAgBA,EAChB0C,QAAgD,IAA9BvD,EAAgBI,UASrC72B,KAAiB,WAAI+5B,GARjBG,GACFl6B,KAAiB,WAAI25B,GACrB35B,KAAKo8B,mBAAqB,OAE1Bp8B,KAAiB,WAAIu6B,GACrBv6B,KAAKo8B,mBAAqB,KAKhC,CACA,SAASC,GAAoB3d,EAAOpc,EAAO42B,GACpC/yB,EAAOnE,eAAe0c,IACzBiW,GAAmB,4CAEe,IAAhCxuB,EAAOuY,GAAOoa,oBAA6C,IAAjBI,EAC5C/yB,EAAOuY,GAAOoa,cAAcI,GAAgB52B,GAE5C6D,EAAOuY,GAASpc,EAChB6D,EAAOuY,GAAOsa,SAAWE,EAE7B,CAKA,SAASoD,GAAQC,EAAK3vB,EAAK4vB,GACzB,OAAID,EAAIjf,SAAS,KALnB,SAAuBif,EAAK3vB,EAAK4vB,GAC/B,IAAItI,EAAI/tB,EAAO,WAAao2B,GAC5B,OAAOC,GAAQA,EAAKj0B,OAAS2rB,EAAE7vB,MAAM,KAAM,CAACuI,GAAKwO,OAAOohB,IAAStI,EAAEpxB,KAAK,KAAM8J,EAChF,CAGW6vB,CAAcF,EAAK3vB,EAAK4vB,GAE1B5tB,GAAU6C,IAAI7E,GAAKvI,MAAM,KAAMm4B,EACxC,CAWA,SAASE,GAAwBC,EAAWC,GAQ1C,IAAIC,GAPJF,EAAYhH,GAAiBgH,IAEbrf,SAAS,KAb3B,SAAsBif,EAAK3vB,GACzB,IAAIkwB,EAAW,GACf,OAAO,WACLA,EAASv0B,OAASwR,UAAUxR,OAC5B,IAAK,IAAI7H,EAAI,EAAGA,EAAIqZ,UAAUxR,OAAQ7H,IACpCo8B,EAASp8B,GAAKqZ,UAAUrZ,GAE1B,OAAO47B,GAAQC,EAAK3vB,EAAKkwB,EAC3B,CACF,CAKaC,CAAaJ,EAAWC,GAE1BhuB,GAAU6C,IAAImrB,GAMvB,MAHkB,oBAAPC,GACT/G,GAAkB,2CAA6C6G,EAAY,KAAOC,GAE7EC,CACT,CACA,IAAIG,QAAmB,EACvB,SAASC,GAAYr8B,GACnB,IAAIgM,EAAMswB,GAAet8B,GACrBi6B,EAAKlF,GAAiB/oB,GAE1B,OADA2H,GAAM3H,GACCiuB,CACT,CACA,SAASsC,GAAsB9mB,EAAS+mB,GACtC,IAAIC,EAAe,GACfC,EAAO,CAAC,EAgBZ,MADAF,EAAM3V,SAdN,SAAS8V,EAAM38B,GACT08B,EAAK18B,IAGLizB,GAAgBjzB,KAGhBkzB,GAAiBlzB,GACnBkzB,GAAiBlzB,GAAM6mB,QAAQ8V,IAGjCF,EAAa1oB,KAAK/T,GAClB08B,EAAK18B,IAAQ,GACf,IAEM,IAAIo8B,GAAiB3mB,EAAU,KAAOgnB,EAAaG,IAAIP,IAAa3jB,KAAK,CAAC,OAClF,CAiDA,SAASmkB,GAAoB7rB,EAAO8rB,GAElC,IADA,IAAIC,EAAQ,GACHj9B,EAAI,EAAGA,EAAIkR,EAAOlR,IACzBi9B,EAAMhpB,KAAKhP,KAAqB+3B,GAAgB,GAAKh9B,IAAM,IAE7D,OAAOi9B,CACT,CAiDA,SAASC,GAAqB/E,EAAWgF,EAAUC,EAAWC,EAAgBC,GAC5E,IAAIhF,EAAW6E,EAASt1B,OACpBywB,EAAW,GACblD,GAAkB,kFAIpB,IAFA,IAAImI,EAAoC,OAAhBJ,EAAS,IAA6B,OAAdC,EAC5CI,GAAuB,EAClBx9B,EAAI,EAAGA,EAAIm9B,EAASt1B,SAAU7H,EACrC,GAAoB,OAAhBm9B,EAASn9B,SAAkD,IAAnCm9B,EAASn9B,GAAG07B,mBAA+B,CACrE8B,GAAuB,EACvB,KACF,CAEF,IAAIC,EAA+B,SAArBN,EAAS,GAAG/b,KACtBsc,EAAW,GACXC,EAAgB,GACpB,IAAS39B,EAAI,EAAGA,EAAIs4B,EAAW,IAAKt4B,EAClC09B,IAAmB,IAAN19B,EAAU,KAAO,IAAM,MAAQA,EAC5C29B,IAAwB,IAAN39B,EAAU,KAAO,IAAM,MAAQA,EAAI,QAEvD,IAAI49B,EAAgB,mBAAqBrK,GAAsB4E,GAAa,IAAMuF,EAAW,kCAAoCpF,EAAW,GAAK,oCAAsCH,EAAY,8DAAgEG,EAAW,GAAK,iBAC/QkF,IACFI,GAAiB,2BAEnB,IAAIC,EAAYL,EAAuB,cAAgB,OACnDM,EAAQ,CAAC,oBAAqB,UAAW,KAAM,iBAAkB,UAAW,cAC5EC,EAAQ,CAAC3I,GAAmBiI,EAAgBC,EAAezK,GAAgBsK,EAAS,GAAIA,EAAS,IACjGI,IACFK,GAAiB,yCAA2CC,EAAY,cAE1E,IAAS79B,EAAI,EAAGA,EAAIs4B,EAAW,IAAKt4B,EAClC49B,GAAiB,UAAY59B,EAAI,kBAAoBA,EAAI,eAAiB69B,EAAY,QAAU79B,EAAI,SAAWm9B,EAASn9B,EAAI,GAAGohB,KAAO,KACtI0c,EAAM7pB,KAAK,UAAYjU,GACvB+9B,EAAM9pB,KAAKkpB,EAASn9B,EAAI,IAM1B,GAJIu9B,IACFI,EAAgB,aAAeA,EAAc91B,OAAS,EAAI,KAAO,IAAM81B,GAEzEC,IAAkBH,EAAU,YAAc,IAAM,cAAgBE,EAAc91B,OAAS,EAAI,KAAO,IAAM81B,EAAgB,OACpHH,EACFI,GAAiB,sCAEjB,IAAS59B,EAAIu9B,EAAoB,EAAI,EAAGv9B,EAAIm9B,EAASt1B,SAAU7H,EAAG,CAChE,IAAIg+B,EAAkB,IAANh+B,EAAU,YAAc,OAASA,EAAI,GAAK,QACnB,OAAnCm9B,EAASn9B,GAAG07B,qBACdkC,GAAiBI,EAAY,SAAWA,EAAY,SAAWb,EAASn9B,GAAGohB,KAAO,KAClF0c,EAAM7pB,KAAK+pB,EAAY,SACvBD,EAAM9pB,KAAKkpB,EAASn9B,GAAG07B,oBAE3B,CASF,OAPI+B,IACFG,GAAiB,sDAGnBA,GAAiB,MACjBE,EAAM7pB,KAAK2pB,GAnEb,SAAclT,EAAauT,GACzB,KAAMvT,aAAuBiJ,UAC3B,MAAM,IAAI9Z,UAAU,4CAA8C6Q,EAAc,4BAElF,IAAIwT,EAAQzK,GAAoB/I,EAAYtJ,MAAQ,uBAAuB,WAC3E,IACA8c,EAAM78B,UAAYqpB,EAAYrpB,UAC9B,IAAIK,EAAM,IAAIw8B,EACV1kB,EAAIkR,EAAY/mB,MAAMjC,EAAKu8B,GAC/B,OAAOzkB,aAAaxY,OAASwY,EAAI9X,CACnC,CA0DwBy8B,CAAKxK,SAAUmK,GAAOn6B,MAAM,KAAMo6B,EAE1D,CAwCA,IAAIK,GAAkB,GAClBC,GAAqB,CAAC,CAAC,EAAG,CAAEz8B,WAAO,GAAU,CAAEA,MAAO,MAAQ,CAAEA,OAAO,GAAQ,CAAEA,OAAO,IAC5F,SAAS08B,GAAe9H,GAClBA,EAAS,GAA+C,MAAxC6H,GAAmB7H,GAAQvf,WAC7ConB,GAAmB7H,QAAU,EAC7B4H,GAAgBnqB,KAAKuiB,GAEzB,CACA,SAAS+H,KAEP,IADA,IAAIrtB,EAAQ,EACHlR,EAAI,EAAGA,EAAIq+B,GAAmBx2B,SAAU7H,OACjB,IAA1Bq+B,GAAmBr+B,MACnBkR,EAGN,OAAOA,CACT,CACA,SAASstB,KACP,IAAK,IAAIx+B,EAAI,EAAGA,EAAIq+B,GAAmBx2B,SAAU7H,EAC/C,QAA8B,IAA1Bq+B,GAAmBr+B,GACrB,OAAOq+B,GAAmBr+B,GAG9B,OAAO,IACT,CAKA,SAAS45B,GAAiBh4B,GACxB,OAAQA,GACN,UAAK,EACH,OAAO,EAET,KAAK,KACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,QACE,IAAI40B,EAAS4H,GAAgBv2B,OAASu2B,GAAgBxrB,MAAQyrB,GAAmBx2B,OAEjF,OADAw2B,GAAmB7H,GAAU,CAAEvf,SAAU,EAAGrV,SACrC40B,EAGb,CAWA,SAASiI,GAAyBzgB,EAAOpN,EAAO8tB,GAC9C,OAAQ9tB,GACN,KAAK,EACH,OAAO,SAASqiB,GACd,IAAI7nB,EAAOszB,EAASp6B,IAAqBK,IACzC,OAAOrF,KAAmB,aAAE8L,EAAK6nB,IAAY,GAC/C,EACF,KAAK,EACH,OAAO,SAASA,GACd,IAAI7nB,EAAOszB,EAAS75B,IAAsBE,IAC1C,OAAOzF,KAAmB,aAAE8L,EAAK6nB,IAAY,GAC/C,EACF,KAAK,EACH,OAAO,SAASA,GACd,IAAI7nB,EAAOszB,EAASz5B,IAAsBE,IAC1C,OAAO7F,KAAmB,aAAE8L,EAAK6nB,IAAY,GAC/C,EACF,QACE,MAAM,IAAIpZ,UAAU,yBAA2BmE,GAErD,CAcA,SAAS2gB,GAAsBtJ,EAAS8C,GACtC,IAAIyG,EAAOzL,GAAgBkC,GAI3B,YAHa,IAATuJ,GACFxJ,GAAkB+C,EAAY,qBAAuBoE,GAAYlH,IAE5DuJ,CACT,CAUA,SAASzF,GAAa0F,GACpB,GAAU,OAANA,EACF,MAAO,OAET,IAAIvrB,SAAWurB,EACf,MAAU,WAANvrB,GAAwB,UAANA,GAAuB,aAANA,EAC9BurB,EAAEliB,WAEF,GAAKkiB,CAEhB,CACA,SAASC,GAA0B9gB,EAAOpN,GACxC,OAAQA,GACN,KAAK,EACH,OAAO,SAASqiB,GACd,OAAO3zB,KAAmB,cAp2I5BiF,EAAWC,QAAUA,GACvBC,GAA2BF,EAAWC,QAEjCqI,IAi2I+ComB,IAAY,GAC9D,EACF,KAAK,EACH,OAAO,SAASA,GACd,OAAO3zB,KAAmB,aAAE+F,IAAoB4tB,IAAY,GAC9D,EACF,QACE,MAAM,IAAIpZ,UAAU,uBAAyBmE,GAEnD,CA0BA,SAAS+gB,GAA4B/gB,EAAOpN,EAAO8tB,GACjD,OAAQ9tB,GACN,KAAK,EACH,OAAO8tB,EAAS,SAA2BzL,GACzC,OAAO3uB,IAAmB2uB,IAAY,EACxC,EAAI,SAA2BA,GAC7B,OAAOtuB,IAAmBsuB,IAAY,EACxC,EACF,KAAK,EACH,OAAOyL,EAAS,SAA4BzL,GAC1C,OAAOpuB,IAAoBouB,IAAY,EACzC,EAAI,SAA4BA,GAC9B,OAAOluB,IAAoBkuB,IAAY,EACzC,EACF,KAAK,EACH,OAAOyL,EAAS,SAA4BzL,GAC1C,OAAOhuB,IAAoBguB,IAAY,EACzC,EAAI,SAA4BA,GAC9B,OAAO9tB,IAAoB8tB,IAAY,EACzC,EACF,QACE,MAAM,IAAIpZ,UAAU,yBAA2BmE,GAErD,CAoNA,SAASghB,GAAcxI,GAIrB,OAHKA,GACHpB,GAAkB,oCAAsCoB,GAEnD6H,GAAmB7H,GAAQ50B,KACpC,CA4BA,IAAIq9B,GAAgB,CAAC,EACrB,SAASC,GAAkB1hB,GACzB,IAAI2hB,EAASF,GAAczhB,GAC3B,YAAe,IAAX2hB,EACKlK,GAAiBzX,GAEjB2hB,CAEX,CACA,SAASC,KACP,MAA0B,kBAAfC,WACFA,WAGA1L,SACL,cAFG,EAGT,CAwDA,IAAI2L,GAAwB,GAoE5B,SAAS/M,GAAoCgN,EAAOC,GAMlD,IALA,IAAIC,EAAcpmB,UAAUxR,OAAS,EACjC8H,EAAQ+vB,KACRC,EAAwBF,EACxB3D,EAAO8D,GAAmC,EAAxBD,GAClBz9B,EAAI45B,GAAQ,EACP97B,EAAI,EAAGA,EAAIy/B,EAAaz/B,IAAK,CACpC,IAAI8Q,EAAMuI,UAAU,EAAIrZ,GACxBqF,IAAoBnD,EAAIlC,IAAM,GAAK8Q,CACrC,CACA,IAAIxJ,EAAMu4B,GAA0CN,EAAOI,EAAuB7D,EAAM0D,GAExF,OADAnpB,GAAa1G,GACNrI,CACT,CACA,IAAIw4B,GAAiD,GAWrD,SAASC,GAA0B5iB,GACjC,IAGE,OAFA5Y,EAAWy7B,KAAK7iB,EAAO3Y,EAAO6J,WAAa,QAAU,IACrD5J,GAA2BF,EAAWC,QAC/B,CACT,CAAE,MAAOlB,IACT,CACF,CAsBA,IAAI28B,GAAW,CAAEC,eAAgB,EAAGC,wBAAyB,WAC3D,IAAK,IAAIngC,EAAIigC,GAASG,cAAcv4B,OAAS,EAAG7H,GAAK,IAAKA,EACxDigC,GAASI,eAAergC,GAE1BigC,GAASG,cAAgB,GACzBH,GAASK,cAAgB,EAC3B,EAAGC,6BAA8B,WAC1BN,GAASO,iCACZ/xB,GAAWwF,KAAKgsB,GAASE,yBACzBF,GAASO,gCAAiC,EAE9C,EAAGF,cAAe,GAAIG,UAAW,SAASC,EAAgBC,EAAYjD,GACpE,SAASkD,EAAuBC,EAAMC,GACpC,GAAID,EAAKh5B,QAAUi5B,EAAKj5B,OACtB,OAAO,EACT,IAAK,IAAIk5B,KAAMF,EACb,GAAIA,EAAKE,IAAOD,EAAKC,GACnB,OAAO,EAEX,OAAO,CACT,CACA,IAAK,IAAI/gC,KAAKigC,GAASK,cAAe,CACpC,IAAIl+B,EAAO69B,GAASK,cAActgC,GAClC,GAAIoC,EAAKs+B,gBAAkBA,GAAkBE,EAAuBx+B,EAAKs7B,SAAUA,GACjF,MAEJ,CACAuC,GAASK,cAAcrsB,KAAK,CAAEysB,iBAAgBC,aAAYjD,aAC1DuC,GAASK,cAAcU,MAAK,SAAStgC,EAAGugC,GACtC,OAAOvgC,EAAEigC,WAAaM,EAAEN,UAC1B,GACF,EAAGO,oBAAqB,SAASR,GAC/B,IAAK,IAAI1gC,EAAI,EAAGA,EAAIigC,GAASK,cAAcz4B,SAAU7H,EAC/CigC,GAASK,cAActgC,GAAG0gC,gBAAkBA,IAC9CT,GAASK,cAAcpsB,OAAOlU,EAAG,KAC/BA,EAGR,EAAGmhC,+BAAgC,WACjC,OAAOlB,GAASC,gBAAkBD,GAASmB,oBAAoBC,mBACjE,EAAGC,iBAAkB,WACnB,GAAKrB,GAASkB,iCAGd,IAAK,IAAInhC,EAAI,EAAGA,EAAIigC,GAASK,cAAcz4B,SAAU7H,EAAG,CACtD,IAAIoC,EAAO69B,GAASK,cAActgC,GAClCigC,GAASK,cAAcpsB,OAAOlU,EAAG,KAC/BA,EACFoC,EAAKs+B,eAAe/8B,MAAM,KAAMvB,EAAKs7B,SACvC,CACF,EAAG0C,cAAe,GAAImB,0BAA2B,SAAS9rB,EAAQ+rB,GAChE,IAAK,IAAIxhC,EAAI,EAAGA,EAAIigC,GAASG,cAAcv4B,SAAU7H,EAC/CigC,GAASG,cAAcpgC,GAAGyV,QAAUA,GAAY+rB,GAAmBA,GAAmBvB,GAASG,cAAcpgC,GAAGwhC,iBAClHvB,GAASI,eAAergC,IAG9B,EAAGqgC,eAAgB,SAASrgC,GAC1B,IAAIyhC,EAAIxB,GAASG,cAAcpgC,GAC/ByhC,EAAEhsB,OAAOisB,oBAAoBD,EAAED,gBAAiBC,EAAEE,kBAAmBF,EAAEG,YACvE3B,GAASG,cAAclsB,OAAOlU,EAAG,EACnC,EAAG6hC,wBAAyB,SAASC,GACnC,IAAIC,EAAiB,SAAyBrT,KAC1CuR,GAASC,eACXD,GAASmB,oBAAsBU,EAC/B7B,GAASqB,mBACTQ,EAAaE,YAAYtT,GACzBuR,GAASqB,qBACPrB,GAASC,cACb,EACA,GAAI4B,EAAaG,aACfH,EAAaH,kBAAoBI,EACjCD,EAAarsB,OAAOysB,iBAAiBJ,EAAaN,gBAAiBO,EAAgBD,EAAaF,YAChG3B,GAASG,cAAcnsB,KAAK6tB,GAC5B7B,GAASM,oCAET,IAAK,IAAIvgC,EAAI,EAAGA,EAAIigC,GAASG,cAAcv4B,SAAU7H,EAC/CigC,GAASG,cAAcpgC,GAAGyV,QAAUqsB,EAAarsB,QAAUwqB,GAASG,cAAcpgC,GAAGwhC,iBAAmBM,EAAaN,iBACvHvB,GAASI,eAAergC,IAIhC,EAAGmiC,+BAAgC,SAASttB,EAAcutB,EAAkBC,EAAaC,EAAWC,GAClG,IAAIrsB,EAAWwpB,KACX1N,EAAU4N,GAAW,IACzB36B,IAAoB+sB,IAAY,GAAKqQ,EACrCp9B,IAAoB+sB,EAAU,IAAM,GAAKsQ,EACzCr9B,IAAoB+sB,EAAU,IAAM,GAAKuQ,EACzCC,GAA4B,EAAG3tB,EAAc,UAAWutB,EAAkBE,EAAWtQ,GACrF3b,GAAaH,EACf,EAAGusB,gCAAiC,SAAS5tB,GAC3C,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAOpD,GAAQkD,oCACjB,QACE,OAAOE,EAEb,EAAG6tB,qBAAsB,SAASjtB,GAChC,OAAKA,EAEDA,GAAUnP,OACL,UACLmP,GAAUktB,OACL,UACFltB,GAAUA,EAAO2O,SAAW3O,EAAO2O,SAAW,GAL5C,EAMX,EAAGwe,kBAAmB,WACpB,OAAO3+B,SAAS2+B,mBAAqB3+B,SAAS4+B,uBAChD,GAOA,SAASC,GAAyDjuB,EAAckuB,EAAcC,EAAOC,GACnG,IAAI/sB,EAAWwpB,KACX1N,EAAU4N,GAAW,IACrBsD,EAAkB,EAClBH,IACFG,EAXJ,SAAyBC,GACvB,IAAIt7B,EAAS8E,EAAgBw2B,GAAY,EACrCC,EAAUjxB,GAAQtK,GAEtB,OADA4E,EAAa02B,EAAUC,EAASv7B,GACzBu7B,CACT,CAMsBC,CAAgBN,IAEpC99B,IAAoB+sB,IAAY,GAAKkR,EACrCj+B,IAAoB+sB,EAAU,IAAM,GAAKgR,EACzC/9B,IAAoB+sB,EAAU,IAAM,GAAKiR,EACzCT,GAA4B,EAAG3tB,EAAc,UAAW,EAAGquB,EAAiBlR,GAC5E3b,GAAaH,EACf,CAQA,IAAIotB,GAAqB,CAAC,EAAuB,qBAAbr/B,SAA2BA,SAAW,EAAqB,qBAAXqC,OAAyBA,OAAS,GACtH,SAASi9B,GAAgB9tB,GAJzB,IAAgC2tB,EAO9B,OAFA3tB,GAL8B2tB,EAKE3tB,GAJf,EAAIxJ,EAAam3B,GAAWA,EAK5BE,GAAmB7tB,KAAgC,qBAAbxR,SAA2BA,SAASu/B,cAAc/tB,QAAU,EAErH,CACA,SAASguB,GAAsBhuB,GAC7B,OAAO8tB,GAAgB9tB,EACzB,CACA,SAASiuB,GAAmDjuB,EAAQutB,EAAOC,GACzE,IAAIU,EAASF,GAAsBhuB,GACnC,IAAKkuB,EACH,OAAQ,EAKV,GAJIA,EAAOC,kBACT3+B,IAAoB0+B,EAAOC,kBAAoB,GAAKZ,EACpD/9B,IAAoB0+B,EAAOC,gBAAkB,IAAM,GAAKX,IAEtDU,EAAOE,iBAAoBF,EAAOG,4BAa/B,OAAIH,EAAOC,iBArCpB,SAA+D/uB,EAAckuB,EAAcC,EAAOC,GAEhGH,GAAyDjuB,EADzDkuB,EAAeA,EAAe92B,EAAa82B,GAAgB,GAC0BC,EAAOC,EAC9F,CAoCIc,CADmB9+B,IAAoB0+B,EAAOC,gBAAkB,IAAM,GACFnuB,EAAQutB,EAAOC,GAC5E,IAEC,EAjBJU,EAAOE,kBACTF,EAASA,EAAOE,iBAClB,IAAIG,GAAqB,EACzB,GAAIL,EAAOM,aAAeN,EAAOM,YAAYC,MAAO,CAClD,IAAIC,EAAeR,EAAOM,YAAYC,MAAME,aAAa,MACzDJ,EAAyC,IAApBG,EAAa,IAAgC,IAApBA,EAAa,IAAYA,EAAa,KAAOR,EAAOX,OAASmB,EAAa,KAAOR,EAAOV,MACxI,CAaF,OAZEU,EAAOX,MAAQA,EACfW,EAAOV,OAASA,EACZe,GACFL,EAAOM,YAAYC,MAAMG,SAAS,EAAG,EAAGrB,EAAOC,GAS5C,CACT,CACA,SAASqB,GAAgD7uB,EAAQutB,EAAOC,GACtE,OAAIp8B,EACK0rB,GAAoC,EAAG,EAAG9c,EAAQutB,EAAOC,GAC3DS,GAAmDjuB,EAAQutB,EAAOC,EAC3E,CAwDA,IAAIsB,GAAK,CAAEC,QAAS,EAAGC,QAAS,GAAIC,SAAU,GAAIC,aAAc,GAAIC,cAAe,GAAIC,SAAU,GAAIC,QAAS,GAAIC,KAAM,GAAIC,SAAU,CAAC,EAAGC,kBAAmB,CAAC,EAAGC,QAAS,GAAIC,YAAa,CAAC,EAAGC,gBAAiB,EAAGC,YAAa,SAAqBC,GAC9Of,GAAGgB,YACNhB,GAAGgB,UAAYD,EAEnB,EAAGE,SAAU,SAASC,GAEpB,IADA,IAAIn+B,EAAMi9B,GAAGC,UACJxkC,EAAIylC,EAAM59B,OAAQ7H,EAAIsH,EAAKtH,IAClCylC,EAAMzlC,GAAK,KAEb,OAAOsH,CACT,EAAGo+B,UAAW,SAASC,EAAQz0B,EAAO00B,EAAQ/9B,GAE5C,IADA,IAAIg+B,EAAS,GACJ7lC,EAAI,EAAGA,EAAIkR,IAASlR,EAAG,CAC9B,IAAI4M,EAAM/E,EAAS5C,IAAoB4C,EAAa,EAAJ7H,IAAU,IAAM,EAChE6lC,GAAU55B,EAAahH,IAAoB2gC,EAAa,EAAJ5lC,IAAU,GAAI4M,EAAM,OAAI,EAASA,EACvF,CACA,OAAOi5B,CACT,EAAGC,cAAe,SAASnC,EAAQoC,GAC5BpC,EAAOqC,8BACVrC,EAAOqC,4BAA8BrC,EAAOsC,WAC5CtC,EAAOsC,WAAa,SAASC,EAAKC,GAChC,IAAIC,EAAKzC,EAAOqC,4BAA4BE,EAAKC,GACjD,MAAc,SAAPD,GAAkBE,aAAcC,sBAAwBD,EAAK,IACtE,GAEF,IAAIE,EAAM3C,EAAOsC,WAAW,QAASF,GACrC,OAAKO,EAEQ/B,GAAGgC,gBAAgBD,EAAKP,GAD5B,CAGX,EAAGQ,gBAAiB,SAASD,EAAKP,GAChC,IAAIvP,EAASrkB,GAAQ,GACrBlN,IAAoBuxB,EAAS,IAAM,GAAKtjB,KACxC,IAAIpS,EAAU,CAAE01B,SAAQgQ,WAAYT,EAAwBU,QAASV,EAAuBW,aAAcxC,MAAOoC,GAOjH,OANIA,EAAI3C,SACN2C,EAAI3C,OAAOM,YAAcnjC,GAC3ByjC,GAAGS,SAASxO,GAAU11B,GAC0C,qBAArDilC,EAAuBY,2BAA6CZ,EAAuBY,4BACpGpC,GAAGqC,eAAe9lC,GAEb01B,CACT,EAAGqQ,mBAAoB,SAASC,GAG9B,OAFAvC,GAAGwC,eAAiBxC,GAAGS,SAAS8B,GAChCrhC,EAAO6gC,IAAMpC,GAAQK,GAAGwC,gBAAkBxC,GAAGwC,eAAe7C,QACnD4C,IAAkB5C,GAC7B,EAAG+B,WAAY,SAASa,GACtB,OAAOvC,GAAGS,SAAS8B,EACrB,EAAGE,cAAe,SAASF,GACrBvC,GAAGwC,iBAAmBxC,GAAGS,SAAS8B,KACpCvC,GAAGwC,eAAiB,MACE,kBAAb9G,IACTA,GAASsB,0BAA0BgD,GAAGS,SAAS8B,GAAe5C,MAAMP,QAClEY,GAAGS,SAAS8B,IAAkBvC,GAAGS,SAAS8B,GAAe5C,MAAMP,SACjEY,GAAGS,SAAS8B,GAAe5C,MAAMP,OAAOM,iBAAc,GACxDpwB,GAAM0wB,GAAGS,SAAS8B,GAAetQ,QACjC+N,GAAGS,SAAS8B,GAAiB,IAC/B,EAAGF,eAAgB,SAAS9lC,GAG1B,GAFKA,IACHA,EAAUyjC,GAAGwC,iBACXjmC,EAAQmmC,mBAAZ,CAEAnmC,EAAQmmC,oBAAqB,EAC7B,IAjEuCX,EAiEnCY,EAASpmC,EAAQojC,OA3GvB,SAA+CoC,GAC7C,IAAIa,EAAMb,EAAIc,aAAa,0BAC3B,GAAID,EACFb,EAAyB,oBAAI,SAAS/G,EAAO8H,GAC3CF,EAA8B,yBAAE5H,EAAO8H,EACzC,EACAf,EAAyB,oBAAI,SAASroB,EAAMqpB,EAAOp2B,EAAOq2B,GACxDJ,EAA8B,yBAAElpB,EAAMqpB,EAAOp2B,EAAOq2B,EACtD,EACAjB,EAA2B,sBAAI,SAASroB,EAAM/M,EAAOhR,EAAMsnC,EAASD,GAClEJ,EAAgC,2BAAElpB,EAAM/M,EAAOhR,EAAMsnC,EAASD,EAChE,CAGJ,CA8FEE,CAAsCP,GA7FxC,SAAgDZ,GAC9C,IAAIa,EAAMb,EAAIc,aAAa,2BAC3B,GAAID,EACFb,EAAuB,kBAAI,WACzB,OAAOa,EAA0B,sBACnC,EACAb,EAAuB,kBAAI,SAASoB,GAClCP,EAA0B,qBAAEO,EAC9B,EACApB,EAAqB,gBAAI,SAASoB,GAChCP,EAAwB,mBAAEO,EAC5B,EACApB,EAAmB,cAAI,SAASoB,GAC9B,OAAOP,EAAsB,iBAAEO,EACjC,CAGJ,CA6EEC,CAAuCT,GA5EzC,SAA2CZ,GACzC,IAAIa,EAAMb,EAAIc,aAAa,sBAC3B,GAAID,EACFb,EAAiB,YAAI,SAASsB,EAAGC,GAC/BV,EAAsB,iBAAES,EAAGC,EAC7B,CAGJ,CAqEEC,CAAkCZ,GAEhCA,EAAOa,sBAAwBb,EAAOE,aAAa,6BAtEdd,EAwEPY,GAvElBc,eAAiB1B,EAAIc,aAAa,qBAwErCF,EAAOe,0BAA4B,IACzClhB,SAAQ,SAASogB,GACfA,EAAIvqB,SAAS,iBAAoBuqB,EAAIvqB,SAAS,UACjDsqB,EAAOE,aAAaD,EAExB,GAfQ,CAgBV,GACIe,GAAuC,CAAC,UAAW,YAAa,oBAkBpE,IAAIC,GAAM,CAAC,EAIX,SAASC,KACP,IAAKA,GAAcC,QAAS,CAC1B,IACIC,EAAM,CAAE,KAAQ,WAAY,QAAW,WAAY,KAAQ,IAAK,IAAO,IAAK,KAAQ,iBAAkB,MADzE,kBAAdv2B,WAA0BA,UAAUw2B,WAAax2B,UAAUw2B,UAAU,IAAM,KAAKzgC,QAAQ,IAAK,KAAO,SACC,EALnH7B,GAAe,kBAMpB,IAAK,IAAIvF,KAAKynC,QACG,IAAXA,GAAIznC,UACC4nC,EAAI5nC,GAEX4nC,EAAI5nC,GAAKynC,GAAIznC,GAEjB,IAAI2nC,EAAU,GACd,IAAK,IAAI3nC,KAAK4nC,EACZD,EAAQp0B,KAAKvT,EAAI,IAAM4nC,EAAI5nC,IAE7B0nC,GAAcC,QAAUA,CAC1B,CACA,OAAOD,GAAcC,OACvB,CACA,SAASG,GAAaC,EAAWC,GAC/B,GAAI7hC,EACF,OAAO0rB,GAAoC,EAAG,EAAGkW,EAAWC,GAC9D,IACE,IAAIC,EAAU,EAOd,OANAP,KAAgBrhB,SAAQ,SAAS6e,EAAQ5lC,GACvC,IAAIkM,EAAMw8B,EAAcC,EACxB1jC,IAAoBwjC,EAAgB,EAAJzoC,IAAU,GAAKkM,EA7vJrD,SAA4BR,EAAKkQ,EAASgtB,GACxC,IAAK,IAAI5oC,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAChCsE,IAAmBsX,MAAc,GAAKlQ,EAAIc,WAAWxM,GAElD4oC,IACHtkC,IAAmBsX,IAAY,GAAK,EACxC,CAwvJMitB,CAAmBjD,EAAQ15B,GAC3By8B,GAAW/C,EAAO/9B,OAAS,CAC7B,IACO,CACT,CAAE,MAAOvE,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,IACDA,GAAE2hB,KACX,CACF,CACA,SAAS6jB,GAAmBC,EAAgBC,GAC1C,GAAIniC,EACF,OAAO0rB,GAAoC,EAAG,EAAGwW,EAAgBC,GACnE,IACE,IAAIX,EAAUD,KACdnjC,IAAoB8jC,IAAmB,GAAKV,EAAQxgC,OACpD,IAAI8gC,EAAU,EAKd,OAJAN,EAAQthB,SAAQ,SAAS6e,GACvB+C,GAAW/C,EAAO/9B,OAAS,CAC7B,IACA5C,IAAoB+jC,IAAsB,GAAKL,EACxC,CACT,CAAE,MAAOrlC,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,IACDA,GAAE2hB,KACX,CACF,CACA,SAASgkB,GAAUvsB,GACjB,GAAI7V,EACF,OAAO0rB,GAAoC,EAAG,EAAG7V,GACnD,IACE,IAAItB,EAASgV,GAAS8B,gBAAgBxV,GAEtC,OADA7N,GAAG4M,MAAML,GACF,CACT,CAAE,MAAO9X,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,IACDA,GAAE2hB,KACX,CACF,CACA,SAASikB,GAASxsB,EAAIkV,EAAKC,EAAQsX,GACjC,GAAItiC,EACF,OAAO0rB,GAAoC,EAAG,EAAG7V,EAAIkV,EAAKC,EAAQsX,GACpE,IACE,IAAI/tB,EAASgV,GAAS8B,gBAAgBxV,GAClC0sB,EAAMhZ,GAASuB,QAAQvW,EAAQwW,EAAKC,GAExC,OADA5sB,IAAoBkkC,IAAS,GAAKC,EAC3B,CACT,CAAE,MAAO9lC,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,IACDA,GAAE2hB,KACX,CACF,CACA,SAASokB,GAAS3sB,EAAI4sB,EAAYC,EAAa5nB,EAAQ6nB,GACrD,GAAI3iC,EACF,OAAO0rB,GAAoC,GAAI,EAAG7V,EAAI4sB,EAAYC,EAAa5nB,EAAQ6nB,GACzF,IACE,IAAIpuB,EAASgV,GAAS8B,gBAAgBxV,GAElCb,EADc,WACL0tB,GAA6BD,IAAe,GACrDG,EAAe,iBACnB,OAAI5tB,IAAW4tB,GAAgB5tB,GAAU4tB,GAC/B,IAEV56B,GAAGiQ,OAAO1D,EAAQS,EAAQ8F,GAC1B5R,GAAU,CAACqL,EAAOqG,WAAa,GAAI3R,GAAasL,EAAOqG,UAAWnH,KAAKuW,IAAI/gB,KAAe,EAAIA,GAAa,GAAkE,EAA7DwK,KAAKC,KAAKD,KAAKwW,MAAMhhB,GAAa,YAAa,eAAqB,KAAOwK,KAAK+C,MAAMvN,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAK7K,IAAoBukC,IAAc,GAAKz5B,GAAQ,GAAI9K,IAAoBukC,EAAY,IAAM,GAAKz5B,GAAQ,GACvWqL,EAAO4N,UAAuB,IAAXnN,GAA2B,IAAX8F,IACrCvG,EAAO4N,SAAW,MACb,EACT,CAAE,MAAO1lB,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,IACDA,GAAE2hB,KACX,CACF,CACA,SAASykB,GAAUhtB,EAAIkV,EAAKC,EAAQsX,GAClC,GAAItiC,EACF,OAAO0rB,GAAoC,GAAI,EAAG7V,EAAIkV,EAAKC,EAAQsX,GACrE,IACE,IAAI/tB,EAASgV,GAAS8B,gBAAgBxV,GAClC0sB,EAAMhZ,GAAS2B,SAAS3W,EAAQwW,EAAKC,GAEzC,OADA5sB,IAAoBkkC,IAAS,GAAKC,EAC3B,CACT,CAAE,MAAO9lC,IAGP,MAFkB,qBAAPuL,IAAwBvL,cAAauL,GAAG0M,YACjDrT,GAAM5E,IACDA,GAAE2hB,KACX,CACF,CACA,SAASlQ,GAAY40B,GACnB,GAAI9iC,EACF,KAAM,sFACR,IAAI2M,EAAS/B,GAAQqE,eACrB,IAAKtC,EACH,OAAO,EAET,QAAuB,IAAnBA,EAAOD,QACT,KAAM,kBACR,IAAKo2B,EAAa30B,YAChB,KAAM,kCACRvD,GAAQE,eAAesC,KAAKT,GAE5B,IADA,IAAInB,EAAYF,GAAQ,KACfnS,EAAI,EAAGA,EAAI,MAAOA,EACzBiF,IAAoBoN,EAAgB,EAAJrS,IAAU,GAAK,EAEjD,IAAI4pC,EAAYD,EAAa51B,UAAY41B,EAAaE,UAClDt2B,EAAU9B,GAAQgB,SAASk3B,EAAa30B,aAAe,CAAExB,SAAQO,UAAW41B,EAAa51B,UAAW81B,UAAWF,EAAaE,UAAW/1B,kBAAmB61B,EAAa71B,kBAAmBF,iBAAkB+1B,EAAa30B,aACzN80B,EAAMv2B,EAAQK,kBAAoB,EACtCzJ,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAWH,EAAaI,UACjE5/B,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAYz3B,GACrDlI,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAWv2B,EAAQK,kBAC5DzJ,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAWH,EAAaE,WACjE1/B,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAWF,GACpDz/B,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAYH,EAAaE,WAClE1/B,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAgBF,GACzDz/B,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAiBH,EAAaI,UACvE,IACIC,EADcC,KACgB,GAClC9/B,QAAQE,MAAMlF,IAAqB2kC,EAAM,GAAYE,GACrDx2B,EAAOD,QAAUA,EACjB,IAAI22B,EAAM,CAAE,IAAO,MAAO,cAAiBP,EAAaQ,aAAc,IAAOR,EAAa74B,IAAK,iBAAoB64B,EAAa30B,YAAa,UAAa20B,EAAa51B,UAAW,UAAa41B,EAAaE,WAS5M,OARAr2B,EAAO6B,WAAa,WAClB60B,EAAIE,KAAO7gC,YAAY0M,MACvBzC,EAAOL,YAAY+2B,EAAKP,EAAaU,aACvC,EACI72B,EAAO4B,SACT5B,EAAO6B,oBACA7B,EAAO6B,YAET,CACT,CAqDA,SAASi1B,GAAaC,GACpB,OAAOA,EAAO,IAAM,IAAMA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,EAC/D,CACA,SAASC,GAAWvN,EAAOsC,GAEzB,IADA,IAAIkL,EAAM,EACDzqC,EAAI,EAAGA,GAAKu/B,EAAOkL,GAAOxN,EAAMj9B,MAEzC,OAAOyqC,CACT,CACA,IAAIC,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjEC,GAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxE,SAASC,GAAUC,EAAMC,GAEvB,IADA,IAAIC,EAAU,IAAI7uB,KAAK2uB,EAAK9Z,WACrB+Z,EAAO,GAAG,CACf,IAAIE,EAAOV,GAAaS,EAAQE,eAC5BC,EAAeH,EAAQI,WACvBC,GAAsBJ,EAAON,GAAoBC,IAAsBO,GAC3E,KAAIJ,EAAOM,EAAqBL,EAAQM,WAWtC,OADAN,EAAQO,QAAQP,EAAQM,UAAYP,GAC7BC,EAVPD,GAAQM,EAAqBL,EAAQM,UAAY,EACjDN,EAAQO,QAAQ,GACZJ,EAAe,GACjBH,EAAQQ,SAASL,EAAe,IAEhCH,EAAQQ,SAAS,GACjBR,EAAQS,YAAYT,EAAQE,cAAgB,GAMlD,CACA,OAAOF,CACT,CACA,SAASU,GAAU5qC,EAAG6qC,EAASC,EAAQC,GACrC,IAAIC,EAAU5mC,IAAoB2mC,EAAK,KAAO,GAC1Cf,EAAO,CAAEiB,OAAQ7mC,IAAoB2mC,IAAO,GAAIG,OAAQ9mC,IAAoB2mC,EAAK,IAAM,GAAII,QAAS/mC,IAAoB2mC,EAAK,IAAM,GAAIK,QAAShnC,IAAoB2mC,EAAK,KAAO,GAAIM,OAAQjnC,IAAoB2mC,EAAK,KAAO,GAAIO,QAASlnC,IAAoB2mC,EAAK,KAAO,GAAIQ,QAASnnC,IAAoB2mC,EAAK,KAAO,GAAIS,QAASpnC,IAAoB2mC,EAAK,KAAO,GAAIU,SAAUrnC,IAAoB2mC,EAAK,KAAO,GAAIW,UAAWtnC,IAAoB2mC,EAAK,KAAO,GAAIC,QAASA,EAAU5/B,EAAa4/B,GAAW,IAC/eW,EAAUvgC,EAAa0/B,GACvBc,EAAoB,CAAE,KAAM,uBAAwB,KAAM,WAAY,KAAM,WAAY,KAAM,KAAM,KAAM,cAAe,KAAM,QAAS,KAAM,WAAY,KAAM,WAAY,KAAM,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,WAAY,MAAO,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAC/b,IAAK,IAAIC,KAAQD,EACfD,EAAUA,EAAQ1kC,QAAQ,IAAI6kC,OAAOD,EAAM,KAAMD,EAAkBC,IAErE,IAAIE,EAAW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC9EC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC5H,SAASC,EAAiBlrC,EAAOmrC,EAAQC,GAEvC,IADA,IAAIthC,EAAuB,kBAAV9J,EAAqBA,EAAM+a,WAAa/a,GAAS,GAC3D8J,EAAI7D,OAASklC,GAClBrhC,EAAMshC,EAAU,GAAKthC,EAEvB,OAAOA,CACT,CACA,SAASuhC,EAAarrC,EAAOmrC,GAC3B,OAAOD,EAAiBlrC,EAAOmrC,EAAQ,IACzC,CACA,SAASG,EAAaC,EAAOC,GAC3B,SAASC,EAAIzrC,GACX,OAAOA,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAI,CAC1C,CACA,IAAI0rC,EAMJ,OALmE,KAA9DA,EAAUD,EAAIF,EAAMlC,cAAgBmC,EAAMnC,iBACgB,KAAxDqC,EAAUD,EAAIF,EAAMhC,WAAaiC,EAAMjC,eAC1CmC,EAAUD,EAAIF,EAAM9B,UAAY+B,EAAM/B,YAGnCiC,CACT,CACA,SAASC,EAAsBC,GAC7B,OAAQA,EAAUC,UAChB,KAAK,EACH,OAAO,IAAIvxB,KAAKsxB,EAAUvC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAOuC,EACT,KAAK,EACH,OAAO,IAAItxB,KAAKsxB,EAAUvC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAgB,EAAG,GAAI,IAEvD,CACA,SAASyC,EAAiBN,GACxB,IAAIO,EAAW/C,GAAU,IAAI1uB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACjEuB,EAAoB,IAAI1xB,KAAKyxB,EAAS1C,cAAe,EAAG,GACxD4C,EAAoB,IAAI3xB,KAAKyxB,EAAS1C,cAAgB,EAAG,EAAG,GAC5D6C,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GACnD,OAAIX,EAAaY,EAAwBH,IAAa,EAChDT,EAAaa,EAAwBJ,IAAa,EAC7CA,EAAS1C,cAAgB,EAEzB0C,EAAS1C,cAGX0C,EAAS1C,cAAgB,CAEpC,CACA,IAAI+C,EAAoB,CAAE,KAAM,SAASZ,GACvC,OAAOR,EAASQ,EAAMhB,SAAS6B,UAAU,EAAG,EAC9C,EAAG,KAAM,SAASb,GAChB,OAAOR,EAASQ,EAAMhB,QACxB,EAAG,KAAM,SAASgB,GAChB,OAAOP,EAAOO,EAAMlB,QAAQ+B,UAAU,EAAG,EAC3C,EAAG,KAAM,SAASb,GAChB,OAAOP,EAAOO,EAAMlB,OACtB,EAAG,KAAM,SAASkB,GAEhB,OAAOH,GADIG,EAAMjB,QAAU,MACA,IAAM,EAAG,EACtC,EAAG,KAAM,SAASiB,GAChB,OAAOH,EAAaG,EAAMnB,QAAS,EACrC,EAAG,KAAM,SAASmB,GAChB,OAAON,EAAiBM,EAAMnB,QAAS,EAAG,IAC5C,EAAG,KAAM,SAASmB,GAChB,OAAOM,EAAiBN,GAAOzwB,WAAWsxB,UAAU,EACtD,EAAG,KAAM,SAASb,GAChB,OAAOM,EAAiBN,EAC1B,EAAG,KAAM,SAASA,GAChB,OAAOH,EAAaG,EAAMpB,QAAS,EACrC,EAAG,KAAM,SAASoB,GAChB,IAAIc,EAAad,EAAMpB,QAKvB,OAJkB,GAAdkC,EACFA,EAAa,GACNA,EAAa,KACpBA,GAAc,IACTjB,EAAaiB,EAAY,EAClC,EAAG,KAAM,SAASd,GAChB,OAAOH,EAAaG,EAAMnB,QAAUzB,GAAWF,GAAa8C,EAAMjB,QAAU,MAAQzB,GAAoBC,GAAsByC,EAAMlB,OAAS,GAAI,EACnJ,EAAG,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMlB,OAAS,EAAG,EACxC,EAAG,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMrB,OAAQ,EACpC,EAAG,KAAM,WACP,MAAO,IACT,EAAG,KAAM,SAASqB,GAChB,OAAIA,EAAMpB,SAAW,GAAKoB,EAAMpB,QAAU,GACjC,KAEA,IAEX,EAAG,KAAM,SAASoB,GAChB,OAAOH,EAAaG,EAAMtB,OAAQ,EACpC,EAAG,KAAM,WACP,MAAO,IACT,EAAG,KAAM,SAASsB,GAChB,OAAOA,EAAMhB,SAAW,CAC1B,EAAG,KAAM,SAASgB,GAChB,IAAIe,EAAW,IAAIjyB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GAC7CiC,EAAoC,IAAtBD,EAASV,SAAiBU,EAAWvD,GAAUuD,EAAU,EAAIA,EAASV,UACpFY,EAAU,IAAInyB,KAAKkxB,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAakB,EAAaC,GAAW,EAAG,CAC1C,IAAIC,EAA6B9D,GAAWF,GAAa+D,EAAQpD,eAAiBP,GAAoBC,GAAsB0D,EAAQlD,WAAa,GAAK,GAElJL,EAD6B,GAAKsD,EAAY/C,UACViD,EAA6BD,EAAQhD,UAC7E,OAAO4B,EAAa3yB,KAAK+C,KAAKytB,EAAO,GAAI,EAC3C,CACA,OAA+C,IAAxCoC,EAAakB,EAAaD,GAAkB,KAAO,IAC5D,EAAG,KAAM,SAASf,GAChB,IAWImB,EAXAX,EAAoB,IAAI1xB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GACtD0B,EAAoB,IAAI3xB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GACtD2B,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GAC/CQ,EAAUzD,GAAU,IAAI1uB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACpE,OAAIa,EAAamB,EAASP,GAA0B,EAC3C,KAELZ,EAAaa,EAAwBM,IAAY,EAC5C,MAIPE,EADET,EAAuB7C,cAAgBmC,EAAMjB,QAAU,KACxCiB,EAAMf,QAAU,GAAKyB,EAAuBzC,UAE5C+B,EAAMf,QAAU,EAAIyB,EAAuBzC,UAEvD4B,EAAa3yB,KAAK+C,KAAKkxB,EAAiB,GAAI,GACrD,EAAG,KAAM,SAASnB,GAChB,OAAOA,EAAMhB,OACf,EAAG,KAAM,SAASgB,GAChB,IAAIe,EAAW,IAAIjyB,KAAKkxB,EAAMjB,QAAS,EAAG,GACtCqC,EAAoC,IAAtBL,EAASV,SAAiBU,EAAWvD,GAAUuD,EAAgC,IAAtBA,EAASV,SAAiB,EAAI,EAAIU,EAASV,SAAW,GAC7HY,EAAU,IAAInyB,KAAKkxB,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAasB,EAAaH,GAAW,EAAG,CAC1C,IAAIC,EAA6B9D,GAAWF,GAAa+D,EAAQpD,eAAiBP,GAAoBC,GAAsB0D,EAAQlD,WAAa,GAAK,GAElJL,EAD6B,GAAK0D,EAAYnD,UACViD,EAA6BD,EAAQhD,UAC7E,OAAO4B,EAAa3yB,KAAK+C,KAAKytB,EAAO,GAAI,EAC3C,CACA,OAA+C,IAAxCoC,EAAasB,EAAaL,GAAkB,KAAO,IAC5D,EAAG,KAAM,SAASf,GAChB,OAAQA,EAAMjB,QAAU,MAAMxvB,WAAWsxB,UAAU,EACrD,EAAG,KAAM,SAASb,GAChB,OAAOA,EAAMjB,QAAU,IACzB,EAAG,KAAM,SAASiB,GAChB,IAAIqB,EAAMrB,EAAMb,UACZmC,EAAQD,GAAO,EAGnB,OADAA,GADAA,EAAMn0B,KAAKuW,IAAI4d,GAAO,IACV,GAAK,IAAMA,EAAM,IACrBC,EAAQ,IAAM,KAAO5iC,OAAO,OAAS2iC,GAAK1mC,OAAO,EAC3D,EAAG,KAAM,SAASqlC,GAChB,OAAOA,EAAMvB,OACf,EAAG,KAAM,WACP,MAAO,GACT,GACA,IAAK,IAAIa,KAAQsB,EACXxB,EAAQ5vB,SAAS8vB,KACnBF,EAAUA,EAAQ1kC,QAAQ,IAAI6kC,OAAOD,EAAM,KAAMsB,EAAkBtB,GAAM7B,KAG7E,IA5oK0B5N,EAAOrhB,EA4oK7B+yB,EAAQ5xB,GAAmByvB,GAAS,GACxC,OAAImC,EAAM9mC,OAAS6jC,EACV,GA9oKiBzO,EAgpKP0R,EAhpKc/yB,EAgpKP/a,EA/oK1ByD,IAAmB2b,IAAIgd,EAAOrhB,IAAY,GAgpKnC+yB,EAAM9mC,OAAS,EACxB,CAIKhB,GACH4K,GAAQI,sBACV,IA6CIqyB,GA7CA7f,GAAS,SAAStG,EAAQC,EAAOC,EAAM3C,GACpCyC,IACHA,EAASze,MAEXA,KAAKye,OAASA,EACdze,KAAKue,MAAQE,EAAOF,MACpBve,KAAKikB,QAAU,KACfjkB,KAAKO,GAAKgP,GAAGuT,YACb9iB,KAAK8hB,KAAOpD,EACZ1e,KAAK2e,KAAOA,EACZ3e,KAAK+e,SAAW,CAAC,EACjB/e,KAAK6b,WAAa,CAAC,EACnB7b,KAAKgc,KAAOA,CACd,EACIszB,GAAW,IACXC,GAAY,IAChB7tC,OAAO0sB,iBAAiBrJ,GAAOhjB,UAAW,CAAEsa,KAAM,CAAE5K,IAAK,WACvD,OAAQzR,KAAK2e,KAAO2wB,MAAcA,EACpC,EAAG3uB,IAAK,SAASjD,GACfA,EAAM1d,KAAK2e,MAAQ2wB,GAAWtvC,KAAK2e,OAAQ,GAC7C,GAAK9B,MAAO,CAAEpL,IAAK,WACjB,OAAQzR,KAAK2e,KAAO4wB,MAAeA,EACrC,EAAG5uB,IAAK,SAASjD,GACfA,EAAM1d,KAAK2e,MAAQ4wB,GAAYvvC,KAAK2e,OAAQ,GAC9C,GAAKgO,SAAU,CAAElb,IAAK,WACpB,OAAOlC,GAAGyQ,MAAMhgB,KAAK2e,KACvB,GAAK+N,SAAU,CAAEjb,IAAK,WACpB,OAAOlC,GAAG8Q,SAASrgB,KAAK2e,KAC1B,KACApP,GAAGwV,OAASA,GACZxV,GAAG+b,aACHnlB,EAAsB,cAAIoJ,GAAG4c,WAC7BhmB,EAA0B,kBAAIoJ,GAAGid,eACjCrmB,EAA+B,uBAAIoJ,GAAG+e,oBACtCnoB,EAA0B,kBAAIoJ,GAAGqd,eACjCzmB,EAAwB,gBAAIoJ,GAAGsb,aAC/B1kB,EAAkB,UAAIoJ,GAAG6P,OACzBsV,GAAgBvuB,EAAsB,cAAImuB,GAAYj0B,MAAO,iBAlqE7D,WAEE,IADA,IAAImvC,EAAQ,IAAI11B,MAAM,KACbpZ,EAAI,EAAGA,EAAI,MAAOA,EACzB8uC,EAAM9uC,GAAK8L,OAAOC,aAAa/L,GAEjCg1B,GAAmB8Z,CACrB,CA6pEAC,GACA5Z,GAAe1vB,EAAqB,aAAImuB,GAAYj0B,MAAO,gBAj+DzDg2B,GAAYt0B,UAAqB,UAAIo0B,GACrCE,GAAYt0B,UAAiB,MAAI81B,GACjCxB,GAAYt0B,UAAkB,OAAIo2B,GAClC9B,GAAYt0B,UAAqB,UAAIq2B,GACrC/B,GAAYt0B,UAAuB,YAAIy2B,GAyRvC2D,GAAkBp6B,UAAU25B,WAAalB,GACzC2B,GAAkBp6B,UAAUyV,WAAakjB,GACzCyB,GAAkBp6B,UAA0B,eAAI,EAChDo6B,GAAkBp6B,UAAgC,qBAAI2xB,GACtDyI,GAAkBp6B,UAAwB,aAAI44B,GAC9CwB,GAAkBp6B,UAAwB,aAAIy5B,GApF9Cr1B,EAAkC,0BAAI20B,GACtC30B,EAAkC,0BAAI60B,GACtC70B,EAA4B,oBAAIoyB,GAChCpyB,EAAyB,iBAAI+0B,GAoxD/B8B,GAAmB72B,EAAyB,iBAAImuB,GAAYj0B,MAAO,oBA73CjE8F,EAA4B,oBAAI84B,GAChC94B,EAAwB,gBAAI+4B,GA+3C9B,IAAIwQ,GAAuB,CAAC,KA1mJ5B,SAAiBn+B,EAAMC,GACrB,GAAIjK,EACF,OAAO0rB,GAAoC,EAAG,EAAG1hB,EAAMC,EAC3D,EAumJ2CwhB,GAAgBE,GAAcG,GAAa2R,GAAiDkE,GAAcM,GAAoBG,GAAWC,GAAUG,GAAUK,IACxM,SAAS3sB,GAAmBkyB,EAASrG,EAAa/gC,GAChD,IAAI+E,EAAM/E,EAAS,EAAIA,EAAS8E,EAAgBsiC,GAAW,EACvDC,EAAU,IAAI91B,MAAMxM,GACpBuiC,EAAkBhjC,EAAkB8iC,EAASC,EAAS,EAAGA,EAAQrnC,QAGrE,OAFI+gC,IACFsG,EAAQrnC,OAASsnC,GACZD,CACT,CACA,IAyGIE,GAzGAC,GAAgB,CAAE,EA1pJtB,SAAwB1kC,EAAWvD,EAAUkoC,EAAMz+B,GACjD3I,GAAM,qBAAuB+D,EAAatB,GAAa,SAAW,CAACvD,EAAW6E,EAAa7E,GAAY,mBAAoBkoC,EAAMz+B,EAAO5E,EAAa4E,GAAQ,oBAC/J,EAwpJ2C,EAtnJ3C,SAAmCsM,GACjC,OAAOhL,GAAQgL,EAAO,IAAM,EAC9B,EAonJ2E,GA/mJ3E,SAA8BoyB,EAASz+B,GACrCW,GAAQiB,mBAAmBuB,MAAK,WAC9B/F,GAAU6C,IAAIw+B,EAAdrhC,CAAuB4C,EACzB,GACF,EA2mJuG,EAzjJvG,SAAsB5E,EAAKhM,EAAM4W,GAK/B,MAJW,IAAIL,GAAcvK,GACxB4C,KAAK5O,EAAM4W,GACA5K,EAEVA,CACR,EAmjJ0H,EAAKomB,GAAgB,EAAKE,GAAc,EAAKG,GAAa,GA7yEpL,SAAuC6c,GACrC,IAAIC,EAAM7c,GAAmB4c,UACtB5c,GAAmB4c,GAC1B,IAAIE,EAAWD,EAAIC,SACfC,EAAiBD,EAAS7nC,OAC1B+nC,EAAeF,EAAS5S,KAAI,SAAS+S,GACvC,OAAOA,EAAIC,gBACb,IAAGp1B,OAAOg1B,EAAS5S,KAAI,SAAS+S,GAC9B,OAAOA,EAAIE,kBACb,KACIxW,EAAiBkW,EAAIlW,eACrB3C,EAAgB6Y,EAAI7Y,cACxB1C,GAA8B,CAACsb,GAAeI,GAAc,SAASI,GAiBnE,OAhBAN,EAAS3oB,SAAQ,SAAS8oB,EAAK7vC,GAC7B,IAAI8vC,EAAmBE,EAAchwC,GACjCysB,EAASojB,EAAIpjB,OACbwjB,EAAgBJ,EAAII,cACpBF,EAAqBC,EAAchwC,EAAI2vC,GACvCO,EAASL,EAAIK,OACbC,EAAgBN,EAAIM,cACxBN,EAAIl0B,KAAO,SAASzP,GAClB,OAAO4jC,EAA+B,aAAErjB,EAAOwjB,EAAe/jC,GAChE,EACA2jC,EAAI1zB,MAAQ,SAASjQ,EAAKmrB,GACxB,IAAIvE,EAAc,GAClBod,EAAOC,EAAejkC,EAAK6jC,EAA+B,WAAEjd,EAAauE,IACzExE,GAAeC,EACjB,CACF,IACO,CAAC,CAAE1R,KAAMquB,EAAIruB,KAAM,aAAgB,SAASlV,GAEjD,IADA,IAAIiuB,EAAK,IAAI/gB,MAAMu2B,GACV3vC,EAAI,EAAGA,EAAI2vC,IAAkB3vC,EACpCm6B,EAAGn6B,GAAK0vC,EAAS1vC,GAAG2b,KAAKzP,GAG3B,OADA0qB,EAAc1qB,GACPiuB,CACT,EAAG,WAAc,SAASrH,EAAauE,GACrC,GAAIsY,IAAmBtY,EAAExvB,OACvB,MAAM,IAAIgS,UAAU,0CAA4C41B,EAAIruB,KAAO,cAAgBuuB,EAAiB,YAActY,EAAExvB,QAG9H,IADA,IAAIqE,EAAMqtB,IACDv5B,EAAI,EAAGA,EAAI2vC,IAAkB3vC,EACpC0vC,EAAS1vC,GAAGmc,MAAMjQ,EAAKmrB,EAAEr3B,IAK3B,OAHoB,OAAhB8yB,GACFA,EAAY7e,KAAK2iB,EAAe1qB,GAE3BA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB9E,GAClG,GACF,EA2vEyN,EAzvEzN,SAAwCwZ,GACtC,IAAIX,EAAM3a,GAAoBsb,UACvBtb,GAAoBsb,GAC3B,IAAI7W,EAAiBkW,EAAIlW,eACrB3C,EAAgB6Y,EAAI7Y,cACpByZ,EAAeZ,EAAIa,OAMvBpc,GAA8B,CAACkc,GALdC,EAAavT,KAAI,SAASyT,GACzC,OAAOA,EAAMT,gBACf,IAAGp1B,OAAO21B,EAAavT,KAAI,SAASyT,GAClC,OAAOA,EAAMR,kBACf,MACwD,SAASS,GAC/D,IAAIF,EAAS,CAAC,EAiBd,OAhBAD,EAAatpB,SAAQ,SAASwpB,EAAOvwC,GACnC,IAAIywC,EAAYF,EAAME,UAClBX,EAAmBU,EAAYxwC,GAC/BysB,EAAS8jB,EAAM9jB,OACfwjB,EAAgBM,EAAMN,cACtBF,EAAqBS,EAAYxwC,EAAIqwC,EAAaxoC,QAClDqoC,EAASK,EAAML,OACfC,EAAgBI,EAAMJ,cAC1BG,EAAOG,GAAa,CAAE90B,KAAM,SAASzP,GACnC,OAAO4jC,EAA+B,aAAErjB,EAAOwjB,EAAe/jC,GAChE,EAAGiQ,MAAO,SAASjQ,EAAKmrB,GACtB,IAAIvE,EAAc,GAClBod,EAAOC,EAAejkC,EAAK6jC,EAA+B,WAAEjd,EAAauE,IACzExE,GAAeC,EACjB,EACF,IACO,CAAC,CAAE1R,KAAMquB,EAAIruB,KAAM,aAAgB,SAASlV,GACjD,IAAIiuB,EAAK,CAAC,EACV,IAAK,IAAIn6B,KAAKswC,EACZnW,EAAGn6B,GAAKswC,EAAOtwC,GAAG2b,KAAKzP,GAGzB,OADA0qB,EAAc1qB,GACPiuB,CACT,EAAG,WAAc,SAASrH,EAAauE,GACrC,IAAK,IAAIoZ,KAAaH,EACpB,KAAMG,KAAapZ,GACjB,MAAM,IAAIxd,UAAU,oBAAsB42B,EAAY,KAG1D,IAAIvkC,EAAMqtB,IACV,IAAKkX,KAAaH,EAChBA,EAAOG,GAAWt0B,MAAMjQ,EAAKmrB,EAAEoZ,IAKjC,OAHoB,OAAhB3d,GACFA,EAAY7e,KAAK2iB,EAAe1qB,GAE3BA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB9E,GAClG,GACF,EAqsE8P,EApsE9P,SAAkC8Z,EAAe1yB,EAAOb,EAAMwzB,EAAUC,GACxE,EAmsE6R,GAtoE7R,SAAgCvb,EAASrX,EAAOb,EAAM0zB,EAAWC,GAC/D,IAAIlgC,EAAQmkB,GAAiB5X,GAE7BsX,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgB,SAAS+yB,GAC5D,QAASA,CACX,EAAG,WAAc,SAASje,EAAauE,GACrC,OAAOA,EAAIwZ,EAAYC,CACzB,EAAG,eAAkB,EAAG,qBAAwB,SAAS7d,GACvD,IAAI7nB,EACJ,GAAa,IAAT+R,EACF/R,EAAO9G,SACF,GAAa,IAAT6Y,EACT/R,EAAOvG,QACF,IAAa,IAATsY,EAGT,MAAM,IAAItD,UAAU,8BAAgCmE,GAFpD5S,EAAOnG,GAGT,CACA,OAAO3F,KAAmB,aAAE8L,EAAK6nB,IAAYriB,GAC/C,EAAG8qB,mBAAoB,MACzB,EAknE2T,EA7mD3T,SAAiCrG,EAAS2b,EAAgBC,EAAqBC,EAAkBC,EAAwBxY,EAAeyY,EAAiBhb,EAAQib,EAAmBzY,EAAU5a,EAAOszB,EAAqB1a,GACxN5Y,EAAQiX,GAAiBjX,GACzB2a,EAAgBqD,GAAwBmV,EAAwBxY,GAC5DvC,IACFA,EAAS4F,GAAwBoV,EAAiBhb,IAEhDwC,IACFA,EAAWoD,GAAwBqV,EAAmBzY,IAExDhC,EAAgBoF,GAAwBsV,EAAqB1a,GAC7D,IAAI2a,EAAoBhe,GAAsBvV,GAC9Cua,GAAmBgZ,GAAmB,WACpC9U,GAAsB,oBAAsBze,EAAQ,wBAAyB,CAACkzB,GAChF,IACAhd,GAA8B,CAACmB,EAAS2b,EAAgBC,GAAsBC,EAAmB,CAACA,GAAoB,IAAI,SAASM,GAEjI,IAAIrb,EACAsb,EAFJD,EAAOA,EAAK,GAKVC,EAFEP,GACF/a,EAAYqb,EAAKzb,iBACS2C,kBAEV/C,GAAYt0B,UAE9B,IAAIqpB,EAAc+I,GAAoB8d,GAAmB,WACvD,GAAIvwC,OAAOu2B,eAAej4B,QAAUo5B,EAClC,MAAM,IAAIvD,GAAa,0BAA4BnX,GAErD,QAAyC,IAArC+X,EAAgB2b,iBAClB,MAAM,IAAIvc,GAAanX,EAAQ,kCAEjC,IAAI0V,EAAOqC,EAAgB2b,iBAAiBr4B,UAAUxR,QACtD,QAAa,IAAT6rB,EACF,MAAM,IAAIyB,GAAa,2BAA6BnX,EAAQ,uCAAyC3E,UAAUxR,OAAS,iBAAmB7G,OAAO0B,KAAKqzB,EAAgB2b,kBAAkB/0B,WAAa,yBAExM,OAAO+W,EAAK/vB,MAAMrE,KAAM+Z,UAC1B,IACIqf,EAAoB13B,OAAOmmB,OAAOsqB,EAAe,CAAE/mB,YAAa,CAAE9oB,MAAO8oB,KAC7EA,EAAYrpB,UAAYq3B,EACxB,IAAI3C,EAAkB,IAAI0C,GAAgBza,EAAO0M,EAAagO,EAAmB9B,EAAeT,EAAWwC,EAAevC,EAAQwC,GAC9H+Y,EAAqB,IAAIlW,GAAkBzd,EAAO+X,GAAiB,GAAM,GAAO,GAChF6b,EAAmB,IAAInW,GAAkBzd,EAAQ,IAAK+X,GAAiB,GAAO,GAAO,GACrF8b,EAAwB,IAAIpW,GAAkBzd,EAAQ,UAAW+X,GAAiB,GAAO,GAAM,GAGnG,OAFAgC,GAAmB1C,GAAW,CAAEkG,YAAaqW,EAAkBtW,iBAAkBuW,GACjFlW,GAAoB4V,EAAmB7mB,GAChC,CAACinB,EAAoBC,EAAkBC,EAChD,GACF,EA8jDyV,EAtjDzV,SAA6CC,EAAcxZ,EAAUyZ,EAAiBC,EAAkBC,EAAS1Y,GAC/G/xB,EAAO8wB,EAAW,GAClB,IAAI4Z,EAAcnV,GAAoBzE,EAAUyZ,GAChDE,EAAUjW,GAAwBgW,EAAkBC,GACpD,IAAInW,EAAO,CAACvC,GACRzG,EAAc,GAClBoB,GAA8B,GAAI,CAAC4d,IAAe,SAAS1U,GAEzD,IAAIjF,EAAY,gBADhBiF,EAAYA,EAAU,IACqBhc,KAI3C,QAHmD,IAA/Cgc,EAAUrH,gBAAgB2b,mBAC5BtU,EAAUrH,gBAAgB2b,iBAAmB,SAEkB,IAA7DtU,EAAUrH,gBAAgB2b,iBAAiBpZ,EAAW,GACxD,MAAM,IAAInD,GAAa,+EAAiFmD,EAAW,GAAK,gBAAkB8E,EAAUhc,KAAO,uGAqB7J,OAnBAgc,EAAUrH,gBAAgB2b,iBAAiBpZ,EAAW,GAAK,WACzDmE,GAAsB,oBAAsBW,EAAUhc,KAAO,wBAAyB8wB,EACxF,EACAhe,GAA8B,GAAIge,GAAa,SAAS/U,GActD,OAbAC,EAAUrH,gBAAgB2b,iBAAiBpZ,EAAW,GAAK,WACrDjf,UAAUxR,SAAWywB,EAAW,GAClClD,GAAkB+C,EAAY,gBAAkB9e,UAAUxR,OAAS,yBAA2BywB,EAAW,IAE3GxF,EAAYjrB,OAAS,EACrBi0B,EAAKj0B,OAASywB,EACd,IAAK,IAAIt4B,EAAI,EAAGA,EAAIs4B,IAAYt4B,EAC9B87B,EAAK97B,GAAKm9B,EAASn9B,GAAe,WAAE8yB,EAAazZ,UAAUrZ,EAAI,IAEjE,IAAIkM,EAAM+lC,EAAQtuC,MAAM,KAAMm4B,GAE9B,OADAjJ,GAAeC,GACRqK,EAAS,GAAiB,aAAEjxB,EACrC,EACO,EACT,IACO,EACT,GACF,EAkhDmY,EA18CnY,SAA0C4lC,EAAc5Z,EAAYI,EAAUyZ,EAAiBC,EAAkBG,EAAYrxC,EAASsxC,GACpI,IAAIF,EAAcnV,GAAoBzE,EAAUyZ,GAChD7Z,EAAajD,GAAiBiD,GAC9Bia,EAAanW,GAAwBgW,EAAkBG,GACvDje,GAA8B,GAAI,CAAC4d,IAAe,SAAS1U,GAEzD,IAAIjF,GADJiF,EAAYA,EAAU,IACIhc,KAAO,IAAM8W,EAOvC,SAASma,IACP5V,GAAsB,eAAiBtE,EAAY,wBAAyB+Z,EAC9E,CARIha,EAAWhoB,WAAW,QACxBgoB,EAAaoa,OAAOpa,EAAW+V,UAAU,KAEvCmE,GACFhV,EAAUrH,gBAAgB8C,qBAAqB5kB,KAAKikB,GAKtD,IAAID,EAAQmF,EAAUrH,gBAAgB2C,kBAClC6Z,EAASta,EAAMC,GAmBnB,YAlBe,IAAXqa,QAA8C,IAAzBA,EAAOna,eAA4Bma,EAAOC,YAAcpV,EAAUhc,MAAQmxB,EAAOja,WAAaA,EAAW,GAChI+Z,EAAoB/Z,SAAWA,EAAW,EAC1C+Z,EAAoBG,UAAYpV,EAAUhc,KAC1C6W,EAAMC,GAAcma,IAEpBra,GAAoBC,EAAOC,EAAYC,GACvCF,EAAMC,GAAYE,cAAcE,EAAW,GAAK+Z,GAElDne,GAA8B,GAAIge,GAAa,SAAS/U,GACtD,IAAIsV,EAAiBvV,GAAqB/E,EAAWgF,EAAUC,EAAW+U,EAAYrxC,GAOtF,YANwC,IAApCm3B,EAAMC,GAAYE,eACpBqa,EAAena,SAAWA,EAAW,EACrCL,EAAMC,GAAcua,GAEpBxa,EAAMC,GAAYE,cAAcE,EAAW,GAAKma,EAE3C,EACT,IACO,EACT,GACF,EAo6C0a,GAj3C1a,SAAiCpd,EAASrX,GAExCyW,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgB,SAASwY,GAC5D,IAAI2D,EAAKkE,GAAmB7H,GAAQ50B,MAEpC,OADA08B,GAAe9H,GACR2D,CACT,EAAG,WAAc,SAASrH,EAAalxB,GACrC,OAAOg4B,GAAiBh4B,EAC1B,EAAG,eAAkB,EAAG,qBAAwBoxB,GAA4B0I,mBAAoB,MAClG,EAw2Cyc,GAl1Czc,SAAgCrG,EAASrX,EAAOb,EAAMu1B,GACpD,IAAI9hC,EAAQmkB,GAAiB5X,GAE7B,SAASw1B,IACT,CAFA30B,EAAQiX,GAAiBjX,GAGzB20B,EAAKC,OAAS,CAAC,EACfne,GAAaY,EAAS,CAAEjU,KAAMpD,EAAO0M,YAAaioB,EAAM,aAAgB,SAASzd,GAC/E,OAAO51B,KAAKorB,YAAYkoB,OAAO1d,EACjC,EAAG,WAAc,SAASpC,EAAaoC,GACrC,OAAOA,EAAEtzB,KACX,EAAG,eAAkB,EAAG,qBAAwB68B,GAAyBzgB,EAAOpN,EAAO8hC,GAAWhX,mBAAoB,OACtHnD,GAAmBva,EAAO20B,EAC5B,EAs0Cue,EA9zCve,SAAsCE,EAAa70B,EAAO80B,GACxD,IAAIC,EAAWpU,GAAsBkU,EAAa,QAClD70B,EAAQiX,GAAiBjX,GACzB,IAAIg1B,EAAOD,EAASroB,YAChBuoB,EAASjyC,OAAOmmB,OAAO4rB,EAASroB,YAAYrpB,UAAW,CAAEO,MAAO,CAAEA,MAAOkxC,GAAapoB,YAAa,CAAE9oB,MAAO6xB,GAAoBsf,EAAS3xB,KAAO,IAAMpD,GAAO,WACjK,OACAg1B,EAAKJ,OAAOE,GAAaG,EACzBD,EAAKh1B,GAASi1B,CAChB,EAszC0gB,EA5xC1gB,SAAiC5d,EAASrX,EAAOb,GAC/C,IAAIvM,EAAQmkB,GAAiB5X,GAE7BsX,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgB,SAASpc,GAC5D,OAAOA,CACT,EAAG,WAAc,SAASkxB,EAAalxB,GACrC,GAAqB,kBAAVA,GAAuC,mBAAVA,EACtC,MAAM,IAAIiY,UAAU,mBAAqBsf,GAAav3B,GAAS,QAAUtC,KAAK8hB,MAEhF,OAAOxf,CACT,EAAG,eAAkB,EAAG,qBAAwBk9B,GAA0B9gB,EAAOpN,GAAQ8qB,mBAAoB,MAC/G,EAixCwiB,EAhxCxiB,SAAoC1d,EAAOsa,EAAUyZ,EAAiB9V,EAAWkW,EAAYxkB,GAC3F,IAAIwP,EAAWJ,GAAoBzE,EAAUyZ,GAC7C/zB,EAAQiX,GAAiBjX,GACzBm0B,EAAanW,GAAwBC,EAAWkW,GAChD5Z,GAAmBva,GAAO,WACxBye,GAAsB,eAAiBze,EAAQ,wBAAyBmf,EAC1E,GAAG7E,EAAW,GACdpE,GAA8B,GAAIiJ,GAAU,SAAS+V,GACnD,IAAIC,EAAmB,CAACD,EAAU,GAAI,MAAMx4B,OAAOw4B,EAAUnrC,MAAM,IAEnE,OADA4zB,GAAoB3d,EAAOkf,GAAqBlf,EAAOm1B,EAAkB,KAAMhB,EAAYxkB,GAAK2K,EAAW,GACpG,EACT,GACF,EAowCykB,EA3uCzkB,SAAmCoY,EAAe1yB,EAAOb,EAAMwzB,EAAUC,GACvE5yB,EAAQiX,GAAiBjX,IACP,IAAd4yB,IACFA,EAAW,YAEb,IAAIhgC,EAAQmkB,GAAiB5X,GACzBi2B,EAAe,SAASxxC,GAC1B,OAAOA,CACT,EACA,GAAiB,IAAb+uC,EAAgB,CAClB,IAAI0C,EAAW,GAAK,EAAIl2B,EACxBi2B,EAAe,SAASxxC,GACtB,OAAOA,GAASyxC,IAAaA,CAC/B,CACF,CACA,IAAIC,EAAiBt1B,EAAMpB,SAAS,YACpC6X,GAAaic,EAAe,CAAEtvB,KAAMpD,EAAO,aAAgBo1B,EAAc,WAAc,SAAStgB,EAAalxB,GAC3G,GAAqB,kBAAVA,GAAuC,mBAAVA,EACtC,MAAM,IAAIiY,UAAU,mBAAqBsf,GAAav3B,GAAS,QAAUtC,KAAK8hB,MAEhF,GAAIxf,EAAQ+uC,GAAY/uC,EAAQgvC,EAC9B,MAAM,IAAI/2B,UAAU,qBAAuBsf,GAAav3B,GAAS,wDAA0Doc,EAAQ,wCAA0C2yB,EAAW,KAAOC,EAAW,MAE5M,OAAO0C,EAAiB1xC,IAAU,EAAY,EAARA,CACxC,EAAG,eAAkB,EAAG,qBAAwBm9B,GAA4B/gB,EAAOpN,EAAoB,IAAb+/B,GAAiBjV,mBAAoB,MACjI,EAktCymB,EAjtCzmB,SAAuCrG,EAASke,EAAev1B,GAC7D,IACIw1B,EADc,CAAC7lC,UAAWpG,WAAYqG,WAAYE,YAAaD,WAAYE,YAAaC,aAAcC,cACrFslC,GACrB,SAASE,EAAiBjd,GACxBA,IAAmB,EACnB,IAAIprB,EAAOjG,IACPgY,EAAO/R,EAAKorB,IAAW,GACvB5uB,EAAOwD,EAAKorB,EAAS,IAAM,GAC/B,OAAO,IAAIgd,EAAGhvC,EAAQoD,EAAMuV,EAC9B,CAEAsX,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgBy1B,EAAkB,eAAkB,EAAG,qBAAwBA,GAAoB,CAAEje,8BAA8B,GAC1K,EAqsC6oB,EApsC7oB,SAAsCH,EAASrX,GAE7C,IAAI01B,EAA4B,iBADhC11B,EAAQiX,GAAiBjX,IAEzByW,GAAaY,EAAS,CAAEjU,KAAMpD,EAAO,aAAgB,SAASpc,GAC5D,IACI8J,EADA7D,EAAS1C,IAAoBvD,IAAU,GAE3C,GAAI8xC,EAEF,IADA,IAAIC,EAAiB/xC,EAAQ,EACpB5B,EAAI,EAAGA,GAAK6H,IAAU7H,EAAG,CAChC,IAAI4zC,EAAiBhyC,EAAQ,EAAI5B,EACjC,GAAIA,GAAK6H,GAAsD,GAA5ClD,IAAmBivC,IAAmB,GAAS,CAChE,IACIC,EAAgB5nC,EAAa0nC,EADnBC,EAAiBD,QAEnB,IAARjoC,EACFA,EAAMmoC,GAENnoC,GAAOI,OAAOC,aAAa,GAC3BL,GAAOmoC,GAETF,EAAiBC,EAAiB,CACpC,CACF,KACK,CACL,IAAI3xC,EAAI,IAAImX,MAAMvR,GAClB,IAAS7H,EAAI,EAAGA,EAAI6H,IAAU7H,EAC5BiC,EAAEjC,GAAK8L,OAAOC,aAAapH,IAAmB/C,EAAQ,EAAI5B,IAAM,IAElE0L,EAAMzJ,EAAE2W,KAAK,GACf,CAEA,OADA/E,GAAMjS,GACC8J,CACT,EAAG,WAAc,SAASonB,EAAalxB,GACjCA,aAAiB4nB,cACnB5nB,EAAQ,IAAI2F,WAAW3F,IAGzB,IAAIkyC,EAAuC,kBAAVlyC,EAC3BkyC,GAAuBlyC,aAAiB2F,YAAc3F,aAAiBmyC,mBAAqBnyC,aAAiB+L,WACjHynB,GAAkB,yCAWpB,IAAIvtB,GATA6rC,GAAmBI,EACT,WACV,OAAOnnC,EAAgB/K,EACzB,EAEY,WACV,OAAOA,EAAMiG,MACf,KAGEqE,EAAMiG,GAAQ,EAAItK,EAAS,GAG/B,GAFAqE,KAAS,EACT/G,IAAoB+G,IAAQ,GAAKrE,EAC7B6rC,GAAmBI,EACrBrnC,EAAa7K,EAAOsK,EAAM,EAAGrE,EAAS,QAEtC,GAAIisC,EACF,IAAK,IAAI9zC,EAAI,EAAGA,EAAI6H,IAAU7H,EAAG,CAC/B,IAAIg0C,EAAWpyC,EAAM4K,WAAWxM,GAC5Bg0C,EAAW,MACbngC,GAAM3H,GACNkpB,GAAkB,2DAEpBzwB,IAAmBuH,EAAM,EAAIlM,IAAM,GAAKg0C,CAC1C,MAEA,IAASh0C,EAAI,EAAGA,EAAI6H,IAAU7H,EAC5B2E,IAAmBuH,EAAM,EAAIlM,IAAM,GAAK4B,EAAM5B,GAOpD,OAHoB,OAAhB8yB,GACFA,EAAY7e,KAAKJ,GAAO3H,GAEnBA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB,SAASxvB,GACvG2H,GAAM3H,EACR,GACF,EAsnCgrB,EArnChrB,SAAuCmpB,EAAS4e,EAAUj2B,GAExD,IAAIk2B,EAAcC,EAAcC,EAASC,EAAgBzjC,EADzDoN,EAAQiX,GAAiBjX,GAER,IAAbi2B,GACFC,EAAennC,GACfonC,EAAejnC,GACfmnC,EAAiBhnC,GACjB+mC,EAAU,WACR,OAAOrvC,GACT,EACA6L,EAAQ,GACc,IAAbqjC,IACTC,EAAe5mC,GACf6mC,EAAe3mC,GACf6mC,EAAiB5mC,GACjB2mC,EAAU,WACR,OAAOjvC,GACT,EACAyL,EAAQ,GAEV6jB,GAAaY,EAAS,CAAEjU,KAAMpD,EAAO,aAAgB,SAASpc,GAK5D,IAJA,IAEI8J,EAFA7D,EAAS1C,IAAoBvD,IAAU,GACvC0yC,EAAOF,IAEPT,EAAiB/xC,EAAQ,EACpB5B,EAAI,EAAGA,GAAK6H,IAAU7H,EAAG,CAChC,IAAI4zC,EAAiBhyC,EAAQ,EAAI5B,EAAIi0C,EACrC,GAAIj0C,GAAK6H,GAA4C,GAAlCysC,EAAKV,IAAmBhjC,GAAa,CACtD,IACIijC,EAAgBK,EAAaP,EADdC,EAAiBD,QAExB,IAARjoC,EACFA,EAAMmoC,GAENnoC,GAAOI,OAAOC,aAAa,GAC3BL,GAAOmoC,GAETF,EAAiBC,EAAiBK,CACpC,CACF,CAEA,OADApgC,GAAMjS,GACC8J,CACT,EAAG,WAAc,SAASonB,EAAalxB,GACd,kBAAVA,GACXwzB,GAAkB,6CAA+CpX,GAEnE,IAAInW,EAASwsC,EAAezyC,GACxBsK,EAAMiG,GAAQ,EAAItK,EAASosC,GAO/B,OANA/nC,KAAS,EACT/G,IAAoB+G,IAAQ,GAAKrE,GAAU+I,EAC3CujC,EAAavyC,EAAOsK,EAAM,EAAGrE,EAASosC,GAClB,OAAhBnhB,GACFA,EAAY7e,KAAKJ,GAAO3H,GAEnBA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB,SAASxvB,GACvG2H,GAAM3H,EACR,GACF,EA4jCotB,GA3jCptB,SAAuCmpB,EAASrX,EAAOu2B,EAAsBhb,EAAgB+X,EAAqB1a,GAChHhE,GAAmByC,GAAW,CAAEjU,KAAM6T,GAAiBjX,GAAQub,eAAgByC,GAAwBuY,EAAsBhb,GAAiB3C,cAAeoF,GAAwBsV,EAAqB1a,GAAgB8Y,SAAU,GACtO,EAyjCyvB,EAxjCzvB,SAA+CF,EAAcM,EAAkB0E,EAAiB/nB,EAAQwjB,EAAeF,EAAoB0E,EAAiBvE,EAAQC,GAClKvd,GAAmB4c,GAAcE,SAASz7B,KAAK,CAAE67B,mBAAkBrjB,OAAQuP,GAAwBwY,EAAiB/nB,GAASwjB,gBAAeF,qBAAoBG,OAAQlU,GAAwByY,EAAiBvE,GAASC,iBAC5N,EAsjCqyB,EArjCryB,SAAwC9a,EAASrX,EAAOu2B,EAAsBhb,EAAgB+X,EAAqB1a,GACjH9B,GAAoBO,GAAW,CAAEjU,KAAM6T,GAAiBjX,GAAQub,eAAgByC,GAAwBuY,EAAsBhb,GAAiB3C,cAAeoF,GAAwBsV,EAAqB1a,GAAgB0Z,OAAQ,GACrO,EAmjC00B,EAljC10B,SAA8CF,EAAYK,EAAWX,EAAkB0E,EAAiB/nB,EAAQwjB,EAAeF,EAAoB0E,EAAiBvE,EAAQC,GAC1Krb,GAAoBsb,GAAYE,OAAOr8B,KAAK,CAAEw8B,UAAWxb,GAAiBwb,GAAYX,mBAAkBrjB,OAAQuP,GAAwBwY,EAAiB/nB,GAASwjB,gBAAeF,qBAAoBG,OAAQlU,GAAwByY,EAAiBvE,GAASC,iBACjQ,EAgjCq3B,GA/iCr3B,SAAgC9a,EAASrX,GAEvCyW,GAAaY,EAAS,CAAEqf,QAAQ,EAAMtzB,KADtCpD,EAAQiX,GAAiBjX,GAC0B,eAAkB,EAAG,aAAgB,WAExF,EAAG,WAAc,SAAS8U,EAAauE,GAEvC,GACF,EAwiCm5B,GAviCn5B,SAA0Csd,EAAgBC,GACxD,GAAID,GAAkBC,EACpBzhC,YAAY,CAAE,IAAO,qCAChB,GAAItM,EACTsM,YAAY,CAAE,aAAgBwhC,EAAgB,IAAO,2BAChD,CACL,IAAIphC,EAAU9B,GAAQgB,SAASkiC,GAC3BnhC,EAASD,GAAWA,EAAQC,OAChC,IAAKA,EACH,OAEFA,EAAOL,YAAY,CAAE,IAAO,sBAC9B,CACA,OAAO,CACT,EAyhC27B,EAlhC37B,SAAoBqjB,EAAQqe,EAAYC,GACtCte,EAASwI,GAAcxI,GACvBqe,EAAalW,GAAsBkW,EAAY,aAC/C,IAAI/hB,EAAc,GACdiiB,EAAKnb,GAAiB9G,GAE1B,OADA7tB,IAAoB6vC,IAAmB,GAAKC,EACrCF,EAAuB,WAAE/hB,EAAa0D,EAC/C,EA2gC48B,EAngC58B,SAAsBA,EAAQ8B,EAAU6E,EAAU6X,GAChDxe,EAASwI,GAAcxI,GAGvB,IAFA,IAAIkG,EATN,SAA6BpE,EAAU6E,GAErC,IADA,IAAIl7B,EAAI,IAAImX,MAAMkf,GACTt4B,EAAI,EAAGA,EAAIs4B,IAAYt4B,EAC9BiC,EAAEjC,GAAK2+B,GAAsB15B,KAAqBk4B,GAAY,GAAKn9B,IAAM,GAAI,aAAeA,GAE9F,OAAOiC,CACT,CAGcgzC,CAAoB3c,EAAU6E,GACtCrB,EAAO,IAAI1iB,MAAMkf,GACZt4B,EAAI,EAAGA,EAAIs4B,IAAYt4B,EAAG,CACjC,IAAIE,EAAOw8B,EAAM18B,GACjB87B,EAAK97B,GAAKE,EAA2B,qBAAE80C,GACvCA,GAAQ90C,EAAqB,cAC/B,CAEA,OAAO05B,GADEpD,EAAO7yB,WAAM,EAAQm4B,GAEhC,EAw/B+9B,EAAKwC,GAAgB,EAt+Bp/B,SAA4BtgB,GAC1B,OAAc,IAAVA,EACK4b,GAAiBwF,OAExBphB,EAAQkhB,GAAkBlhB,GACnB4b,GAAiBwF,KAAmBphB,IAE/C,EA+9B6gC,EA99B7gC,SAA8BwY,EAAQlV,GAGpC,OAAOsY,IAFPpD,EAASwI,GAAcxI,IACvBlV,EAAO0d,GAAc1d,IAEvB,EA09BwiC,EAz9BxiC,SAAwBkV,GAClBA,EAAS,IACX6H,GAAmB7H,GAAQvf,UAAY,EAE3C,EAq9B6jC,GAp9B7jC,SAA4ByO,EAAQgF,GAGlC,OAFAhF,EAASsZ,GAActZ,cACvBgF,EAAcsU,GAActU,GAE9B,EAg9BulC,EA/8BvlC,SAA2B8L,GAEzB,MAAyB,kBADzBA,EAASwI,GAAcxI,GAEzB,EA48B+mC,EA38B/mC,WACE,OAAOoD,GAAiB,GAC1B,EAy8BuoC,EAx8BvoC,SAA6BiF,GAC3B,OAAOjF,GAAiBsF,GAAkBL,GAC5C,EAs8BiqC,EAr8BjqC,WACE,OAAOjF,GAAiB,CAAC,EAC3B,EAm8B0rC,EAl8B1rC,SAAiCpD,GAE/B3D,GADkBwL,GAAmB7H,GAAQ50B,OAE7C08B,GAAe9H,EACjB,EA87BwtC,EA77BxtC,SAA8BA,EAAQlV,EAAM1f,GAC1C40B,EAASwI,GAAcxI,GACvBlV,EAAO0d,GAAc1d,GACrB1f,EAAQo9B,GAAcp9B,GACtB40B,EAAOlV,GAAQ1f,CACjB,EAw7BmvC,EAv7BnvC,SAA4B1B,EAAM80C,GAGhC,OAAOpb,IAFP15B,EAAOy+B,GAAsBz+B,EAAM,sBACA,qBAAE80C,GAEvC,EAm7B4wC,EAl7B5wC,WACE9sC,IACF,EAg7ByxC,EApoJzxC,SAAwBgtC,EAAQC,GAC9B,IAAIl/B,EACJ,GAAe,IAAXi/B,EACFj/B,EAAMiG,KAAKjG,UACN,IAAgB,IAAXi/B,GAA2B,IAAXA,IAAiB5+B,GAI3C,OADAC,GAAS,KACD,EAHRN,EAAMzE,IAIR,CAGA,OAFAvM,IAAoBkwC,IAAO,GAAKl/B,EAAM,IAAM,EAC5ChR,IAAoBkwC,EAAK,IAAM,GAAKl/B,EAAM,IAAM,IAAM,IAAM,EACrD,CACT,EAunJ8yC,EAj6B9yC,SAAmC0U,EAAMyqB,EAAQC,GAC/C,IAAIvZ,EAdN,SAA0BsZ,EAAQ1nC,GAEhC,IAAI1B,EAEJ,IAHAszB,GAAsBz3B,OAAS,EAE/B6F,IAAQ,EACD1B,EAAKrH,IAAmBywC,MAAa,IAAI,CAC9C,IAAIE,EAAStpC,EAAK,IACdspC,GAAgB,EAAN5nC,GACZA,IACF4xB,GAAsBrrB,KAAKqhC,EAASjwC,IAAoBqI,MAAU,GAAKzI,IAAoByI,IAAQ,MACjGA,CACJ,CACA,OAAO4xB,EACT,CAEaiW,CAAiBH,EAAQC,GACpC,OAAO/kC,GAAWqa,GAAMhnB,MAAM,KAAMm4B,EACtC,EA85B80C,EA75B90C,WACMr1B,GAEAF,GAEJuD,EAAS,2IACX,EAu5Bu3C,EAt5Bv3C,SAA2D0rC,EAAgBC,GAC3E,EAq5B+6C,EAp5B/6C,SAAgCxkC,EAAM+L,EAAK04B,GACzC,GAAIzkC,GAAQ,GAAKA,EAAO3M,IAAmBuD,SAAiB,EAAPoJ,EACnD,OAAQ,GACV,GAAK5K,EASE,CACL,GAAI8D,QAAQC,KAAKnF,IAAqBgM,GAAQ,IAAM+L,EAClD,OAAQ,EAEV,IAAI24B,EAAOpsC,YAAY0M,MACnB2/B,EAAOD,EAAOD,EAElB,IADevrC,QAAQ0rC,SAAS5wC,IAAqBoM,IAAkC,EAAGJ,KAChF,CAER,IADA0kC,EAAOpsC,YAAY0M,OACR2/B,EAET,OADWzrC,QAAQ0rC,SAAS5wC,IAAqBoM,IAAkC,EAAG,IAC9E,GAGV,GAAgB,GADLlH,QAAQ0rC,SAAS5wC,IAAqBoM,IAAkC,EAAG,GAEpF,MAGF,GADAyD,KACI3K,QAAQC,KAAKnF,IAAqBgM,GAAQ,IAAM+L,EAClD,OAAQ,EAEC7S,QAAQ0rC,SAAS5wC,IAAqBoM,IAAkC,EAAGJ,EACxF,CACA,OAAO,CACT,CAhCE,IAAI3J,EAAM6C,QAAQ2rC,KAAK7wC,IAAqBgM,GAAQ,EAAG+L,EAAK04B,GAC5D,GAAY,cAARpuC,EACF,OAAQ,GACV,GAAY,cAARA,EACF,OAAQ,EACV,GAAY,OAARA,EACF,OAAO,EACT,KAAM,6CAA+CA,CA0BzD,EA+2B48C,EAAK0J,GAAwB,EAAKQ,GAAqB,EA92BngD,SAAgCukC,EAAM5xC,EAAKilC,GACzCzkC,IAAmBqxC,WAAWD,IAAS,EAAG5xC,IAAQ,EAAGA,EAAMilC,IAAQ,EACrE,EA42BgiD,EA51BhiD,SAA+C7J,EAAOE,EAAa3D,GACjEgE,GAA+Cj4B,OAAS43B,EAExD,IADA,IAAIv9B,EAAI45B,GAAQ,EACP97B,EAAI,EAAGA,EAAIy/B,EAAaz/B,IAC/B8/B,GAA+C9/B,GAAKqF,IAAoBnD,EAAIlC,IAAM,GAIpF,OAFmBu/B,EAAQ,EAC8BjvB,IAAYivB,EAAQ,GAAlDyP,GAAqBzP,IACpC57B,MAAM,KAAMm8B,GAC1B,EAm1B4kD,EA10B5kD,SAAiCmW,GAC/B,IAAIC,EAAUvxC,IAAmBkD,OAEjC,IADAouC,KAAkC,IACbC,EACnB,OAAO,EAET,IAj4Iex1C,EAAGy1C,EAi4IdC,EAAc,WAClB,GAAIH,EAAgBG,EAClB,OAAO,EAET,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBJ,GAAW,EAAI,GAAMG,GAI7C,GAHAC,EAAoBh8B,KAAKC,IAAI+7B,EAAmBL,EAAgB,WAE9ClW,GADJzlB,KAAKC,IAAI67B,IAx4IV11C,EAw4I+B4Z,KAAK3Z,IAAIs1C,EAAeK,KAx4IpDH,EAw4IwE,OAv4IvE,IACjBz1C,GAAKy1C,EAAWz1C,EAAIy1C,GAEfz1C,KAu4IH,OAAO,CAEX,CACA,OAAO,CACT,EAszB0mD,GAloB1mD,SAA6C+U,EAAQutB,EAAOC,GAE1D,OADaQ,GAAsBhuB,GAE1BiuB,GAAmDjuB,EAAQutB,EAAOC,GAElEqB,GAAgD7uB,EAAQutB,EAAOC,EAE1E,EA2nBqpD,EA1nBrpD,SAA+CwS,GAC/C,EAynBisD,GA/ejsD,SAA0Cc,EAAIC,GAC5C,OAfF,SAA6C/gC,EAAQ+wB,GACnD,IAAIvkC,EAAIukC,GAAc,EAClBiQ,EAAkBxxC,IAAoBhD,EAAI,IAAc,GACxDy0C,EAAoB,CAAE,QAAWzxC,IAAoBhD,EAAI,IAAa,GAAI,QAAWgD,IAAoBhD,EAAI,IAAa,GAAI,UAAagD,IAAoBhD,EAAI,IAAa,GAAI,YAAegD,IAAoBhD,EAAI,IAAc,GAAI,qBAAwBgD,IAAoBhD,EAAI,IAAc,GAAI,wBAA2BgD,IAAoBhD,EAAI,IAAc,GAAI,gBAAmBimC,GAAqCuO,GAAkB,+BAAkCxxC,IAAoBhD,EAAI,IAAc,GAAIykC,aAAczhC,IAAoBhD,EAAI,IAAc,GAAI00C,aAAc1xC,IAAoBhD,EAAI,IAAc,GAAI0kC,0BAA2B1hC,IAAoBhD,EAAI,KAAc,GAAI20C,oBAAqB3xC,IAAoBhD,EAAI,KAAc,GAAI40C,yBAA0B5xC,IAAoBhD,EAAI,KAAc,GAAI60C,6BAA8B7xC,IAAoBhD,EAAI,KAAc,IACt4B0hC,EAASF,GAAsBhuB,GACnC,OAAKkuB,EAGD+S,EAAkBE,oBACb,EAEWrS,GAAGuB,cAAcnC,EAAQ+S,GALpC,CAOX,CAESK,CAAoCR,EAAIC,EACjD,EA6eyuD,EAAKhO,GAAc,EAAKM,GAAoB,EAAKG,GAAW,GAAMC,GAAU,EAAKG,GAAU,GAAMK,GAAW,EAl7Jr1D,WACEj4B,GAAQ7C,aACV,EAg7J02D,EAAKrK,GAAckB,EAAmB,WAAG,GAzUn5D,SAAyBuP,EAAaoL,EAAM42B,EAAelmC,GACzD,GAAiC,qBAAtB7F,kBAET,OADAtB,EAAI,uFACG,EAET,IAAKqL,EAEH,OADArL,EAAI,qDACG,GAET,IAAI0gC,EAAe,GAEnB,GAAIxjC,GAAmD,IAAxBwjC,EAAaxiC,OAC1C,OAAOovC,GAAsC,UAAWjiC,EAAaoL,EAAM42B,EAAelmC,GAI5F,IAAI+4B,EAAY,EACZ91B,EAAY,EACZg2B,EAAW,EACX3pB,IAAiB,GAATA,GACVypB,EAAY5kC,IAAoBmb,IAAS,GACzCypB,GAAa,MACb91B,EAAY9O,IAAoBmb,EAAO,IAAM,GAC7C2pB,EAAoD,IAAzC9kC,IAAoBmb,EAAO,KAAO,IAE7CypB,EAAY,QAEd,IAAI/1B,EAAiC,GAAbC,EACpBD,EACFC,EAAYwJ,GAAU,GAAIssB,GAG1BriC,GADAuM,GAAa81B,GACM,GAGrB,IADA,IAAIj2B,EAAmBzB,GAAQ,KACtBnS,EAAI,EAAGA,EAAI,KAAYA,EAC9BmF,KAAqByO,GAAoB,GAAK5T,IAAM,GAAK,EAC3DiF,IAAoB+P,IAAgB,GAAKpB,EACzC3O,IAAoB2O,EAAmB,KAAO,GAAKA,EACnD,IAAIxB,EAAUwB,EAAmB,IACjC3O,IAAoBmN,IAAY,GAAKA,EACrC,IAAIu3B,EAAe,CAAE51B,YAAW81B,YAAW/1B,oBAAmBi2B,WAAUI,aAAc6M,EAAehiC,YAAapB,EAAkB9C,MAAKu5B,gBACzI,OAAIxjC,GACF8iC,EAAaj1B,IAAM,cACnBvB,YAAYw2B,EAAcU,GACnB,GAEFt1B,GAAY40B,EACrB,EAyR06D,EAxR16D,SAAsB3sB,GACpB9S,EAAY8S,EACd,EAsR67D,EA5D77D,SAAqBnc,EAAG6qC,EAASC,EAAQC,GACvC,OAAOH,GAAU5qC,EAAG6qC,EAASC,EAAQC,EACvC,GAkEIz5B,IA//JJ,WACE,IAAI+kC,EAAO,CAAE,EAAK7H,IAClB,SAAS8H,EAAgBC,EAAUC,GACjC,IA1Ge70C,EA0GX80C,EAAWF,EAASz0C,QAMxB,GALA8C,EAAY,IAAI6xC,EAChBppC,GAAYzI,EAAY,IAAM,GA5GfjD,EA6GLiD,EAAY,IAAM,GA5G9B8I,GAAW6J,QAAQ5V,GA6GjBiP,GAAQG,iBAAiBqC,KAAKxO,EAAY,IAAM,IAChD8E,EAAa8sC,GACRxwC,EAAwB,CAC3B,IAAI0wC,EAAmB9lC,GAAQC,cAAc7J,OAC7C4J,GAAQC,cAAcqV,SAAQ,SAASywB,GACrC/lC,GAAQ6C,uBAAuBkjC,GAAG,aACzBD,GACLhoC,IACJ,GACF,GACF,CACF,CAIA,SAASkoC,EAA2B5+B,GAClCs+B,EAAgBt+B,EAAiB,SAAGA,EAAe,OACrD,CACA,SAAS6+B,EAAuBC,GAC9B,OAnDJ,WACE,IAAK1tC,IAAe5D,GAAsBE,GAAwB,CAChE,GAAqB,oBAAVqxC,QAAyBznC,GAAUN,IAC5C,OAAO+nC,MAAM/nC,GAAgB,CAAEgoC,YAAa,gBAAiBn0C,MAAK,SAAS2F,GACzE,IAAKA,EAAa,GAChB,KAAM,uCAAyCwG,GAAiB,IAElE,OAAOxG,EAAsB,aAC/B,IAAGyuC,OAAM,WACP,OAAO1nC,GAAUP,GACnB,IAEA,GAAIjK,EACF,OAAO,IAAI5C,SAAQ,SAASC,EAASC,GACnC0C,EAAUiK,IAAgB,SAASxG,GACjCpG,EAAQ,IAAIsE,WAAW8B,GACzB,GAAGnG,EACL,GAGN,CACA,OAAOF,QAAQC,UAAUS,MAAK,WAC5B,OAAO0M,GAAUP,GACnB,GACF,CA2BWkoC,GAAmBr0C,MAAK,SAAS2D,GAEtC,OADaoD,YAAYutC,YAAY3wC,EAAQ6vC,EAE/C,IAAGxzC,KAAKi0C,GAAU,SAASM,GACzBtuC,EAAI,0CAA4CsuC,GAChD/vC,GAAM+vC,EACR,GACF,CAeA,GA7BKpxC,GACHyI,KA4BE7J,EAAwB,gBAC1B,IAEE,OADeA,EAAwB,gBAAEyxC,EAAMC,EAEjD,CAAE,MAAO7zC,IAEP,OADAqG,EAAI,sDAAwDrG,KACrD,CACT,EApBK2G,GAA0D,oBAArCQ,YAAYytC,sBAAwCjoC,GAAUJ,KAAoBM,GAAUN,KAAoC,oBAAV+nC,MAUvIF,EAAuBD,GATvBG,MAAM/nC,GAAgB,CAAEgoC,YAAa,gBAAiBn0C,MAAK,SAAS2F,GAEzE,OADaoB,YAAYytC,qBAAqB7uC,EAAU6tC,GAC1CxzC,KAAK+zC,GAA4B,SAASQ,GAGtD,OAFAtuC,EAAI,kCAAoCsuC,GACxCtuC,EAAI,6CACG+tC,EAAuBD,EAChC,GACF,KAceK,MAAMtyC,EAE3B,CA67JU2yC,GACe1yC,EAA2B,mBAAI,WACtD,OAA6BA,EAA2B,mBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC/F,EACY5T,EAAc,MAAI,WAC5B,OAAgBA,EAAc,MAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACrE,EACc5T,EAAgB,QAAI,WAChC,OAAQ0M,GAAU1M,EAAgB,QAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACzE,GACIxF,GAAQpO,EAAc,MAAI,WAC5B,OAAQoO,GAAQpO,EAAc,MAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACrE,EAIImjB,IAHuB/2B,EAA6B,qBAAI,WAC1D,OAA+BA,EAA6B,qBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACnG,EACqB5T,EAAuB,eAAI,WAC9C,OAAQ+2B,GAAiB/2B,EAAuB,eAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACvF,GAOI9G,IAN8C9M,EAAoD,4CAAI,WACxG,OAAsDA,EAAoD,4CAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACjJ,EACsD5T,EAAwD,gDAAI,WAChH,OAA0DA,EAAwD,gDAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACzJ,EACkD5T,EAAoD,4CAAI,WACxG,OAAQ8M,GAA8C9M,EAAoD,4CAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACjJ,GACI3I,GAAqCjL,EAA2C,mCAAI,WACtF,OAAQiL,GAAqCjL,EAA2C,mCAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC/H,EACI49B,GAAwCxxC,EAA8C,sCAAI,WAC5F,OAAQwxC,GAAwCxxC,EAA8C,sCAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACrI,EACIvE,GAA+CrP,EAAqD,6CAAI,WAC1G,OAAQqP,GAA+CrP,EAAqD,6CAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACnJ,EACIwmB,GAA4Cp6B,EAAkD,0CAAI,WACpG,OAAQo6B,GAA4Cp6B,EAAkD,0CAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC7I,EACImpB,GAA8B/8B,EAAoC,4BAAI,WACxE,OAAQ+8B,GAA8B/8B,EAAoC,4BAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACjH,EACI/G,GAA2B7M,EAAiC,yBAAI,WAClE,OAAQ6M,GAA2B7M,EAAiC,yBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC3G,EACI4wB,GAA8BxkC,EAAoC,4BAAI,WACxE,OAAQwkC,GAA8BxkC,EAAoC,4BAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACjH,EACI7C,GAAoB/Q,EAA0B,kBAAI,WACpD,OAAQ+Q,GAAoB/Q,EAA0B,kBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC7F,EACInG,GAAgBzN,EAAsB,cAAI,WAC5C,OAAQyN,GAAgBzN,EAAsB,cAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACrF,EACIxG,GAA2BpN,EAAiC,yBAAI,WAClE,OAAQoN,GAA2BpN,EAAiC,yBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC3G,EACIqmB,GAAYj6B,EAAkB,UAAI,WACpC,OAAQi6B,GAAYj6B,EAAkB,UAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC7E,EACIhD,GAAe5Q,EAAqB,aAAI,WAC1C,OAAQ4Q,GAAe5Q,EAAqB,aAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACnF,EACIumB,GAAan6B,EAAmB,WAAI,WACtC,OAAQm6B,GAAan6B,EAAmB,WAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC/E,EACIjD,GAA+B3Q,EAAqC,6BAAI,WAC1E,OAAQ2Q,GAA+B3Q,EAAqC,6BAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACnH,EACIkE,GAAY9X,EAAkB,UAAI,WACpC,OAAQ8X,GAAY9X,EAAkB,UAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC7E,EAgBIlF,IAfe1O,EAAqB,aAAI,WAC1C,OAAuBA,EAAqB,aAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACnF,EACqB5T,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACvF,EACqB5T,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACvF,EACsB5T,EAAwB,gBAAI,WAChD,OAA0BA,EAAwB,gBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACzF,EACuB5T,EAAyB,iBAAI,WAClD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC3F,EACmD5T,EAAqD,6CAAI,OACxG4L,GAAiC5L,EAAuC,+BAAI,MAgBhF,SAASwC,GAAW9B,GAClB7G,KAAK8hB,KAAO,aACZ9hB,KAAKqW,QAAU,gCAAkCxP,EAAS,IAC1D7G,KAAK6G,OAASA,CAChB,CAnBAV,EAAyB,iBAAI6J,GAC7B7J,EAA4B,oBAAI8J,GAChC9J,EAAsB,cAAIoJ,GAAG4c,WAC7BhmB,EAA0B,kBAAIoJ,GAAGid,eACjCrmB,EAA+B,uBAAIoJ,GAAG+e,oBACtCnoB,EAA0B,kBAAIoJ,GAAGqd,eACjCzmB,EAAwB,gBAAIoJ,GAAGsb,aAC/B1kB,EAAkB,UAAIoJ,GAAG6P,OACzBjZ,EAAyB,iBAAI0C,GAC7B1C,EAAW,GAAIoJ,GACfpJ,EAAgB,QAAIgM,GACpBhM,EAAgB,QAAIgM,GACpBhM,EAAmB,WAAIlB,EACvBkB,EAAmB,WAAIwC,GAmCvB,SAASmwC,GAAItc,GAEX,GADAA,EAAOA,GAAQ91B,IACXmJ,GAAkB,GAAtB,CAGA,GAAItI,EAIF,OAHAtB,EAAoBE,GACpBmJ,UACAuE,YAAY,CAAE,IAAO,YAhyKzB,WACE,IAAItM,EAAJ,CAEA,GAAIpB,EAAe,OAGjB,IAF+B,mBAApBA,EAAe,SACxBA,EAAe,OAAI,CAACA,EAAe,SAC9BA,EAAe,OAAEoC,QAsCPrF,EArCHiD,EAAe,OAAEmL,QAsCjCtC,GAAa8J,QAAQ5V,GADvB,IAAqBA,EAlCnB0M,GAAqBZ,GARb,CASV,CAwxKE+pC,GACIlpC,GAAkB,IAmBlB1J,EAAkB,WACpBA,EAAkB,UAAE,cACpBgL,YAAW,WACTA,YAAW,WACThL,EAAkB,UAAE,GACtB,GAAG,GACH6yC,GACF,GAAG,IAEHA,IApCF,CAWA,SAASA,IACHlJ,KAEJA,IAAY,EACZ3pC,EAAkB,WAAI,EAClBiF,IAEJkE,KAvxKE/H,GAEJqI,GAAqBV,IAuxKnBjJ,EAAoBE,GAChBA,EAA6B,sBAC/BA,EAA6B,uBAC3B8yC,IAhDR,SAAkBzc,GAChB,IAAI0c,EAAgB/yC,EAAc,MAGlC,IAEE8P,GADUijC,EAHD,EACA,IAGC,EACZ,CAAE,MAAOl1C,IACP,GAAIA,cAAa2E,IAAmB,UAAL3E,GAC7B,OAEF,IAAIm1C,EAAQn1C,GACRA,IAAkB,kBAANA,IAAkBA,GAAEqM,QAClC8oC,EAAQ,CAACn1C,GAAGA,GAAEqM,QAEhBhG,EAAI,qBAAuB8uC,GAC3BvyC,EAAM,EAAG5C,GACX,CAAE,SACa,CACf,CACF,CA6BMo1C,GApxKN,WACE,IAAI7xC,EAAJ,CAEA,GAAIpB,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEoC,QAYPrF,EAXHiD,EAAgB,QAAEmL,QAYnClC,GAAc0J,QAAQ5V,GADxB,IAAsBA,EARpB0M,GAAqBR,GARb,CASV,CA0wKIiqC,IACF,CAYF,CAEA,SAASpjC,GAAKpP,EAAQyyC,GAEpB,GADazyC,GACRyyC,GACC/xC,EAEF,MADAsM,YAAY,CAAE,IAAO,cAAe,WAAchN,IAC5C,IAAI8B,GAAW9B,GAIrBgC,OAEFsJ,GAAQ4B,sBAnzKNxM,IAEY,EAmzKVpB,EAAe,QACjBA,EAAe,OAAEU,GACnBuE,GAAQ,GAEVxE,EAAMC,EAAQ,IAAI8B,GAAW9B,GAC/B,CACA,GA1FAkJ,GAAwB,SAASwpC,IAC1BzJ,IACHgJ,KACGhJ,KACH//B,GAAwBwpC,EAC5B,EAiEApzC,EAAY,IAAI2yC,GAoBZ3yC,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEoC,OAAS,GAChCpC,EAAgB,QAAEmN,KAAlBnN,GAGJ,IAAI8yC,IAAe,EAQnB,OAPI9yC,EAAqB,eACvB8yC,IAAe,GACb1xC,IACF2D,GAAgB,EAChBiH,GAAQe,cAEV4lC,KACO/zC,EAAYy0C,KACrB,CACF,CAh5LkB,GAi5LK,kBAAZn2C,GAA0C,kBAAXmB,EACxCA,EAAOnB,QAAUoB,EACQ,oBAAXg1C,QAAyBA,OACvCA,OAAO,IAAI,WACT,OAAOh1C,CACT,IAC0B,kBAAZpB,IACdA,EAAoB,WAAIoB,EAC5B,IAIEi1C,EAAkBz2C,EAAW,CAC/B,kBAAiB,SAACI,EAASmB,GACzB,IAAIC,EAAc,WAChB,IAAIC,EAAiC,qBAAbC,UAA4BA,SAASC,cAAgBD,SAASC,cAAcC,SAAM,EAG1G,OADEH,EAAaA,GAAcI,EACtB,SAASC,GAEd,IACIkB,EAAqBC,EADrBC,EAAgC,qBADpCpB,EAAcA,GAAe,CAAC,GACoBA,EAAc,CAAC,EAEjEoB,EAAc,MAAI,IAAIzC,SAAQ,SAASC,EAASC,GAC9CqC,EAAsBtC,EACtBuC,EAAqBtC,CACvB,IACA,IACIvB,EADA+D,EAAkB,CAAC,EAEvB,IAAK/D,KAAO8D,EACNA,EAAOnE,eAAeK,KACxB+D,EAAgB/D,GAAO8D,EAAO9D,IAGlC,IAeIgE,EAAOC,EAAWC,EAClBC,EACAC,EAjBAC,EAAa,GACbC,EAAc,iBACdC,EAAQ,SAASC,EAAQC,GAC3B,MAAMA,CACR,EACIC,EAAuC,kBAAXC,OAC5BC,EAAiD,oBAAlBC,cAC/BC,EAAyC,kBAAZC,GAAoD,kBAArBA,EAAQC,UAA0D,kBAA1BD,EAAQC,SAASC,KACrHE,EAAkB,GAUlBL,GAEAK,EADEP,EACgBlE,EAAU,QAAQ6E,QAAQJ,GAAmB,IAE7CK,EAAY,IAEhCxB,EAAQ,SAAoByB,EAAUC,GAMpC,OALKvB,IACHA,EAASzD,EAAU,OAChB0D,IACHA,EAAW1D,EAAU,SACvB+E,EAAWrB,EAAoB,UAAEqB,GAC1BtB,EAAqB,aAAEsB,EAAUC,EAAS,KAAO,OAC1D,EACAxB,EAAa,SAAqBuB,GAChC,IAAIE,EAAM3B,EAAMyB,GAAU,GAK1B,OAJKE,EAAI9C,SACP8C,EAAM,IAAIC,WAAWD,IAEvBE,EAAOF,EAAI9C,QACJ8C,CACT,EACA1B,EAAY,SAAoBwB,EAAUK,EAAQC,GAC3C5B,IACHA,EAASzD,EAAU,OAChB0D,IACHA,EAAW1D,EAAU,SACvB+E,EAAWrB,EAAoB,UAAEqB,GACjCtB,EAAiB,SAAEsB,GAAU,SAASO,EAAMC,GACtCD,EACFD,EAAQC,GAERF,EAAOG,EAAKpD,OAChB,GACF,EACIkC,EAAc,KAAEmB,OAAS,IAC3B5B,EAAcS,EAAc,KAAE,GAAGoB,QAAQ,MAAO,MAElD9B,EAAaU,EAAc,KAAEqB,MAAM,GACnCrB,EAAY,GAAE,qBAAqB,SAASsB,GAC1C,KAAMA,aAAcC,IAClB,MAAMD,CAEV,IACAtB,EAAY,GAAE,qBAAsBwB,IACpChC,EAAQ,SAASC,EAAQC,GACvB,GAAI+B,KAEF,MADAzB,EAAkB,SAAIP,EAChBC,EAERM,EAAc,KAAEP,EAClB,EACAV,EAAgB,QAAI,WAClB,MAAO,4BACT,IACSY,GAAsBE,KAC3BA,EACFO,EAAkB0B,KAAKC,SAASC,KACH,qBAAbzE,UAA4BA,SAASC,gBACrD4C,EAAkB7C,SAASC,cAAcC,KAEvCH,IACF8C,EAAkB9C,GAGlB8C,EADuC,IAArCA,EAAgB6B,QAAQ,SACR7B,EAAgB8B,OAAO,EAAG9B,EAAgB+B,YAAY,KAAO,GAE7D,GAGlBlD,EAAQ,SAASmD,GACf,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIG,KAAK,MACFH,EAAII,YACb,EACI5C,IACFV,EAAa,SAASiD,GACpB,IAAIC,EAAM,IAAIC,eAId,OAHAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIK,aAAe,cACnBL,EAAIG,KAAK,MACF,IAAI3B,WAAWwB,EAAIM,SAC5B,GAEFzD,EAAY,SAASkD,EAAKrB,EAAQC,GAChC,IAAIqB,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIK,aAAe,cACnBL,EAAItB,OAAS,WACO,KAAdsB,EAAI5C,QAA+B,GAAd4C,EAAI5C,QAAe4C,EAAIM,SAC9C5B,EAAOsB,EAAIM,UAGb3B,GACF,EACAqB,EAAIrB,QAAUA,EACdqB,EAAIG,KAAK,KACX,GAOJ,IAAIM,EAAM/D,EAAc,OAAK2C,QAAQqB,IAAIC,KAAKtB,SAC1CuB,EAAMlE,EAAiB,UAAK2C,QAAQwB,KAAKF,KAAKtB,SAClD,IAAKzG,KAAO+D,EACNA,EAAgBpE,eAAeK,KACjC8D,EAAO9D,GAAO+D,EAAgB/D,IAGlC+D,EAAkB,KACdD,EAAkB,YACpBO,EAAaP,EAAkB,WAC7BA,EAAoB,cACtBQ,EAAcR,EAAoB,aAChCA,EAAa,OACfS,EAAQT,EAAa,MACvB,IAIIwE,EAHAC,EAAc,SAAStI,GACdA,CACb,EAEI6D,EAAmB,aACrBwE,EAAaxE,EAAmB,YAClC,IAIIlB,EAJAiG,EAAgB/E,EAAsB,gBAAK,EACpB,kBAAhBgF,aACTvC,GAAM,mCAGR,IAAIwC,GAAQ,EAEZ,SAASlD,EAAOmD,EAAWZ,GACpBY,GACHzC,GAAM,qBAAuB6B,EAEjC,CACA,IAAImB,EAAqC,qBAAhBH,YAA8B,IAAIA,YAAY,aAAU,EACjF,SAASI,EAAkBC,EAAMC,EAAKC,GAIpC,IAFA,IAAIC,GADJF,KAAS,GACUC,EACfE,EAASH,EACND,EAAKI,IAAW,MAAQA,GAAUD,MACrCC,EACJ,GAAIA,EAASH,EAAM,IAAMD,EAAKK,UAAYP,EACxC,OAAOA,EAAYF,OAAOI,EAAKK,SAASJ,IAAQ,EAAGG,IAAW,IAG9D,IADA,IAAIE,EAAM,GACHL,EAAMG,GAAQ,CACnB,IAAIG,EAAKP,EAAKC,MAAU,GACxB,GAAW,IAALM,EAAN,CAIA,IAAIC,EAAyB,GAApBR,EAAKC,MAAU,GACxB,GAAkB,MAAR,IAALM,GAAL,CAIA,IAAIE,EAAyB,GAApBT,EAAKC,MAAU,GAMxB,IAJEM,EADgB,MAAR,IAALA,IACQ,GAALA,IAAY,GAAKC,GAAM,EAAIC,GAEtB,EAALF,IAAW,GAAKC,GAAM,GAAKC,GAAM,EAAwB,GAApBT,EAAKC,MAAU,IAEnD,MACPK,GAAOI,OAAOC,aAAaJ,OACtB,CACL,IAAIK,EAAKL,EAAK,MACdD,GAAOI,OAAOC,aAAa,MAAQC,GAAM,GAAI,MAAa,KAALA,EACvD,CAZA,MAFEN,GAAOI,OAAOC,cAAmB,GAALJ,IAAY,EAAIC,EAH9C,MAFEF,GAAOI,OAAOC,aAAaJ,EAoB/B,CAEF,OAAOD,CACT,CACA,SAASO,EAAaC,EAAKZ,GAEzB,OADAY,KAAS,GACIf,EAAkBvG,EAAQsH,EAAKZ,GAAkB,EAChE,CACA,SAASa,EAAkBT,EAAKN,EAAMgB,EAAQC,GAE5C,KAAMA,EAAkB,GACtB,OAAO,EAGT,IAFA,IAAIC,EAHJF,KAAY,EAIRb,EAASa,EAASC,EAAkB,EAC/BrM,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIuM,EAAIb,EAAIc,WAAWxM,GACvB,GAAIuM,GAAK,OAASA,GAAK,MAErBA,EAAI,QAAc,KAAJA,IAAa,IAAW,KAD7Bb,EAAIc,aAAaxM,GAG5B,GAAIuM,GAAK,IAAK,CACZ,GAAIH,GAAUb,EACZ,MACFH,EAAKgB,MAAa,GAAKG,CACzB,MAAO,GAAIA,GAAK,KAAM,CACpB,GAAIH,EAAS,GAAKb,EAChB,MACFH,EAAKgB,MAAa,GAAK,IAAMG,GAAK,EAClCnB,EAAKgB,MAAa,GAAK,IAAU,GAAJG,CAC/B,MAAO,GAAIA,GAAK,MAAO,CACrB,GAAIH,EAAS,GAAKb,EAChB,MACFH,EAAKgB,MAAa,GAAK,IAAMG,GAAK,GAClCnB,EAAKgB,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCnB,EAAKgB,MAAa,GAAK,IAAU,GAAJG,CAC/B,KAAO,CACL,GAAIH,EAAS,GAAKb,EAChB,MACFH,EAAKgB,MAAa,GAAK,IAAMG,GAAK,GAClCnB,EAAKgB,MAAa,GAAK,IAAMG,GAAK,GAAK,GACvCnB,EAAKgB,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCnB,EAAKgB,MAAa,GAAK,IAAU,GAAJG,CAC/B,CACF,CAEA,OADAnB,EAAKgB,IAAW,GAAK,EACdA,EAASE,CAClB,CACA,SAASG,EAAaf,EAAKgB,EAAQL,GACjC,OAAOF,EAAkBT,EAAK9G,EAAQ8H,EAAQL,EAChD,CACA,SAASM,EAAgBjB,GAEvB,IADA,IAAIkB,EAAM,EACD5M,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIuM,EAAIb,EAAIc,WAAWxM,GACnBuM,GAAK,OAASA,GAAK,QACrBA,EAAI,QAAc,KAAJA,IAAa,IAA4B,KAAtBb,EAAIc,aAAaxM,IAChDuM,GAAK,MACLK,EAEFA,GADOL,GAAK,KACL,EACAA,GAAK,MACL,EAEA,CACX,CACA,OAAOK,CACT,CACA,IA2GIpI,EAAQE,EAAOE,EAAQE,EAAQE,EAASE,EAAQE,EAASyH,EAASvH,EA3GlEwH,EAAsC,qBAAhB/B,YAA8B,IAAIA,YAAY,iBAAc,EACtF,SAASgC,EAAcb,EAAKZ,GAI1B,IAHA,IAAIE,EAASU,EACTb,EAAMG,GAAU,EAChBwB,EAAS3B,EAAMC,EAAiB,IAC3BD,GAAO2B,IAAWhI,EAAQqG,IAAQ,MACvCA,EAEJ,IADAG,EAASH,GAAO,GACHa,EAAM,IAAMY,EACvB,OAAOA,EAAa9B,OAAOpG,EAAO6G,SAASS,IAAQ,EAAGV,IAAW,IAGjE,IADA,IAAIE,EAAM,GACD1L,EAAI,IAAKA,GAAKsL,EAAiB,KAAMtL,EAAG,CAC/C,IAAIiN,EAAWnI,EAAOoH,EAAU,EAAJlM,IAAU,GACtC,GAAgB,GAAZiN,EACF,MACFvB,GAAOI,OAAOC,aAAakB,EAC7B,CACA,OAAOvB,CAEX,CACA,SAASwB,EAAcxB,EAAKgB,EAAQL,GAIlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAIT,IAFA,IAAIc,EAAWT,EACXU,GAFJf,GAAmB,GAEkC,EAAbX,EAAI7D,OAAawE,EAAkB,EAAIX,EAAI7D,OAC1E7H,EAAI,EAAGA,EAAIoN,IAAmBpN,EAAG,CACxC,IAAIiN,EAAWvB,EAAIc,WAAWxM,GAC9B8E,EAAO4H,IAAW,GAAKO,EACvBP,GAAU,CACZ,CAEA,OADA5H,EAAO4H,IAAW,GAAK,EAChBA,EAASS,CAClB,CACA,SAASE,EAAiB3B,GACxB,OAAoB,EAAbA,EAAI7D,MACb,CACA,SAASyF,EAAcpB,EAAKZ,GAG1B,IAFA,IAAItL,EAAI,EACJ0L,EAAM,KACD1L,GAAKsL,EAAiB,IAAI,CACjC,IAAIiC,EAAQrI,EAAOgH,EAAU,EAAJlM,IAAU,GACnC,GAAa,GAATuN,EACF,MAEF,KADEvN,EACEuN,GAAS,MAAO,CAClB,IAAIvB,EAAKuB,EAAQ,MACjB7B,GAAOI,OAAOC,aAAa,MAAQC,GAAM,GAAI,MAAa,KAALA,EACvD,MACEN,GAAOI,OAAOC,aAAawB,EAE/B,CACA,OAAO7B,CACT,CACA,SAAS8B,EAAc9B,EAAKgB,EAAQL,GAKlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAGT,IAFA,IAAIc,EANJT,KAAY,EAORlB,EAAS2B,EAAWd,EAAkB,EACjCrM,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIiN,EAAWvB,EAAIc,WAAWxM,GAC9B,GAAIiN,GAAY,OAASA,GAAY,MAEnCA,EAAW,QAAqB,KAAXA,IAAoB,IAAuB,KAD3CvB,EAAIc,aAAaxM,GAKxC,GAFAkF,EAAOwH,IAAW,GAAKO,GACvBP,GAAU,GACG,EAAIlB,EACf,KACJ,CAEA,OADAtG,EAAOwH,IAAW,GAAK,EAChBA,EAASS,CAClB,CACA,SAASM,EAAiB/B,GAExB,IADA,IAAIkB,EAAM,EACD5M,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAAG,CACnC,IAAIiN,EAAWvB,EAAIc,WAAWxM,GAC1BiN,GAAY,OAASA,GAAY,SACjCjN,EACJ4M,GAAO,CACT,CACA,OAAOA,CACT,CAkBA,SAASnI,GAA2BiJ,GAClClJ,EAASkJ,EACTjI,EAAc,MAAIf,EAAQ,IAAIiJ,UAAUD,GACxCjI,EAAe,OAAIX,EAAS,IAAI8I,WAAWF,GAC3CjI,EAAe,OAAIP,EAAS,IAAI2I,WAAWH,GAC3CjI,EAAe,OAAIb,EAAS,IAAI2C,WAAWmG,GAC3CjI,EAAgB,QAAIT,EAAU,IAAI8I,YAAYJ,GAC9CjI,EAAgB,QAAIL,EAAU,IAAI2I,YAAYL,GAC9CjI,EAAgB,QAAIoH,EAAU,IAAImB,aAAaN,GAC/CjI,EAAgB,QAAIH,EAAU,IAAI2I,aAAaP,EACjD,CACqBjI,EAAuB,eAA5C,IACIyI,GACAI,GAAe,GACfC,GAAa,GACbC,GAAa,GACbE,GAAgB,GAGhBC,GAA0B,EAC9B,SAASxG,KACP,OAAOqC,GAAiBmE,GAA0B,CACpD,CA4CA,IAAIQ,GAAkB,EAClBC,GAAuB,KACvBC,GAAwB,KAI5B,SAASC,GAAiBzP,GACxBsP,KACI1J,EAA+B,wBACjCA,EAA+B,uBAAE0J,GAErC,CACA,SAASI,GAAoB1P,GAK3B,GAJAsP,KACI1J,EAA+B,wBACjCA,EAA+B,uBAAE0J,IAEZ,GAAnBA,KAC2B,OAAzBC,KACFI,cAAcJ,IACdA,GAAuB,MAErBC,IAAuB,CACzB,IAAII,EAAWJ,GACfA,GAAwB,KACxBI,GACF,CAEJ,CAGA,SAASvH,GAAMwH,GACTjK,EAAgB,SAClBA,EAAgB,QAAEiK,GAGpB/F,EADA+F,GAAQ,IAERhF,GAAQ,EACK,EACbgF,EAAO,SAAWA,EAAO,+CACzB,IAAIpM,EAAI,IAAImH,YAAYmF,aAAaF,GAErC,MADAlK,EAAmBlC,GACbA,CACR,CAdAmC,EAAwB,gBAAI,CAAC,EAC7BA,EAAwB,gBAAI,CAAC,EAc7B,IAOIoK,GAzdgB7I,GAujBhB8I,GACAC,GAtGAC,GAAgB,wCACpB,SAASC,GAAU7I,GACjB,OAAOA,EAAS8I,WAAWF,GAC7B,CACA,SAASG,GAAU/I,GACjB,OAAOA,EAAS8I,WAAW,UAC7B,CAMA,SAASE,GAAUC,GACjB,IACE,GAAIA,GAAQR,IAAkB5F,EAC5B,OAAO,IAAI1C,WAAW0C,GAExB,GAAIpE,EACF,OAAOA,EAAWwK,GAElB,KAAM,iDAEV,CAAE,MAAO1I,GACPO,GAAMP,EACR,CACF,CA8EA,SAASuH,GAAqByB,GAC5B,KAAOA,EAAU9I,OAAS,GAAG,CAC3B,IAAI4H,EAAWkB,EAAUC,QACzB,GAAuB,mBAAZnB,EAAX,CAIA,IAAIoB,EAAOpB,EAASoB,KACA,kBAATA,OACY,IAAjBpB,EAASqB,IACX5C,GAAU6C,IAAIF,EAAd3C,GAEAA,GAAU6C,IAAIF,EAAd3C,CAAoBuB,EAASqB,KAG/BD,OAAsB,IAAjBpB,EAASqB,IAAiB,KAAOrB,EAASqB,IATjD,MAFErB,EAAShK,EAab,CACF,CAOA,SAASgR,GAAcC,GACrBpX,KAAKoX,OAASA,EACdpX,KAAK4M,IAAMwK,EAAS,GACpBpX,KAAKqX,SAAW,SAASzW,GACvBgF,EAAO5F,KAAK4M,IAAM,IAAM,GAAKhM,CAC/B,EACAZ,KAAKsX,SAAW,WACd,OAAO1R,EAAO5F,KAAK4M,IAAM,IAAM,EACjC,EACA5M,KAAKuX,eAAiB,SAASC,GAC7B5R,EAAO5F,KAAK4M,IAAM,IAAM,GAAK4K,CAC/B,EACAxX,KAAKyX,eAAiB,WACpB,OAAO7R,EAAO5F,KAAK4M,IAAM,IAAM,EACjC,EACA5M,KAAK0X,aAAe,SAASC,GAC3B/R,EAAO5F,KAAK4M,MAAQ,GAAK+K,CAC3B,EACA3X,KAAK4X,WAAa,SAASC,GACzBA,EAASA,EAAS,EAAI,EACtBzS,EAAMpF,KAAK4M,IAAM,KAAO,GAAKiL,CAC/B,EACA7X,KAAK8X,WAAa,WAChB,OAAqC,GAA9B1S,EAAMpF,KAAK4M,IAAM,KAAO,EACjC,EACA5M,KAAK+X,aAAe,SAASC,GAC3BA,EAAWA,EAAW,EAAI,EAC1B5S,EAAMpF,KAAK4M,IAAM,KAAO,GAAKoL,CAC/B,EACAhY,KAAKiY,aAAe,WAClB,OAAqC,GAA9B7S,EAAMpF,KAAK4M,IAAM,KAAO,EACjC,EACA5M,KAAKwP,KAAO,SAAS5O,EAAM4W,GACzBxX,KAAKqX,SAASzW,GACdZ,KAAKuX,eAAeC,GACpBxX,KAAK0X,aAAa,GAClB1X,KAAK4X,YAAW,GAChB5X,KAAK+X,cAAa,EACpB,EACA/X,KAAKkY,QAAU,WACb,IAAI5V,EAAQsD,EAAO5F,KAAK4M,MAAQ,GAChChH,EAAO5F,KAAK4M,MAAQ,GAAKtK,EAAQ,CACnC,EACAtC,KAAKoY,YAAc,WACjB,IAAIuhC,EAAO/zC,EAAO5F,KAAK4M,MAAQ,GAE/B,OADAhH,EAAO5F,KAAK4M,MAAQ,GAAK+sC,EAAO,EAChB,IAATA,CACT,CACF,CAvKKhpC,GADLJ,GAAiB,kBA1dG7I,GA4dU6I,GAA5BA,GA3dIpK,EAAmB,WACdA,EAAmB,WAAEuB,GAAMF,GAE7BA,EAAkBE,IAwoB3B,SAASuP,GAAS3U,GAEhB,OADAsD,EAAOsR,OAAwB,GAAK5U,EAC7BA,CACT,CACA,IAAIgW,GAAO,CAAEC,UAAW,SAASzQ,GAE/B,MADkB,gEACC0Q,KAAK1Q,GAAUW,MAAM,EAC1C,EAAGgQ,eAAgB,SAASC,EAAOC,GAEjC,IADA,IAAIC,EAAK,EACAlY,EAAIgY,EAAMnQ,OAAS,EAAG7H,GAAK,EAAGA,IAAK,CAC1C,IAAImY,EAAOH,EAAMhY,GACJ,MAATmY,EACFH,EAAM9D,OAAOlU,EAAG,GACE,OAATmY,GACTH,EAAM9D,OAAOlU,EAAG,GAChBkY,KACSA,IACTF,EAAM9D,OAAOlU,EAAG,GAChBkY,IAEJ,CACA,GAAID,EACF,KAAOC,EAAIA,IACTF,EAAMI,QAAQ,MAGlB,OAAOJ,CACT,EAAGK,UAAW,SAASrR,GACrB,IAAIsR,EAAgC,MAAnBtR,EAAKuR,OAAO,GAAYC,EAAoC,MAApBxR,EAAK4B,QAAQ,GAUtE,OATA5B,EAAO4Q,GAAKG,eAAe/Q,EAAKyR,MAAM,KAAKC,QAAO,SAASC,GACzD,QAASA,CACX,KAAKL,GAAYM,KAAK,OACRN,IACZtR,EAAO,KAELA,GAAQwR,IACVxR,GAAQ,MAEFsR,EAAa,IAAM,IAAMtR,CACnC,EAAGE,QAAS,SAASF,GACnB,IAAI6R,EAASjB,GAAKC,UAAU7Q,GAAO8R,EAAOD,EAAO,GAAIE,EAAMF,EAAO,GAClE,OAAKC,GAASC,GAGVA,IACFA,EAAMA,EAAInQ,OAAO,EAAGmQ,EAAIlR,OAAS,IAE5BiR,EAAOC,GALL,GAMX,EAAGC,SAAU,SAAShS,GACpB,GAAa,MAATA,EACF,MAAO,IAGT,IAAIiS,GADJjS,GADAA,EAAO4Q,GAAKS,UAAUrR,IACVc,QAAQ,MAAO,KACNe,YAAY,KACjC,OAAmB,IAAfoQ,EACKjS,EACFA,EAAK4B,OAAOqQ,EAAY,EACjC,EAAGC,QAAS,SAASlS,GACnB,OAAO4Q,GAAKC,UAAU7Q,GAAM,EAC9B,EAAG4R,KAAM,WACP,IAAIO,EAAQC,MAAM/X,UAAU0G,MAAM3F,KAAKiX,UAAW,GAClD,OAAOzB,GAAKS,UAAUc,EAAMP,KAAK,KACnC,EAAGU,MAAO,SAASC,EAAGC,GACpB,OAAO5B,GAAKS,UAAUkB,EAAI,IAAMC,EAClC,GAqBA,IAAIC,GAAU,CAAExW,QAAS,WAEvB,IADA,IAAIyW,EAAe,GAAIC,GAAmB,EACjC3Z,EAAIqZ,UAAUxR,OAAS,EAAG7H,IAAM,IAAM2Z,EAAkB3Z,IAAK,CACpE,IAAIgH,EAAOhH,GAAK,EAAIqZ,UAAUrZ,GAAK6O,GAAG+K,MACtC,GAAoB,kBAAT5S,EACT,MAAM,IAAI6S,UAAU,6CACf,IAAK7S,EACV,MAAO,GAET0S,EAAe1S,EAAO,IAAM0S,EAC5BC,EAAsC,MAAnB3S,EAAKuR,OAAO,EACjC,CAIA,OAAQoB,EAAmB,IAAM,KAHjCD,EAAe9B,GAAKG,eAAe2B,EAAajB,MAAM,KAAKC,QAAO,SAASC,GACzE,QAASA,CACX,KAAKgB,GAAkBf,KAAK,OAC2B,GACzD,EAAGkB,SAAU,SAASC,EAAMC,GAG1B,SAASC,EAAKC,GAEZ,IADA,IAAItZ,EAAQ,EACLA,EAAQsZ,EAAIrS,QACE,KAAfqS,EAAItZ,GADiBA,KAK3B,IADA,IAAIuZ,EAAMD,EAAIrS,OAAS,EAChBsS,GAAO,GACK,KAAbD,EAAIC,GADOA,KAIjB,OAAIvZ,EAAQuZ,EACH,GACFD,EAAInS,MAAMnH,EAAOuZ,EAAMvZ,EAAQ,EACxC,CAhBAmZ,EAAON,GAAQxW,QAAQ8W,GAAMnR,OAAO,GACpCoR,EAAKP,GAAQxW,QAAQ+W,GAAIpR,OAAO,GAoBhC,IAJA,IAAIwR,EAAYH,EAAKF,EAAKtB,MAAM,MAC5B4B,EAAUJ,EAAKD,EAAGvB,MAAM,MACxB5Q,EAASyS,KAAKC,IAAIH,EAAUvS,OAAQwS,EAAQxS,QAC5C2S,EAAkB3S,EACb7H,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1B,GAAIoa,EAAUpa,KAAOqa,EAAQra,GAAI,CAC/Bwa,EAAkBxa,EAClB,KACF,CAEF,IAAIya,EAAc,GAClB,IAASza,EAAIwa,EAAiBxa,EAAIoa,EAAUvS,OAAQ7H,IAClDya,EAAYxG,KAAK,MAGnB,OADAwG,EAAcA,EAAYC,OAAOL,EAAQtS,MAAMyS,KAC5B5B,KAAK,IAC1B,GACI3J,GAAM,CAAE0L,KAAM,GAAI7L,KAAM,WAC5B,EAAG8L,SAAU,WACb,EAAGC,SAAU,SAASC,EAAKC,GACzB9L,GAAI0L,KAAKG,GAAO,CAAEE,MAAO,GAAIC,OAAQ,GAAIF,OACzClM,GAAGqM,eAAeJ,EAAK7L,GAAIkM,WAC7B,EAAGA,WAAY,CAAElS,KAAM,SAASmS,GAC9B,IAAIC,EAAMpM,GAAI0L,KAAKS,EAAOxU,KAAK0U,MAC/B,IAAKD,EACH,MAAM,IAAIxM,GAAG0M,WAAW,IAE1BH,EAAOC,IAAMA,EACbD,EAAOI,UAAW,CACpB,EAAGC,MAAO,SAASL,GACjBA,EAAOC,IAAIN,IAAIW,MAAMN,EAAOC,IAC9B,EAAGK,MAAO,SAASN,GACjBA,EAAOC,IAAIN,IAAIW,MAAMN,EAAOC,IAC9B,EAAGM,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQiU,GACjD,IAAKV,EAAOC,MAAQD,EAAOC,IAAIN,IAAIgB,SACjC,MAAM,IAAIlN,GAAG0M,WAAW,IAG1B,IADA,IAAIS,EAAY,EACPhc,EAAI,EAAGA,EAAI6H,EAAQ7H,IAAK,CAC/B,IAAI6Y,EACJ,IACEA,EAASuC,EAAOC,IAAIN,IAAIgB,SAASX,EAAOC,IAC1C,CAAE,MAAO/X,GACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CACA,QAAe,IAAX1C,GAAmC,IAAdmD,EACvB,MAAM,IAAInN,GAAG0M,WAAW,GAE1B,GAAe,OAAX1C,QAA8B,IAAXA,EACrB,MACFmD,IACAJ,EAAQC,EAAS7b,GAAK6Y,CACxB,CAIA,OAHImD,IACFZ,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExB+F,CACT,EAAGG,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQiU,GAClD,IAAKV,EAAOC,MAAQD,EAAOC,IAAIN,IAAIqB,SACjC,MAAM,IAAIvN,GAAG0M,WAAW,IAE1B,IACE,IAAK,IAAIvb,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1Bob,EAAOC,IAAIN,IAAIqB,SAAShB,EAAOC,IAAKO,EAAQC,EAAS7b,GAEzD,CAAE,MAAOsD,GACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CAIA,OAHI1T,IACFuT,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExBjW,CACT,GAAKqc,gBAAiB,CAAEN,SAAU,SAASV,GACzC,IAAKA,EAAIL,MAAMnT,OAAQ,CACrB,IAAIgR,EAAS,KACb,GAAIpS,EAAqB,CACvB,IACIiH,EAAM4O,EAAOC,MADH,KAEVP,EAAY,EAChB,IACEA,EAAYlW,EAAO0W,SAAS9V,EAAQ+V,MAAMC,GAAIhP,EAAK,EAJvC,IAImD,KACjE,CAAE,MAAOpK,GACP,IAAIA,EAAEqZ,WAAWC,SAAS,OAGxB,MAAMtZ,EAFN0Y,EAAY,CAGhB,CAEEnD,EADEmD,EAAY,EACLtO,EAAI3F,MAAM,EAAGiU,GAAWW,SAAS,SAEjC,IAEb,KAA4B,oBAAVrW,QAAiD,mBAAjBA,OAAOuW,OAExC,QADfhE,EAASvS,OAAOuW,OAAO,cAErBhE,GAAU,MAEgB,mBAAZiE,UAED,QADfjE,EAASiE,cAEPjE,GAAU,MAGd,IAAKA,EACH,OAAO,KAETwC,EAAIL,MAAQ+B,GAAmBlE,GAAQ,EACzC,CACA,OAAOwC,EAAIL,MAAMpK,OACnB,EAAGwL,SAAU,SAASf,EAAK2B,GACb,OAARA,GAAwB,KAARA,GAClBxT,EAAI2B,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,IAEF,GAAP+B,GACF3B,EAAIJ,OAAOhH,KAAK+I,EAEtB,EAAGtB,MAAO,SAASL,GACbA,EAAIJ,QAAUI,EAAIJ,OAAOpT,OAAS,IACpC2B,EAAI2B,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,GAEjB,GAAKgC,iBAAkB,CAAEb,SAAU,SAASf,EAAK2B,GACnC,OAARA,GAAwB,KAARA,GAClBrT,EAAIwB,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,IAEF,GAAP+B,GACF3B,EAAIJ,OAAOhH,KAAK+I,EAEtB,EAAGtB,MAAO,SAASL,GACbA,EAAIJ,QAAUI,EAAIJ,OAAOpT,OAAS,IACpC8B,EAAIwB,EAAkBkQ,EAAIJ,OAAQ,IAClCI,EAAIJ,OAAS,GAEjB,IAIA,IAAI0C,GAAQ,CAAEC,UAAW,KAAMC,MAAO,SAASA,GAC7C,OAAOF,GAAMG,WAAW,KAAM,IAAK,MAAa,EAClD,EAAGA,WAAY,SAASC,EAAQC,EAAOC,EAAMnD,GAC3C,GAAIjM,GAAGqP,SAASD,IAASpP,GAAGsP,OAAOF,GACjC,MAAM,IAAIpP,GAAG0M,WAAW,IAErBoC,GAAMC,YACTD,GAAMC,UAAY,CAAE7E,IAAK,CAAEnS,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASC,OAAQZ,GAAMU,SAASE,OAAQC,MAAOb,GAAMU,SAASG,MAAOC,OAAQd,GAAMU,SAASI,OAAQC,OAAQf,GAAMU,SAASK,OAAQC,MAAOhB,GAAMU,SAASM,MAAOC,QAASjB,GAAMU,SAASO,QAASC,QAASlB,GAAMU,SAASQ,SAAWzD,OAAQ,CAAE0D,OAAQnB,GAAMxC,WAAW2D,SAAYzO,KAAM,CAAEzJ,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWlD,OAAQ,CAAE0D,OAAQnB,GAAMxC,WAAW2D,OAAQnD,KAAMgC,GAAMxC,WAAWQ,KAAMQ,MAAOwB,GAAMxC,WAAWgB,MAAO4C,SAAUpB,GAAMxC,WAAW4D,SAAUC,KAAMrB,GAAMxC,WAAW6D,KAAMC,MAAOtB,GAAMxC,WAAW8D,QAAWC,KAAM,CAAEtY,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASa,SAAUxB,GAAMU,SAASc,UAAY/D,OAAQ,CAAC,GAAKgE,OAAQ,CAAExY,KAAM,CAAEwX,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWlD,OAAQvM,GAAGwQ,qBAEv3B,IAAIzY,EAAOiI,GAAGiP,WAAWC,EAAQC,EAAOC,EAAMnD,GAsB9C,OArBIjM,GAAGyQ,MAAM1Y,EAAKqX,OAChBrX,EAAKyX,SAAWV,GAAMC,UAAU7E,IAAInS,KACpCA,EAAKuU,WAAawC,GAAMC,UAAU7E,IAAIqC,OACtCxU,EAAK2Y,SAAW,CAAC,GACR1Q,GAAG2Q,OAAO5Y,EAAKqX,OACxBrX,EAAKyX,SAAWV,GAAMC,UAAUvN,KAAKzJ,KACrCA,EAAKuU,WAAawC,GAAMC,UAAUvN,KAAK+K,OACvCxU,EAAK6Y,UAAY,EACjB7Y,EAAK2Y,SAAW,MACP1Q,GAAG6Q,OAAO9Y,EAAKqX,OACxBrX,EAAKyX,SAAWV,GAAMC,UAAUsB,KAAKtY,KACrCA,EAAKuU,WAAawC,GAAMC,UAAUsB,KAAK9D,QAC9BvM,GAAG8Q,SAAS/Y,EAAKqX,QAC1BrX,EAAKyX,SAAWV,GAAMC,UAAUwB,OAAOxY,KACvCA,EAAKuU,WAAawC,GAAMC,UAAUwB,OAAOhE,QAE3CxU,EAAKqV,UAAYC,KAAKjG,MAClB8H,IACFA,EAAOwB,SAASvB,GAASpX,EACzBmX,EAAO9B,UAAYrV,EAAKqV,WAEnBrV,CACT,EAAGgZ,wBAAyB,SAAShZ,GACnC,OAAKA,EAAK2Y,SAEN3Y,EAAK2Y,SAAS9T,SACT7E,EAAK2Y,SAAS9T,SAAS,EAAG7E,EAAK6Y,WACjC,IAAIlY,WAAWX,EAAK2Y,UAHlB,IAAIhY,WAAW,EAI1B,EAAGsY,kBAAmB,SAASjZ,EAAMkZ,GACnCA,KAAiB,EACjB,IAAIC,EAAenZ,EAAK2Y,SAAW3Y,EAAK2Y,SAAS1X,OAAS,EAC1D,KAAIkY,GAAgBD,GAApB,CAGAA,EAAcxF,KAAK3Z,IAAImf,EAAaC,GAAgBA,EADxB,QAC+D,EAAI,SAAW,GACtF,GAAhBA,IACFD,EAAcxF,KAAK3Z,IAAImf,EAAa,MACtC,IAAIE,EAAcpZ,EAAK2Y,SACvB3Y,EAAK2Y,SAAW,IAAIhY,WAAWuY,GAC3BlZ,EAAK6Y,UAAY,GACnB7Y,EAAK2Y,SAASU,IAAID,EAAYvU,SAAS,EAAG7E,EAAK6Y,WAAY,EARrD,CASV,EAAGS,kBAAmB,SAAStZ,EAAMuZ,GAEnC,GADAA,KAAa,EACTvZ,EAAK6Y,WAAaU,EAEtB,GAAe,GAAXA,EACFvZ,EAAK2Y,SAAW,KAChB3Y,EAAK6Y,UAAY,MACZ,CACL,IAAIO,EAAcpZ,EAAK2Y,SACvB3Y,EAAK2Y,SAAW,IAAIhY,WAAW4Y,GAC3BH,GACFpZ,EAAK2Y,SAASU,IAAID,EAAYvU,SAAS,EAAG6O,KAAKC,IAAI4F,EAASvZ,EAAK6Y,aAEnE7Y,EAAK6Y,UAAYU,CACnB,CACF,EAAG9B,SAAU,CAAED,QAAS,SAASxX,GAC/B,IAAIwZ,EAAO,CAAC,EAsBZ,OArBAA,EAAKtF,IAAMjM,GAAG8Q,SAAS/Y,EAAKqX,MAAQrX,EAAK/G,GAAK,EAC9CugB,EAAKC,IAAMzZ,EAAK/G,GAChBugB,EAAKnC,KAAOrX,EAAKqX,KACjBmC,EAAKE,MAAQ,EACbF,EAAKG,IAAM,EACXH,EAAKI,IAAM,EACXJ,EAAK9E,KAAO1U,EAAK0U,KACbzM,GAAGyQ,MAAM1Y,EAAKqX,MAChBmC,EAAKjD,KAAO,KACHtO,GAAG2Q,OAAO5Y,EAAKqX,MACxBmC,EAAKjD,KAAOvW,EAAK6Y,UACR5Q,GAAG6Q,OAAO9Y,EAAKqX,MACxBmC,EAAKjD,KAAOvW,EAAKsY,KAAKrX,OAEtBuY,EAAKjD,KAAO,EAEdiD,EAAKK,MAAQ,IAAIvE,KAAKtV,EAAKqV,WAC3BmE,EAAKM,MAAQ,IAAIxE,KAAKtV,EAAKqV,WAC3BmE,EAAKO,MAAQ,IAAIzE,KAAKtV,EAAKqV,WAC3BmE,EAAKQ,QAAU,KACfR,EAAKS,OAASvG,KAAK+C,KAAK+C,EAAKjD,KAAOiD,EAAKQ,SAClCR,CACT,EAAG9B,QAAS,SAAS1X,EAAMwZ,QACP,IAAdA,EAAKnC,OACPrX,EAAKqX,KAAOmC,EAAKnC,WAEI,IAAnBmC,EAAKnE,YACPrV,EAAKqV,UAAYmE,EAAKnE,gBAEN,IAAdmE,EAAKjD,MACPQ,GAAMuC,kBAAkBtZ,EAAMwZ,EAAKjD,KAEvC,EAAGoB,OAAQ,SAASR,EAAQC,GAC1B,MAAMnP,GAAGiS,cAAc,GACzB,EAAGtC,MAAO,SAAST,EAAQC,EAAOC,EAAMnD,GACtC,OAAO6C,GAAMG,WAAWC,EAAQC,EAAOC,EAAMnD,EAC/C,EAAG2D,OAAQ,SAASsC,EAAUC,EAASC,GACrC,GAAIpS,GAAGyQ,MAAMyB,EAAS9C,MAAO,CAC3B,IAAIiD,EACJ,IACEA,EAAWrS,GAAGsS,WAAWH,EAASC,EACpC,CAAE,MAAO3d,GACT,CACA,GAAI4d,EACF,IAAK,IAAIlhB,KAAKkhB,EAAS3B,SACrB,MAAM,IAAI1Q,GAAG0M,WAAW,GAG9B,QACOwF,EAAShD,OAAOwB,SAASwB,EAASK,MACzCL,EAAShD,OAAO9B,UAAYC,KAAKjG,MACjC8K,EAASK,KAAOH,EAChBD,EAAQzB,SAAS0B,GAAYF,EAC7BC,EAAQ/E,UAAY8E,EAAShD,OAAO9B,UACpC8E,EAAShD,OAASiD,CACpB,EAAGtC,OAAQ,SAASX,EAAQC,UACnBD,EAAOwB,SAASvB,GACvBD,EAAO9B,UAAYC,KAAKjG,KAC1B,EAAG0I,MAAO,SAASZ,EAAQC,GACzB,IAAIpX,EAAOiI,GAAGsS,WAAWpD,EAAQC,GACjC,IAAK,IAAIhe,KAAK4G,EAAK2Y,SACjB,MAAM,IAAI1Q,GAAG0M,WAAW,WAEnBwC,EAAOwB,SAASvB,GACvBD,EAAO9B,UAAYC,KAAKjG,KAC1B,EAAG2I,QAAS,SAAShY,GACnB,IAAIya,EAAU,CAAC,IAAK,MACpB,IAAK,IAAIC,KAAQ1a,EAAK2Y,SACf3Y,EAAK2Y,SAASje,eAAeggB,IAGlCD,EAAQpN,KAAKqN,GAEf,OAAOD,CACT,EAAGxC,QAAS,SAASd,EAAQwD,EAASC,GACpC,IAAI5a,EAAO+W,GAAMG,WAAWC,EAAQwD,EAAS,MAAa,GAE1D,OADA3a,EAAKsY,KAAOsC,EACL5a,CACT,EAAGuY,SAAU,SAASvY,GACpB,IAAKiI,GAAG6Q,OAAO9Y,EAAKqX,MAClB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,OAAO3U,EAAKsY,IACd,GAAK/D,WAAY,CAAEQ,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GACjE,IAAIlC,EAAWnE,EAAOxU,KAAK2Y,SAC3B,GAAIkC,GAAYrG,EAAOxU,KAAK6Y,UAC1B,OAAO,EACT,IAAItC,EAAO7C,KAAKC,IAAIa,EAAOxU,KAAK6Y,UAAYgC,EAAU5Z,GACtD,GAAIsV,EAAO,GAAKoC,EAAS9T,SACvBmQ,EAAQqE,IAAIV,EAAS9T,SAASgW,EAAUA,EAAWtE,GAAOtB,QAE1D,IAAK,IAAI7b,EAAI,EAAGA,EAAImd,EAAMnd,IACxB4b,EAAQC,EAAS7b,GAAKuf,EAASkC,EAAWzhB,GAE9C,OAAOmd,CACT,EAAGhB,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQ4Z,EAAUC,GAI5D,GAHI9F,EAAQpX,SAAWE,EAAMF,SAC3Bkd,GAAS,IAEN7Z,EACH,OAAO,EACT,IAAIjB,EAAOwU,EAAOxU,KAElB,GADAA,EAAKqV,UAAYC,KAAKjG,MAClB2F,EAAQnQ,YAAc7E,EAAK2Y,UAAY3Y,EAAK2Y,SAAS9T,UAAW,CAClE,GAAIiW,EAGF,OAFA9a,EAAK2Y,SAAW3D,EAAQnQ,SAASoQ,EAAQA,EAAShU,GAClDjB,EAAK6Y,UAAY5X,EACVA,EACF,GAAuB,IAAnBjB,EAAK6Y,WAAgC,IAAbgC,EAGjC,OAFA7a,EAAK2Y,SAAW3D,EAAQ7T,MAAM8T,EAAQA,EAAShU,GAC/CjB,EAAK6Y,UAAY5X,EACVA,EACF,GAAI4Z,EAAW5Z,GAAUjB,EAAK6Y,UAEnC,OADA7Y,EAAK2Y,SAASU,IAAIrE,EAAQnQ,SAASoQ,EAAQA,EAAShU,GAAS4Z,GACtD5Z,CAEX,CAEA,GADA8V,GAAMkC,kBAAkBjZ,EAAM6a,EAAW5Z,GACrCjB,EAAK2Y,SAAS9T,UAAYmQ,EAAQnQ,SACpC7E,EAAK2Y,SAASU,IAAIrE,EAAQnQ,SAASoQ,EAAQA,EAAShU,GAAS4Z,QAE7D,IAAK,IAAIzhB,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1B4G,EAAK2Y,SAASkC,EAAWzhB,GAAK4b,EAAQC,EAAS7b,GAInD,OADA4G,EAAK6Y,UAAYnF,KAAK3Z,IAAIiG,EAAK6Y,UAAWgC,EAAW5Z,GAC9CA,CACT,EAAGiX,OAAQ,SAAS1D,EAAQS,EAAQ8F,GAClC,IAAIF,EAAW5F,EAQf,GAPe,IAAX8F,EACFF,GAAYrG,EAAOqG,SACC,IAAXE,GACL9S,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,QACxBwD,GAAYrG,EAAOxU,KAAK6Y,WAGxBgC,EAAW,EACb,MAAM,IAAI5S,GAAG0M,WAAW,IAE1B,OAAOkG,CACT,EAAG1C,SAAU,SAAS3D,EAAQS,EAAQhU,GACpC8V,GAAMkC,kBAAkBzE,EAAOxU,KAAMiV,EAAShU,GAC9CuT,EAAOxU,KAAK6Y,UAAYnF,KAAK3Z,IAAIya,EAAOxU,KAAK6Y,UAAW5D,EAAShU,EACnE,EAAGmX,KAAM,SAAS5D,EAAQoC,EAAS3V,EAAQ4Z,EAAUG,EAAMC,GACzD,GAAgB,IAAZrE,EACF,MAAM,IAAI3O,GAAG0M,WAAW,IAE1B,IAAK1M,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,MACzB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAIrP,EACA4V,EACAvC,EAAWnE,EAAOxU,KAAK2Y,SAC3B,GAAc,EAARsC,GAActC,EAAS/a,SAAWA,EAGjC,CAUL,IATIid,EAAW,GAAKA,EAAW5Z,EAAS0X,EAAS1X,UAE7C0X,EADEA,EAAS9T,SACA8T,EAAS9T,SAASgW,EAAUA,EAAW5Z,GAEvCuR,MAAM/X,UAAU0G,MAAM3F,KAAKmd,EAAUkC,EAAUA,EAAW5Z,IAGzEia,GAAY,IACZ5V,OA3OFhE,MA6OI,MAAM,IAAI2G,GAAG0M,WAAW,IAE1BrP,KAAS,EACTxH,EAAMub,IAAIV,EAAUrT,IAAQ,EAC9B,MAjBE4V,GAAY,EACZ5V,EAAMqT,EAASwC,WAiBjB,MAAO,CAAE7V,MAAK4V,YAChB,EAAG7C,MAAO,SAAS7D,EAAQQ,EAASC,EAAQhU,EAAQma,GAClD,IAAKnT,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,MACzB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,GAAgB,EAAZyG,EACF,OAAO,EAEUrE,GAAMxC,WAAWgB,MAAMf,EAAQQ,EAAS,EAAG/T,EAAQgU,GAAQ,GAC9E,OAAO,CACT,IAkBA,IAAIhN,GAAK,CAAEiK,KAAM,KAAMmJ,OAAQ,GAAIC,QAAS,CAAC,EAAGC,QAAS,GAAIC,UAAW,EAAGC,UAAW,KAAMC,YAAa,IAAKvT,aAAa,EAAOC,mBAAmB,EAAMuT,iBAAkB,CAAC,EAAGC,SAAU,CAAEC,UAAW,CAAEC,KAAM,EAAGC,MAAO,IAAOpH,WAAY,KAAMuF,cAAe,CAAC,EAAG8B,YAAa,KAAMC,eAAgB,EAAGC,WAAY,SAAS9b,EAAM+b,GAGrU,GADAA,EAAOA,GAAQ,CAAC,IADhB/b,EAAOyS,GAAQxW,QAAQ4L,GAAG+K,MAAO5S,IAG/B,MAAO,CAAEA,KAAM,GAAIJ,KAAM,MAC3B,IAAIoc,EAAW,CAAEC,cAAc,EAAMC,cAAe,GACpD,IAAK,IAAI5B,KAAQ0B,OACI,IAAfD,EAAKzB,KACPyB,EAAKzB,GAAQ0B,EAAS1B,IAG1B,GAAIyB,EAAKG,cAAgB,EACvB,MAAM,IAAIrU,GAAG0M,WAAW,IAO1B,IALA,IAAIvD,EAAQJ,GAAKG,eAAe/Q,EAAKyR,MAAM,KAAKC,QAAO,SAASC,GAC9D,QAASA,CACX,KAAI,GACAwK,EAAUtU,GAAGiK,KACbsK,EAAe,IACVpjB,EAAI,EAAGA,EAAIgY,EAAMnQ,OAAQ7H,IAAK,CACrC,IAAIqjB,EAASrjB,IAAMgY,EAAMnQ,OAAS,EAClC,GAAIwb,GAAUN,EAAKhF,OACjB,MASF,GAPAoF,EAAUtU,GAAGsS,WAAWgC,EAASnL,EAAMhY,IACvCojB,EAAexL,GAAK0B,MAAM8J,EAAcpL,EAAMhY,IAC1C6O,GAAGyU,aAAaH,MACbE,GAAUA,GAAUN,EAAKE,gBAC5BE,EAAUA,EAAQI,QAAQzK,OAGzBuK,GAAUN,EAAKS,OAElB,IADA,IAAItS,EAAQ,EACLrC,GAAG6Q,OAAOyD,EAAQlF,OAAO,CAC9B,IAAIiB,EAAOrQ,GAAGsQ,SAASiE,GAIvB,GAHAA,EAAe3J,GAAQxW,QAAQ2U,GAAK1Q,QAAQkc,GAAelE,GAE3DiE,EADatU,GAAGiU,WAAWM,EAAc,CAAEF,cAAeH,EAAKG,gBAC9Ctc,KACbsK,IAAU,GACZ,MAAM,IAAIrC,GAAG0M,WAAW,GAE5B,CAEJ,CACA,MAAO,CAAEvU,KAAMoc,EAAcxc,KAAMuc,EACrC,EAAGM,QAAS,SAAS7c,GAEnB,IADA,IAAII,IACS,CACX,GAAI6H,GAAG6U,OAAO9c,GAAO,CACnB,IAAIiX,EAAQjX,EAAKiX,MAAM8F,WACvB,OAAK3c,EAE8B,MAA5B6W,EAAMA,EAAMhW,OAAS,GAAagW,EAAQ,IAAM7W,EAAO6W,EAAQ7W,EAD7D6W,CAEX,CACA7W,EAAOA,EAAOJ,EAAKwa,KAAO,IAAMpa,EAAOJ,EAAKwa,KAC5Cxa,EAAOA,EAAKmX,MACd,CACF,EAAG6F,SAAU,SAASC,EAAU7F,GAE9B,IADA,IAAI8F,EAAO,EACF9jB,EAAI,EAAGA,EAAIge,EAAMnW,OAAQ7H,IAChC8jB,GAAQA,GAAQ,GAAKA,EAAO9F,EAAMxR,WAAWxM,GAAK,EAEpD,OAAQ6jB,EAAWC,IAAS,GAAKjV,GAAGwT,UAAUxa,MAChD,EAAGkc,YAAa,SAASnd,GACvB,IAAIkd,EAAOjV,GAAG+U,SAAShd,EAAKmX,OAAOle,GAAI+G,EAAKwa,MAC5Cxa,EAAKod,UAAYnV,GAAGwT,UAAUyB,GAC9BjV,GAAGwT,UAAUyB,GAAQld,CACvB,EAAGqd,eAAgB,SAASrd,GAC1B,IAAIkd,EAAOjV,GAAG+U,SAAShd,EAAKmX,OAAOle,GAAI+G,EAAKwa,MAC5C,GAAIvS,GAAGwT,UAAUyB,KAAUld,EACzBiI,GAAGwT,UAAUyB,GAAQld,EAAKod,eAG1B,IADA,IAAIb,EAAUtU,GAAGwT,UAAUyB,GACpBX,GAAS,CACd,GAAIA,EAAQa,YAAcpd,EAAM,CAC9Buc,EAAQa,UAAYpd,EAAKod,UACzB,KACF,CACAb,EAAUA,EAAQa,SACpB,CAEJ,EAAG7C,WAAY,SAASpD,EAAQC,GAC9B,IAAIkG,EAAUrV,GAAGsV,UAAUpG,GAC3B,GAAImG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,EAASnG,GAGnC,IADA,IAAI+F,EAAOjV,GAAG+U,SAAS7F,EAAOle,GAAIme,GACzBpX,EAAOiI,GAAGwT,UAAUyB,GAAOld,EAAMA,EAAOA,EAAKod,UAAW,CAC/D,IAAII,EAAWxd,EAAKwa,KACpB,GAAIxa,EAAKmX,OAAOle,KAAOke,EAAOle,IAAMukB,IAAapG,EAC/C,OAAOpX,CAEX,CACA,OAAOiI,GAAG0P,OAAOR,EAAQC,EAC3B,EAAGF,WAAY,SAASC,EAAQC,EAAOC,EAAM3C,GAC3C,IAAI1U,EAAO,IAAIiI,GAAGwV,OAAOtG,EAAQC,EAAOC,EAAM3C,GAE9C,OADAzM,GAAGkV,YAAYnd,GACRA,CACT,EAAG0d,YAAa,SAAS1d,GACvBiI,GAAGoV,eAAerd,EACpB,EAAG8c,OAAQ,SAAS9c,GAClB,OAAOA,IAASA,EAAKmX,MACvB,EAAGuF,aAAc,SAAS1c,GACxB,QAASA,EAAK2c,OAChB,EAAG/D,OAAQ,SAASvB,GAClB,OAA0B,SAAX,MAAPA,EACV,EAAGqB,MAAO,SAASrB,GACjB,OAA0B,SAAX,MAAPA,EACV,EAAGyB,OAAQ,SAASzB,GAClB,OAA0B,SAAX,MAAPA,EACV,EAAG0B,SAAU,SAAS1B,GACpB,OAA0B,QAAX,MAAPA,EACV,EAAGC,SAAU,SAASD,GACpB,OAA0B,SAAX,MAAPA,EACV,EAAGE,OAAQ,SAASF,GAClB,OAA0B,QAAX,MAAPA,EACV,EAAGsG,SAAU,SAAStG,GACpB,OAA0B,SAAX,MAAPA,EACV,EAAGuG,UAAW,CAAE,EAAK,EAAG,KAAM,EAAG,EAAK,IAAK,KAAM,IAAK,EAAK,KAAM,KAAM,MAAQC,kBAAmB,SAAS/Y,GACzG,IAAImW,EAAQhT,GAAG2V,UAAU9Y,GACzB,GAAqB,qBAAVmW,EACT,MAAM,IAAIliB,MAAM,2BAA6B+L,GAE/C,OAAOmW,CACT,EAAG6C,wBAAyB,SAASC,GACnC,IAAIC,EAAQ,CAAC,IAAK,IAAK,MAAa,EAAPD,GAI7B,OAHW,IAAPA,IACFC,GAAS,KAEJA,CACT,EAAGC,gBAAiB,SAASje,EAAMge,GACjC,OAAI/V,GAAGG,qBAGH4V,EAAMhI,SAAS,MAAsB,IAAZhW,EAAKqX,SAEvB2G,EAAMhI,SAAS,MAAsB,IAAZhW,EAAKqX,SAE9B2G,EAAMhI,SAAS,MAAsB,GAAZhW,EAAKqX,MANhC,EAGA,CAOX,EAAGkG,UAAW,SAASpL,GACrB,IAAImL,EAAUrV,GAAGgW,gBAAgB9L,EAAK,KACtC,OAAImL,IAECnL,EAAIsF,SAASE,OAEX,EADE,EAEX,EAAGuG,UAAW,SAAS/L,EAAKiF,GAC1B,IACanP,GAAGsS,WAAWpI,EAAKiF,GAC9B,OAAO,EACT,CAAE,MAAO1a,GACT,CACA,OAAOuL,GAAGgW,gBAAgB9L,EAAK,KACjC,EAAGgM,UAAW,SAAShM,EAAKiF,EAAOgH,GACjC,IAAIpe,EACJ,IACEA,EAAOiI,GAAGsS,WAAWpI,EAAKiF,EAC5B,CAAE,MAAO1a,GACP,OAAOA,EAAE2hB,KACX,CACA,IAAIf,EAAUrV,GAAGgW,gBAAgB9L,EAAK,MACtC,GAAImL,EACF,OAAOA,EAET,GAAIc,EAAO,CACT,IAAKnW,GAAGyQ,MAAM1Y,EAAKqX,MACjB,OAAO,GAET,GAAIpP,GAAG6U,OAAO9c,IAASiI,GAAG4U,QAAQ7c,KAAUiI,GAAG+K,MAC7C,OAAO,EAEX,MACE,GAAI/K,GAAGyQ,MAAM1Y,EAAKqX,MAChB,OAAO,GAGX,OAAO,CACT,EAAGiH,QAAS,SAASte,EAAMib,GACzB,OAAKjb,EAGDiI,GAAG6Q,OAAO9Y,EAAKqX,MACV,GACEpP,GAAGyQ,MAAM1Y,EAAKqX,QACmB,MAAtCpP,GAAG6V,wBAAwB7C,IAA0B,IAARA,GACxC,GAGJhT,GAAGgW,gBAAgBje,EAAMiI,GAAG6V,wBAAwB7C,IATlD,EAUX,EAAGsD,aAAc,KAAMC,OAAQ,SAASC,EAAUC,GAChDD,EAAWA,GAAY,EACvBC,EAASA,GAAUzW,GAAGsW,aACtB,IAAK,IAAIzI,EAAK2I,EAAU3I,GAAM4I,EAAQ5I,IACpC,IAAK7N,GAAGsT,QAAQzF,GACd,OAAOA,EAGX,MAAM,IAAI7N,GAAG0M,WAAW,GAC1B,EAAGgK,UAAW,SAAS7I,GACrB,OAAO7N,GAAGsT,QAAQzF,EACpB,EAAG8I,aAAc,SAASpK,EAAQiK,EAAUC,GACrCzW,GAAG4W,WACN5W,GAAG4W,SAAW,WACd,EACA5W,GAAG4W,SAASpkB,UAAY,CAAEqkB,OAAQ,CAAE3U,IAAK,WACvC,OAAOzR,KAAKsH,IACd,EAAGqZ,IAAK,SAASjD,GACf1d,KAAKsH,KAAOoW,CACd,GAAK2I,OAAQ,CAAE5U,IAAK,WAClB,OAAkC,KAAb,QAAbzR,KAAKuiB,MACf,GAAK+D,QAAS,CAAE7U,IAAK,WACnB,OAAkC,KAAb,QAAbzR,KAAKuiB,MACf,GAAKgE,SAAU,CAAE9U,IAAK,WACpB,OAAoB,KAAbzR,KAAKuiB,KACd,KAEF,IAAIiE,EAAY,IAAIjX,GAAG4W,SACvB,IAAK,IAAI9M,KAAKyC,EACZ0K,EAAUnN,GAAKyC,EAAOzC,GAExByC,EAAS0K,EACT,IAAIpJ,EAAK7N,GAAGuW,OAAOC,EAAUC,GAG7B,OAFAlK,EAAOsB,GAAKA,EACZ7N,GAAGsT,QAAQzF,GAAMtB,EACVA,CACT,EAAG2K,YAAa,SAASrJ,GACvB7N,GAAGsT,QAAQzF,GAAM,IACnB,EAAG2C,kBAAmB,CAAEpW,KAAM,SAASmS,GACrC,IAAI4K,EAASnX,GAAGoX,UAAU7K,EAAOxU,KAAK0U,MACtCF,EAAOD,WAAa6K,EAAO7K,WACvBC,EAAOD,WAAWlS,MACpBmS,EAAOD,WAAWlS,KAAKmS,EAE3B,EAAG0D,OAAQ,WACT,MAAM,IAAIjQ,GAAG0M,WAAW,GAC1B,GAAK2K,MAAO,SAASpL,GACnB,OAAOA,GAAO,CAChB,EAAGqL,MAAO,SAASrL,GACjB,OAAa,IAANA,CACT,EAAGsL,QAAS,SAASC,EAAIC,GACvB,OAAOD,GAAM,EAAIC,CACnB,EAAGpL,eAAgB,SAASJ,EAAKC,GAC/BlM,GAAGqT,QAAQpH,GAAO,CAAEK,WAAYJ,EAClC,EAAGkL,UAAW,SAASnL,GACrB,OAAOjM,GAAGqT,QAAQpH,EACpB,EAAGyL,UAAW,SAAS1I,GAGrB,IAFA,IAAIoE,EAAS,GACTuE,EAAQ,CAAC3I,GACN2I,EAAM3e,QAAQ,CACnB,IAAI4e,EAAID,EAAM5T,MACdqP,EAAOhO,KAAKwS,GACZD,EAAMvS,KAAKtQ,MAAM6iB,EAAOC,EAAExE,OAC5B,CACA,OAAOA,CACT,EAAGyE,OAAQ,SAASC,EAAUlX,GACJ,oBAAbkX,IACTlX,EAAWkX,EACXA,GAAW,GAEb9X,GAAGgU,iBACChU,GAAGgU,eAAiB,GACtBlZ,EAAI,YAAckF,GAAGgU,eAAiB,2EAExC,IAAIZ,EAASpT,GAAG0X,UAAU1X,GAAGiK,KAAK+E,OAC9B+I,EAAY,EAChB,SAASC,EAAW3C,GAElB,OADArV,GAAGgU,iBACIpT,EAASyU,EAClB,CACA,SAASzgB,EAAKygB,GACZ,GAAIA,EACF,OAAKzgB,EAAKqjB,aAIV,GAHErjB,EAAKqjB,SAAU,EACRD,EAAW3C,MAIhB0C,GAAa3E,EAAOpa,QACxBgf,EAAW,KAEf,CACA5E,EAAO8E,SAAQ,SAASlJ,GACtB,IAAKA,EAAM3d,KAAKwmB,OACd,OAAOjjB,EAAK,MAEdoa,EAAM3d,KAAKwmB,OAAO7I,EAAO8I,EAAUljB,EACrC,GACF,EAAGoa,MAAO,SAAS3d,EAAM6iB,EAAMY,GAC7B,IAEI/c,EAFAkS,EAAsB,MAAf6K,EACPqD,GAAUrD,EAEd,GAAI7K,GAAQjK,GAAGiK,KACb,MAAM,IAAIjK,GAAG0M,WAAW,IACnB,IAAKzC,IAASkO,EAAQ,CAC3B,IAAIzI,EAAS1P,GAAGiU,WAAWa,EAAY,CAAEV,cAAc,IAGvD,GAFAU,EAAapF,EAAOvX,KACpBJ,EAAO2X,EAAO3X,KACViI,GAAGyU,aAAa1c,GAClB,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAK1M,GAAGyQ,MAAM1Y,EAAKqX,MACjB,MAAM,IAAIpP,GAAG0M,WAAW,GAE5B,CACA,IAAIsC,EAAQ,CAAE3d,OAAM6iB,OAAMY,aAAY1B,OAAQ,IAC1CgF,EAAY/mB,EAAK2d,MAAMA,GAW3B,OAVAoJ,EAAUpJ,MAAQA,EAClBA,EAAM/E,KAAOmO,EACTnO,EACFjK,GAAGiK,KAAOmO,EACDrgB,IACTA,EAAK2c,QAAU1F,EACXjX,EAAKiX,OACPjX,EAAKiX,MAAMoE,OAAOhO,KAAK4J,IAGpBoJ,CACT,EAAGC,QAAS,SAASvD,GACnB,IAAIpF,EAAS1P,GAAGiU,WAAWa,EAAY,CAAEV,cAAc,IACvD,IAAKpU,GAAGyU,aAAa/E,EAAO3X,MAC1B,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAI3U,EAAO2X,EAAO3X,KACdiX,EAAQjX,EAAK2c,QACbtB,EAASpT,GAAG0X,UAAU1I,GAC1B7c,OAAO0B,KAAKmM,GAAGwT,WAAW0E,SAAQ,SAASjD,GAEzC,IADA,IAAIX,EAAUtU,GAAGwT,UAAUyB,GACpBX,GAAS,CACd,IAAI9f,EAAO8f,EAAQa,UACf/B,EAAOrF,SAASuG,EAAQtF,QAC1BhP,GAAGyV,YAAYnB,GAEjBA,EAAU9f,CACZ,CACF,IACAuD,EAAK2c,QAAU,KACf,IAAIlY,EAAMzE,EAAKiX,MAAMoE,OAAOtZ,QAAQkV,GACpCjX,EAAKiX,MAAMoE,OAAO/N,OAAO7I,EAAK,EAChC,EAAGkT,OAAQ,SAASR,EAAQC,GAC1B,OAAOD,EAAOM,SAASE,OAAOR,EAAQC,EACxC,EAAGQ,MAAO,SAASxX,EAAMiX,EAAMnD,GAC7B,IACIiD,EADSlP,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IACvBnX,KAChBoX,EAAQpG,GAAKoB,SAAShS,GAC1B,IAAKgX,GAAmB,MAAVA,GAA2B,OAAVA,EAC7B,MAAM,IAAInP,GAAG0M,WAAW,IAE1B,IAAI2I,EAAUrV,GAAGiW,UAAU/G,EAAQC,GACnC,GAAIkG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASG,MACnB,MAAM,IAAI3P,GAAG0M,WAAW,IAE1B,OAAOwC,EAAOM,SAASG,MAAMT,EAAQC,EAAOC,EAAMnD,EACpD,EAAGqM,OAAQ,SAASngB,EAAMiX,GAIxB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACDpP,GAAG2P,MAAMxX,EAAMiX,EAAM,EAC9B,EAAGmJ,MAAO,SAASpgB,EAAMiX,GAIvB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACDpP,GAAG2P,MAAMxX,EAAMiX,EAAM,EAC9B,EAAGoJ,UAAW,SAASrgB,EAAMiX,GAG3B,IAFA,IAAIqJ,EAAOtgB,EAAKyR,MAAM,KAClBhE,EAAI,GACCzU,EAAI,EAAGA,EAAIsnB,EAAKzf,SAAU7H,EACjC,GAAKsnB,EAAKtnB,GAAV,CAEAyU,GAAK,IAAM6S,EAAKtnB,GAChB,IACE6O,GAAGuY,MAAM3S,EAAGwJ,EACd,CAAE,MAAO3a,GACP,GAAe,IAAXA,EAAE2hB,MACJ,MAAM3hB,CACV,CAPU,CASd,EAAGikB,MAAO,SAASvgB,EAAMiX,EAAMnD,GAM7B,MALmB,qBAARA,IACTA,EAAMmD,EACNA,EAAO,KAETA,GAAQ,KACDpP,GAAG2P,MAAMxX,EAAMiX,EAAMnD,EAC9B,EAAG+D,QAAS,SAAS2C,EAASgG,GAC5B,IAAK/N,GAAQxW,QAAQue,GACnB,MAAM,IAAI3S,GAAG0M,WAAW,IAE1B,IACIwC,EADSlP,GAAGiU,WAAW0E,EAAS,CAAEzJ,QAAQ,IAC1BnX,KACpB,IAAKmX,EACH,MAAM,IAAIlP,GAAG0M,WAAW,IAE1B,IAAIgG,EAAU3J,GAAKoB,SAASwO,GACxBtD,EAAUrV,GAAGiW,UAAU/G,EAAQwD,GACnC,GAAI2C,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASQ,QACnB,MAAM,IAAIhQ,GAAG0M,WAAW,IAE1B,OAAOwC,EAAOM,SAASQ,QAAQd,EAAQwD,EAASC,EAClD,EAAG/C,OAAQ,SAASgJ,EAAUC,GAC5B,IAIYC,EAAS3G,EAJjB4G,EAAchQ,GAAK1Q,QAAQugB,GAC3BI,EAAcjQ,GAAK1Q,QAAQwgB,GAC3BI,EAAWlQ,GAAKoB,SAASyO,GACzBxG,EAAWrJ,GAAKoB,SAAS0O,GAM7B,GAHAC,EADS9Y,GAAGiU,WAAW2E,EAAU,CAAE1J,QAAQ,IAC1BnX,KAEjBoa,EADSnS,GAAGiU,WAAW4E,EAAU,CAAE3J,QAAQ,IAC1BnX,MACZ+gB,IAAY3G,EACf,MAAM,IAAInS,GAAG0M,WAAW,IAC1B,GAAIoM,EAAQ9J,QAAUmD,EAAQnD,MAC5B,MAAM,IAAIhP,GAAG0M,WAAW,IAE1B,IASI2F,EATAH,EAAWlS,GAAGsS,WAAWwG,EAASG,GAClChO,EAAWL,GAAQK,SAAS2N,EAAUI,GAC1C,GAA2B,MAAvB/N,EAASvB,OAAO,GAClB,MAAM,IAAI1J,GAAG0M,WAAW,IAG1B,GAA2B,OAD3BzB,EAAWL,GAAQK,SAAS4N,EAAUE,IACzBrP,OAAO,GAClB,MAAM,IAAI1J,GAAG0M,WAAW,IAG1B,IACE2F,EAAWrS,GAAGsS,WAAWH,EAASC,EACpC,CAAE,MAAO3d,GACT,CACA,GAAIyd,IAAaG,EAAjB,CAGA,IAAI8D,EAAQnW,GAAGyQ,MAAMyB,EAAS9C,MAC1BiG,EAAUrV,GAAGkW,UAAU4C,EAASG,EAAU9C,GAC9C,GAAId,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAG1B,GADAA,EAAUhD,EAAWrS,GAAGkW,UAAU/D,EAASC,EAAU+D,GAASnW,GAAGiW,UAAU9D,EAASC,GAElF,MAAM,IAAIpS,GAAG0M,WAAW2I,GAE1B,IAAKyD,EAAQtJ,SAASI,OACpB,MAAM,IAAI5P,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyU,aAAavC,IAAaG,GAAYrS,GAAGyU,aAAapC,GAC3D,MAAM,IAAIrS,GAAG0M,WAAW,IAE1B,GAAIyF,IAAY2G,IACdzD,EAAUrV,GAAGgW,gBAAgB8C,EAAS,MAEpC,MAAM,IAAI9Y,GAAG0M,WAAW2I,GAG5B,IACMrV,GAAG0T,iBAA+B,cACpC1T,GAAG0T,iBAA+B,aAAEkF,EAAUC,EAElD,CAAE,MAAOpkB,GACPqG,EAAI,wCAA0C8d,EAAW,OAASC,EAAW,0BAA4BpkB,EAAEqS,QAC7G,CACA9G,GAAGoV,eAAelD,GAClB,IACE4G,EAAQtJ,SAASI,OAAOsC,EAAUC,EAASC,EAC7C,CAAE,MAAO3d,GACP,MAAMA,CACR,CAAE,QACAuL,GAAGkV,YAAYhD,EACjB,CACA,IACMlS,GAAG0T,iBAA6B,YAClC1T,GAAG0T,iBAA6B,WAAEkF,EAAUC,EAChD,CAAE,MAAOpkB,GACPqG,EAAI,sCAAwC8d,EAAW,OAASC,EAAW,0BAA4BpkB,EAAEqS,QAC3G,CA1CA,CA2CF,EAAGgJ,MAAO,SAAS3X,GACjB,IACI+W,EADSlP,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IACvBnX,KAChBoX,EAAQpG,GAAKoB,SAAShS,GACtBJ,EAAOiI,GAAGsS,WAAWpD,EAAQC,GAC7BkG,EAAUrV,GAAGkW,UAAUhH,EAAQC,GAAO,GAC1C,GAAIkG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASM,MACnB,MAAM,IAAI9P,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyU,aAAa1c,GAClB,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IACM1M,GAAG0T,iBAAiC,gBACtC1T,GAAG0T,iBAAiC,eAAEvb,EAE1C,CAAE,MAAO1D,GACPqG,EAAI,0CAA4C3C,EAAO,0BAA4B1D,EAAEqS,QACvF,CACAoI,EAAOM,SAASM,MAAMZ,EAAQC,GAC9BnP,GAAGyV,YAAY1d,GACf,IACMiI,GAAG0T,iBAA+B,cACpC1T,GAAG0T,iBAA+B,aAAEvb,EACxC,CAAE,MAAO1D,GACPqG,EAAI,wCAA0C3C,EAAO,0BAA4B1D,EAAEqS,QACrF,CACF,EAAGiJ,QAAS,SAAS5X,GACnB,IACIJ,EADSiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IACzB5c,KAClB,IAAKA,EAAKyX,SAASO,QACjB,MAAM,IAAI/P,GAAG0M,WAAW,IAE1B,OAAO3U,EAAKyX,SAASO,QAAQhY,EAC/B,EAAG8X,OAAQ,SAAS1X,GAClB,IACI+W,EADSlP,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IACvBnX,KAChBoX,EAAQpG,GAAKoB,SAAShS,GACtBJ,EAAOiI,GAAGsS,WAAWpD,EAAQC,GAC7BkG,EAAUrV,GAAGkW,UAAUhH,EAAQC,GAAO,GAC1C,GAAIkG,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1B,IAAKnG,EAAOM,SAASK,OACnB,MAAM,IAAI7P,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyU,aAAa1c,GAClB,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IACM1M,GAAG0T,iBAAiC,gBACtC1T,GAAG0T,iBAAiC,eAAEvb,EAE1C,CAAE,MAAO1D,GACPqG,EAAI,0CAA4C3C,EAAO,0BAA4B1D,EAAEqS,QACvF,CACAoI,EAAOM,SAASK,OAAOX,EAAQC,GAC/BnP,GAAGyV,YAAY1d,GACf,IACMiI,GAAG0T,iBAA+B,cACpC1T,GAAG0T,iBAA+B,aAAEvb,EACxC,CAAE,MAAO1D,GACPqG,EAAI,wCAA0C3C,EAAO,0BAA4B1D,EAAEqS,QACrF,CACF,EAAGwJ,SAAU,SAASnY,GACpB,IACIkY,EADSrQ,GAAGiU,WAAW9b,GACTJ,KAClB,IAAKsY,EACH,MAAM,IAAIrQ,GAAG0M,WAAW,IAE1B,IAAK2D,EAAKb,SAASc,SACjB,MAAM,IAAItQ,GAAG0M,WAAW,IAE1B,OAAO9B,GAAQxW,QAAQ4L,GAAG4U,QAAQvE,EAAKnB,QAASmB,EAAKb,SAASc,SAASD,GACzE,EAAG6I,KAAM,SAAS/gB,EAAMghB,GACtB,IACIphB,EADSiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAASwE,IAC1BphB,KAClB,IAAKA,EACH,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAK3U,EAAKyX,SAASD,QACjB,MAAM,IAAIvP,GAAG0M,WAAW,IAE1B,OAAO3U,EAAKyX,SAASD,QAAQxX,EAC/B,EAAGqhB,MAAO,SAASjhB,GACjB,OAAO6H,GAAGkZ,KAAK/gB,GAAM,EACvB,EAAGkhB,MAAO,SAASlhB,EAAMiX,EAAM+J,GAC7B,IAAIphB,EACgB,kBAATI,EAETJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAASwE,IAC9BphB,KAEdA,EAAOI,EAET,IAAKJ,EAAKyX,SAASC,QACjB,MAAM,IAAIzP,GAAG0M,WAAW,IAE1B3U,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEqX,KAAa,KAAPA,GAA0B,KAAZrX,EAAKqX,KAAchC,UAAWC,KAAKjG,OACvF,EAAGkS,OAAQ,SAASnhB,EAAMiX,GACxBpP,GAAGqZ,MAAMlhB,EAAMiX,GAAM,EACvB,EAAGmK,OAAQ,SAAS1L,EAAIuB,GACtB,IAAI7C,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B1M,GAAGqZ,MAAM9M,EAAOxU,KAAMqX,EACxB,EAAGoK,MAAO,SAASrhB,EAAMuZ,EAAKC,EAAKwH,GACjC,IAAIphB,EACgB,kBAATI,EAETJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAASwE,IAC9BphB,KAEdA,EAAOI,EAET,IAAKJ,EAAKyX,SAASC,QACjB,MAAM,IAAIzP,GAAG0M,WAAW,IAE1B3U,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEqV,UAAWC,KAAKjG,OAChD,EAAGqS,OAAQ,SAASthB,EAAMuZ,EAAKC,GAC7B3R,GAAGwZ,MAAMrhB,EAAMuZ,EAAKC,GAAK,EAC3B,EAAG+H,OAAQ,SAAS7L,EAAI6D,EAAKC,GAC3B,IAAIpF,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B1M,GAAGwZ,MAAMjN,EAAOxU,KAAM2Z,EAAKC,EAC7B,EAAGgI,SAAU,SAASxhB,EAAM4F,GAC1B,GAAIA,EAAM,EACR,MAAM,IAAIiC,GAAG0M,WAAW,IAE1B,IAAI3U,EACgB,kBAATI,EAETJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IAC7B5c,KAEdA,EAAOI,EAET,IAAKJ,EAAKyX,SAASC,QACjB,MAAM,IAAIzP,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGyQ,MAAM1Y,EAAKqX,MAChB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAK1M,GAAG2Q,OAAO5Y,EAAKqX,MAClB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAI2I,EAAUrV,GAAGgW,gBAAgBje,EAAM,KACvC,GAAIsd,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1Btd,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEuW,KAAMvQ,EAAKqP,UAAWC,KAAKjG,OAC3D,EAAGwS,UAAW,SAAS/L,EAAI9P,GACzB,IAAIwO,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,IAE1B1M,GAAG2Z,SAASpN,EAAOxU,KAAMgG,EAC3B,EAAG8b,MAAO,SAAS1hB,EAAMyZ,EAAOC,GAC9B,IACI9Z,EADSiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IACzB5c,KAClBA,EAAKyX,SAASC,QAAQ1X,EAAM,CAAEqV,UAAW3B,KAAK3Z,IAAI8f,EAAOC,IAC3D,EAAGzX,KAAM,SAASjC,EAAM6a,EAAO5D,EAAMoH,EAAUC,GAC7C,GAAa,KAATte,EACF,MAAM,IAAI6H,GAAG0M,WAAW,IAS1B,IAAI3U,EACJ,GAPAqX,EAAuB,qBAATA,EAAuB,IAAMA,EAEzCA,EADU,IAFZ4D,EAAyB,kBAAVA,EAAqBhT,GAAG4V,kBAAkB5C,GAASA,GAGlD,KAAP5D,EAAc,MAEd,EAGW,kBAATjX,EACTJ,EAAOI,MACF,CACLA,EAAO4Q,GAAKS,UAAUrR,GACtB,IAEEJ,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,SAAkB,OAAR3B,KAC/Bjb,IAChB,CAAE,MAAOtD,GACT,CACF,CACA,IAAIqlB,GAAU,EACd,GAAY,GAAR9G,EACF,GAAIjb,GACF,GAAY,IAARib,EACF,MAAM,IAAIhT,GAAG0M,WAAW,SAG1B3U,EAAOiI,GAAG2P,MAAMxX,EAAMiX,EAAM,GAC5B0K,GAAU,EAGd,IAAK/hB,EACH,MAAM,IAAIiI,GAAG0M,WAAW,IAK1B,GAHI1M,GAAG8Q,SAAS/Y,EAAKqX,QACnB4D,IAAS,KAEC,MAARA,IAAkBhT,GAAGyQ,MAAM1Y,EAAKqX,MAClC,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKoN,EAAS,CACZ,IAAIzE,EAAUrV,GAAGqW,QAAQte,EAAMib,GAC/B,GAAIqC,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,EAE5B,CACY,IAARrC,GACFhT,GAAG2Z,SAAS5hB,EAAM,GAEpBib,IAAS,OACT,IAAIzG,EAASvM,GAAG2W,aAAa,CAAE5e,OAAMI,KAAM6H,GAAG4U,QAAQ7c,GAAOib,QAAOrG,UAAU,EAAMiG,SAAU,EAAGtG,WAAYvU,EAAKuU,WAAYyN,SAAU,GAAIvgB,OAAO,GAASgd,EAAUC,GAClKlK,EAAOD,WAAWlS,MACpBmS,EAAOD,WAAWlS,KAAKmS,IAErB3V,EAAqB,cAAe,EAARoc,IACzBhT,GAAGga,YACNha,GAAGga,UAAY,CAAC,GACZ7hB,KAAQ6H,GAAGga,YACfha,GAAGga,UAAU7hB,GAAQ,EACrB2C,EAAI,2CAA6C3C,KAGrD,IACE,GAAI6H,GAAG0T,iBAA6B,WAAG,CACrC,IAAIuG,EAAgB,EACM,KAAb,QAARjH,KACHiH,GAAiBja,GAAG2T,SAASC,UAAUC,MAEf,KAAb,QAARb,KACHiH,GAAiBja,GAAG2T,SAASC,UAAUE,OAEzC9T,GAAG0T,iBAA6B,WAAEvb,EAAM8hB,EAC1C,CACF,CAAE,MAAOxlB,GACPqG,EAAI,sCAAwC3C,EAAO,iCAAmC1D,EAAEqS,QAC1F,CACA,OAAOyF,CACT,EAAGK,MAAO,SAASL,GACjB,GAAIvM,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAEtBH,EAAO4N,WACT5N,EAAO4N,SAAW,MACpB,IACM5N,EAAOD,WAAWM,OACpBL,EAAOD,WAAWM,MAAML,EAE5B,CAAE,MAAO9X,GACP,MAAMA,CACR,CAAE,QACAuL,GAAGkX,YAAY3K,EAAOsB,GACxB,CACAtB,EAAOsB,GAAK,IACd,EAAGqM,SAAU,SAAS3N,GACpB,OAAqB,OAAdA,EAAOsB,EAChB,EAAGoC,OAAQ,SAAS1D,EAAQS,EAAQ8F,GAClC,GAAI9S,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,IAAKH,EAAOI,WAAaJ,EAAOD,WAAW2D,OACzC,MAAM,IAAIjQ,GAAG0M,WAAW,IAE1B,GAAc,GAAVoG,GAAyB,GAAVA,GAAyB,GAAVA,EAChC,MAAM,IAAI9S,GAAG0M,WAAW,IAI1B,OAFAH,EAAOqG,SAAWrG,EAAOD,WAAW2D,OAAO1D,EAAQS,EAAQ8F,GAC3DvG,EAAOwN,SAAW,GACXxN,EAAOqG,QAChB,EAAG9F,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GAEjD,GADA5F,KAAY,EACRhU,EAAS,GAAK4Z,EAAW,EAC3B,MAAM,IAAI5S,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,GAAI1M,GAAGyQ,MAAMlE,EAAOxU,KAAKqX,MACvB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKH,EAAOD,WAAWQ,KACrB,MAAM,IAAI9M,GAAG0M,WAAW,IAE1B,IAAI0N,EAA8B,qBAAbxH,EACrB,GAAKwH,GAEE,IAAK7N,EAAOI,SACjB,MAAM,IAAI3M,GAAG0M,WAAW,SAFxBkG,EAAWrG,EAAOqG,SAIpB,IAAIzF,EAAYZ,EAAOD,WAAWQ,KAAKP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GAGxE,OAFKwH,IACH7N,EAAOqG,UAAYzF,GACdA,CACT,EAAGG,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQ4Z,EAAUC,GAE5D,GADA7F,KAAY,EACRhU,EAAS,GAAK4Z,EAAW,EAC3B,MAAM,IAAI5S,GAAG0M,WAAW,IAE1B,GAAI1M,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,GAAI1M,GAAGyQ,MAAMlE,EAAOxU,KAAKqX,MACvB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKH,EAAOD,WAAWgB,MACrB,MAAM,IAAItN,GAAG0M,WAAW,IAEtBH,EAAOI,UAA2B,KAAfJ,EAAOyG,OAC5BhT,GAAGiQ,OAAO1D,EAAQ,EAAG,GAEvB,IAAI6N,EAA8B,qBAAbxH,EACrB,GAAKwH,GAEE,IAAK7N,EAAOI,SACjB,MAAM,IAAI3M,GAAG0M,WAAW,SAFxBkG,EAAWrG,EAAOqG,SAIpB,IAAIyH,EAAe9N,EAAOD,WAAWgB,MAAMf,EAAQQ,EAASC,EAAQhU,EAAQ4Z,EAAUC,GACjFuH,IACH7N,EAAOqG,UAAYyH,GACrB,IACM9N,EAAOpU,MAAQ6H,GAAG0T,iBAAgC,eACpD1T,GAAG0T,iBAAgC,cAAEnH,EAAOpU,KAChD,CAAE,MAAO1D,GACPqG,EAAI,yCAA2CyR,EAAOpU,KAAO,0BAA4B1D,EAAEqS,QAC7F,CACA,OAAOuT,CACT,EAAGnK,SAAU,SAAS3D,EAAQS,EAAQhU,GACpC,GAAIgH,GAAGka,SAAS3N,GACd,MAAM,IAAIvM,GAAG0M,WAAW,GAE1B,GAAIM,EAAS,GAAKhU,GAAU,EAC1B,MAAM,IAAIgH,GAAG0M,WAAW,IAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,IAAK1M,GAAG2Q,OAAOpE,EAAOxU,KAAKqX,QAAUpP,GAAGyQ,MAAMlE,EAAOxU,KAAKqX,MACxD,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAKH,EAAOD,WAAW4D,SACrB,MAAM,IAAIlQ,GAAG0M,WAAW,KAE1BH,EAAOD,WAAW4D,SAAS3D,EAAQS,EAAQhU,EAC7C,EAAGmX,KAAM,SAAS5D,EAAQoC,EAAS3V,EAAQ4Z,EAAUG,EAAMC,GAEzD,GADArE,KAAa,EACM,KAAP,EAAPoE,IAAmC,KAAP,EAARC,IAAiD,KAAb,QAAfzG,EAAOyG,OACnD,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,GAAiC,KAAb,QAAfH,EAAOyG,OACV,MAAM,IAAIhT,GAAG0M,WAAW,GAE1B,IAAKH,EAAOD,WAAW6D,KACrB,MAAM,IAAInQ,GAAG0M,WAAW,IAE1B,OAAOH,EAAOD,WAAW6D,KAAK5D,EAAQoC,EAAS3V,EAAQ4Z,EAAUG,EAAMC,EACzE,EAAG5C,MAAO,SAAS7D,EAAQQ,EAASC,EAAQhU,EAAQma,GAElD,OADAnG,KAAY,EACPT,GAAWA,EAAOD,WAAW8D,MAG3B7D,EAAOD,WAAW8D,MAAM7D,EAAQQ,EAASC,EAAQhU,EAAQma,GAFvD,CAGX,EAAGmH,OAAQ,SAAS/N,GAClB,OAAO,CACT,EAAGgO,MAAO,SAAShO,EAAQ1G,EAAK5D,GAC9B,IAAKsK,EAAOD,WAAWiO,MACrB,MAAM,IAAIva,GAAG0M,WAAW,IAE1B,OAAOH,EAAOD,WAAWiO,MAAMhO,EAAQ1G,EAAK5D,EAC9C,EAAGuY,SAAU,SAASriB,EAAM+b,GAI1B,IAHAA,EAAOA,GAAQ,CAAC,GACXlB,MAAQkB,EAAKlB,OAAS,EAC3BkB,EAAKlY,SAAWkY,EAAKlY,UAAY,SACX,SAAlBkY,EAAKlY,UAAyC,WAAlBkY,EAAKlY,SACnC,MAAM,IAAIlL,MAAM,0BAA4BojB,EAAKlY,SAAW,KAE9D,IAAIvD,EACA8T,EAASvM,GAAG5F,KAAKjC,EAAM+b,EAAKlB,OAE5Bha,EADOgH,GAAGkZ,KAAK/gB,GACDmW,KACdzP,EAAM,IAAInG,WAAWM,GAQzB,OAPAgH,GAAG8M,KAAKP,EAAQ1N,EAAK,EAAG7F,EAAQ,GACV,SAAlBkb,EAAKlY,SACPvD,EAAM6D,EAAkBuC,EAAK,GACF,WAAlBqV,EAAKlY,WACdvD,EAAMoG,GAERmB,GAAG4M,MAAML,GACF9T,CACT,EAAGgiB,UAAW,SAAStiB,EAAMY,EAAMmb,IACjCA,EAAOA,GAAQ,CAAC,GACXlB,MAAQkB,EAAKlB,OAAS,IAC3B,IAAIzG,EAASvM,GAAG5F,KAAKjC,EAAM+b,EAAKlB,MAAOkB,EAAK9E,MAC5C,GAAoB,kBAATrW,EAAmB,CAC5B,IAAI8F,EAAM,IAAInG,WAAWoF,EAAgB/E,GAAQ,GAC7C2hB,EAAiBpd,EAAkBvE,EAAM8F,EAAK,EAAGA,EAAI7F,QACzDgH,GAAGsN,MAAMf,EAAQ1N,EAAK,EAAG6b,OAAgB,EAAQxG,EAAKrB,OACxD,KAAO,KAAI8H,YAAYC,OAAO7hB,GAG5B,MAAM,IAAIjI,MAAM,yBAFhBkP,GAAGsN,MAAMf,EAAQxT,EAAM,EAAGA,EAAKyG,gBAAY,EAAQ0U,EAAKrB,OAG1D,CACA7S,GAAG4M,MAAML,EACX,EAAGxB,IAAK,WACN,OAAO/K,GAAGyT,WACZ,EAAGoH,MAAO,SAAS1iB,GACjB,IAAIuX,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IAC3C,GAAoB,OAAhBjF,EAAO3X,KACT,MAAM,IAAIiI,GAAG0M,WAAW,IAE1B,IAAK1M,GAAGyQ,MAAMf,EAAO3X,KAAKqX,MACxB,MAAM,IAAIpP,GAAG0M,WAAW,IAE1B,IAAI2I,EAAUrV,GAAGgW,gBAAgBtG,EAAO3X,KAAM,KAC9C,GAAIsd,EACF,MAAM,IAAIrV,GAAG0M,WAAW2I,GAE1BrV,GAAGyT,YAAc/D,EAAOvX,IAC1B,EAAG2iB,yBAA0B,WAC3B9a,GAAGuY,MAAM,QACTvY,GAAGuY,MAAM,SACTvY,GAAGuY,MAAM,iBACX,EAAGwC,qBAAsB,WACvB/a,GAAGuY,MAAM,QACTvY,GAAGqM,eAAerM,GAAGuX,QAAQ,EAAG,GAAI,CAAEzK,KAAM,WAC1C,OAAO,CACT,EAAGQ,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQiU,GAClD,OAAOjU,CACT,IACAgH,GAAG0Y,MAAM,YAAa1Y,GAAGuX,QAAQ,EAAG,IACpCnX,GAAI4L,SAAShM,GAAGuX,QAAQ,EAAG,GAAInX,GAAIoN,iBACnCpN,GAAI4L,SAAShM,GAAGuX,QAAQ,EAAG,GAAInX,GAAIgO,kBACnCpO,GAAG0Y,MAAM,WAAY1Y,GAAGuX,QAAQ,EAAG,IACnCvX,GAAG0Y,MAAM,YAAa1Y,GAAGuX,QAAQ,EAAG,IACpC,IAAIyD,EA72CN,WACE,GAAsB,kBAAXC,QAA4D,oBAA9BA,OAAwB,gBAAkB,CACjF,IAAIC,EAAe,IAAIxiB,WAAW,GAClC,OAAO,WAEL,OADAuiB,OAAOE,gBAAgBD,GAChBA,EAAa,EACtB,CACF,CAAO,GAAItjB,EACT,IACE,IAAIwjB,EAAgBrmB,IACpB,OAAO,WACL,OAAOqmB,EAA2B,YAAE,GAAG,EACzC,CACF,CAAE,MAAO3mB,GACT,CAEF,OAAO,WACL4E,GAAM,eACR,CACF,CA01CsBgiB,GACpBrb,GAAGsb,aAAa,OAAQ,SAAUN,GAClChb,GAAGsb,aAAa,OAAQ,UAAWN,GACnChb,GAAGuY,MAAM,YACTvY,GAAGuY,MAAM,eACX,EAAGgD,yBAA0B,WAC3Bvb,GAAGuY,MAAM,SACT,IAAIiD,EAAYxb,GAAGuY,MAAM,cACzBvY,GAAGuY,MAAM,iBACTvY,GAAGgP,MAAM,CAAEA,MAAO,WAChB,IAAIjX,EAAOiI,GAAGiP,WAAWuM,EAAW,KAAM,MAAa,IAYvD,OAXAzjB,EAAKyX,SAAW,CAAEE,OAAQ,SAASR,EAAQC,GACzC,IAAItB,GAAMsB,EACN5C,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAC1B,IAAIjU,EAAM,CAAEyW,OAAQ,KAAMF,MAAO,CAAE8F,WAAY,QAAUtF,SAAU,CAAEc,SAAU,WAC7E,OAAO/D,EAAOpU,IAChB,IAEA,OADAM,EAAIyW,OAASzW,EACNA,CACT,GACOV,CACT,GAAK,CAAC,EAAG,gBACX,EAAG0jB,sBAAuB,WACpB7kB,EAAc,MAChBoJ,GAAGsb,aAAa,OAAQ,QAAS1kB,EAAc,OAE/CoJ,GAAGgQ,QAAQ,WAAY,cAErBpZ,EAAe,OACjBoJ,GAAGsb,aAAa,OAAQ,SAAU,KAAM1kB,EAAe,QAEvDoJ,GAAGgQ,QAAQ,WAAY,eAErBpZ,EAAe,OACjBoJ,GAAGsb,aAAa,OAAQ,SAAU,KAAM1kB,EAAe,QAEvDoJ,GAAGgQ,QAAQ,YAAa,eAEdhQ,GAAG5F,KAAK,aAAc,GACrB4F,GAAG5F,KAAK,cAAe,GACvB4F,GAAG5F,KAAK,cAAe,EACtC,EAAGshB,iBAAkB,WACf1b,GAAG0M,aAEP1M,GAAG0M,WAAa,SAAoB0J,EAAOre,GACzCtH,KAAKsH,KAAOA,EACZtH,KAAKkrB,SAAW,SAASC,GACvBnrB,KAAK2lB,MAAQwF,CACf,EACAnrB,KAAKkrB,SAASvF,GACd3lB,KAAKqW,QAAU,UACjB,EACA9G,GAAG0M,WAAWla,UAAY,IAAI1B,MAC9BkP,GAAG0M,WAAWla,UAAUqpB,YAAc7b,GAAG0M,WACzC,CAAC,IAAIwL,SAAQ,SAAS4D,GACpB9b,GAAGiS,cAAc6J,GAAQ,IAAI9b,GAAG0M,WAAWoP,GAC3C9b,GAAGiS,cAAc6J,GAAMhb,MAAQ,2BACjC,IACF,EAAGib,WAAY,WACb/b,GAAG0b,mBACH1b,GAAGwT,UAAY,IAAIjJ,MAAM,MACzBvK,GAAGgP,MAAMF,GAAO,CAAC,EAAG,KACpB9O,GAAG8a,2BACH9a,GAAG+a,uBACH/a,GAAGub,2BACHvb,GAAG+T,YAAc,CAAE,MAASjF,GAC9B,EAAG7O,KAAM,SAASkM,EAAOC,EAAQ5S,GAC/BwG,GAAGC,KAAKC,aAAc,EACtBF,GAAG0b,mBACH9kB,EAAc,MAAIuV,GAASvV,EAAc,MACzCA,EAAe,OAAIwV,GAAUxV,EAAe,OAC5CA,EAAe,OAAI4C,GAAS5C,EAAe,OAC3CoJ,GAAGyb,uBACL,EAAGO,KAAM,WACPhc,GAAGC,KAAKC,aAAc,EACtB,IAAI+b,EAASrlB,EAAgB,QACzBqlB,GACFA,EAAO,GACT,IAAK,IAAI9qB,EAAI,EAAGA,EAAI6O,GAAGsT,QAAQta,OAAQ7H,IAAK,CAC1C,IAAIob,EAASvM,GAAGsT,QAAQniB,GACnBob,GAGLvM,GAAG4M,MAAML,EACX,CACF,EAAG2P,QAAS,SAASC,EAASC,GAC5B,IAAIhN,EAAO,EAKX,OAJI+M,IACF/M,GAAQ,KACNgN,IACFhN,GAAQ,KACHA,CACT,EAAGiN,WAAY,SAASlkB,EAAMmkB,GAC5B,IAAI7jB,EAAMuH,GAAGuc,YAAYpkB,EAAMmkB,GAC/B,OAAI7jB,EAAI+jB,OACC/jB,EAAIoe,OAEJ,IAEX,EAAG0F,YAAa,SAASpkB,EAAMmkB,GAC7B,IAEEnkB,GADIuX,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAS2H,KAC9BnkB,IAChB,CAAE,MAAO1D,GACT,CACA,IAAIgE,EAAM,CAAEoc,QAAQ,EAAO2H,QAAQ,EAAOhjB,MAAO,EAAG+Y,KAAM,KAAMpa,KAAM,KAAM0e,OAAQ,KAAM4F,cAAc,EAAOC,WAAY,KAAMC,aAAc,MAC/I,IACE,IAAIjN,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAE+W,QAAQ,IAC3CzW,EAAIgkB,cAAe,EACnBhkB,EAAIikB,WAAahN,EAAOvX,KACxBM,EAAIkkB,aAAejN,EAAO3X,KAC1BU,EAAI8Z,KAAOxJ,GAAKoB,SAAShS,GACzBuX,EAAS1P,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAS2H,IACxC7jB,EAAI+jB,QAAS,EACb/jB,EAAIN,KAAOuX,EAAOvX,KAClBM,EAAIoe,OAASnH,EAAO3X,KACpBU,EAAI8Z,KAAO7C,EAAO3X,KAAKwa,KACvB9Z,EAAIoc,OAAyB,MAAhBnF,EAAOvX,IACtB,CAAE,MAAO1D,GACPgE,EAAIe,MAAQ/E,EAAE2hB,KAChB,CACA,OAAO3d,CACT,EAAGmkB,WAAY,SAAS1N,EAAQ/W,EAAMgkB,EAASC,GAC7ClN,EAA2B,kBAAXA,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAE1D,IADA,IAAI/F,EAAQhR,EAAKyR,MAAM,KAAKiT,UACrB1T,EAAMnQ,QAAQ,CACnB,IAAI8jB,EAAO3T,EAAMpF,MACjB,GAAK+Y,EAAL,CAEA,IAAIxI,EAAUvL,GAAK0B,MAAMyE,EAAQ4N,GACjC,IACE9c,GAAGuY,MAAMjE,EACX,CAAE,MAAO7f,GACT,CACAya,EAASoF,CANC,CAOZ,CACA,OAAOA,CACT,EAAGyI,WAAY,SAAS7N,EAAQC,EAAO6N,EAAYb,EAASC,GAC1D,IAAIjkB,EAAO4Q,GAAK0B,MAAwB,kBAAXyE,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAASC,GAC5EC,EAAOpP,GAAGkc,QAAQC,EAASC,GAC/B,OAAOpc,GAAGsY,OAAOngB,EAAMiX,EACzB,EAAG6N,eAAgB,SAAS/N,EAAQC,EAAOpW,EAAMojB,EAASC,EAAUvJ,GAClE,IAAI1a,EAAOgX,EAAQpG,GAAK0B,MAAwB,kBAAXyE,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAASC,GAASD,EAC7FE,EAAOpP,GAAGkc,QAAQC,EAASC,GAC3BrkB,EAAOiI,GAAGsY,OAAOngB,EAAMiX,GAC3B,GAAIrW,EAAM,CACR,GAAoB,kBAATA,EAAmB,CAE5B,IADA,IAAIsS,EAAM,IAAId,MAAMxR,EAAKC,QAChB7H,EAAI,EAAG4M,EAAMhF,EAAKC,OAAQ7H,EAAI4M,IAAO5M,EAC5Cka,EAAIla,GAAK4H,EAAK4E,WAAWxM,GAC3B4H,EAAOsS,CACT,CACArL,GAAGqZ,MAAMthB,EAAa,IAAPqX,GACf,IAAI7C,EAASvM,GAAG5F,KAAKrC,EAAM,KAC3BiI,GAAGsN,MAAMf,EAAQxT,EAAM,EAAGA,EAAKC,OAAQ,EAAG6Z,GAC1C7S,GAAG4M,MAAML,GACTvM,GAAGqZ,MAAMthB,EAAMqX,EACjB,CACA,OAAOrX,CACT,EAAGujB,aAAc,SAASpM,EAAQC,EAAOhD,EAAOC,GAC9C,IAAIjU,EAAO4Q,GAAK0B,MAAwB,kBAAXyE,EAAsBA,EAASlP,GAAG4U,QAAQ1F,GAASC,GAC5EC,EAAOpP,GAAGkc,UAAU/P,IAASC,GAC5BpM,GAAGsb,aAAajE,QACnBrX,GAAGsb,aAAajE,MAAQ,IAC1B,IAAIpL,EAAMjM,GAAGuX,QAAQvX,GAAGsb,aAAajE,QAAS,GAyC9C,OAxCArX,GAAGqM,eAAeJ,EAAK,CAAE7R,KAAM,SAASmS,GACtCA,EAAOI,UAAW,CACpB,EAAGC,MAAO,SAASL,GACbH,GAAUA,EAAOzW,QAAUyW,EAAOzW,OAAOqD,QAC3CoT,EAAO,GAEX,EAAGU,KAAM,SAASP,EAAQQ,EAASC,EAAQhU,EAAQiU,GAEjD,IADA,IAAIE,EAAY,EACPhc,EAAI,EAAGA,EAAI6H,EAAQ7H,IAAK,CAC/B,IAAI6Y,EACJ,IACEA,EAASmC,GACX,CAAE,MAAO1X,GACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CACA,QAAe,IAAX1C,GAAmC,IAAdmD,EACvB,MAAM,IAAInN,GAAG0M,WAAW,GAE1B,GAAe,OAAX1C,QAA8B,IAAXA,EACrB,MACFmD,IACAJ,EAAQC,EAAS7b,GAAK6Y,CACxB,CAIA,OAHImD,IACFZ,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExB+F,CACT,EAAGG,MAAO,SAASf,EAAQQ,EAASC,EAAQhU,EAAQiU,GAClD,IAAK,IAAI9b,EAAI,EAAGA,EAAI6H,EAAQ7H,IAC1B,IACEib,EAAOW,EAAQC,EAAS7b,GAC1B,CAAE,MAAOsD,GACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CAKF,OAHI1T,IACFuT,EAAOxU,KAAKqV,UAAYC,KAAKjG,OAExBjW,CACT,IACO6O,GAAG0Y,MAAMvgB,EAAMiX,EAAMnD,EAC9B,EAAGiR,cAAe,SAASrqB,GACzB,GAAIA,EAAIsqB,UAAYtqB,EAAIuqB,UAAYvqB,EAAIwd,MAAQxd,EAAI6d,SAClD,OAAO,EACT,GAA8B,qBAAnBvW,eACT,MAAM,IAAIrJ,MAAM,oMACX,IAAIgG,EAQT,MAAM,IAAIhG,MAAM,iDAPhB,IACE+B,EAAI6d,SAAWxC,GAAmBpX,EAAMjE,EAAIoH,MAAM,GAClDpH,EAAI+d,UAAY/d,EAAI6d,SAAS1X,MAC/B,CAAE,MAAOvE,GACP,MAAM,IAAIuL,GAAG0M,WAAW,GAC1B,CAIJ,EAAG2Q,eAAgB,SAASnO,EAAQC,EAAOlV,EAAKkiB,EAASC,GACvD,SAASkB,IACP7sB,KAAK8sB,aAAc,EACnB9sB,KAAK+sB,OAAS,EAChB,CAsEA,GArEAF,EAAe9qB,UAAU0P,IAAM,SAA4B1F,GACzD,KAAIA,EAAM/L,KAAKuI,OAAS,GAAKwD,EAAM,GAAnC,CAGA,IAAIihB,EAAcjhB,EAAM/L,KAAKitB,UACzBC,EAAWnhB,EAAM/L,KAAKitB,UAAY,EACtC,OAAOjtB,KAAKmtB,OAAOD,GAAUF,EAH7B,CAIF,EACAH,EAAe9qB,UAAUqrB,cAAgB,SAAsCD,GAC7EntB,KAAKmtB,OAASA,CAChB,EACAN,EAAe9qB,UAAUsrB,YAAc,WACrC,IAAI5jB,EAAM,IAAIC,eAGd,GAFAD,EAAIE,KAAK,OAAQH,GAAK,GACtBC,EAAIG,KAAK,QACHH,EAAI5C,QAAU,KAAO4C,EAAI5C,OAAS,KAAsB,MAAf4C,EAAI5C,QACjD,MAAM,IAAIxG,MAAM,iBAAmBmJ,EAAM,aAAeC,EAAI5C,QAC9D,IACIymB,EADAC,EAAaC,OAAO/jB,EAAIgkB,kBAAkB,mBAE1CC,GAAkBJ,EAAS7jB,EAAIgkB,kBAAkB,mBAAgC,UAAXH,EACtEK,GAAYL,EAAS7jB,EAAIgkB,kBAAkB,sBAAmC,SAAXH,EACnEL,EAAY,QACXS,IACHT,EAAYM,GACd,IAuBIK,EAAa5tB,KACjB4tB,EAAWR,eAAc,SAASF,GAChC,IAAI5rB,EAAQ4rB,EAAWD,EACnBpS,GAAOqS,EAAW,GAAKD,EAAY,EAKvC,GAJApS,EAAMG,KAAKC,IAAIJ,EAAK0S,EAAa,GACU,qBAAhCK,EAAWb,OAAOG,KAC3BU,EAAWb,OAAOG,GA7BV,SAASzS,EAAMC,GACzB,GAAID,EAAOC,EACT,MAAM,IAAIra,MAAM,kBAAoBoa,EAAO,KAAOC,EAAK,4BACzD,GAAIA,EAAK6S,EAAa,EACpB,MAAM,IAAIltB,MAAM,QAAUktB,EAAa,uCACzC,IAAIM,EAAO,IAAInkB,eAUf,GATAmkB,EAAKlkB,KAAK,MAAOH,GAAK,GAClB+jB,IAAeN,GACjBY,EAAKC,iBAAiB,QAAS,SAAWrT,EAAO,IAAMC,GAChC,oBAAdzS,aACT4lB,EAAK/jB,aAAe,eAClB+jB,EAAKE,kBACPF,EAAKE,iBAAiB,sCAExBF,EAAKjkB,KAAK,QACJikB,EAAKhnB,QAAU,KAAOgnB,EAAKhnB,OAAS,KAAuB,MAAhBgnB,EAAKhnB,QACpD,MAAM,IAAIxG,MAAM,iBAAmBmJ,EAAM,aAAeqkB,EAAKhnB,QAC/D,YAAsB,IAAlBgnB,EAAK9jB,SACA,IAAI9B,WAAW4lB,EAAK9jB,UAAY,IAEhC0T,GAAmBoQ,EAAKhkB,cAAgB,IAAI,EAEvD,CAOkCmkB,CAAM1sB,EAAOuZ,IAEF,qBAAhC+S,EAAWb,OAAOG,GAC3B,MAAM,IAAI7sB,MAAM,iBAClB,OAAOutB,EAAWb,OAAOG,EAC3B,KACIS,GAAaJ,IACfN,EAAYM,EAAa,EACzBA,EAAavtB,KAAKmtB,OAAO,GAAG5kB,OAC5B0kB,EAAYM,EACZrjB,EAAI,gFAENlK,KAAKiuB,QAAUV,EACfvtB,KAAKkuB,WAAajB,EAClBjtB,KAAK8sB,aAAc,CACrB,EAC8B,qBAAnBpjB,eAAgC,CACzC,IAAKzC,EACH,KAAM,sHACR,IAAIknB,EAAY,IAAItB,EACpBnrB,OAAO0sB,iBAAiBD,EAAW,CAAE5lB,OAAQ,CAAEkJ,IAAK,WAIlD,OAHKzR,KAAK8sB,aACR9sB,KAAKqtB,cAEArtB,KAAKiuB,OACd,GAAKhB,UAAW,CAAExb,IAAK,WAIrB,OAHKzR,KAAK8sB,aACR9sB,KAAKqtB,cAEArtB,KAAKkuB,UACd,KACA,IAAI3B,EAAa,CAAEG,UAAU,EAAOzM,SAAUkO,EAChD,MACM5B,EAAa,CAAEG,UAAU,EAAOljB,OAEtC,IAAIlC,EAAOiI,GAAG+c,WAAW7N,EAAQC,EAAO6N,EAAYb,EAASC,GACzDY,EAAWtM,SACb3Y,EAAK2Y,SAAWsM,EAAWtM,SAClBsM,EAAW/iB,MACpBlC,EAAK2Y,SAAW,KAChB3Y,EAAKkC,IAAM+iB,EAAW/iB,KAExB9H,OAAO0sB,iBAAiB9mB,EAAM,CAAE6Y,UAAW,CAAE1O,IAAK,WAChD,OAAOzR,KAAKigB,SAAS1X,MACvB,KACA,IAAIsT,EAAa,CAAC,EA2BlB,OA1BWna,OAAO0B,KAAKkE,EAAKuU,YACvB4L,SAAQ,SAASzF,GACpB,IAAIqM,EAAK/mB,EAAKuU,WAAWmG,GACzBnG,EAAWmG,GAAQ,WAEjB,OADAzS,GAAGkd,cAAcnlB,GACV+mB,EAAGhqB,MAAM,KAAM0V,UACxB,CACF,IACA8B,EAAWQ,KAAO,SAAyBP,EAAQQ,EAASC,EAAQhU,EAAQ4Z,GAC1E5S,GAAGkd,cAAcnlB,GACjB,IAAI2Y,EAAWnE,EAAOxU,KAAK2Y,SAC3B,GAAIkC,GAAYlC,EAAS1X,OACvB,OAAO,EACT,IAAIsV,EAAO7C,KAAKC,IAAIgF,EAAS1X,OAAS4Z,EAAU5Z,GAChD,GAAI0X,EAASxX,MACX,IAAK,IAAI/H,EAAI,EAAGA,EAAImd,EAAMnd,IACxB4b,EAAQC,EAAS7b,GAAKuf,EAASkC,EAAWzhB,QAG5C,IAASA,EAAI,EAAGA,EAAImd,EAAMnd,IACxB4b,EAAQC,EAAS7b,GAAKuf,EAASxO,IAAI0Q,EAAWzhB,GAGlD,OAAOmd,CACT,EACAvW,EAAKuU,WAAaA,EACXvU,CACT,EAAGgnB,oBAAqB,SAAS7P,EAAQC,EAAOlV,EAAKkiB,EAASC,EAAUxjB,EAAQC,EAASmmB,EAAgBnM,EAAQoM,GAC/GC,QAAQjf,OACR,IAAIkf,EAAWhQ,EAAQvE,GAAQxW,QAAQ2U,GAAK0B,MAAMyE,EAAQC,IAAUD,EAEpE,SAASkQ,EAAYC,GACnB,SAASC,EAAOC,GACVN,GACFA,IACGD,GACHhf,GAAGid,eAAe/N,EAAQC,EAAOoQ,EAAYpD,EAASC,EAAUvJ,GAE9Dja,GACFA,IACF8H,IACF,CACA,IAAI8e,GAAU,EACd5oB,EAAuB,eAAEshB,SAAQ,SAASuH,GACpCD,GAEAC,EAAkB,UAAEN,KACtBM,EAAe,OAAEJ,EAAWF,EAAUG,GAAQ,WACxCzmB,GACFA,IACF6H,IACF,IACA8e,GAAU,EAEd,IACKA,GACHF,EAAOD,EACX,CACA5e,KACkB,iBAAPxG,EAnzCb,SAAmBA,EAAKrB,EAAQC,EAAS6mB,GACvC,IAAIC,EAAOD,EAAiD,GAAf,MAAQzlB,EACrDlD,EAAUkD,GAAK,SAAS2lB,GACtBjnB,EAAOinB,EAAa,sBAAwB3lB,EAAM,8BAClDrB,EAAO,IAAIF,WAAWknB,IAClBD,GACFjf,IACJ,IAAG,SAASmf,GACV,IAAIhnB,EAGF,KAAM,sBAAwBoB,EAAM,YAFpCpB,GAIJ,IACI8mB,GACFlf,IACJ,CAoyCIqf,CAAU7lB,GAAK,SAASolB,GACtBD,EAAYC,EACd,GAAGxmB,GAEHumB,EAAYnlB,EAEhB,EAAG8lB,UAAW,WACZ,OAAOtoB,OAAOsoB,WAAatoB,OAAOuoB,cAAgBvoB,OAAOwoB,iBAAmBxoB,OAAOyoB,WACrF,EAAGC,QAAS,WACV,MAAO,SAAW1oB,OAAOmC,SAASwmB,QACpC,EAAGC,WAAY,GAAIC,cAAe,YAAaC,cAAe,SAASjW,EAAO1R,EAAQC,GACpFD,EAASA,GAAU,WACnB,EACAC,EAAUA,GAAW,WACrB,EACA,IAAIknB,EAAY/f,GAAG+f,YACnB,IACE,IAAIS,EAAcT,EAAU3lB,KAAK4F,GAAGmgB,UAAWngB,GAAGqgB,WACpD,CAAE,MAAO5rB,GACP,OAAOoE,EAAQpE,EACjB,CACA+rB,EAAYC,gBAAkB,WAC5B9lB,EAAI,eACK6lB,EAAYxW,OAClB0W,kBAAkB1gB,GAAGsgB,cAC1B,EACAE,EAAYG,UAAY,WACtB,IACIC,EADKJ,EAAYxW,OACA4W,YAAY,CAAC5gB,GAAGsgB,eAAgB,aACjDO,EAAQD,EAAYE,YAAY9gB,GAAGsgB,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQ3W,EAAMtR,OACpC,SAASsmB,IACK,GAAR0B,EACFpoB,IAEAC,GACJ,CACAyR,EAAM4N,SAAQ,SAAS/f,GACrB,IAAI+oB,EAAaL,EAAMM,IAAInhB,GAAGuc,YAAYpkB,GAAM0e,OAAOnG,SAAUvY,GACjE+oB,EAAWP,UAAY,aACrBI,EACSC,GAAQC,GACf3B,GACJ,EACA4B,EAAWroB,QAAU,WACnBmoB,IACID,EAAKC,GAAQC,GACf3B,GACJ,CACF,IACAsB,EAAY/nB,QAAUA,CACxB,EACA2nB,EAAY3nB,QAAUA,CACxB,EAAGuoB,gBAAiB,SAAS9W,EAAO1R,EAAQC,GAC1CD,EAASA,GAAU,WACnB,EACAC,EAAUA,GAAW,WACrB,EACA,IAAIknB,EAAY/f,GAAG+f,YACnB,IACE,IAAIS,EAAcT,EAAU3lB,KAAK4F,GAAGmgB,UAAWngB,GAAGqgB,WACpD,CAAE,MAAO5rB,GACP,OAAOoE,EAAQpE,EACjB,CACA+rB,EAAYC,gBAAkB5nB,EAC9B2nB,EAAYG,UAAY,WACtB,IAAIU,EAAKb,EAAYxW,OACrB,IACE,IAAI4W,EAAcS,EAAGT,YAAY,CAAC5gB,GAAGsgB,eAAgB,WACvD,CAAE,MAAO7rB,GAEP,YADAoE,EAAQpE,EAEV,CACA,IAAIosB,EAAQD,EAAYE,YAAY9gB,GAAGsgB,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQ3W,EAAMtR,OACpC,SAASsmB,IACK,GAAR0B,EACFpoB,IAEAC,GACJ,CACAyR,EAAM4N,SAAQ,SAAS/f,GACrB,IAAImpB,EAAaT,EAAM3e,IAAI/J,GAC3BmpB,EAAWX,UAAY,WACjB3gB,GAAGuc,YAAYpkB,GAAMqkB,QACvBxc,GAAG6P,OAAO1X,GAEZ6H,GAAGid,eAAelU,GAAK1Q,QAAQF,GAAO4Q,GAAKoB,SAAShS,GAAOmpB,EAAWtX,QAAQ,GAAM,GAAM,KAC1F+W,EACSC,GAAQC,GACf3B,GACJ,EACAgC,EAAWzoB,QAAU,WACnBmoB,IACID,EAAKC,GAAQC,GACf3B,GACJ,CACF,IACAsB,EAAY/nB,QAAUA,CACxB,EACA2nB,EAAY3nB,QAAUA,CACxB,GACI0oB,GAAW,CAAEC,SAAU,CAAC,EAAGC,iBAAkB,EAAGC,MAAO,IAAKC,YAAa,SAASC,EAAOzpB,EAAM0pB,GACjG,GAAgB,MAAZ1pB,EAAK,GACP,OAAOA,EAET,IAAI+R,EACJ,IAAe,MAAX0X,EACF1X,EAAMlK,GAAG+K,UACJ,CACL,IAAI+W,EAAY9hB,GAAG0W,UAAUkL,GAC7B,IAAKE,EACH,MAAM,IAAI9hB,GAAG0M,WAAW,GAC1BxC,EAAM4X,EAAU3pB,IAClB,CACA,GAAmB,GAAfA,EAAKa,OAAa,CACpB,IAAK6oB,EACH,MAAM,IAAI7hB,GAAG0M,WAAW,IAE1B,OAAOxC,CACT,CACA,OAAOnB,GAAK0B,MAAMP,EAAK/R,EACzB,EAAG4pB,OAAQ,SAAS/f,EAAM7J,EAAM0G,GAC9B,IACE,IAAIqa,EAAOlX,EAAK7J,EAClB,CAAE,MAAO1D,GACP,GAAIA,GAAKA,EAAEsD,MAAQgR,GAAKS,UAAUrR,KAAU4Q,GAAKS,UAAUxJ,GAAG4U,QAAQngB,EAAEsD,OACtE,OAAQ,GAEV,MAAMtD,CACR,CAoBA,OAnBA4B,EAAOwI,IAAQ,GAAKqa,EAAKjN,IACzB5V,EAAOwI,EAAM,IAAM,GAAK,EACxBxI,EAAOwI,EAAM,IAAM,GAAKqa,EAAK1H,IAC7Bnb,EAAOwI,EAAM,KAAO,GAAKqa,EAAK9J,KAC9B/Y,EAAOwI,EAAM,KAAO,GAAKqa,EAAKzH,MAC9Bpb,EAAOwI,EAAM,KAAO,GAAKqa,EAAKxH,IAC9Brb,EAAOwI,EAAM,KAAO,GAAKqa,EAAKvH,IAC9Btb,EAAOwI,EAAM,KAAO,GAAKqa,EAAKzM,KAC9BpW,EAAOwI,EAAM,KAAO,GAAK,EACzBqC,GAAU,CAACgY,EAAK5K,OAAS,GAAIrN,GAAaiY,EAAK5K,MAAO7C,KAAKuW,IAAI/gB,KAAe,EAAIA,GAAa,GAAkE,EAA7DwK,KAAKC,KAAKD,KAAKwW,MAAMhhB,GAAa,YAAa,eAAqB,KAAOwK,KAAK+C,MAAMvN,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAK5K,EAAOwI,EAAM,KAAO,GAAKqC,GAAQ,GAAI7K,EAAOwI,EAAM,KAAO,GAAKqC,GAAQ,GAC/T7K,EAAOwI,EAAM,KAAO,GAAK,KACzBxI,EAAOwI,EAAM,KAAO,GAAKqa,EAAKlH,OAC9B3b,EAAOwI,EAAM,KAAO,GAAKqa,EAAKtH,MAAMsQ,UAAY,IAAM,EACtD7rB,EAAOwI,EAAM,KAAO,GAAK,EACzBxI,EAAOwI,EAAM,KAAO,GAAKqa,EAAKrH,MAAMqQ,UAAY,IAAM,EACtD7rB,EAAOwI,EAAM,KAAO,GAAK,EACzBxI,EAAOwI,EAAM,KAAO,GAAKqa,EAAKpH,MAAMoQ,UAAY,IAAM,EACtD7rB,EAAOwI,EAAM,KAAO,GAAK,EACzBqC,GAAU,CAACgY,EAAK1H,MAAQ,GAAIvQ,GAAaiY,EAAK1H,KAAM/F,KAAKuW,IAAI/gB,KAAe,EAAIA,GAAa,GAAkE,EAA7DwK,KAAKC,KAAKD,KAAKwW,MAAMhhB,GAAa,YAAa,eAAqB,KAAOwK,KAAK+C,MAAMvN,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAK5K,EAAOwI,EAAM,KAAO,GAAKqC,GAAQ,GAAI7K,EAAOwI,EAAM,KAAO,GAAKqC,GAAQ,GACtT,CACT,EAAGihB,QAAS,SAAS/f,EAAMmK,EAAQxO,EAAKiV,EAAOhG,GAC7C,IAAID,EAAUhX,EAAOmD,MAAMkJ,EAAMA,EAAOrE,GACxCiC,GAAGoQ,MAAM7D,EAAQQ,EAASC,EAAQjP,EAAKiV,EACzC,EAAGoP,QAAS,SAASjqB,EAAMiX,GAKzB,MAH8B,OAD9BjX,EAAO4Q,GAAKS,UAAUrR,IACbA,EAAKa,OAAS,KACrBb,EAAOA,EAAK4B,OAAO,EAAG5B,EAAKa,OAAS,IACtCgH,GAAGuY,MAAMpgB,EAAMiX,EAAM,GACd,CACT,EAAGiT,QAAS,SAASlqB,EAAMiX,EAAMnD,GAC/B,OAAe,MAAPmD,GACN,KAAK,MACL,KAAK,KACL,KAAK,MACL,KAAK,KACL,KAAK,MACH,MACF,QACE,OAAQ,GAGZ,OADApP,GAAG2P,MAAMxX,EAAMiX,EAAMnD,GACd,CACT,EAAGqW,WAAY,SAASnqB,EAAM0G,EAAK0jB,GACjC,GAAIA,GAAW,EACb,OAAQ,GACV,IAAI9pB,EAAMuH,GAAGsQ,SAASnY,GAClB4F,EAAM0N,KAAKC,IAAI6W,EAASzkB,EAAgBrF,IACxC+pB,EAAU3sB,EAAMgJ,EAAMd,IAAQ,GAGlC,OAFAH,EAAanF,EAAKoG,EAAK0jB,EAAU,GACjC1sB,EAAMgJ,EAAMd,IAAQ,GAAKykB,EAClBzkB,CACT,EAAG0kB,SAAU,SAAStqB,EAAMuqB,GAC1B,IAAY,EAARA,EACF,OAAQ,GAEV,IAAI3qB,EAGJ,KADAA,EADaiI,GAAGiU,WAAW9b,EAAM,CAAEwc,QAAQ,IAC7B5c,MAEZ,OAAQ,GAEV,IAAIge,EAAQ,GAOZ,OANY,EAAR2M,IACF3M,GAAS,KACC,EAAR2M,IACF3M,GAAS,KACC,EAAR2M,IACF3M,GAAS,KACPA,GAAS/V,GAAGgW,gBAAgBje,EAAMge,IAC5B,EAEH,CACT,EAAG4M,MAAO,SAASxqB,EAAM6a,EAAO4P,GAC9B,IAAIC,EAAU7iB,GAAG0W,UAAUkM,GAG3B,OAFIC,GACF7iB,GAAG4M,MAAMiW,GACJ7iB,GAAG5F,KAAKjC,EAAM6a,EAAO,EAAG4P,EAAWA,GAAW/U,EACvD,EAAGiV,QAAS,SAASvW,EAAQwW,EAAKC,EAAQhW,GAExC,IADA,IAAIvU,EAAM,EACDtH,EAAI,EAAGA,EAAI6xB,EAAQ7xB,IAAK,CAC/B,IAAIkM,EAAMhH,EAAO0sB,EAAU,EAAJ5xB,IAAU,GAC7B4M,EAAM1H,EAAO0sB,GAAW,EAAJ5xB,EAAQ,KAAO,GACnC8xB,EAAOjjB,GAAG8M,KAAKP,EAAQ1W,EAAOwH,EAAKU,EAAKiP,GAC5C,GAAIiW,EAAO,EACT,OAAQ,EAEV,GADAxqB,GAAOwqB,EACHA,EAAOllB,EACT,KACJ,CACA,OAAOtF,CACT,EAAGyqB,SAAU,SAAS3W,EAAQwW,EAAKC,EAAQhW,GAEzC,IADA,IAAIvU,EAAM,EACDtH,EAAI,EAAGA,EAAI6xB,EAAQ7xB,IAAK,CAC/B,IAAIkM,EAAMhH,EAAO0sB,EAAU,EAAJ5xB,IAAU,GAC7B4M,EAAM1H,EAAO0sB,GAAW,EAAJ5xB,EAAQ,KAAO,GACnC8xB,EAAOjjB,GAAGsN,MAAMf,EAAQ1W,EAAOwH,EAAKU,EAAKiP,GAC7C,GAAIiW,EAAO,EACT,OAAQ,EACVxqB,GAAOwqB,CACT,CACA,OAAOxqB,CACT,EAAG0qB,aAAS,EAAQjhB,IAAK,WAGvB,OAFAqf,GAAS4B,SAAW,EACV9sB,EAAOkrB,GAAS4B,QAAU,IAAM,EAE5C,EAAGC,OAAQ,SAAS/lB,GAElB,OADUD,EAAaC,EAEzB,EAAGgmB,gBAAiB,SAASxV,GAC3B,IAAItB,EAASvM,GAAG0W,UAAU7I,GAC1B,IAAKtB,EACH,MAAM,IAAIvM,GAAG0M,WAAW,GAC1B,OAAOH,CACT,EAAG+W,MAAO,SAASC,EAAKC,GACtB,OAAOD,CACT,GAuHA,IAAIQ,GAAqB,CAAC,EAC1B,SAASC,GAAeC,GACtB,KAAOA,EAAYjrB,QAAQ,CACzB,IAAIqE,EAAM4mB,EAAYlgB,MACZkgB,EAAYlgB,KACtBmgB,CAAI7mB,EACN,CACF,CACA,SAAS8mB,GAA2BC,GAClC,OAAO3zB,KAAmB,aAAE8F,EAAQ6tB,IAAY,GAClD,CACA,IAAIC,GAAuB,CAAC,EACxBC,GAAkB,CAAC,EACnBC,GAAmB,CAAC,EACpBC,GAAS,GACTC,GAAS,GACb,SAASC,GAAsBvV,GAC7B,QAAc,IAAVA,EACF,MAAO,WAGT,IAAIwV,GADJxV,EAAQA,EAAMlW,QAAQ,iBAAkB,MAC1B0E,WAAW,GACzB,OAAIgnB,GAAKH,IAAUG,GAAKF,GACf,IAAMtV,EAENA,CAEX,CACA,SAASyV,GAAoBzV,EAAO0V,GAElC,OADA1V,EAAQuV,GAAsBvV,GACvB,IAAI2V,SAAS,OAAQ,mBAAqB3V,EAAQ,uEAAlD,CAA0H0V,EACnI,CACA,SAASE,GAAYC,EAAeC,GAClC,IAAIC,EAAaN,GAAoBK,GAAW,SAASne,GACvDrW,KAAK8hB,KAAO0S,EACZx0B,KAAKqW,QAAUA,EACf,IAAIhG,EAAQ,IAAIhQ,MAAMgW,GAAShG,WACjB,IAAVA,IACFrQ,KAAKqQ,MAAQrQ,KAAKqd,WAAa,KAAOhN,EAAM7H,QAAQ,qBAAsB,IAE9E,IAUA,OATAisB,EAAW1yB,UAAYL,OAAOmmB,OAAO0M,EAAcxyB,WACnD0yB,EAAW1yB,UAAUqpB,YAAcqJ,EACnCA,EAAW1yB,UAAUsb,SAAW,WAC9B,YAAqB,IAAjBrd,KAAKqW,QACArW,KAAK8hB,KAEL9hB,KAAK8hB,KAAO,KAAO9hB,KAAKqW,OAEnC,EACOoe,CACT,CACA,IAAIC,QAAgB,EACpB,SAASC,GAAmBte,GAC1B,MAAM,IAAIqe,GAAcre,EAC1B,CACA,SAASue,GAA8BC,EAASC,EAAgBC,GAI9D,SAASC,EAAWC,GAClB,IAAIC,EAAmBH,EAAkBE,GACrCC,EAAiB3sB,SAAWssB,EAAQtsB,QACtCosB,GAAmB,mCAErB,IAAK,IAAIj0B,EAAI,EAAGA,EAAIm0B,EAAQtsB,SAAU7H,EACpCy0B,GAAaN,EAAQn0B,GAAIw0B,EAAiBx0B,GAE9C,CAXAm0B,EAAQpN,SAAQ,SAAS7mB,GACvBkzB,GAAiBlzB,GAAQk0B,CAC3B,IAUA,IAAIM,EAAiB,IAAItb,MAAMgb,EAAevsB,QAC1C8sB,EAAoB,GACpBC,EAAa,EACjBR,EAAerN,SAAQ,SAAS8N,EAAI70B,GAC9BmzB,GAAgB7xB,eAAeuzB,GACjCH,EAAe10B,GAAKmzB,GAAgB0B,IAEpCF,EAAkB1gB,KAAK4gB,GAClB3B,GAAqB5xB,eAAeuzB,KACvC3B,GAAqB2B,GAAM,IAE7B3B,GAAqB2B,GAAI5gB,MAAK,WAC5BygB,EAAe10B,GAAKmzB,GAAgB0B,KAClCD,IACiBD,EAAkB9sB,QACnCysB,EAAWI,EAEf,IAEJ,IACiC,IAA7BC,EAAkB9sB,QACpBysB,EAAWI,EAEf,CAoDA,IAAII,GAAsB,CAAC,EAwD3B,SAASC,GAAiB5X,GACxB,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,QACE,MAAM,IAAItD,UAAU,sBAAwBsD,GAElD,CAQA,IAAI6X,QAAmB,EACvB,SAASC,GAAiB/oB,GAGxB,IAFA,IAAI5E,EAAM,GACN4tB,EAAIhpB,EACDtH,EAAOswB,IAAM,IAClB5tB,GAAO0tB,GAAiBpwB,EAAOswB,MAAQ,IAEzC,OAAO5tB,CACT,CACA,IAAI6tB,QAAe,EACnB,SAASC,GAAkBzf,GACzB,MAAM,IAAIwf,GAAaxf,EACzB,CACA,SAAS8e,GAAaY,EAASC,EAAoBC,GAEjD,GADAA,EAAUA,GAAW,CAAC,IAChB,mBAAoBD,GACxB,MAAM,IAAIzb,UAAU,2DAEtB,IAAImE,EAAQsX,EAAmBlU,KAI/B,GAHKiU,GACHD,GAAkB,SAAWpX,EAAQ,iDAEnCmV,GAAgB7xB,eAAe+zB,GAAU,CAC3C,GAAIE,EAAQC,6BACV,OAEAJ,GAAkB,yBAA2BpX,EAAQ,UAEzD,CAGA,GAFAmV,GAAgBkC,GAAWC,SACpBlC,GAAiBiC,GACpBnC,GAAqB5xB,eAAe+zB,GAAU,CAChD,IAAI1kB,EAAYuiB,GAAqBmC,UAC9BnC,GAAqBmC,GAC5B1kB,EAAUoW,SAAQ,SAASvkB,GACzBA,GACF,GACF,CACF,CAsBA,SAASizB,GAAsBC,GAC7B,KAAMp2B,gBAAgBq2B,IACpB,OAAO,EAET,KAAMD,aAAiBC,IACrB,OAAO,EAMT,IAJA,IAAIC,EAAYt2B,KAAKu2B,GAAGC,QAAQC,gBAC5BC,EAAO12B,KAAKu2B,GAAG3pB,IACf+pB,EAAaP,EAAMG,GAAGC,QAAQC,gBAC9BG,EAAQR,EAAMG,GAAG3pB,IACd0pB,EAAUO,WACfH,EAAOJ,EAAUQ,OAAOJ,GACxBJ,EAAYA,EAAUO,UAExB,KAAOF,EAAWE,WAChBD,EAAQD,EAAWG,OAAOF,GAC1BD,EAAaA,EAAWE,UAE1B,OAAOP,IAAcK,GAAcD,IAASE,CAC9C,CAIA,SAASG,GAA4B30B,GAInC0zB,GAAsC1zB,EAFtBm0B,GAAGC,QAAQC,gBAAgB3U,KAEE,4BAC/C,CACA,IAAIkV,IAAoB,EACxB,SAASC,GAAgBC,GACzB,CAQA,SAASC,GAAmBZ,GAC1BA,EAAG3kB,MAAMtP,OAAS,EACgB,IAAnBi0B,EAAG3kB,MAAMtP,OAT1B,SAAuBi0B,GACjBA,EAAGa,SACLb,EAAGc,aAAaC,cAAcf,EAAGa,UAEjCb,EAAGC,QAAQC,gBAAgBa,cAAcf,EAAG3pB,IAEhD,CAKI2qB,CAAchB,EAElB,CACA,SAASiB,GAAgBN,GACvB,MAAiC,qBAAtBO,mBACTD,GAAkB,SAASE,GACzB,OAAOA,CACT,EACOR,IAETF,GAAoB,IAAIS,mBAAkB,SAASE,GACjD,IAAK,IAAIpe,EAASoe,EAAK5zB,QAASwV,EAAOpV,KAAMoV,EAASoe,EAAK5zB,OAAQ,CACjE,IAAIwyB,EAAKhd,EAAOjX,MACXi0B,EAAG3pB,IAGNuqB,GAAmBZ,GAFnBztB,QAAQwB,KAAK,2BAA6BisB,EAAG3pB,IAIjD,CACF,IAKAqqB,GAAkB,SAASS,GACzBV,GAAkBY,WAAWF,EAAQnB,GACvC,GANAiB,GAAkB,SAASE,GAEzB,OADAV,GAAkBzb,SAASmc,EAASA,EAAQnB,GAAImB,EAAQnB,IACjDmB,CACT,GAIuBR,GACzB,CACA,SAASW,KAIP,GAHK73B,KAAKu2B,GAAG3pB,KACXmqB,GAA4B/2B,MAE1BA,KAAKu2B,GAAGuB,wBAEV,OADA93B,KAAKu2B,GAAG3kB,MAAMtP,OAAS,EAChBtC,KAEP,IA5DgC+3B,EA4D5BC,EAAQR,GAAgB91B,OAAOmmB,OAAOnmB,OAAOu2B,eAAej4B,MAAO,CAAEu2B,GAAI,CAAEj0B,OA5D/Cy1B,EA4DiF/3B,KAAKu2B,GA3DjH,CAAE3kB,MAAOmmB,EAAEnmB,MAAOsmB,gBAAiBH,EAAEG,gBAAiBJ,wBAAyBC,EAAED,wBAAyBlrB,IAAKmrB,EAAEnrB,IAAK4pB,QAASuB,EAAEvB,QAASY,SAAUW,EAAEX,SAAUC,aAAcU,EAAEV,mBA8DrL,OAFAW,EAAMzB,GAAG3kB,MAAMtP,OAAS,EACxB01B,EAAMzB,GAAG2B,iBAAkB,EACpBF,CAEX,CACA,SAASG,KACFn4B,KAAKu2B,GAAG3pB,KACXmqB,GAA4B/2B,MAE1BA,KAAKu2B,GAAG2B,kBAAoBl4B,KAAKu2B,GAAGuB,yBACtChC,GAAkB,yCAEpBmB,GAAgBj3B,MAChBm3B,GAAmBn3B,KAAKu2B,IACnBv2B,KAAKu2B,GAAGuB,0BACX93B,KAAKu2B,GAAGa,cAAW,EACnBp3B,KAAKu2B,GAAG3pB,SAAM,EAElB,CACA,SAASwrB,KACP,OAAQp4B,KAAKu2B,GAAG3pB,GAClB,CACA,IAAIyrB,QAAgB,EAChBC,GAAgB,GACpB,SAASC,KACP,KAAOD,GAAc/vB,QAAQ,CAC3B,IAAInG,EAAMk2B,GAAchlB,MACxBlR,EAAIm0B,GAAG2B,iBAAkB,EACzB91B,EAAY,QACd,CACF,CACA,SAASo2B,KAYP,OAXKx4B,KAAKu2B,GAAG3pB,KACXmqB,GAA4B/2B,MAE1BA,KAAKu2B,GAAG2B,kBAAoBl4B,KAAKu2B,GAAGuB,yBACtChC,GAAkB,yCAEpBwC,GAAc3jB,KAAK3U,MACU,IAAzBs4B,GAAc/vB,QAAgB8vB,IAChCA,GAAcE,IAEhBv4B,KAAKu2B,GAAG2B,iBAAkB,EACnBl4B,IACT,CAQA,SAASq2B,KACT,CACA,IAAIoC,GAAqB,CAAC,EAC1B,SAASC,GAAoBC,EAAOC,EAAYC,GAC9C,QAAwC,IAApCF,EAAMC,GAAYE,cAA0B,CAC9C,IAAIC,EAAWJ,EAAMC,GACrBD,EAAMC,GAAc,WAIlB,OAHKD,EAAMC,GAAYE,cAAc92B,eAAe+X,UAAUxR,SAC5DutB,GAAkB,aAAe+C,EAAY,iDAAmD9e,UAAUxR,OAAS,uBAAyBowB,EAAMC,GAAYE,cAAgB,MAEzKH,EAAMC,GAAYE,cAAc/e,UAAUxR,QAAQlE,MAAMrE,KAAM+Z,UACvE,EACA4e,EAAMC,GAAYE,cAAgB,GAClCH,EAAMC,GAAYE,cAAcC,EAASC,UAAYD,CACvD,CACF,CACA,SAASE,GAAmBva,EAAOpc,EAAO42B,GACpC/yB,EAAOnE,eAAe0c,UACH,IAAjBwa,QAA2D,IAAhC/yB,EAAOuY,GAAOoa,oBAA0E,IAA9C3yB,EAAOuY,GAAOoa,cAAcI,KACnGpD,GAAkB,gCAAkCpX,EAAQ,WAE9Dga,GAAoBvyB,EAAQuY,EAAOA,GAC/BvY,EAAOnE,eAAek3B,IACxBpD,GAAkB,uFAAyFoD,EAAe,MAE5H/yB,EAAOuY,GAAOoa,cAAcI,GAAgB52B,IAE5C6D,EAAOuY,GAASpc,OACK,IAAjB42B,IACF/yB,EAAOuY,GAAOwa,aAAeA,GAGnC,CACA,SAASC,GAAgBza,EAAO0M,EAAagO,EAAmB9B,EAAeT,EAAWwC,EAAevC,EAAQwC,GAC/Gt5B,KAAK8hB,KAAOpD,EACZ1e,KAAKorB,YAAcA,EACnBprB,KAAKo5B,kBAAoBA,EACzBp5B,KAAKs3B,cAAgBA,EACrBt3B,KAAK62B,UAAYA,EACjB72B,KAAKq5B,cAAgBA,EACrBr5B,KAAK82B,OAASA,EACd92B,KAAKs5B,SAAWA,EAChBt5B,KAAKu5B,qBAAuB,EAC9B,CACA,SAASC,GAAc5sB,EAAK6sB,EAAUC,GACpC,KAAOD,IAAaC,GACbD,EAAS3C,QACZhB,GAAkB,gCAAkC4D,EAAa5X,KAAO,wBAA0B2X,EAAS3X,MAE7GlV,EAAM6sB,EAAS3C,OAAOlqB,GACtB6sB,EAAWA,EAAS5C,UAEtB,OAAOjqB,CACT,CACA,SAAS+sB,GAAoCnG,EAAa0D,GACxD,GAAe,OAAXA,EAIF,OAHIl3B,KAAK45B,aACP9D,GAAkB,uBAAyB91B,KAAK8hB,MAE3C,EAEJoV,EAAOX,IACVT,GAAkB,gBAAkB+D,GAAa3C,GAAU,UAAYl3B,KAAK8hB,MAEzEoV,EAAOX,GAAG3pB,KACbkpB,GAAkB,mDAAqD91B,KAAK8hB,MAE9E,IAAIgY,EAAc5C,EAAOX,GAAGC,QAAQC,gBAEpC,OADU+C,GAActC,EAAOX,GAAG3pB,IAAKktB,EAAa95B,KAAKy2B,gBAE3D,CACA,SAASsD,GAAyBvG,EAAa0D,GAC7C,IAAItqB,EACJ,GAAe,OAAXsqB,EAIF,OAHIl3B,KAAK45B,aACP9D,GAAkB,uBAAyB91B,KAAK8hB,MAE9C9hB,KAAKg6B,gBACPptB,EAAM5M,KAAKi6B,iBACS,OAAhBzG,GACFA,EAAY7e,KAAK3U,KAAKs3B,cAAe1qB,GAEhCA,GAEA,EAGNsqB,EAAOX,IACVT,GAAkB,gBAAkB+D,GAAa3C,GAAU,UAAYl3B,KAAK8hB,MAEzEoV,EAAOX,GAAG3pB,KACbkpB,GAAkB,mDAAqD91B,KAAK8hB,OAEzE9hB,KAAKk6B,SAAWhD,EAAOX,GAAGC,QAAQ0D,SACrCpE,GAAkB,oCAAsCoB,EAAOX,GAAGc,aAAeH,EAAOX,GAAGc,aAAavV,KAAOoV,EAAOX,GAAGC,QAAQ1U,MAAQ,sBAAwB9hB,KAAK8hB,MAExK,IAAIgY,EAAc5C,EAAOX,GAAGC,QAAQC,gBAEpC,GADA7pB,EAAM4sB,GAActC,EAAOX,GAAG3pB,IAAKktB,EAAa95B,KAAKy2B,iBACjDz2B,KAAKg6B,eAIP,YAH2B,IAAvB9C,EAAOX,GAAGa,UACZtB,GAAkB,mDAEZ91B,KAAKm6B,eACX,KAAK,EACCjD,EAAOX,GAAGc,eAAiBr3B,KAC7B4M,EAAMsqB,EAAOX,GAAGa,SAEhBtB,GAAkB,oCAAsCoB,EAAOX,GAAGc,aAAeH,EAAOX,GAAGc,aAAavV,KAAOoV,EAAOX,GAAGC,QAAQ1U,MAAQ,sBAAwB9hB,KAAK8hB,MAExK,MACF,KAAK,EACHlV,EAAMsqB,EAAOX,GAAGa,SAChB,MACF,KAAK,EACH,GAAIF,EAAOX,GAAGc,eAAiBr3B,KAC7B4M,EAAMsqB,EAAOX,GAAGa,aACX,CACL,IAAIgD,EAAelD,EAAc,QACjCtqB,EAAM5M,KAAKq6B,SAASztB,EAAK0tB,IAAiB,WACxCF,EAAqB,QACvB,KACoB,OAAhB5G,GACFA,EAAY7e,KAAK3U,KAAKs3B,cAAe1qB,EAEzC,CACA,MACF,QACEkpB,GAAkB,+BAGxB,OAAOlpB,CACT,CACA,SAAS2tB,GAAuC/G,EAAa0D,GAC3D,GAAe,OAAXA,EAIF,OAHIl3B,KAAK45B,aACP9D,GAAkB,uBAAyB91B,KAAK8hB,MAE3C,EAEJoV,EAAOX,IACVT,GAAkB,gBAAkB+D,GAAa3C,GAAU,UAAYl3B,KAAK8hB,MAEzEoV,EAAOX,GAAG3pB,KACbkpB,GAAkB,mDAAqD91B,KAAK8hB,MAE1EoV,EAAOX,GAAGC,QAAQ0D,SACpBpE,GAAkB,mCAAqCoB,EAAOX,GAAGC,QAAQ1U,KAAO,sBAAwB9hB,KAAK8hB,MAE/G,IAAIgY,EAAc5C,EAAOX,GAAGC,QAAQC,gBAEpC,OADU+C,GAActC,EAAOX,GAAG3pB,IAAKktB,EAAa95B,KAAKy2B,gBAE3D,CACA,SAAS+D,GAA6B5tB,GAIpC,OAHI5M,KAAKy6B,gBACP7tB,EAAM5M,KAAKy6B,cAAc7tB,IAEpBA,CACT,CACA,SAAS8tB,GAA6B9tB,GAChC5M,KAAKs3B,eACPt3B,KAAKs3B,cAAc1qB,EAEvB,CACA,SAAS+tB,GAA+BzD,GACvB,OAAXA,GACFA,EAAe,QAEnB,CACA,SAAS0D,GAAgBhuB,EAAK6sB,EAAUC,GACtC,GAAID,IAAaC,EACf,OAAO9sB,EAET,QAA+B,IAA3B8sB,EAAa7C,UACf,OAAO,KAET,IAAIgE,EAAKD,GAAgBhuB,EAAK6sB,EAAUC,EAAa7C,WACrD,OAAW,OAAPgE,EACK,KAEFnB,EAAaJ,SAASuB,EAC/B,CACA,SAASC,KACP,OAAOp5B,OAAO0B,KAAK23B,IAAqBxyB,MAC1C,CACA,SAASyyB,KACP,IAAIH,EAAK,GACT,IAAK,IAAII,KAAKF,GACRA,GAAoB/4B,eAAei5B,IACrCJ,EAAGlmB,KAAKomB,GAAoBE,IAGhC,OAAOJ,CACT,CACA,SAASK,GAAiB7M,GACxBgK,GAAgBhK,EACZiK,GAAc/vB,QAAU8vB,IAC1BA,GAAcE,GAElB,CAOA,IAAIwC,GAAsB,CAAC,EAW3B,SAASI,GAAqBC,EAAQxuB,GAEpC,OADAA,EAXF,SAA0BwuB,EAAQxuB,GAIhC,SAHY,IAARA,GACFkpB,GAAkB,+BAEbsF,EAAOvE,WACZjqB,EAAMwuB,EAAOtE,OAAOlqB,GACpBwuB,EAASA,EAAOvE,UAElB,OAAOjqB,CACT,CAEQyuB,CAAiBD,EAAQxuB,GACxBmuB,GAAoBnuB,EAC7B,CACA,SAAS0uB,GAAgBv5B,EAAWw5B,GAUlC,OATKA,EAAO/E,SAAY+E,EAAO3uB,KAC7B+nB,GAAmB,8CAEG4G,EAAOlE,iBACXkE,EAAOnE,UAEzBzC,GAAmB,oDAErB4G,EAAO3pB,MAAQ,CAAEtP,MAAO,GACjBk1B,GAAgB91B,OAAOmmB,OAAO9lB,EAAW,CAAEw0B,GAAI,CAAEj0B,MAAOi5B,KACjE,CACA,SAASC,GAA+B5uB,GACtC,IAAI6uB,EAAaz7B,KAAK07B,WAAW9uB,GACjC,IAAK6uB,EAEH,OADAz7B,KAAKwX,WAAW5K,GACT,KAET,IAAIopB,EAAqBmF,GAAqBn7B,KAAKy2B,gBAAiBgF,GACpE,QAA2B,IAAvBzF,EAA+B,CACjC,GAA0C,IAAtCA,EAAmBO,GAAG3kB,MAAMtP,MAG9B,OAFA0zB,EAAmBO,GAAG3pB,IAAM6uB,EAC5BzF,EAAmBO,GAAGa,SAAWxqB,EAC1BopB,EAA0B,QAEjC,IAAI6E,EAAK7E,EAA0B,QAEnC,OADAh2B,KAAKwX,WAAW5K,GACTiuB,CAEX,CACA,SAASc,IACP,OAAI37B,KAAKg6B,eACAsB,GAAgBt7B,KAAKy2B,gBAAgB2C,kBAAmB,CAAE5C,QAASx2B,KAAK47B,YAAahvB,IAAK6uB,EAAYpE,aAAcr3B,KAAMo3B,SAAUxqB,IAEpI0uB,GAAgBt7B,KAAKy2B,gBAAgB2C,kBAAmB,CAAE5C,QAASx2B,KAAM4M,OAEpF,CACA,IAKIivB,EALAC,EAAa97B,KAAKy2B,gBAAgB4C,cAAcoC,GAChDM,EAA0BtD,GAAmBqD,GACjD,IAAKC,EACH,OAAOJ,EAAkB74B,KAAK9C,MAI9B67B,EADE77B,KAAKk6B,QACE6B,EAAwBC,iBAExBD,EAAwBE,YAEnC,IAAIC,EAAKtB,GAAgBa,EAAYz7B,KAAKy2B,gBAAiBoF,EAAOpF,iBAClE,OAAW,OAAPyF,EACKP,EAAkB74B,KAAK9C,MAE5BA,KAAKg6B,eACAsB,GAAgBO,EAAOpF,gBAAgB2C,kBAAmB,CAAE5C,QAASqF,EAAQjvB,IAAKsvB,EAAI7E,aAAcr3B,KAAMo3B,SAAUxqB,IAEpH0uB,GAAgBO,EAAOpF,gBAAgB2C,kBAAmB,CAAE5C,QAASqF,EAAQjvB,IAAKsvB,GAE7F,CASA,SAASC,GAAkBzd,EAAO+X,EAAiBmD,EAAaM,EAASF,EAAgB4B,EAAazB,EAAeM,EAAeR,EAAgBI,EAAU/C,GAC5Jt3B,KAAK8hB,KAAOpD,EACZ1e,KAAKy2B,gBAAkBA,EACvBz2B,KAAK45B,YAAcA,EACnB55B,KAAKk6B,QAAUA,EACfl6B,KAAKg6B,eAAiBA,EACtBh6B,KAAK47B,YAAcA,EACnB57B,KAAKm6B,cAAgBA,EACrBn6B,KAAKy6B,cAAgBA,EACrBz6B,KAAKi6B,eAAiBA,EACtBj6B,KAAKq6B,SAAWA,EAChBr6B,KAAKs3B,cAAgBA,EAChB0C,QAAgD,IAA9BvD,EAAgBI,UASrC72B,KAAiB,WAAI+5B,GARjBG,GACFl6B,KAAiB,WAAI25B,GACrB35B,KAAKo8B,mBAAqB,OAE1Bp8B,KAAiB,WAAIu6B,GACrBv6B,KAAKo8B,mBAAqB,KAKhC,CACA,SAASC,GAAoB3d,EAAOpc,EAAO42B,GACpC/yB,EAAOnE,eAAe0c,IACzBiW,GAAmB,4CAEe,IAAhCxuB,EAAOuY,GAAOoa,oBAA6C,IAAjBI,EAC5C/yB,EAAOuY,GAAOoa,cAAcI,GAAgB52B,GAE5C6D,EAAOuY,GAASpc,EAChB6D,EAAOuY,GAAOsa,SAAWE,EAE7B,CAKA,SAASoD,GAAQC,EAAK3vB,EAAK4vB,GACzB,OAAID,EAAIjf,SAAS,KALnB,SAAuBif,EAAK3vB,EAAK4vB,GAC/B,IAAItI,EAAI/tB,EAAO,WAAao2B,GAC5B,OAAOC,GAAQA,EAAKj0B,OAAS2rB,EAAE7vB,MAAM,KAAM,CAACuI,GAAKwO,OAAOohB,IAAStI,EAAEpxB,KAAK,KAAM8J,EAChF,CAGW6vB,CAAcF,EAAK3vB,EAAK4vB,GAE1B5tB,GAAU6C,IAAI7E,GAAKvI,MAAM,KAAMm4B,EACxC,CAWA,SAASE,GAAwBC,EAAWC,GAQ1C,IAAIC,GAPJF,EAAYhH,GAAiBgH,IAEbrf,SAAS,KAb3B,SAAsBif,EAAK3vB,GACzB,IAAIkwB,EAAW,GACf,OAAO,WACLA,EAASv0B,OAASwR,UAAUxR,OAC5B,IAAK,IAAI7H,EAAI,EAAGA,EAAIqZ,UAAUxR,OAAQ7H,IACpCo8B,EAASp8B,GAAKqZ,UAAUrZ,GAE1B,OAAO47B,GAAQC,EAAK3vB,EAAKkwB,EAC3B,CACF,CAKaC,CAAaJ,EAAWC,GAE1BhuB,GAAU6C,IAAImrB,GAMvB,MAHkB,oBAAPC,GACT/G,GAAkB,2CAA6C6G,EAAY,KAAOC,GAE7EC,CACT,CACA,IAAIG,QAAmB,EACvB,SAASC,GAAYr8B,GACnB,IAAIgM,EAAMswB,GAAet8B,GACrBi6B,EAAKlF,GAAiB/oB,GAE1B,OADA2H,GAAM3H,GACCiuB,CACT,CACA,SAASsC,GAAsB9mB,EAAS+mB,GACtC,IAAIC,EAAe,GACfC,EAAO,CAAC,EAgBZ,MADAF,EAAM3V,SAdN,SAAS8V,EAAM38B,GACT08B,EAAK18B,IAGLizB,GAAgBjzB,KAGhBkzB,GAAiBlzB,GACnBkzB,GAAiBlzB,GAAM6mB,QAAQ8V,IAGjCF,EAAa1oB,KAAK/T,GAClB08B,EAAK18B,IAAQ,GACf,IAEM,IAAIo8B,GAAiB3mB,EAAU,KAAOgnB,EAAaG,IAAIP,IAAa3jB,KAAK,CAAC,OAClF,CAiDA,SAASmkB,GAAoB7rB,EAAO8rB,GAElC,IADA,IAAIC,EAAQ,GACHj9B,EAAI,EAAGA,EAAIkR,EAAOlR,IACzBi9B,EAAMhpB,KAAK/O,GAAQ83B,GAAgB,GAAKh9B,IAAM,IAEhD,OAAOi9B,CACT,CAiDA,SAASC,GAAqB/E,EAAWgF,EAAUC,EAAWC,EAAgBC,GAC5E,IAAIhF,EAAW6E,EAASt1B,OACpBywB,EAAW,GACblD,GAAkB,kFAIpB,IAFA,IAAImI,EAAoC,OAAhBJ,EAAS,IAA6B,OAAdC,EAC5CI,GAAuB,EAClBx9B,EAAI,EAAGA,EAAIm9B,EAASt1B,SAAU7H,EACrC,GAAoB,OAAhBm9B,EAASn9B,SAAkD,IAAnCm9B,EAASn9B,GAAG07B,mBAA+B,CACrE8B,GAAuB,EACvB,KACF,CAEF,IAAIC,EAA+B,SAArBN,EAAS,GAAG/b,KACtBsc,EAAW,GACXC,EAAgB,GACpB,IAAS39B,EAAI,EAAGA,EAAIs4B,EAAW,IAAKt4B,EAClC09B,IAAmB,IAAN19B,EAAU,KAAO,IAAM,MAAQA,EAC5C29B,IAAwB,IAAN39B,EAAU,KAAO,IAAM,MAAQA,EAAI,QAEvD,IAAI49B,EAAgB,mBAAqBrK,GAAsB4E,GAAa,IAAMuF,EAAW,kCAAoCpF,EAAW,GAAK,oCAAsCH,EAAY,8DAAgEG,EAAW,GAAK,iBAC/QkF,IACFI,GAAiB,2BAEnB,IAAIC,EAAYL,EAAuB,cAAgB,OACnDM,EAAQ,CAAC,oBAAqB,UAAW,KAAM,iBAAkB,UAAW,cAC5EC,EAAQ,CAAC3I,GAAmBiI,EAAgBC,EAAezK,GAAgBsK,EAAS,GAAIA,EAAS,IACjGI,IACFK,GAAiB,yCAA2CC,EAAY,cAE1E,IAAS79B,EAAI,EAAGA,EAAIs4B,EAAW,IAAKt4B,EAClC49B,GAAiB,UAAY59B,EAAI,kBAAoBA,EAAI,eAAiB69B,EAAY,QAAU79B,EAAI,SAAWm9B,EAASn9B,EAAI,GAAGohB,KAAO,KACtI0c,EAAM7pB,KAAK,UAAYjU,GACvB+9B,EAAM9pB,KAAKkpB,EAASn9B,EAAI,IAM1B,GAJIu9B,IACFI,EAAgB,aAAeA,EAAc91B,OAAS,EAAI,KAAO,IAAM81B,GAEzEC,IAAkBH,EAAU,YAAc,IAAM,cAAgBE,EAAc91B,OAAS,EAAI,KAAO,IAAM81B,EAAgB,OACpHH,EACFI,GAAiB,sCAEjB,IAAS59B,EAAIu9B,EAAoB,EAAI,EAAGv9B,EAAIm9B,EAASt1B,SAAU7H,EAAG,CAChE,IAAIg+B,EAAkB,IAANh+B,EAAU,YAAc,OAASA,EAAI,GAAK,QACnB,OAAnCm9B,EAASn9B,GAAG07B,qBACdkC,GAAiBI,EAAY,SAAWA,EAAY,SAAWb,EAASn9B,GAAGohB,KAAO,KAClF0c,EAAM7pB,KAAK+pB,EAAY,SACvBD,EAAM9pB,KAAKkpB,EAASn9B,GAAG07B,oBAE3B,CASF,OAPI+B,IACFG,GAAiB,sDAGnBA,GAAiB,MACjBE,EAAM7pB,KAAK2pB,GAnEb,SAAclT,EAAauT,GACzB,KAAMvT,aAAuBiJ,UAC3B,MAAM,IAAI9Z,UAAU,4CAA8C6Q,EAAc,4BAElF,IAAIwT,EAAQzK,GAAoB/I,EAAYtJ,MAAQ,uBAAuB,WAC3E,IACA8c,EAAM78B,UAAYqpB,EAAYrpB,UAC9B,IAAIK,EAAM,IAAIw8B,EACV1kB,EAAIkR,EAAY/mB,MAAMjC,EAAKu8B,GAC/B,OAAOzkB,aAAaxY,OAASwY,EAAI9X,CACnC,CA0DwBy8B,CAAKxK,SAAUmK,GAAOn6B,MAAM,KAAMo6B,EAE1D,CAwCA,IAAIK,GAAkB,GAClBC,GAAqB,CAAC,CAAC,EAAG,CAAEz8B,WAAO,GAAU,CAAEA,MAAO,MAAQ,CAAEA,OAAO,GAAQ,CAAEA,OAAO,IAC5F,SAAS08B,GAAe9H,GAClBA,EAAS,GAA+C,MAAxC6H,GAAmB7H,GAAQvf,WAC7ConB,GAAmB7H,QAAU,EAC7B4H,GAAgBnqB,KAAKuiB,GAEzB,CACA,SAAS+H,KAEP,IADA,IAAIrtB,EAAQ,EACHlR,EAAI,EAAGA,EAAIq+B,GAAmBx2B,SAAU7H,OACjB,IAA1Bq+B,GAAmBr+B,MACnBkR,EAGN,OAAOA,CACT,CACA,SAASstB,KACP,IAAK,IAAIx+B,EAAI,EAAGA,EAAIq+B,GAAmBx2B,SAAU7H,EAC/C,QAA8B,IAA1Bq+B,GAAmBr+B,GACrB,OAAOq+B,GAAmBr+B,GAG9B,OAAO,IACT,CAKA,SAAS45B,GAAiBh4B,GACxB,OAAQA,GACN,UAAK,EACH,OAAO,EAET,KAAK,KACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,QACE,IAAI40B,EAAS4H,GAAgBv2B,OAASu2B,GAAgBxrB,MAAQyrB,GAAmBx2B,OAEjF,OADAw2B,GAAmB7H,GAAU,CAAEvf,SAAU,EAAGrV,SACrC40B,EAGb,CAWA,SAASiI,GAAyBzgB,EAAOpN,EAAO8tB,GAC9C,OAAQ9tB,GACN,KAAK,EACH,OAAO,SAASqiB,GACd,IAAI7nB,EAAOszB,EAASh6B,EAAQE,EAC5B,OAAOtF,KAAmB,aAAE8L,EAAK6nB,IAAY,GAC/C,EACF,KAAK,EACH,OAAO,SAASA,GACd,IAAI7nB,EAAOszB,EAAS55B,EAASE,EAC7B,OAAO1F,KAAmB,aAAE8L,EAAK6nB,IAAY,GAC/C,EACF,KAAK,EACH,OAAO,SAASA,GACd,IAAI7nB,EAAOszB,EAASx5B,EAASE,EAC7B,OAAO9F,KAAmB,aAAE8L,EAAK6nB,IAAY,GAC/C,EACF,QACE,MAAM,IAAIpZ,UAAU,yBAA2BmE,GAErD,CAcA,SAAS2gB,GAAsBtJ,EAAS8C,GACtC,IAAIyG,EAAOzL,GAAgBkC,GAI3B,YAHa,IAATuJ,GACFxJ,GAAkB+C,EAAY,qBAAuBoE,GAAYlH,IAE5DuJ,CACT,CAUA,SAASzF,GAAa0F,GACpB,GAAU,OAANA,EACF,MAAO,OAET,IAAIvrB,SAAWurB,EACf,MAAU,WAANvrB,GAAwB,UAANA,GAAuB,aAANA,EAC9BurB,EAAEliB,WAEF,GAAKkiB,CAEhB,CACA,SAASC,GAA0B9gB,EAAOpN,GACxC,OAAQA,GACN,KAAK,EACH,OAAO,SAASqiB,GACd,OAAO3zB,KAAmB,aAAEuN,EAAQomB,IAAY,GAClD,EACF,KAAK,EACH,OAAO,SAASA,GACd,OAAO3zB,KAAmB,aAAEgG,EAAQ2tB,IAAY,GAClD,EACF,QACE,MAAM,IAAIpZ,UAAU,uBAAyBmE,GAEnD,CA0BA,SAAS+gB,GAA4B/gB,EAAOpN,EAAO8tB,GACjD,OAAQ9tB,GACN,KAAK,EACH,OAAO8tB,EAAS,SAA2BzL,GACzC,OAAOvuB,EAAMuuB,IAAY,EAC3B,EAAI,SAA2BA,GAC7B,OAAOruB,EAAOquB,IAAY,EAC5B,EACF,KAAK,EACH,OAAOyL,EAAS,SAA4BzL,GAC1C,OAAOnuB,EAAOmuB,IAAY,EAC5B,EAAI,SAA4BA,GAC9B,OAAOjuB,EAAQiuB,IAAY,EAC7B,EACF,KAAK,EACH,OAAOyL,EAAS,SAA4BzL,GAC1C,OAAO/tB,EAAO+tB,IAAY,EAC5B,EAAI,SAA4BA,GAC9B,OAAO7tB,EAAQ6tB,IAAY,EAC7B,EACF,QACE,MAAM,IAAIpZ,UAAU,yBAA2BmE,GAErD,CAqMA,SAASghB,GAAcxI,GAIrB,OAHKA,GACHpB,GAAkB,oCAAsCoB,GAEnD6H,GAAmB7H,GAAQ50B,KACpC,CA4BA,IAwEI4P,GAxEAytB,GAAgB,CAAC,EACrB,SAASC,GAAkB1hB,GACzB,IAAI2hB,EAASF,GAAczhB,GAC3B,YAAe,IAAX2hB,EACKlK,GAAiBzX,GAEjB2hB,CAEX,CACA,SAASC,KACP,MAA0B,kBAAfC,WACFA,WAGA1L,SACL,cAFG,EAGT,CA0DEniB,GADE/K,EACoB,WACpB,IAAI6M,EAAI5M,EAAgB,SACxB,OAAc,IAAP4M,EAAE,GAAWA,EAAE,GAAK,GAC7B,EAEsB,WACpB,OAAO/J,YAAY0M,KACrB,EACF,IAAIK,IAAmC,EAkBvC,SAASypB,GAA0B5iB,GACjC,IAGE,OAFA5Y,EAAWy7B,KAAK7iB,EAAO3Y,EAAO6J,WAAa,QAAU,IACrD5J,GAA2BF,EAAWC,QAC/B,CACT,CAAE,MAAOlB,GACT,CACF,CAmBA,IAAI6kC,GAAM,CAAC,EAIX,SAASC,KACP,IAAKA,GAAcC,QAAS,CAC1B,IACIC,EAAM,CAAE,KAAQ,WAAY,QAAW,WAAY,KAAQ,IAAK,IAAO,IAAK,KAAQ,iBAAkB,MADzE,kBAAdv2B,WAA0BA,UAAUw2B,WAAax2B,UAAUw2B,UAAU,IAAM,KAAKzgC,QAAQ,IAAK,KAAO,SACC,EALnH7B,GAAe,kBAMpB,IAAK,IAAIvF,KAAKynC,QACG,IAAXA,GAAIznC,UACC4nC,EAAI5nC,GAEX4nC,EAAI5nC,GAAKynC,GAAIznC,GAEjB,IAAI2nC,EAAU,GACd,IAAK,IAAI3nC,KAAK4nC,EACZD,EAAQp0B,KAAKvT,EAAI,IAAM4nC,EAAI5nC,IAE7B0nC,GAAcC,QAAUA,CAC1B,CACA,OAAOD,GAAcC,OACvB,CA2FA,SAASiC,GAAaC,GACpB,OAAOA,EAAO,IAAM,IAAMA,EAAO,MAAQ,GAAKA,EAAO,MAAQ,EAC/D,CACA,SAASC,GAAWvN,EAAOsC,GAEzB,IADA,IAAIkL,EAAM,EACDzqC,EAAI,EAAGA,GAAKu/B,EAAOkL,GAAOxN,EAAMj9B,MAEzC,OAAOyqC,CACT,CACA,IAAIC,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjEC,GAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxE,SAASC,GAAUC,EAAMC,GAEvB,IADA,IAAIC,EAAU,IAAI7uB,KAAK2uB,EAAK9Z,WACrB+Z,EAAO,GAAG,CACf,IAAIE,EAAOV,GAAaS,EAAQE,eAC5BC,EAAeH,EAAQI,WACvBC,GAAsBJ,EAAON,GAAoBC,IAAsBO,GAC3E,KAAIJ,EAAOM,EAAqBL,EAAQM,WAWtC,OADAN,EAAQO,QAAQP,EAAQM,UAAYP,GAC7BC,EAVPD,GAAQM,EAAqBL,EAAQM,UAAY,EACjDN,EAAQO,QAAQ,GACZJ,EAAe,GACjBH,EAAQQ,SAASL,EAAe,IAEhCH,EAAQQ,SAAS,GACjBR,EAAQS,YAAYT,EAAQE,cAAgB,GAMlD,CACA,OAAOF,CACT,CACA,SAASU,GAAU5qC,EAAG6qC,EAASC,EAAQC,GACrC,IAAIC,EAAU3mC,EAAO0mC,EAAK,KAAO,GAC7Bf,EAAO,CAAEiB,OAAQ5mC,EAAO0mC,IAAO,GAAIG,OAAQ7mC,EAAO0mC,EAAK,IAAM,GAAII,QAAS9mC,EAAO0mC,EAAK,IAAM,GAAIK,QAAS/mC,EAAO0mC,EAAK,KAAO,GAAIM,OAAQhnC,EAAO0mC,EAAK,KAAO,GAAIO,QAASjnC,EAAO0mC,EAAK,KAAO,GAAIQ,QAASlnC,EAAO0mC,EAAK,KAAO,GAAIS,QAASnnC,EAAO0mC,EAAK,KAAO,GAAIU,SAAUpnC,EAAO0mC,EAAK,KAAO,GAAIW,UAAWrnC,EAAO0mC,EAAK,KAAO,GAAIC,QAASA,EAAU5/B,EAAa4/B,GAAW,IAC7WW,EAAUvgC,EAAa0/B,GACvBc,EAAoB,CAAE,KAAM,uBAAwB,KAAM,WAAY,KAAM,WAAY,KAAM,KAAM,KAAM,cAAe,KAAM,QAAS,KAAM,WAAY,KAAM,WAAY,KAAM,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,WAAY,MAAO,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAC/b,IAAK,IAAIC,KAAQD,EACfD,EAAUA,EAAQ1kC,QAAQ,IAAI6kC,OAAOD,EAAM,KAAMD,EAAkBC,IAErE,IAAIE,EAAW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC9EC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC5H,SAASC,EAAiBlrC,EAAOmrC,EAAQC,GAEvC,IADA,IAAIthC,EAAuB,kBAAV9J,EAAqBA,EAAM+a,WAAa/a,GAAS,GAC3D8J,EAAI7D,OAASklC,GAClBrhC,EAAMshC,EAAU,GAAKthC,EAEvB,OAAOA,CACT,CACA,SAASuhC,EAAarrC,EAAOmrC,GAC3B,OAAOD,EAAiBlrC,EAAOmrC,EAAQ,IACzC,CACA,SAASG,EAAaC,EAAOC,GAC3B,SAASC,EAAIzrC,GACX,OAAOA,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAI,CAC1C,CACA,IAAI0rC,EAMJ,OALmE,KAA9DA,EAAUD,EAAIF,EAAMlC,cAAgBmC,EAAMnC,iBACgB,KAAxDqC,EAAUD,EAAIF,EAAMhC,WAAaiC,EAAMjC,eAC1CmC,EAAUD,EAAIF,EAAM9B,UAAY+B,EAAM/B,YAGnCiC,CACT,CACA,SAASC,EAAsBC,GAC7B,OAAQA,EAAUC,UAChB,KAAK,EACH,OAAO,IAAIvxB,KAAKsxB,EAAUvC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAOuC,EACT,KAAK,EACH,OAAO,IAAItxB,KAAKsxB,EAAUvC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAO,IAAI/uB,KAAKsxB,EAAUvC,cAAgB,EAAG,GAAI,IAEvD,CACA,SAASyC,EAAiBN,GACxB,IAAIO,EAAW/C,GAAU,IAAI1uB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACjEuB,EAAoB,IAAI1xB,KAAKyxB,EAAS1C,cAAe,EAAG,GACxD4C,EAAoB,IAAI3xB,KAAKyxB,EAAS1C,cAAgB,EAAG,EAAG,GAC5D6C,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GACnD,OAAIX,EAAaY,EAAwBH,IAAa,EAChDT,EAAaa,EAAwBJ,IAAa,EAC7CA,EAAS1C,cAAgB,EAEzB0C,EAAS1C,cAGX0C,EAAS1C,cAAgB,CAEpC,CACA,IAAI+C,EAAoB,CAAE,KAAM,SAASZ,GACvC,OAAOR,EAASQ,EAAMhB,SAAS6B,UAAU,EAAG,EAC9C,EAAG,KAAM,SAASb,GAChB,OAAOR,EAASQ,EAAMhB,QACxB,EAAG,KAAM,SAASgB,GAChB,OAAOP,EAAOO,EAAMlB,QAAQ+B,UAAU,EAAG,EAC3C,EAAG,KAAM,SAASb,GAChB,OAAOP,EAAOO,EAAMlB,OACtB,EAAG,KAAM,SAASkB,GAEhB,OAAOH,GADIG,EAAMjB,QAAU,MACA,IAAM,EAAG,EACtC,EAAG,KAAM,SAASiB,GAChB,OAAOH,EAAaG,EAAMnB,QAAS,EACrC,EAAG,KAAM,SAASmB,GAChB,OAAON,EAAiBM,EAAMnB,QAAS,EAAG,IAC5C,EAAG,KAAM,SAASmB,GAChB,OAAOM,EAAiBN,GAAOzwB,WAAWsxB,UAAU,EACtD,EAAG,KAAM,SAASb,GAChB,OAAOM,EAAiBN,EAC1B,EAAG,KAAM,SAASA,GAChB,OAAOH,EAAaG,EAAMpB,QAAS,EACrC,EAAG,KAAM,SAASoB,GAChB,IAAIc,EAAad,EAAMpB,QAKvB,OAJkB,GAAdkC,EACFA,EAAa,GACNA,EAAa,KACpBA,GAAc,IACTjB,EAAaiB,EAAY,EAClC,EAAG,KAAM,SAASd,GAChB,OAAOH,EAAaG,EAAMnB,QAAUzB,GAAWF,GAAa8C,EAAMjB,QAAU,MAAQzB,GAAoBC,GAAsByC,EAAMlB,OAAS,GAAI,EACnJ,EAAG,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMlB,OAAS,EAAG,EACxC,EAAG,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMrB,OAAQ,EACpC,EAAG,KAAM,WACP,MAAO,IACT,EAAG,KAAM,SAASqB,GAChB,OAAIA,EAAMpB,SAAW,GAAKoB,EAAMpB,QAAU,GACjC,KAEA,IAEX,EAAG,KAAM,SAASoB,GAChB,OAAOH,EAAaG,EAAMtB,OAAQ,EACpC,EAAG,KAAM,WACP,MAAO,IACT,EAAG,KAAM,SAASsB,GAChB,OAAOA,EAAMhB,SAAW,CAC1B,EAAG,KAAM,SAASgB,GAChB,IAAIe,EAAW,IAAIjyB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GAC7CiC,EAAoC,IAAtBD,EAASV,SAAiBU,EAAWvD,GAAUuD,EAAU,EAAIA,EAASV,UACpFY,EAAU,IAAInyB,KAAKkxB,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAakB,EAAaC,GAAW,EAAG,CAC1C,IAAIC,EAA6B9D,GAAWF,GAAa+D,EAAQpD,eAAiBP,GAAoBC,GAAsB0D,EAAQlD,WAAa,GAAK,GAElJL,EAD6B,GAAKsD,EAAY/C,UACViD,EAA6BD,EAAQhD,UAC7E,OAAO4B,EAAa3yB,KAAK+C,KAAKytB,EAAO,GAAI,EAC3C,CACA,OAA+C,IAAxCoC,EAAakB,EAAaD,GAAkB,KAAO,IAC5D,EAAG,KAAM,SAASf,GAChB,IAWImB,EAXAX,EAAoB,IAAI1xB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GACtD0B,EAAoB,IAAI3xB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GACtD2B,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GAC/CQ,EAAUzD,GAAU,IAAI1uB,KAAKkxB,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACpE,OAAIa,EAAamB,EAASP,GAA0B,EAC3C,KAELZ,EAAaa,EAAwBM,IAAY,EAC5C,MAIPE,EADET,EAAuB7C,cAAgBmC,EAAMjB,QAAU,KACxCiB,EAAMf,QAAU,GAAKyB,EAAuBzC,UAE5C+B,EAAMf,QAAU,EAAIyB,EAAuBzC,UAEvD4B,EAAa3yB,KAAK+C,KAAKkxB,EAAiB,GAAI,GACrD,EAAG,KAAM,SAASnB,GAChB,OAAOA,EAAMhB,OACf,EAAG,KAAM,SAASgB,GAChB,IAAIe,EAAW,IAAIjyB,KAAKkxB,EAAMjB,QAAS,EAAG,GACtCqC,EAAoC,IAAtBL,EAASV,SAAiBU,EAAWvD,GAAUuD,EAAgC,IAAtBA,EAASV,SAAiB,EAAI,EAAIU,EAASV,SAAW,GAC7HY,EAAU,IAAInyB,KAAKkxB,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAasB,EAAaH,GAAW,EAAG,CAC1C,IAAIC,EAA6B9D,GAAWF,GAAa+D,EAAQpD,eAAiBP,GAAoBC,GAAsB0D,EAAQlD,WAAa,GAAK,GAElJL,EAD6B,GAAK0D,EAAYnD,UACViD,EAA6BD,EAAQhD,UAC7E,OAAO4B,EAAa3yB,KAAK+C,KAAKytB,EAAO,GAAI,EAC3C,CACA,OAA+C,IAAxCoC,EAAasB,EAAaL,GAAkB,KAAO,IAC5D,EAAG,KAAM,SAASf,GAChB,OAAQA,EAAMjB,QAAU,MAAMxvB,WAAWsxB,UAAU,EACrD,EAAG,KAAM,SAASb,GAChB,OAAOA,EAAMjB,QAAU,IACzB,EAAG,KAAM,SAASiB,GAChB,IAAIqB,EAAMrB,EAAMb,UACZmC,EAAQD,GAAO,EAGnB,OADAA,GADAA,EAAMn0B,KAAKuW,IAAI4d,GAAO,IACV,GAAK,IAAMA,EAAM,IACrBC,EAAQ,IAAM,KAAO5iC,OAAO,OAAS2iC,GAAK1mC,OAAO,EAC3D,EAAG,KAAM,SAASqlC,GAChB,OAAOA,EAAMvB,OACf,EAAG,KAAM,WACP,MAAO,GACT,GACA,IAAK,IAAIa,KAAQsB,EACXxB,EAAQ5vB,SAAS8vB,KACnBF,EAAUA,EAAQ1kC,QAAQ,IAAI6kC,OAAOD,EAAM,KAAMsB,EAAkBtB,GAAM7B,KAG7E,IA3xI0B5N,EAAOrhB,EA2xI7B+yB,EAAQ5xB,GAAmByvB,GAAS,GACxC,OAAImC,EAAM9mC,OAAS6jC,EACV,GA7xIiBzO,EA+xIP0R,EA/xIc/yB,EA+xIP/a,EA9xI1B6D,EAAMub,IAAIgd,EAAOrhB,IAAY,GA+xItB+yB,EAAM9mC,OAAS,EACxB,CAIA,IAAIwc,GAAS,SAAStG,EAAQC,EAAOC,EAAM3C,GACpCyC,IACHA,EAASze,MAEXA,KAAKye,OAASA,EACdze,KAAKue,MAAQE,EAAOF,MACpBve,KAAKikB,QAAU,KACfjkB,KAAKO,GAAKgP,GAAGuT,YACb9iB,KAAK8hB,KAAOpD,EACZ1e,KAAK2e,KAAOA,EACZ3e,KAAK+e,SAAW,CAAC,EACjB/e,KAAK6b,WAAa,CAAC,EACnB7b,KAAKgc,KAAOA,CACd,EACIszB,GAAW,IACXC,GAAY,IA8BhB,SAAS9xB,GAAmBkyB,EAASrG,EAAa/gC,GAChD,IAAI+E,EAAM/E,EAAS,EAAIA,EAAS8E,EAAgBsiC,GAAW,EACvDC,EAAU,IAAI91B,MAAMxM,GACpBuiC,EAAkBhjC,EAAkB8iC,EAASC,EAAS,EAAGA,EAAQrnC,QAGrE,OAFI+gC,IACFsG,EAAQrnC,OAASsnC,GACZD,CACT,CApCAluC,OAAO0sB,iBAAiBrJ,GAAOhjB,UAAW,CAAEsa,KAAM,CAAE5K,IAAK,WACvD,OAAQzR,KAAK2e,KAAO2wB,MAAcA,EACpC,EAAG3uB,IAAK,SAASjD,GACfA,EAAM1d,KAAK2e,MAAQ2wB,GAAWtvC,KAAK2e,OAAQ,GAC7C,GAAK9B,MAAO,CAAEpL,IAAK,WACjB,OAAQzR,KAAK2e,KAAO4wB,MAAeA,EACrC,EAAG5uB,IAAK,SAASjD,GACfA,EAAM1d,KAAK2e,MAAQ4wB,GAAYvvC,KAAK2e,OAAQ,GAC9C,GAAKgO,SAAU,CAAElb,IAAK,WACpB,OAAOlC,GAAGyQ,MAAMhgB,KAAK2e,KACvB,GAAK+N,SAAU,CAAEjb,IAAK,WACpB,OAAOlC,GAAG8Q,SAASrgB,KAAK2e,KAC1B,KACApP,GAAGwV,OAASA,GACZxV,GAAG+b,aACHnlB,EAAsB,cAAIoJ,GAAG4c,WAC7BhmB,EAA0B,kBAAIoJ,GAAGid,eACjCrmB,EAA+B,uBAAIoJ,GAAG+e,oBACtCnoB,EAA0B,kBAAIoJ,GAAGqd,eACjCzmB,EAAwB,gBAAIoJ,GAAGsb,aAC/B1kB,EAAkB,UAAIoJ,GAAG6P,OACzBsV,GAAgBvuB,EAAsB,cAAImuB,GAAYj0B,MAAO,iBA7pD7D,WAEE,IADA,IAAImvC,EAAQ,IAAI11B,MAAM,KACbpZ,EAAI,EAAGA,EAAI,MAAOA,EACzB8uC,EAAM9uC,GAAK8L,OAAOC,aAAa/L,GAEjCg1B,GAAmB8Z,CACrB,CAwpDAC,GACA5Z,GAAe1vB,EAAqB,aAAImuB,GAAYj0B,MAAO,gBA59CzDg2B,GAAYt0B,UAAqB,UAAIo0B,GACrCE,GAAYt0B,UAAiB,MAAI81B,GACjCxB,GAAYt0B,UAAkB,OAAIo2B,GAClC9B,GAAYt0B,UAAqB,UAAIq2B,GACrC/B,GAAYt0B,UAAuB,YAAIy2B,GAyRvC2D,GAAkBp6B,UAAU25B,WAAalB,GACzC2B,GAAkBp6B,UAAUyV,WAAakjB,GACzCyB,GAAkBp6B,UAA0B,eAAI,EAChDo6B,GAAkBp6B,UAAgC,qBAAI2xB,GACtDyI,GAAkBp6B,UAAwB,aAAI44B,GAC9CwB,GAAkBp6B,UAAwB,aAAIy5B,GApF9Cr1B,EAAkC,0BAAI20B,GACtC30B,EAAkC,0BAAI60B,GACtC70B,EAA4B,oBAAIoyB,GAChCpyB,EAAyB,iBAAI+0B,GA+wC/B8B,GAAmB72B,EAAyB,iBAAImuB,GAAYj0B,MAAO,oBAx3BjE8F,EAA4B,oBAAI84B,GAChC94B,EAAwB,gBAAI+4B,GAi4B9B,IA+CI4Q,GA/CAC,GAAgB,CAAE,EAjmItB,SAAwB1kC,EAAWvD,EAAUkoC,EAAMz+B,GACjD3I,GAAM,qBAAuB+D,EAAatB,GAAa,SAAW,CAACvD,EAAW6E,EAAa7E,GAAY,mBAAoBkoC,EAAMz+B,EAAO5E,EAAa4E,GAAQ,oBAC/J,EA+lI2C,EA9lI3C,SAAmCsM,GACjC,OAAOhL,GAAQgL,EAAO,IAAM,EAC9B,EA4lI2E,EAxiI3E,SAAsBjR,EAAKhM,EAAM4W,GAK/B,MAJW,IAAIL,GAAcvK,GACxB4C,KAAK5O,EAAM4W,GACA5K,EAEVA,CACR,EAkiI8F,EAz/D9F,SAAwBwQ,EAAIhI,EAAKsd,GAC/B5B,GAAS4B,QAAUA,EACnB,IACE,IAAI5W,EAASgV,GAAS8B,gBAAgBxV,GACtC,OAAQhI,GACN,KAAK,EAEH,OADI5D,EAAMsf,GAASrf,OACT,GACA,GAGElC,GAAG5F,KAAKmS,EAAOpU,KAAMoU,EAAOyG,MAAO,EAAG/Q,GACjC4L,GAEnB,KAAK,EACL,KAAK,EAeL,KAAK,GACL,KAAK,GACH,OAAO,EAfT,KAAK,EACH,OAAOtB,EAAOyG,MAChB,KAAK,EACH,IAAI/Q,EAAMsf,GAASrf,MAEnB,OADAqK,EAAOyG,OAAS/Q,EACT,EAET,KAAK,GACCA,EAAMsf,GAASrf,MAGnB,OADAjM,EAAOgM,EADM,IACW,GAAK,EACtB,EAKT,KAAK,GACL,KAAK,EAKL,QACE,OAAQ,GAJV,KAAK,EAEH,OADAyF,GAAS,KACD,EAKd,CAAE,MAAOjT,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,IACAA,EAAE2hB,KACZ,CACF,EAy8DmH,EAx8DnH,SAAsBvI,EAAI+V,EAAIT,GAC5B5B,GAAS4B,QAAUA,EACnB,IACE,IAAI5W,EAASgV,GAAS8B,gBAAgBxV,GACtC,OAAQ+V,GACN,KAAK,MACL,KAAK,MAKL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MAqBL,KAAK,MAKL,KAAK,MACH,OAAKrX,EAAOC,IAEL,GADG,GAvBZ,KAAK,MACH,IAAKD,EAAOC,IACV,OAAQ,GACV,IAAIqX,EAAOtC,GAASrf,MAEpB,OADA7L,EAAOwtB,IAAS,GAAK,EACd,EAET,KAAK,MACH,OAAKtX,EAAOC,KAEJ,IADE,GAGZ,KAAK,MACCqX,EAAOtC,GAASrf,MACpB,OAAOlC,GAAGua,MAAMhO,EAAQqX,EAAIC,GAY9B,QACExqB,GAAM,qBAAuBuqB,GAEnC,CAAE,MAAOnvB,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,IACAA,EAAE2hB,KACZ,CACF,EAi5DsI,EAh5DtI,SAAqBje,EAAM6a,EAAOmQ,GAChC5B,GAAS4B,QAAUA,EACnB,IACE,IAAI/C,EAAWmB,GAAS6B,OAAOjrB,GAC3BiX,EAAO+T,EAAU5B,GAASrf,MAAQ,EAEtC,OADalC,GAAG5F,KAAKgmB,EAAUpN,EAAO5D,GACxBvB,EAChB,CAAE,MAAOpZ,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,IACAA,EAAE2hB,KACZ,CACF,EAo4DwJ,EAtyDxJ,SAAuCuqB,GACrC,IAAIC,EAAM7c,GAAmB4c,UACtB5c,GAAmB4c,GAC1B,IAAIE,EAAWD,EAAIC,SACfC,EAAiBD,EAAS7nC,OAC1B+nC,EAAeF,EAAS5S,KAAI,SAAS+S,GACvC,OAAOA,EAAIC,gBACb,IAAGp1B,OAAOg1B,EAAS5S,KAAI,SAAS+S,GAC9B,OAAOA,EAAIE,kBACb,KACIxW,EAAiBkW,EAAIlW,eACrB3C,EAAgB6Y,EAAI7Y,cACxB1C,GAA8B,CAACsb,GAAeI,GAAc,SAASI,GAiBnE,OAhBAN,EAAS3oB,SAAQ,SAAS8oB,EAAK7vC,GAC7B,IAAI8vC,EAAmBE,EAAchwC,GACjCysB,EAASojB,EAAIpjB,OACbwjB,EAAgBJ,EAAII,cACpBF,EAAqBC,EAAchwC,EAAI2vC,GACvCO,EAASL,EAAIK,OACbC,EAAgBN,EAAIM,cACxBN,EAAIl0B,KAAO,SAASzP,GAClB,OAAO4jC,EAA+B,aAAErjB,EAAOwjB,EAAe/jC,GAChE,EACA2jC,EAAI1zB,MAAQ,SAASjQ,EAAKmrB,GACxB,IAAIvE,EAAc,GAClBod,EAAOC,EAAejkC,EAAK6jC,EAA+B,WAAEjd,EAAauE,IACzExE,GAAeC,EACjB,CACF,IACO,CAAC,CAAE1R,KAAMquB,EAAIruB,KAAM,aAAgB,SAASlV,GAEjD,IADA,IAAIiuB,EAAK,IAAI/gB,MAAMu2B,GACV3vC,EAAI,EAAGA,EAAI2vC,IAAkB3vC,EACpCm6B,EAAGn6B,GAAK0vC,EAAS1vC,GAAG2b,KAAKzP,GAG3B,OADA0qB,EAAc1qB,GACPiuB,CACT,EAAG,WAAc,SAASrH,EAAauE,GACrC,GAAIsY,IAAmBtY,EAAExvB,OACvB,MAAM,IAAIgS,UAAU,0CAA4C41B,EAAIruB,KAAO,cAAgBuuB,EAAiB,YAActY,EAAExvB,QAG9H,IADA,IAAIqE,EAAMqtB,IACDv5B,EAAI,EAAGA,EAAI2vC,IAAkB3vC,EACpC0vC,EAAS1vC,GAAGmc,MAAMjQ,EAAKmrB,EAAEr3B,IAK3B,OAHoB,OAAhB8yB,GACFA,EAAY7e,KAAK2iB,EAAe1qB,GAE3BA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB9E,GAClG,GACF,EAovD4L,EAlvD5L,SAAwCwZ,GACtC,IAAIX,EAAM3a,GAAoBsb,UACvBtb,GAAoBsb,GAC3B,IAAI7W,EAAiBkW,EAAIlW,eACrB3C,EAAgB6Y,EAAI7Y,cACpByZ,EAAeZ,EAAIa,OAMvBpc,GAA8B,CAACkc,GALdC,EAAavT,KAAI,SAASyT,GACzC,OAAOA,EAAMT,gBACf,IAAGp1B,OAAO21B,EAAavT,KAAI,SAASyT,GAClC,OAAOA,EAAMR,kBACf,MACwD,SAASS,GAC/D,IAAIF,EAAS,CAAC,EAiBd,OAhBAD,EAAatpB,SAAQ,SAASwpB,EAAOvwC,GACnC,IAAIywC,EAAYF,EAAME,UAClBX,EAAmBU,EAAYxwC,GAC/BysB,EAAS8jB,EAAM9jB,OACfwjB,EAAgBM,EAAMN,cACtBF,EAAqBS,EAAYxwC,EAAIqwC,EAAaxoC,QAClDqoC,EAASK,EAAML,OACfC,EAAgBI,EAAMJ,cAC1BG,EAAOG,GAAa,CAAE90B,KAAM,SAASzP,GACnC,OAAO4jC,EAA+B,aAAErjB,EAAOwjB,EAAe/jC,GAChE,EAAGiQ,MAAO,SAASjQ,EAAKmrB,GACtB,IAAIvE,EAAc,GAClBod,EAAOC,EAAejkC,EAAK6jC,EAA+B,WAAEjd,EAAauE,IACzExE,GAAeC,EACjB,EACF,IACO,CAAC,CAAE1R,KAAMquB,EAAIruB,KAAM,aAAgB,SAASlV,GACjD,IAAIiuB,EAAK,CAAC,EACV,IAAK,IAAIn6B,KAAKswC,EACZnW,EAAGn6B,GAAKswC,EAAOtwC,GAAG2b,KAAKzP,GAGzB,OADA0qB,EAAc1qB,GACPiuB,CACT,EAAG,WAAc,SAASrH,EAAauE,GACrC,IAAK,IAAIoZ,KAAaH,EACpB,KAAMG,KAAapZ,GACjB,MAAM,IAAIxd,UAAU,oBAAsB42B,EAAY,KAG1D,IAAIvkC,EAAMqtB,IACV,IAAKkX,KAAaH,EAChBA,EAAOG,GAAWt0B,MAAMjQ,EAAKmrB,EAAEoZ,IAKjC,OAHoB,OAAhB3d,GACFA,EAAY7e,KAAK2iB,EAAe1qB,GAE3BA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB9E,GAClG,GACF,EA8rDiO,EA7rDjO,SAAkC8Z,EAAe1yB,EAAOb,EAAMwzB,EAAUC,GACxE,EA4rDgQ,EA/nDhQ,SAAgCvb,EAASrX,EAAOb,EAAM0zB,EAAWC,GAC/D,IAAIlgC,EAAQmkB,GAAiB5X,GAE7BsX,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgB,SAAS+yB,GAC5D,QAASA,CACX,EAAG,WAAc,SAASje,EAAauE,GACrC,OAAOA,EAAIwZ,EAAYC,CACzB,EAAG,eAAkB,EAAG,qBAAwB,SAAS7d,GACvD,IAAI7nB,EACJ,GAAa,IAAT+R,EACF/R,EAAO1G,OACF,GAAa,IAATyY,EACT/R,EAAOtG,MACF,IAAa,IAATqY,EAGT,MAAM,IAAItD,UAAU,8BAAgCmE,GAFpD5S,EAAOlG,CAGT,CACA,OAAO5F,KAAmB,aAAE8L,EAAK6nB,IAAYriB,GAC/C,EAAG8qB,mBAAoB,MACzB,EA2mD6R,EAtmC7R,SAAiCrG,EAAS2b,EAAgBC,EAAqBC,EAAkBC,EAAwBxY,EAAeyY,EAAiBhb,EAAQib,EAAmBzY,EAAU5a,EAAOszB,EAAqB1a,GACxN5Y,EAAQiX,GAAiBjX,GACzB2a,EAAgBqD,GAAwBmV,EAAwBxY,GAC5DvC,IACFA,EAAS4F,GAAwBoV,EAAiBhb,IAEhDwC,IACFA,EAAWoD,GAAwBqV,EAAmBzY,IAExDhC,EAAgBoF,GAAwBsV,EAAqB1a,GAC7D,IAAI2a,EAAoBhe,GAAsBvV,GAC9Cua,GAAmBgZ,GAAmB,WACpC9U,GAAsB,oBAAsBze,EAAQ,wBAAyB,CAACkzB,GAChF,IACAhd,GAA8B,CAACmB,EAAS2b,EAAgBC,GAAsBC,EAAmB,CAACA,GAAoB,IAAI,SAASM,GAEjI,IAAIrb,EACAsb,EAFJD,EAAOA,EAAK,GAKVC,EAFEP,GACF/a,EAAYqb,EAAKzb,iBACS2C,kBAEV/C,GAAYt0B,UAE9B,IAAIqpB,EAAc+I,GAAoB8d,GAAmB,WACvD,GAAIvwC,OAAOu2B,eAAej4B,QAAUo5B,EAClC,MAAM,IAAIvD,GAAa,0BAA4BnX,GAErD,QAAyC,IAArC+X,EAAgB2b,iBAClB,MAAM,IAAIvc,GAAanX,EAAQ,kCAEjC,IAAI0V,EAAOqC,EAAgB2b,iBAAiBr4B,UAAUxR,QACtD,QAAa,IAAT6rB,EACF,MAAM,IAAIyB,GAAa,2BAA6BnX,EAAQ,uCAAyC3E,UAAUxR,OAAS,iBAAmB7G,OAAO0B,KAAKqzB,EAAgB2b,kBAAkB/0B,WAAa,yBAExM,OAAO+W,EAAK/vB,MAAMrE,KAAM+Z,UAC1B,IACIqf,EAAoB13B,OAAOmmB,OAAOsqB,EAAe,CAAE/mB,YAAa,CAAE9oB,MAAO8oB,KAC7EA,EAAYrpB,UAAYq3B,EACxB,IAAI3C,EAAkB,IAAI0C,GAAgBza,EAAO0M,EAAagO,EAAmB9B,EAAeT,EAAWwC,EAAevC,EAAQwC,GAC9H+Y,EAAqB,IAAIlW,GAAkBzd,EAAO+X,GAAiB,GAAM,GAAO,GAChF6b,EAAmB,IAAInW,GAAkBzd,EAAQ,IAAK+X,GAAiB,GAAO,GAAO,GACrF8b,EAAwB,IAAIpW,GAAkBzd,EAAQ,UAAW+X,GAAiB,GAAO,GAAM,GAGnG,OAFAgC,GAAmB1C,GAAW,CAAEkG,YAAaqW,EAAkBtW,iBAAkBuW,GACjFlW,GAAoB4V,EAAmB7mB,GAChC,CAACinB,EAAoBC,EAAkBC,EAChD,GACF,EAujC2T,EA/iC3T,SAA6CC,EAAcxZ,EAAUyZ,EAAiBC,EAAkBC,EAAS1Y,GAC/G/xB,EAAO8wB,EAAW,GAClB,IAAI4Z,EAAcnV,GAAoBzE,EAAUyZ,GAChDE,EAAUjW,GAAwBgW,EAAkBC,GACpD,IAAInW,EAAO,CAACvC,GACRzG,EAAc,GAClBoB,GAA8B,GAAI,CAAC4d,IAAe,SAAS1U,GAEzD,IAAIjF,EAAY,gBADhBiF,EAAYA,EAAU,IACqBhc,KAI3C,QAHmD,IAA/Cgc,EAAUrH,gBAAgB2b,mBAC5BtU,EAAUrH,gBAAgB2b,iBAAmB,SAEkB,IAA7DtU,EAAUrH,gBAAgB2b,iBAAiBpZ,EAAW,GACxD,MAAM,IAAInD,GAAa,+EAAiFmD,EAAW,GAAK,gBAAkB8E,EAAUhc,KAAO,uGAqB7J,OAnBAgc,EAAUrH,gBAAgB2b,iBAAiBpZ,EAAW,GAAK,WACzDmE,GAAsB,oBAAsBW,EAAUhc,KAAO,wBAAyB8wB,EACxF,EACAhe,GAA8B,GAAIge,GAAa,SAAS/U,GActD,OAbAC,EAAUrH,gBAAgB2b,iBAAiBpZ,EAAW,GAAK,WACrDjf,UAAUxR,SAAWywB,EAAW,GAClClD,GAAkB+C,EAAY,gBAAkB9e,UAAUxR,OAAS,yBAA2BywB,EAAW,IAE3GxF,EAAYjrB,OAAS,EACrBi0B,EAAKj0B,OAASywB,EACd,IAAK,IAAIt4B,EAAI,EAAGA,EAAIs4B,IAAYt4B,EAC9B87B,EAAK97B,GAAKm9B,EAASn9B,GAAe,WAAE8yB,EAAazZ,UAAUrZ,EAAI,IAEjE,IAAIkM,EAAM+lC,EAAQtuC,MAAM,KAAMm4B,GAE9B,OADAjJ,GAAeC,GACRqK,EAAS,GAAiB,aAAEjxB,EACrC,EACO,EACT,IACO,EACT,GACF,EA2gCqW,EAn8BrW,SAA0C4lC,EAAc5Z,EAAYI,EAAUyZ,EAAiBC,EAAkBG,EAAYrxC,EAASsxC,GACpI,IAAIF,EAAcnV,GAAoBzE,EAAUyZ,GAChD7Z,EAAajD,GAAiBiD,GAC9Bia,EAAanW,GAAwBgW,EAAkBG,GACvDje,GAA8B,GAAI,CAAC4d,IAAe,SAAS1U,GAEzD,IAAIjF,GADJiF,EAAYA,EAAU,IACIhc,KAAO,IAAM8W,EAOvC,SAASma,IACP5V,GAAsB,eAAiBtE,EAAY,wBAAyB+Z,EAC9E,CARIha,EAAWhoB,WAAW,QACxBgoB,EAAaoa,OAAOpa,EAAW+V,UAAU,KAEvCmE,GACFhV,EAAUrH,gBAAgB8C,qBAAqB5kB,KAAKikB,GAKtD,IAAID,EAAQmF,EAAUrH,gBAAgB2C,kBAClC6Z,EAASta,EAAMC,GAmBnB,YAlBe,IAAXqa,QAA8C,IAAzBA,EAAOna,eAA4Bma,EAAOC,YAAcpV,EAAUhc,MAAQmxB,EAAOja,WAAaA,EAAW,GAChI+Z,EAAoB/Z,SAAWA,EAAW,EAC1C+Z,EAAoBG,UAAYpV,EAAUhc,KAC1C6W,EAAMC,GAAcma,IAEpBra,GAAoBC,EAAOC,EAAYC,GACvCF,EAAMC,GAAYE,cAAcE,EAAW,GAAK+Z,GAElDne,GAA8B,GAAIge,GAAa,SAAS/U,GACtD,IAAIsV,EAAiBvV,GAAqB/E,EAAWgF,EAAUC,EAAW+U,EAAYrxC,GAOtF,YANwC,IAApCm3B,EAAMC,GAAYE,eACpBqa,EAAena,SAAWA,EAAW,EACrCL,EAAMC,GAAcua,GAEpBxa,EAAMC,GAAYE,cAAcE,EAAW,GAAKma,EAE3C,EACT,IACO,EACT,GACF,EA65B4Y,EA12B5Y,SAAiCpd,EAASrX,GAExCyW,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgB,SAASwY,GAC5D,IAAI2D,EAAKkE,GAAmB7H,GAAQ50B,MAEpC,OADA08B,GAAe9H,GACR2D,CACT,EAAG,WAAc,SAASrH,EAAalxB,GACrC,OAAOg4B,GAAiBh4B,EAC1B,EAAG,eAAkB,EAAG,qBAAwBoxB,GAA4B0I,mBAAoB,MAClG,EAi2B0a,EA30B1a,SAAgCrG,EAASrX,EAAOb,EAAMu1B,GACpD,IAAI9hC,EAAQmkB,GAAiB5X,GAE7B,SAASw1B,IACT,CAFA30B,EAAQiX,GAAiBjX,GAGzB20B,EAAKC,OAAS,CAAC,EACfne,GAAaY,EAAS,CAAEjU,KAAMpD,EAAO0M,YAAaioB,EAAM,aAAgB,SAASzd,GAC/E,OAAO51B,KAAKorB,YAAYkoB,OAAO1d,EACjC,EAAG,WAAc,SAASpC,EAAaoC,GACrC,OAAOA,EAAEtzB,KACX,EAAG,eAAkB,EAAG,qBAAwB68B,GAAyBzgB,EAAOpN,EAAO8hC,GAAWhX,mBAAoB,OACtHnD,GAAmBva,EAAO20B,EAC5B,EA+zBuc,EAvzBvc,SAAsCE,EAAa70B,EAAO80B,GACxD,IAAIC,EAAWpU,GAAsBkU,EAAa,QAClD70B,EAAQiX,GAAiBjX,GACzB,IAAIg1B,EAAOD,EAASroB,YAChBuoB,EAASjyC,OAAOmmB,OAAO4rB,EAASroB,YAAYrpB,UAAW,CAAEO,MAAO,CAAEA,MAAOkxC,GAAapoB,YAAa,CAAE9oB,MAAO6xB,GAAoBsf,EAAS3xB,KAAO,IAAMpD,GAAO,WACjK,OACAg1B,EAAKJ,OAAOE,GAAaG,EACzBD,EAAKh1B,GAASi1B,CAChB,EA+yB0e,EArxB1e,SAAiC5d,EAASrX,EAAOb,GAC/C,IAAIvM,EAAQmkB,GAAiB5X,GAE7BsX,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgB,SAASpc,GAC5D,OAAOA,CACT,EAAG,WAAc,SAASkxB,EAAalxB,GACrC,GAAqB,kBAAVA,GAAuC,mBAAVA,EACtC,MAAM,IAAIiY,UAAU,mBAAqBsf,GAAav3B,GAAS,QAAUtC,KAAK8hB,MAEhF,OAAOxf,CACT,EAAG,eAAkB,EAAG,qBAAwBk9B,GAA0B9gB,EAAOpN,GAAQ8qB,mBAAoB,MAC/G,EA0wBwgB,EAzwBxgB,SAAoC1d,EAAOsa,EAAUyZ,EAAiB9V,EAAWkW,EAAYxkB,GAC3F,IAAIwP,EAAWJ,GAAoBzE,EAAUyZ,GAC7C/zB,EAAQiX,GAAiBjX,GACzBm0B,EAAanW,GAAwBC,EAAWkW,GAChD5Z,GAAmBva,GAAO,WACxBye,GAAsB,eAAiBze,EAAQ,wBAAyBmf,EAC1E,GAAG7E,EAAW,GACdpE,GAA8B,GAAIiJ,GAAU,SAAS+V,GACnD,IAAIC,EAAmB,CAACD,EAAU,GAAI,MAAMx4B,OAAOw4B,EAAUnrC,MAAM,IAEnE,OADA4zB,GAAoB3d,EAAOkf,GAAqBlf,EAAOm1B,EAAkB,KAAMhB,EAAYxkB,GAAK2K,EAAW,GACpG,EACT,GACF,EA6vByiB,EApuBziB,SAAmCoY,EAAe1yB,EAAOb,EAAMwzB,EAAUC,GACvE5yB,EAAQiX,GAAiBjX,IACP,IAAd4yB,IACFA,EAAW,YAEb,IAAIhgC,EAAQmkB,GAAiB5X,GACzBi2B,EAAe,SAASxxC,GAC1B,OAAOA,CACT,EACA,GAAiB,IAAb+uC,EAAgB,CAClB,IAAI0C,EAAW,GAAK,EAAIl2B,EACxBi2B,EAAe,SAASxxC,GACtB,OAAOA,GAASyxC,IAAaA,CAC/B,CACF,CACA,IAAIC,EAAiBt1B,EAAMpB,SAAS,YACpC6X,GAAaic,EAAe,CAAEtvB,KAAMpD,EAAO,aAAgBo1B,EAAc,WAAc,SAAStgB,EAAalxB,GAC3G,GAAqB,kBAAVA,GAAuC,mBAAVA,EACtC,MAAM,IAAIiY,UAAU,mBAAqBsf,GAAav3B,GAAS,QAAUtC,KAAK8hB,MAEhF,GAAIxf,EAAQ+uC,GAAY/uC,EAAQgvC,EAC9B,MAAM,IAAI/2B,UAAU,qBAAuBsf,GAAav3B,GAAS,wDAA0Doc,EAAQ,wCAA0C2yB,EAAW,KAAOC,EAAW,MAE5M,OAAO0C,EAAiB1xC,IAAU,EAAY,EAARA,CACxC,EAAG,eAAkB,EAAG,qBAAwBm9B,GAA4B/gB,EAAOpN,EAAoB,IAAb+/B,GAAiBjV,mBAAoB,MACjI,EA2sBykB,EA1sBzkB,SAAuCrG,EAASke,EAAev1B,GAC7D,IACIw1B,EADc,CAAC7lC,UAAWpG,WAAYqG,WAAYE,YAAaD,WAAYE,YAAaC,aAAcC,cACrFslC,GACrB,SAASE,EAAiBjd,GAExB,IAAIprB,EAAOhG,EACP+X,EAAO/R,GAFXorB,IAAmB,KAEQ,GACvB5uB,EAAOwD,EAAKorB,EAAS,IAAM,GAC/B,OAAO,IAAIgd,EAAGhvC,EAAQoD,EAAMuV,EAC9B,CAEAsX,GAAaY,EAAS,CAAEjU,KADxBpD,EAAQiX,GAAiBjX,GACY,aAAgBy1B,EAAkB,eAAkB,EAAG,qBAAwBA,GAAoB,CAAEje,8BAA8B,GAC1K,EA8rB6mB,EA7rB7mB,SAAsCH,EAASrX,GAE7C,IAAI01B,EAA4B,iBADhC11B,EAAQiX,GAAiBjX,IAEzByW,GAAaY,EAAS,CAAEjU,KAAMpD,EAAO,aAAgB,SAASpc,GAC5D,IACI8J,EADA7D,EAASzC,EAAQxD,IAAU,GAE/B,GAAI8xC,EAEF,IADA,IAAIC,EAAiB/xC,EAAQ,EACpB5B,EAAI,EAAGA,GAAK6H,IAAU7H,EAAG,CAChC,IAAI4zC,EAAiBhyC,EAAQ,EAAI5B,EACjC,GAAIA,GAAK6H,GAA0C,GAAhCjD,EAAOgvC,IAAmB,GAAS,CACpD,IACIC,EAAgB5nC,EAAa0nC,EADnBC,EAAiBD,QAEnB,IAARjoC,EACFA,EAAMmoC,GAENnoC,GAAOI,OAAOC,aAAa,GAC3BL,GAAOmoC,GAETF,EAAiBC,EAAiB,CACpC,CACF,KACK,CACL,IAAI3xC,EAAI,IAAImX,MAAMvR,GAClB,IAAS7H,EAAI,EAAGA,EAAI6H,IAAU7H,EAC5BiC,EAAEjC,GAAK8L,OAAOC,aAAanH,EAAOhD,EAAQ,EAAI5B,IAAM,IAEtD0L,EAAMzJ,EAAE2W,KAAK,GACf,CAEA,OADA/E,GAAMjS,GACC8J,CACT,EAAG,WAAc,SAASonB,EAAalxB,GACjCA,aAAiB4nB,cACnB5nB,EAAQ,IAAI2F,WAAW3F,IAGzB,IAAIkyC,EAAuC,kBAAVlyC,EAC3BkyC,GAAuBlyC,aAAiB2F,YAAc3F,aAAiBmyC,mBAAqBnyC,aAAiB+L,WACjHynB,GAAkB,yCAWpB,IAAIvtB,GATA6rC,GAAmBI,EACT,WACV,OAAOnnC,EAAgB/K,EACzB,EAEY,WACV,OAAOA,EAAMiG,MACf,KAGEqE,EAAMiG,GAAQ,EAAItK,EAAS,GAG/B,GADAzC,GADA8G,KAAS,KACO,GAAKrE,EACjB6rC,GAAmBI,EACrBrnC,EAAa7K,EAAOsK,EAAM,EAAGrE,EAAS,QAEtC,GAAIisC,EACF,IAAK,IAAI9zC,EAAI,EAAGA,EAAI6H,IAAU7H,EAAG,CAC/B,IAAIg0C,EAAWpyC,EAAM4K,WAAWxM,GAC5Bg0C,EAAW,MACbngC,GAAM3H,GACNkpB,GAAkB,2DAEpBxwB,EAAOsH,EAAM,EAAIlM,IAAM,GAAKg0C,CAC9B,MAEA,IAASh0C,EAAI,EAAGA,EAAI6H,IAAU7H,EAC5B4E,EAAOsH,EAAM,EAAIlM,IAAM,GAAK4B,EAAM5B,GAOxC,OAHoB,OAAhB8yB,GACFA,EAAY7e,KAAKJ,GAAO3H,GAEnBA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB,SAASxvB,GACvG2H,GAAM3H,EACR,GACF,EA+mBgpB,EA9mBhpB,SAAuCmpB,EAAS4e,EAAUj2B,GAExD,IAAIk2B,EAAcC,EAAcC,EAASC,EAAgBzjC,EADzDoN,EAAQiX,GAAiBjX,GAER,IAAbi2B,GACFC,EAAennC,EACfonC,EAAejnC,EACfmnC,EAAiBhnC,EACjB+mC,EAAU,WACR,OAAOpvC,CACT,EACA4L,EAAQ,GACc,IAAbqjC,IACTC,EAAe5mC,EACf6mC,EAAe3mC,EACf6mC,EAAiB5mC,EACjB2mC,EAAU,WACR,OAAOhvC,CACT,EACAwL,EAAQ,GAEV6jB,GAAaY,EAAS,CAAEjU,KAAMpD,EAAO,aAAgB,SAASpc,GAK5D,IAJA,IAEI8J,EAFA7D,EAASzC,EAAQxD,IAAU,GAC3B0yC,EAAOF,IAEPT,EAAiB/xC,EAAQ,EACpB5B,EAAI,EAAGA,GAAK6H,IAAU7H,EAAG,CAChC,IAAI4zC,EAAiBhyC,EAAQ,EAAI5B,EAAIi0C,EACrC,GAAIj0C,GAAK6H,GAA4C,GAAlCysC,EAAKV,IAAmBhjC,GAAa,CACtD,IACIijC,EAAgBK,EAAaP,EADdC,EAAiBD,QAExB,IAARjoC,EACFA,EAAMmoC,GAENnoC,GAAOI,OAAOC,aAAa,GAC3BL,GAAOmoC,GAETF,EAAiBC,EAAiBK,CACpC,CACF,CAEA,OADApgC,GAAMjS,GACC8J,CACT,EAAG,WAAc,SAASonB,EAAalxB,GACd,kBAAVA,GACXwzB,GAAkB,6CAA+CpX,GAEnE,IAAInW,EAASwsC,EAAezyC,GACxBsK,EAAMiG,GAAQ,EAAItK,EAASosC,GAO/B,OALA7uC,GADA8G,KAAS,KACO,GAAKrE,GAAU+I,EAC/BujC,EAAavyC,EAAOsK,EAAM,EAAGrE,EAASosC,GAClB,OAAhBnhB,GACFA,EAAY7e,KAAKJ,GAAO3H,GAEnBA,CACT,EAAG,eAAkB,EAAG,qBAAwB8mB,GAA4B0I,mBAAoB,SAASxvB,GACvG2H,GAAM3H,EACR,GACF,EAqjBorB,EApjBprB,SAAuCmpB,EAASrX,EAAOu2B,EAAsBhb,EAAgB+X,EAAqB1a,GAChHhE,GAAmByC,GAAW,CAAEjU,KAAM6T,GAAiBjX,GAAQub,eAAgByC,GAAwBuY,EAAsBhb,GAAiB3C,cAAeoF,GAAwBsV,EAAqB1a,GAAgB8Y,SAAU,GACtO,EAkjBwtB,EAjjBxtB,SAA+CF,EAAcM,EAAkB0E,EAAiB/nB,EAAQwjB,EAAeF,EAAoB0E,EAAiBvE,EAAQC,GAClKvd,GAAmB4c,GAAcE,SAASz7B,KAAK,CAAE67B,mBAAkBrjB,OAAQuP,GAAwBwY,EAAiB/nB,GAASwjB,gBAAeF,qBAAoBG,OAAQlU,GAAwByY,EAAiBvE,GAASC,iBAC5N,EA+iBowB,EA9iBpwB,SAAwC9a,EAASrX,EAAOu2B,EAAsBhb,EAAgB+X,EAAqB1a,GACjH9B,GAAoBO,GAAW,CAAEjU,KAAM6T,GAAiBjX,GAAQub,eAAgByC,GAAwBuY,EAAsBhb,GAAiB3C,cAAeoF,GAAwBsV,EAAqB1a,GAAgB0Z,OAAQ,GACrO,EA4iByyB,EA3iBzyB,SAA8CF,EAAYK,EAAWX,EAAkB0E,EAAiB/nB,EAAQwjB,EAAeF,EAAoB0E,EAAiBvE,EAAQC,GAC1Krb,GAAoBsb,GAAYE,OAAOr8B,KAAK,CAAEw8B,UAAWxb,GAAiBwb,GAAYX,mBAAkBrjB,OAAQuP,GAAwBwY,EAAiB/nB,GAASwjB,gBAAeF,qBAAoBG,OAAQlU,GAAwByY,EAAiBvE,GAASC,iBACjQ,EAyiBo1B,EAxiBp1B,SAAgC9a,EAASrX,GAEvCyW,GAAaY,EAAS,CAAEqf,QAAQ,EAAMtzB,KADtCpD,EAAQiX,GAAiBjX,GAC0B,eAAkB,EAAG,aAAgB,WAExF,EAAG,WAAc,SAAS8U,EAAauE,GAEvC,GACF,EAiiBi3B,EA1hBj3B,SAAoBb,EAAQqe,EAAYC,GACtCte,EAASwI,GAAcxI,GACvBqe,EAAalW,GAAsBkW,EAAY,aAC/C,IAAI/hB,EAAc,GACdiiB,EAAKnb,GAAiB9G,GAE1B,OADA5tB,EAAO4vC,IAAmB,GAAKC,EACxBF,EAAuB,WAAE/hB,EAAa0D,EAC/C,EAmhBk4B,EA3gBl4B,SAAsBA,EAAQ8B,EAAU6E,EAAU6X,GAChDxe,EAASwI,GAAcxI,GAGvB,IAFA,IAAIkG,EATN,SAA6BpE,EAAU6E,GAErC,IADA,IAAIl7B,EAAI,IAAImX,MAAMkf,GACTt4B,EAAI,EAAGA,EAAIs4B,IAAYt4B,EAC9BiC,EAAEjC,GAAK2+B,GAAsBz5B,GAAQi4B,GAAY,GAAKn9B,IAAM,GAAI,aAAeA,GAEjF,OAAOiC,CACT,CAGcgzC,CAAoB3c,EAAU6E,GACtCrB,EAAO,IAAI1iB,MAAMkf,GACZt4B,EAAI,EAAGA,EAAIs4B,IAAYt4B,EAAG,CACjC,IAAIE,EAAOw8B,EAAM18B,GACjB87B,EAAK97B,GAAKE,EAA2B,qBAAE80C,GACvCA,GAAQ90C,EAAqB,cAC/B,CAEA,OAAO05B,GADEpD,EAAO7yB,WAAM,EAAQm4B,GAEhC,EAggBq5B,EAAKwC,GAAgB,EA9e16B,SAA4BtgB,GAC1B,OAAc,IAAVA,EACK4b,GAAiBwF,OAExBphB,EAAQkhB,GAAkBlhB,GACnB4b,GAAiBwF,KAAmBphB,IAE/C,EAuem8B,EAten8B,SAA8BwY,EAAQlV,GAGpC,OAAOsY,IAFPpD,EAASwI,GAAcxI,IACvBlV,EAAO0d,GAAc1d,IAEvB,EAke89B,EAje99B,SAAwBkV,GAClBA,EAAS,IACX6H,GAAmB7H,GAAQvf,UAAY,EAE3C,EA6dm/B,EA5dn/B,SAA4ByO,EAAQgF,GAGlC,OAFAhF,EAASsZ,GAActZ,cACvBgF,EAAcsU,GAActU,GAE9B,EAwd4gC,EAvd5gC,SAA2B8L,GAEzB,MAAyB,kBADzBA,EAASwI,GAAcxI,GAEzB,EAodoiC,EAndpiC,WACE,OAAOoD,GAAiB,GAC1B,EAid4jC,EAhd5jC,SAA6BiF,GAC3B,OAAOjF,GAAiBsF,GAAkBL,GAC5C,EA8cslC,EA7ctlC,WACE,OAAOjF,GAAiB,CAAC,EAC3B,EA2c+mC,EA1c/mC,SAAiCpD,GAE/B3D,GADkBwL,GAAmB7H,GAAQ50B,OAE7C08B,GAAe9H,EACjB,EAsc6oC,EArc7oC,SAA8BA,EAAQlV,EAAM1f,GAC1C40B,EAASwI,GAAcxI,GACvBlV,EAAO0d,GAAc1d,GACrB1f,EAAQo9B,GAAcp9B,GACtB40B,EAAOlV,GAAQ1f,CACjB,EAgcwqC,EA/bxqC,SAA4B1B,EAAM80C,GAGhC,OAAOpb,IAFP15B,EAAOy+B,GAAsBz+B,EAAM,sBACA,qBAAE80C,GAEvC,EA2bisC,EA1bjsC,WACE9sC,IACF,EAwb8sC,EA5a9sC,SAAwBgtC,EAAQC,GAC9B,IAAIl/B,EACJ,GAAe,IAAXi/B,EACFj/B,EAAMiG,KAAKjG,UACN,IAAgB,IAAXi/B,GAA2B,IAAXA,IAAiB5+B,GAI3C,OADAC,GAAS,KACD,EAHRN,EAAMzE,IAIR,CAGA,OAFAtM,EAAOiwC,IAAO,GAAKl/B,EAAM,IAAM,EAC/B/Q,EAAOiwC,EAAK,IAAM,GAAKl/B,EAAM,IAAM,IAAM,IAAM,EACxC,CACT,EA+ZmuC,EA9ZnuC,SAAgC8/B,EAAM5xC,EAAKilC,GACzCxkC,EAAOoxC,WAAWD,IAAS,EAAG5xC,IAAQ,EAAGA,EAAMilC,IAAQ,EACzD,EA4ZgwC,EAnZhwC,SAAiC6M,GAC/B,IA97Hev1C,EAAGy1C,EA87HdD,EAAUtxC,EAAOiD,OAEjBuuC,EAAc,WAClB,IAFAH,KAAkC,GAEdG,EAClB,OAAO,EAET,IAAK,IAAIC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBJ,GAAW,EAAI,GAAMG,GAI7C,GAHAC,EAAoBh8B,KAAKC,IAAI+7B,EAAmBL,EAAgB,WAE9ClW,GADJzlB,KAAKC,IAAI67B,IAv8HV11C,EAu8H+B4Z,KAAK3Z,IAAIs1C,EAAeK,KAv8HpDH,EAu8HwE,OAt8HvE,IACjBz1C,GAAKy1C,EAAWz1C,EAAIy1C,GAEfz1C,KAs8HH,OAAO,CAEX,CACA,OAAO,CACT,EAkY8xC,EA3W9xC,SAAsB+nC,EAAWC,GAC/B,IACE,IAAIC,EAAU,EAOd,OANAP,KAAgBrhB,SAAQ,SAAS6e,EAAQ5lC,GACvC,IAAIkM,EAAMw8B,EAAcC,EACxBzjC,EAAOujC,EAAgB,EAAJzoC,IAAU,GAAKkM,EAj/HxC,SAA4BR,EAAKkQ,EAASgtB,GACxC,IAAK,IAAI5oC,EAAI,EAAGA,EAAI0L,EAAI7D,SAAU7H,EAChC0E,EAAMkX,MAAc,GAAKlQ,EAAIc,WAAWxM,GAErC4oC,IACHlkC,EAAMkX,IAAY,GAAK,EAC3B,CA4+HMitB,CAAmBjD,EAAQ15B,GAC3By8B,GAAW/C,EAAO/9B,OAAS,CAC7B,IACO,CACT,CAAE,MAAOvE,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,GACDA,EAAE2hB,KACX,CACF,EA4VizC,EA3VjzC,SAA4B8jB,EAAgBC,GAC1C,IACE,IAAIX,EAAUD,KACdljC,EAAO6jC,IAAmB,GAAKV,EAAQxgC,OACvC,IAAI8gC,EAAU,EAKd,OAJAN,EAAQthB,SAAQ,SAAS6e,GACvB+C,GAAW/C,EAAO/9B,OAAS,CAC7B,IACA3C,EAAO8jC,IAAsB,GAAKL,EAC3B,CACT,CAAE,MAAOrlC,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,GACDA,EAAE2hB,KACX,CACF,EA4U00C,EA3U10C,SAAmBvI,GACjB,IACE,IAAItB,EAASgV,GAAS8B,gBAAgBxV,GAEtC,OADA7N,GAAG4M,MAAML,GACF,CACT,CAAE,MAAO9X,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,GACDA,EAAE2hB,KACX,CACF,EAiU01C,EAhU11C,SAAkBvI,EAAIkV,EAAKC,EAAQsX,GACjC,IACE,IAAI/tB,EAASgV,GAAS8B,gBAAgBxV,GAClC0sB,EAAMhZ,GAASuB,QAAQvW,EAAQwW,EAAKC,GAExC,OADA3sB,EAAOikC,IAAS,GAAKC,EACd,CACT,CAAE,MAAO9lC,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,GACDA,EAAE2hB,KACX,CACF,EAqTy2C,EApTz2C,SAAkBvI,EAAI4sB,EAAYC,EAAa5nB,EAAQ6nB,GACrD,IACE,IAAIpuB,EAASgV,GAAS8B,gBAAgBxV,GAElCb,EADc,WACL0tB,GAA6BD,IAAe,GACrDG,EAAe,iBACnB,OAAI5tB,IAAW4tB,GAAgB5tB,GAAU4tB,GAC/B,IAEV56B,GAAGiQ,OAAO1D,EAAQS,EAAQ8F,GAC1B5R,GAAU,CAACqL,EAAOqG,WAAa,GAAI3R,GAAasL,EAAOqG,UAAWnH,KAAKuW,IAAI/gB,KAAe,EAAIA,GAAa,GAAkE,EAA7DwK,KAAKC,KAAKD,KAAKwW,MAAMhhB,GAAa,YAAa,eAAqB,KAAOwK,KAAK+C,MAAMvN,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAK5K,EAAOskC,IAAc,GAAKz5B,GAAQ,GAAI7K,EAAOskC,EAAY,IAAM,GAAKz5B,GAAQ,GAC7UqL,EAAO4N,UAAuB,IAAXnN,GAA2B,IAAX8F,IACrCvG,EAAO4N,SAAW,MACb,EACT,CAAE,MAAO1lB,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,GACDA,EAAE2hB,KACX,CACF,EAiSw3C,EAhSx3C,SAAmBvI,EAAIkV,EAAKC,EAAQsX,GAClC,IACE,IAAI/tB,EAASgV,GAAS8B,gBAAgBxV,GAClC0sB,EAAMhZ,GAAS2B,SAAS3W,EAAQwW,EAAKC,GAEzC,OADA3sB,EAAOikC,IAAS,GAAKC,EACd,CACT,CAAE,MAAO9lC,GAGP,MAFkB,qBAAPuL,IAAwBvL,aAAauL,GAAG0M,YACjDrT,GAAM5E,GACDA,EAAE2hB,KACX,CACF,EAqRw4C,EApRx4C,SAAsBjI,GACpB9S,EAAY8S,EACd,EAkR25C,EAxD35C,SAAqBnc,EAAG6qC,EAASC,EAAQC,GACvC,OAAOH,GAAU5qC,EAAG6qC,EAASC,EAAQC,EACvC,GA8DIz5B,IAhrIJ,WACE,IAAI+kC,EAAO,CAAE,EAAK7H,IAClB,SAAS8H,EAAgBC,EAAUC,GACjC,IAxGe70C,EAwGX80C,EAAWF,EAASz0C,QACxB8C,EAAY,IAAI6xC,EAEhB7yC,IADAF,EAAakB,EAAY,IAAK,GACQjB,QACtC0J,GAAYzI,EAAY,IAAM,GA5GfjD,EA6GLiD,EAAY,IAAM,GA5G9B8I,GAAW6J,QAAQ5V,GA6GjB+M,IACF,CAEA,SAASkoC,EAA2B5+B,GAClCs+B,EAAgBt+B,EAAiB,SACnC,CACA,SAAS6+B,EAAuBC,GAC9B,OAzCJ,WACE,IAAK1tC,IAAe5D,GAAsBE,GAAwB,CAChE,GAAqB,oBAAVqxC,QAAyBznC,GAAUN,IAC5C,OAAO+nC,MAAM/nC,GAAgB,CAAEgoC,YAAa,gBAAiBn0C,MAAK,SAAS2F,GACzE,IAAKA,EAAa,GAChB,KAAM,uCAAyCwG,GAAiB,IAElE,OAAOxG,EAAsB,aAC/B,IAAGyuC,OAAM,WACP,OAAO1nC,GAAUP,GACnB,IAEA,GAAIjK,EACF,OAAO,IAAI5C,SAAQ,SAASC,EAASC,GACnC0C,EAAUiK,IAAgB,SAASxG,GACjCpG,EAAQ,IAAIsE,WAAW8B,GACzB,GAAGnG,EACL,GAGN,CACA,OAAOF,QAAQC,UAAUS,MAAK,WAC5B,OAAO0M,GAAUP,GACnB,GACF,CAiBWkoC,GAAmBr0C,MAAK,SAAS2D,GAEtC,OADaoD,YAAYutC,YAAY3wC,EAAQ6vC,EAE/C,IAAGxzC,KAAKi0C,GAAU,SAASM,GACzBtuC,EAAI,0CAA4CsuC,GAChD/vC,GAAM+vC,EACR,GACF,CAeA,GA3BA3oC,KA2BI7J,EAAwB,gBAC1B,IAEE,OADeA,EAAwB,gBAAEyxC,EAAMC,EAEjD,CAAE,MAAO7zC,GAEP,OADAqG,EAAI,sDAAwDrG,IACrD,CACT,EApBK2G,GAA0D,oBAArCQ,YAAYytC,sBAAwCjoC,GAAUJ,KAAoBM,GAAUN,KAAoC,oBAAV+nC,MAUvIF,EAAuBD,GATvBG,MAAM/nC,GAAgB,CAAEgoC,YAAa,gBAAiBn0C,MAAK,SAAS2F,GAEzE,OADaoB,YAAYytC,qBAAqB7uC,EAAU6tC,GAC1CxzC,KAAK+zC,GAA4B,SAASQ,GAGtD,OAFAtuC,EAAI,kCAAoCsuC,GACxCtuC,EAAI,6CACG+tC,EAAuBD,EAChC,GACF,KAceK,MAAMtyC,EAE3B,CAwnIU2yC,GACe1yC,EAA2B,mBAAI,WACtD,OAA6BA,EAA2B,mBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC/F,EACY5T,EAAc,MAAI,WAC5B,OAAgBA,EAAc,MAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACrE,EACc5T,EAAgB,QAAI,WAChC,OAAQ0M,GAAU1M,EAAgB,QAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACzE,GACIxF,GAAQpO,EAAc,MAAI,WAC5B,OAAQoO,GAAQpO,EAAc,MAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACrE,EACImjB,GAAiB/2B,EAAuB,eAAI,WAC9C,OAAQ+2B,GAAiB/2B,EAAuB,eAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACvF,EAII7C,IAH8C/Q,EAAoD,4CAAI,WACxG,OAAsDA,EAAoD,4CAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACjJ,EACwB5T,EAA0B,kBAAI,WACpD,OAAQ+Q,GAAoB/Q,EAA0B,kBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC7F,GACmB5T,EAAqB,aAAI,WAC1C,OAAuBA,EAAqB,aAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACnF,EACqB5T,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACvF,EACqB5T,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACvF,EACsB5T,EAAwB,gBAAI,WAChD,OAA0BA,EAAwB,gBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UACzF,EACuB5T,EAAyB,iBAAI,WAClD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAM,IAAG9B,MAAM,KAAM0V,UAC3F,EAWA,SAASpR,GAAW9B,GAClB7G,KAAK8hB,KAAO,aACZ9hB,KAAKqW,QAAU,gCAAkCxP,EAAS,IAC1D7G,KAAK6G,OAASA,CAChB,CAdAV,EAAyB,iBAAI6J,GAC7B7J,EAA4B,oBAAI8J,GAChC9J,EAAsB,cAAIoJ,GAAG4c,WAC7BhmB,EAA0B,kBAAIoJ,GAAGid,eACjCrmB,EAA+B,uBAAIoJ,GAAG+e,oBACtCnoB,EAA0B,kBAAIoJ,GAAGqd,eACjCzmB,EAAwB,gBAAIoJ,GAAGsb,aAC/B1kB,EAAkB,UAAIoJ,GAAG6P,OACzBjZ,EAAW,GAAIoJ,GAcf,SAAS6pC,GAAS5c,GAChB,IAAI0c,EAAgB/yC,EAAc,MAGlC,KAuDF,SAAcU,EAAQyyC,GACPzyC,EACTgC,QAr5IY,EAw5IV1C,EAAe,QACjBA,EAAe,OAAEU,GACnBuE,GAAQ,GAEVxE,EAAMC,EAAQ,IAAI8B,GAAW9B,GAC/B,CA/DIoP,CADUijC,EAHD,EACA,GAIX,CAAE,MAAOl1C,GACP,GAAIA,aAAa2E,IAAmB,UAAL3E,EAC7B,OAEF,IAAIm1C,EAAQn1C,EACRA,GAAkB,kBAANA,GAAkBA,EAAEqM,QAClC8oC,EAAQ,CAACn1C,EAAGA,EAAEqM,QAEhBhG,EAAI,qBAAuB8uC,GAC3BvyC,EAAM,EAAG5C,EACX,CAAE,SACa,CACf,CACF,CACA,SAAS80C,GAAItc,GASX,SAASwc,IACHlJ,KAEJA,IAAY,EACZ3pC,EAAkB,WAAI,EAClBiF,KAt4Ie,EAChBjF,EAAiB,UAAMoJ,GAAGC,KAAKC,aAClCF,GAAGC,OACLD,GAAGG,mBAAoB,EACvBC,GAAIH,OACJI,GAAqBX,IAGrBW,GAAqBV,IAk4InBjJ,EAAoBE,GAChBA,EAA6B,sBAC/BA,EAA6B,uBAC3B8yC,IACFG,KAj4IN,WACE,GAAIjzC,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEoC,QAYPrF,EAXHiD,EAAgB,QAAEmL,QAYnClC,GAAc0J,QAAQ5V,GADxB,IAAsBA,EARpB0M,GAAqBR,GACvB,CAy3IIiqC,IACF,CAvBA7c,EAAOA,GAAQ91B,EACXmJ,GAAkB,KAr4IxB,WACE,GAAI1J,EAAe,OAGjB,IAF+B,mBAApBA,EAAe,SACxBA,EAAe,OAAI,CAACA,EAAe,SAC9BA,EAAe,OAAEoC,QA8BPrF,EA7BHiD,EAAe,OAAEmL,QA8BjCtC,GAAa8J,QAAQ5V,GADvB,IAAqBA,EA1BnB0M,GAAqBZ,GACvB,CA+3IE+pC,GACIlpC,GAAkB,IAmBlB1J,EAAkB,WACpBA,EAAkB,UAAE,cACpBgL,YAAW,WACTA,YAAW,WACThL,EAAkB,UAAE,GACtB,GAAG,GACH6yC,GACF,GAAG,IAEHA,KAEJ,CAaA,GA5EAjpC,GAAwB,SAASwpC,IAC1BzJ,IACHgJ,KACGhJ,KACH//B,GAAwBwpC,EAC5B,EA2DApzC,EAAY,IAAI2yC,GAYZ3yC,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEoC,OAAS,GAChCpC,EAAgB,QAAEmN,KAAlBnN,GAGJ,IAAI8yC,IAAe,EAInB,OAHI9yC,EAAqB,eACvB8yC,IAAe,GACjBH,KACO/zC,EAAYy0C,KACrB,CACF,CAx1JkB,GAy1JK,kBAAZn2C,GAA0C,kBAAXmB,EACxCA,EAAOnB,QAAUoB,EACQ,oBAAXg1C,QAAyBA,OACvCA,OAAO,IAAI,WACT,OAAOh1C,CACT,IAC0B,kBAAZpB,IACdA,EAAoB,WAAIoB,EAC5B,IAOEm1C,EAAc,WAMdC,EAAiB,WACjBC,EAAoB,UAGpBC,EAA0B,WAE1BC,EAAW,WAEXC,EAAe,UAUfC,EAAgB,WAWhBC,EAA0B,UAS1BC,EAAU,UACVC,EAAsB,WAEtBC,EAAa,WAIbC,EAAY,SAcZC,EAAY,UACZC,EAAgB,UAChBC,EAAc,WACdC,EAAqB,WACrBC,EAAyB,WAEzBC,EAA0B,WAG1BC,EAAoB,WAEpBC,EAAY,WAGZC,EAAyB,UAEzBC,EAAyB,WAEzBC,EAAkB,WAElBC,EAAkB,WAElBC,EAAuB,WAYvBC,EAAa,WAEbC,EAAa,WAMbC,EAAkB,WAKlBC,EAAU,UAKVC,EAAY,UACZC,EAAwB,UAExBC,GAA6B,WAQ7BC,GAAgB,WAEhBC,GAAe,WAsBfC,GAAgB,SAIhBC,GAAgB,WAEhBC,GAAkB,WAOlBC,GAAc,WAOdC,GAAiB,WAWjBC,GAAY,WAEZC,GAAoB,WAOpBC,GAAuB,WAGvBC,GAAgC,WAGhCC,GAAgC,WAEhCC,GAAyB,WAEzBC,GAA6B,WAE7BC,GAAsB,WAKtBC,GAAU,UAGVC,GAAsB,WAKtBC,GAAiB,UAEjBC,GAAiB,WAEjBC,GAAkB,WAKlBC,GAAuB,WAEvBC,GAA+B,UAE/BC,GAA+B,WAE/BC,GAAuB,UAEvBC,GAAmB,UAEnBC,GAAyB,WAEzBC,GAAa,WACbC,GAAqB,WAErBC,GAAsB,WAOtBC,GAA4B,WAE5BC,GAAY,WAEZC,GAAuB,WAEvBC,GAAgB,UAShBC,GAA4B,WAC5BC,GAAqC,WAarCC,GAAc,SACdC,GAAkB,WAElBC,GAAS,WAETC,GAAc,UAEdC,GAAoB,WACpBC,GAA4B,WAC5BC,GAA+B,WAI/BC,GAAY,UAEZC,GAA6B,WAG7BC,GAAoB,WAEpBC,GAAiB,WAEjBC,GAAoB,UAEpBC,GAAe,WAEfC,GAAsB,WAEtBC,GAAiB,UAEjBC,GAAuB,UAEvBC,GAAkB,WAElBC,GAAyB,WAEzBC,GAAa,UAEbC,GAAuB,UAEvBC,GAAe,WAEfC,GAAuB,WAOvBC,GAAU,WAKVC,GAAmB,WAEnBC,GAAgB,WAUhBC,GAAiB,WAMjBC,GAAiB,WAMjBC,GAAU,SAKVC,GAAkB,UAYlBC,GAA8B,WA0B9BC,GAAwB,UAExBC,GAAmB,WAEnBC,GAAY,WACZC,GAAwB,WAKxBC,GAAqB,WAarBC,GAAoB,WACpBC,GAAyB,WAMzBC,GAAY,WAcZC,GAAU,WAEVC,GAAiB,UAEjBC,GAAiB,WAOjBC,GAAW,WACXC,GAAuB,WASvBC,GAAU,WACVC,GAAwB,WAiBxBC,GAA4B,UAI5BC,GAAa,UAIbC,GAAuB,WAiBvBC,GAAsB,UACtBC,GAAkC,WAGlCC,GAAW,WACXC,GAAU,SASVC,GAAa,WAEbC,GAAU,WACVC,GAAgB,WAWhBC,GAAc,WAIdC,GAAoB,UAEpBC,GAAwB,WAExBC,GAAqB,WAErBC,GAAmB,UAenBC,GAA2B,WAU3BC,GAAoC,WAOpCC,GAA4B,WAE5BC,GAAsB,UA6BtBC,GAAU,WAKVC,GAAsB,WAStBC,GAAY,WAEZC,GAAmB,WAQnBC,GAAU,WACVC,GAAU,WACVC,GAAuB,WACvBC,GAAsB,WAGtBC,GAAiB,WAGjBC,GAAW,WACXC,GAAiB,WAGjBC,GAAoB,WAEpBC,GAA6B,WAE7BC,GAAiB,UAIjBC,GAAmB,WAEnBC,GAAW,UACXC,GAAiB,WAGjBC,GAAsB,UACtBC,GAAwB,WAExBC,GAA0B,WAE1BC,GAA2B,WAC3BC,GAA+B,WAC/BC,GAA2B,UAC3BC,GAAkC,WAClCC,GAA6B,WAC7BC,GAAoB,WACpBC,GAA4B,WAc5BC,GAAsB,UACtBC,GAA4B,WAC5BC,GAA2B,WAC3BC,GAA+B,UAC/BC,GAA6B,WAC7BC,GAAwB,WAExBC,GAA6B,WAC7BC,GAAiC,WACjCC,GAA6B,WAC7BC,GAAoC,WACpCC,GAA+B,UAU/BC,GAAoB,WAepBC,GAAqB,WAGrBC,GAA4B,UAM5BC,GAAU,UAOVC,GAAY,WACZC,GAAkB,WAElBC,GAAmB,WAsBnBC,GAAiB,WAGjBC,GAAsB,WAMtBC,GAAgB,WAOhBC,GAAoB,UACpBC,GAA2B,UAE3BC,GAAsB,WAEtBC,GAAW,WAMXC,GAAqB,WAErBC,GAAuB,WAEvBC,GAAoB,WAEpBC,GAAoB,UACpBC,GAAU,WACVC,GAAuB,WACvBC,GAAsB,WAEtBC,GAAmB,WAEnBC,GAAY,WAGZC,GAAwB,UAUxBC,GAAc,CAChBjkB,CACtBA,WAAoC,SAAC3wC,GACnC,OAAO4wC,GAAiBC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,WAA4B,SAAC3wC,GAC3B,OAAO+wC,GAASF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,WAAgC,SAAC3wC,GAC/B,OAAOgxC,GAAaH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,WAA+B,SAAC3wC,GAC9B,OAAOixC,GAAYJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,WAAmC,SAAC3wC,GAClC,OAAOkxC,GAAgBL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,UAA8B,SAAC3wC,GAC7B,OAAOmxC,GAAWN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,WAAmC,SAAC3wC,GAClC,OAAOoxC,GAAgBP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,WAA4C,SAAC3wC,GAC3C,OAAOqxC,GAAyBR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,WAAmC,SAAC3wC,GAClC,OAAOsxC,GAAgBT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,WAAkC,SAAC3wC,GACjC,OAAOuxC,GAAeV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,UAAqC,SAAC3wC,GACpC,OAAOwxC,GAAkBX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,WAAyC,SAAC3wC,GACxC,OAAOyxC,GAAsBZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,WAAsC,SAAC3wC,GACrC,OAAO0xC,GAAmBb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,WAA2C,SAAC3wC,GAC1C,OAAO2xC,GAAwBd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,WAA+C,SAAC3wC,GAC9C,OAAO4xC,GAA4Bf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,WAA4B,SAAC3wC,GAC3B,OAAO6xC,GAAShB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,WAAgC,SAAC3wC,GAC/B,OAAO8xC,GAAajB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,UAAgC,SAAC3wC,GAC/B,OAAO+xC,GAAalB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,UAA4C,SAAC3wC,GAC3C,OAAOgyC,GAAyBnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,WAAmD,SAAC3wC,GAClD,OAAOiyC,GAAgCpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,WAAyC,SAAC3wC,GACxC,OAAOkyC,GAAsBrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,WAAmD,SAAC3wC,GAClD,OAAOmyC,GAAgCtB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,WAA4C,SAAC3wC,GAC3C,OAAOoyC,GAAyBvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,WAAoD,SAAC3wC,GACnD,OAAOqyC,GAAiCxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,SAA0C,SAAC3wC,GACzC,OAAOsyC,GAAuBzB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,WAAiD,SAAC3wC,GAChD,OAAOuyC,GAA8B1B,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,WAAqC,SAAC3wC,GACpC,OAAOwyC,GAAkB3B,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,WAAiC,SAAC3wC,GAChC,OAAOyyC,GAAc5B,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,UAAyC,SAAC3wC,GACxC,OAAO0yC,GAAsB7B,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,UAAkC,SAAC3wC,GACjC,OAAO2yC,GAAe9B,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,UAAmC,SAAC3wC,GAClC,OAAO4yC,GAAgB/B,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,UAA+B,SAAC3wC,GAC9B,OAAO6yC,GAAYhC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,WAA2C,SAAC3wC,GAC1C,OAAO8yC,GAAwBjC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,WAAgD,SAAC3wC,GAC/C,OAAO+yC,GAA6BlC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,WAA8C,SAAC3wC,GAC7C,OAAOgzC,GAA2BnC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,WAAmD,SAAC3wC,GAClD,OAAOizC,GAAgCpC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,WAA4B,SAAC3wC,GAC3B,OAAOkzC,GAASrC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,WAAiD,SAAC3wC,GAChD,OAAOmzC,GAA8BtC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,UAA2C,SAAC3wC,GAC1C,OAAOozC,GAAwBvC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,WAA+C,SAAC3wC,GAC9C,OAAOqzC,GAA4BxC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,WAAqC,SAAC3wC,GACpC,OAAOszC,GAAkBzC,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,WAAuC,SAAC3wC,GACtC,OAAOuzC,GAAoB1C,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,WAAuC,SAAC3wC,GACtC,OAAOwzC,GAAoB3C,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,WAAmC,SAAC3wC,GAClC,OAAOyzC,GAAgB5C,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,WAA4C,SAAC3wC,GAC3C,OAAO0zC,GAAyB7C,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,WAAqC,SAAC3wC,GACpC,OAAO2zC,GAAkB9C,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,UAA8C,SAAC3wC,GAC7C,OAAO4zC,GAA2B/C,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,GACA+rC,GAAgB1L,GAAW,SAACjlC,GAC1B,OAAO6zC,GAAQhD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAAgBzL,YAAuB,SAACllC,GACtC,OAAO8zC,GAAoBjD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAhlCkB,WAglCa,SAAC3wC,GAC9B,OAAO+zC,GAAYlD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgBxL,GAAc,SAACnlC,GAC7B,OAAOg0C,GAAWnD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAplCqB,YAolCa,SAAC3wC,GACjC,OAAOi0C,GAAepD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAtlCqB,WAslCa,SAAC3wC,GACjC,OAAOk0C,GAAerD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAxlCe,YAwlCa,SAAC3wC,GAC3B,OAAOm0C,GAAStD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAAgBvL,UAAa,SAACplC,GAC5B,OAAOo0C,GAAUvD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA5lCoB,WA4lCa,SAAC3wC,GAChC,OAAOq0C,GAAcxD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA9lC+B,YA8lCa,SAAC3wC,GAC3C,OAAOs0C,GAAyBzD,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAhmCuB,YAgmCa,SAAC3wC,GACnC,OAAOu0C,GAAiB1D,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAlmC2B,YAkmCa,SAAC3wC,GACvC,OAAOw0C,GAAqB3D,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GApmCuB,YAomCa,SAAC3wC,GACnC,OAAOy0C,GAAiB5D,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtmC+B,YAsmCa,SAAC3wC,GAC3C,OAAO00C,GAAyB7D,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAxmC+B,YAwmCa,SAAC3wC,GAC3C,OAAO20C,GAAyB9D,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA1mC+B,YA0mCa,SAAC3wC,GAC3C,OAAO40C,GAAyB/D,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA5mCsC,YA4mCa,SAAC3wC,GAClD,OAAO60C,GAAgChE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GA9mCsB,YA8mCa,SAAC3wC,GAClC,OAAO80C,GAAgBjE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAhnCwB,YAgnCa,SAAC3wC,GACpC,OAAO+0C,GAAkBlE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAlnCqB,YAknCa,SAAC3wC,GACjC,OAAOg1C,GAAenE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GApnCwB,YAonCa,SAAC3wC,GACpC,OAAOi1C,GAAkBpE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBtL,GAAa,SAACrlC,GAC5B,OAAOk1C,GAAUrE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAAgBrL,WAAiB,SAACtlC,GAChC,OAAOm1C,GAActE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgBpL,GAAe,SAACvlC,GAC9B,OAAOo1C,GAAYvE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgBnL,YAAsB,SAACxlC,GACrC,OAAOq1C,GAAmBxE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBlL,YAA0B,SAACzlC,GACzC,OAAOs1C,GAAuBzE,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAhoCiC,UAgoCa,SAAC3wC,GAC7C,OAAOu1C,GAA2B1E,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgBjL,GAA2B,SAAC1lC,GAC1C,OAAOw1C,GAAwB3E,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GApoCkC,YAooCa,SAAC3wC,GAC9C,OAAOy1C,GAA4B5E,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAtoC6B,YAsoCa,SAAC3wC,GACzC,OAAO01C,GAAuB7E,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBhL,GAAqB,SAAC3lC,GACpC,OAAO21C,GAAkB9E,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA1oCwB,YA0oCa,SAAC3wC,GACpC,OAAO41C,GAAkB/E,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgB/K,GAAa,SAAC5lC,GAC5B,OAAO61C,GAAUhF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA9oCoB,YA8oCa,SAAC3wC,GAChC,OAAO81C,GAAcjF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAhpC0B,YAgpCa,SAAC3wC,GACtC,OAAO+1C,GAAoBlF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgB9K,WAA0B,SAAC7lC,GACzC,OAAOg2C,GAAuBnF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAppCiC,WAopCa,SAAC3wC,GAC7C,OAAOi2C,GAA2BpF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB7K,YAA0B,SAAC9lC,GACzC,OAAOk2C,GAAuBrF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAxpCiC,YAwpCa,SAAC3wC,GAC7C,OAAOm2C,GAA2BtF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB5K,YAAmB,SAAC/lC,GAClC,OAAOo2C,GAAgBvF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA5pC0B,YA4pCa,SAAC3wC,GACtC,OAAOq2C,GAAoBxF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgB3K,YAAmB,SAAChmC,GAClC,OAAOs2C,GAAgBzF,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAhqC0B,YAgqCa,SAAC3wC,GACtC,OAAOu2C,GAAoB1F,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgB1K,YAAwB,SAACjmC,GACvC,OAAOw2C,GAAqB3F,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GApqC+B,YAoqCa,SAAC3wC,GAC3C,OAAOy2C,GAAyB5F,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAtqCwB,YAsqCa,SAAC3wC,GACpC,OAAO02C,GAAkB7F,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAxqC4B,WAwqCa,SAAC3wC,GACxC,OAAO22C,GAAsB9F,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA1qC8B,YA0qCa,SAAC3wC,GAC1C,OAAO42C,GAAwB/F,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA5qC8B,YA4qCa,SAAC3wC,GAC1C,OAAO62C,GAAwBhG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA9qCyC,UA8qCa,SAAC3wC,GACrD,OAAO82C,GAAmCjG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GAhrC2C,YAgrCa,SAAC3wC,GACvD,OAAO+2C,GAAqClG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvE,EACA+rC,GAlrCqD,YAkrCa,SAAC3wC,GACjE,OAAOg3C,GAA+CnG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjF,EACA+rC,GAprC2C,YAorCa,SAAC3wC,GACvD,OAAOi3C,GAAqCpG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvE,EACA+rC,GAtrCqD,YAsrCa,SAAC3wC,GACjE,OAAOk3C,GAA+CrG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjF,EACA+rC,GAxrC8B,YAwrCa,SAAC3wC,GAC1C,OAAOm3C,GAAwBtG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgBzK,GAAc,SAAClmC,GAC7B,OAAOo3C,GAAWvG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GA5rCqB,YA4rCa,SAAC3wC,GACjC,OAAOq3C,GAAexG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAAgBxK,GAAc,SAACnmC,GAC7B,OAAOs3C,GAAWzG,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAhsCqB,YAgsCa,SAAC3wC,GACjC,OAAOu3C,GAAe1G,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAlsCgB,YAksCa,SAAC3wC,GAC5B,OAAOw3C,GAAU3G,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GApsCgC,YAosCa,SAAC3wC,GAC5C,OAAOy3C,GAA0B5G,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAtsC0B,YAssCa,SAAC3wC,GACtC,OAAO03C,GAAoB7G,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAxsC8B,YAwsCa,SAAC3wC,GAC1C,OAAO23C,GAAwB9G,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgBvK,YAAmB,SAACpmC,GAClC,OAAO43C,GAAgB/G,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA5sC0B,YA4sCa,SAAC3wC,GACtC,OAAO63C,GAAoBhH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA9sCwB,WA8sCa,SAAC3wC,GACpC,OAAO83C,GAAkBjH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAhtCiC,WAgtCa,SAAC3wC,GAC7C,OAAO+3C,GAA2BlH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAltCqB,YAktCa,SAAC3wC,GACjC,OAAOg4C,GAAenH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAAgBtK,GAAW,SAACrmC,GAC1B,OAAOi4C,GAAQpH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAttCkB,YAstCa,SAAC3wC,GAC9B,OAAOk4C,GAAYrH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAxtCmB,WAwtCa,SAAC3wC,GAC/B,OAAOm4C,GAAatH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GA1tCuB,YA0tCa,SAAC3wC,GACnC,OAAOo4C,GAAiBvH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA5tC6B,YA4tCa,SAAC3wC,GACzC,OAAOq4C,GAAuBxH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBrK,GAAa,SAACtmC,GAC5B,OAAOs4C,GAAUzH,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAAgBpK,WAAyB,SAACvmC,GACxC,OAAOu4C,GAAsB1H,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAluCoB,WAkuCa,SAAC3wC,GAChC,OAAOw4C,GAAc3H,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgBnK,YAA8B,SAACxmC,GAC7C,OAAOy4C,GAA2B5H,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAtuCqC,WAsuCa,SAAC3wC,GACjD,OAAO04C,GAA+B7H,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAxuCyB,YAwuCa,SAAC3wC,GACrC,OAAO24C,GAAmB9H,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA1uCiC,YA0uCa,SAAC3wC,GAC7C,OAAO44C,GAA2B/H,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA5uCwB,YA4uCa,SAAC3wC,GACpC,OAAO64C,GAAkBhI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA9uCiC,UA8uCa,SAAC3wC,GAC7C,OAAO84C,GAA2BjI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAhvC+B,YAgvCa,SAAC3wC,GAC3C,OAAO+4C,GAAyBlI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAlvC6B,YAkvCa,SAAC3wC,GACzC,OAAOg5C,GAAuBnI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBlK,YAAiB,SAACzmC,GAChC,OAAOi5C,GAAcpI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAtvCwB,YAsvCa,SAAC3wC,GACpC,OAAOk5C,GAAkBrI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBjK,YAAgB,SAAC1mC,GAC/B,OAAOm5C,GAAatI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GA1vCuB,YA0vCa,SAAC3wC,GACnC,OAAOo5C,GAAiBvI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA5vCe,YA4vCa,SAAC3wC,GAC3B,OAAOq5C,GAASxI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GA9vC0B,WA8vCa,SAAC3wC,GACtC,OAAOs5C,GAAoBzI,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAhwCiC,YAgwCa,SAAC3wC,GAC7C,OAAOu5C,GAA2B1I,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAlwC4B,YAkwCa,SAAC3wC,GACxC,OAAOw5C,GAAsB3I,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GApwCqC,UAowCa,SAAC3wC,GACjD,OAAOy5C,GAA+B5I,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAtwCiC,YAswCa,SAAC3wC,GAC7C,OAAO05C,GAA2B7I,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAxwCmC,YAwwCa,SAAC3wC,GAC/C,OAAO25C,GAA6B9I,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA1wCkC,WA0wCa,SAAC3wC,GAC9C,OAAO45C,GAA4B/I,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA5wCoB,YA4wCa,SAAC3wC,GAChC,OAAO65C,GAAchJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA9wCuC,YA8wCa,SAAC3wC,GACnD,OAAO85C,GAAiCjJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAhxC2C,YAgxCa,SAAC3wC,GACvD,OAAO+5C,GAAqClJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvE,EACA+rC,GAlxCsC,YAkxCa,SAAC3wC,GAClD,OAAOg6C,GAAgCnJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GApxC0C,YAoxCa,SAAC3wC,GACtD,OAAOi6C,GAAoCpJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtE,EACA+rC,GAtxCqC,WAsxCa,SAAC3wC,GACjD,OAAOk6C,GAA+BrJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAxxCyC,YAwxCa,SAAC3wC,GACrD,OAAOm6C,GAAmCtJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GA1xC8B,YA0xCa,SAAC3wC,GAC1C,OAAOo6C,GAAwBvJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA5xCkC,YA4xCa,SAAC3wC,GAC9C,OAAOq6C,GAA4BxJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA9xCiB,YA8xCa,SAAC3wC,GAC7B,OAAOs6C,GAAWzJ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAhyC8B,YAgyCa,SAAC3wC,GAC1C,OAAOu6C,GAAwB1J,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAlyCiB,YAkyCa,SAAC3wC,GAC7B,OAAOw6C,GAAW3J,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAAgBhK,UAAiB,SAAC3mC,GAChC,OAAOy6C,GAAc5J,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAtyCwB,WAsyCa,SAAC3wC,GACpC,OAAO06C,GAAkB7J,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAxyC6B,YAwyCa,SAAC3wC,GACzC,OAAO26C,GAAuB9J,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA1yCuC,YA0yCa,SAAC3wC,GACnD,OAAO46C,GAAiC/J,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAAgB/J,YAAiB,SAAC5mC,GAChC,OAAO66C,GAAchK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA9yCwB,WA8yCa,SAAC3wC,GACpC,OAAO86C,GAAkBjK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgB9J,YAAmB,SAAC7mC,GAClC,OAAO+6C,GAAgBlK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAlzC0B,YAkzCa,SAAC3wC,GACtC,OAAOg7C,GAAoBnK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GApzC6B,YAozCa,SAAC3wC,GACzC,OAAOi7C,GAAuBpK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAtzCmC,YAszCa,SAAC3wC,GAC/C,OAAOk7C,GAA6BrK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAxzCkB,YAwzCa,SAAC3wC,GAC9B,OAAOm7C,GAAYtK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA1zCsB,YA0zCa,SAAC3wC,GAClC,OAAOo7C,GAAgBvK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA5zCmB,WA4zCa,SAAC3wC,GAC/B,OAAOq7C,GAAaxK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAAgB7J,YAAe,SAAC9mC,GAC9B,OAAOs7C,GAAYzK,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAh0CsB,YAg0Ca,SAAC3wC,GAClC,OAAOu7C,GAAgB1K,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAl0CsB,YAk0Ca,SAAC3wC,GAClC,OAAOw7C,GAAgB3K,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAp0C0B,YAo0Ca,SAAC3wC,GACtC,OAAOy7C,GAAoB5K,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAt0CwB,YAs0Ca,SAAC3wC,GACpC,OAAO07C,GAAkB7K,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAx0CkB,YAw0Ca,SAAC3wC,GAC9B,OAAO27C,GAAY9K,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA10C8B,WA00Ca,SAAC3wC,GAC1C,OAAO47C,GAAwB/K,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgB5J,IAAkB,SAAC/mC,GACjC,OAAO67C,GAAehL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA90CyB,YA80Ca,SAAC3wC,GACrC,OAAO87C,GAAmBjL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAh1Ce,YAg1Ca,SAAC3wC,GAC3B,OAAO+7C,GAASlL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAl1C2B,YAk1Ca,SAAC3wC,GACvC,OAAOg8C,GAAqBnL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAp1C6B,YAo1Ca,SAAC3wC,GACzC,OAAOi8C,GAAuBpL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAt1CwB,YAs1Ca,SAAC3wC,GACpC,OAAOk8C,GAAkBrL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAx1CoB,YAw1Ca,SAAC3wC,GAChC,OAAOm8C,GAActL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA11CwB,YA01Ca,SAAC3wC,GACpC,OAAOo8C,GAAkBvL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA51CkC,YA41Ca,SAAC3wC,GAC9C,OAAOq8C,GAA4BxL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA91C+B,YA81Ca,SAAC3wC,GAC3C,OAAOs8C,GAAyBzL,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAh2C4B,YAg2Ca,SAAC3wC,GACxC,OAAOu8C,GAAsB1L,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgB3J,IAAa,SAAChnC,GAC5B,OAAOw8C,GAAU3L,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAp2CoB,YAo2Ca,SAAC3wC,GAChC,OAAOy8C,GAAc5L,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgB1J,YAAqB,SAACjnC,GACpC,OAAO08C,GAAkB7L,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAx2C4B,YAw2Ca,SAAC3wC,GACxC,OAAO28C,GAAsB9L,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA12C2B,YA02Ca,SAAC3wC,GACvC,OAAO48C,GAAqB/L,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA52CqB,YA42Ca,SAAC3wC,GACjC,OAAO68C,GAAehM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA92C4B,YA82Ca,SAAC3wC,GACxC,OAAO88C,GAAsBjM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAh3C8B,YAg3Ca,SAAC3wC,GAC1C,OAAO+8C,GAAwBlM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAl3CmB,UAk3Ca,SAAC3wC,GAC/B,OAAOg9C,GAAanM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAAgBzJ,YAAwB,SAAClnC,GACvC,OAAOi9C,GAAqBpM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAt3C+B,YAs3Ca,SAAC3wC,GAC3C,OAAOk9C,GAAyBrM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAx3C4B,YAw3Ca,SAAC3wC,GACxC,OAAOm9C,GAAsBtM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBxJ,YAAiC,SAACnnC,GAChD,OAAOo9C,GAA8BvM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GA53CwC,YA43Ca,SAAC3wC,GACpD,OAAOq9C,GAAkCxM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GA93C6B,WA83Ca,SAAC3wC,GACzC,OAAOs9C,GAAuBzM,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBvJ,YAAiC,SAACpnC,GAChD,OAAOu9C,GAA8B1M,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAl4CwC,YAk4Ca,SAAC3wC,GACpD,OAAOw9C,GAAkC3M,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GAAgBtJ,YAA0B,SAACrnC,GACzC,OAAOy9C,GAAuB5M,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAt4CiC,YAs4Ca,SAAC3wC,GAC7C,OAAO09C,GAA2B7M,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgBrJ,YAA8B,SAACtnC,GAC7C,OAAO29C,GAA2B9M,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA14CqC,YA04Ca,SAAC3wC,GACjD,OAAO49C,GAA+B/M,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAAgBpJ,YAAuB,SAACvnC,GACtC,OAAO69C,GAAoBhN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA94C4B,YA84Ca,SAAC3wC,GACxC,OAAO89C,GAAsBjN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAh5C6B,YAg5Ca,SAAC3wC,GACzC,OAAO+9C,GAAuBlN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAl5CyC,WAk5Ca,SAAC3wC,GACrD,OAAOg+C,GAAmCnN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GAp5C2B,YAo5Ca,SAAC3wC,GACvC,OAAOi+C,GAAqBpN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBnJ,IAAW,SAACxnC,GAC1B,OAAOk+C,GAAQrN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAx5C8B,YAw5Ca,SAAC3wC,GAC1C,OAAOm+C,GAAwBtN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA15C6B,YA05Ca,SAAC3wC,GACzC,OAAOo+C,GAAuBvN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBlJ,YAAuB,SAACznC,GACtC,OAAOq+C,GAAoBxN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA95CmB,WA85Ca,SAAC3wC,GAC/B,OAAOs+C,GAAazN,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAh6CkB,YAg6Ca,SAAC3wC,GAC9B,OAAOu+C,GAAY1N,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAl6CoC,WAk6Ca,SAAC3wC,GAChD,OAAOw+C,GAA8B3N,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAp6CuC,YAo6Ca,SAAC3wC,GACnD,OAAOy+C,GAAiC5N,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAAgBjJ,WAAkB,SAAC1nC,GACjC,OAAO0+C,GAAe7N,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAx6CyB,WAw6Ca,SAAC3wC,GACrC,OAAO2+C,GAAmB9N,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBhJ,YAAkB,SAAC3nC,GACjC,OAAO4+C,GAAe/N,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA56CyB,YA46Ca,SAAC3wC,GACrC,OAAO6+C,GAAmBhO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgB/I,YAAmB,SAAC5nC,GAClC,OAAO8+C,GAAgBjO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAh7C0B,YAg7Ca,SAAC3wC,GACtC,OAAO++C,GAAoBlO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAl7Cc,YAk7Ca,SAAC3wC,GAC1B,OAAOg/C,GAAQnO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAp7CmB,WAo7Ca,SAAC3wC,GAC/B,OAAOi/C,GAAapO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAt7CkB,YAs7Ca,SAAC3wC,GAC9B,OAAOk/C,GAAYrO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgB9I,YAAwB,SAAC7nC,GACvC,OAAOm/C,GAAqBtO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA17C+B,WA07Ca,SAAC3wC,GAC3C,OAAOo/C,GAAyBvO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB7I,WAAgC,SAAC9nC,GAC/C,OAAOq/C,GAA6BxO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA97CuC,YA87Ca,SAAC3wC,GACnD,OAAOs/C,GAAiCzO,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAAgB5I,YAAgC,SAAC/nC,GAC/C,OAAOu/C,GAA6B1O,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAl8CuC,YAk8Ca,SAAC3wC,GACnD,OAAOw/C,GAAiC3O,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAAgB3I,WAAwB,SAAChoC,GACvC,OAAOy/C,GAAqB5O,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAt8C+B,YAs8Ca,SAAC3wC,GAC3C,OAAO0/C,GAAyB7O,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB1I,WAAoB,SAACjoC,GACnC,OAAO2/C,GAAiB9O,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA18C2B,YA08Ca,SAAC3wC,GACvC,OAAO4/C,GAAqB/O,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBzI,YAA0B,SAACloC,GACzC,OAAO6/C,GAAuBhP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA98CiC,WA88Ca,SAAC3wC,GAC7C,OAAO8/C,GAA2BjP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgBxI,IAAc,SAACnoC,GAC7B,OAAO+/C,GAAWlP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAAgBvI,YAAsB,SAACpoC,GACrC,OAAOggD,GAAmBnP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAp9C6B,YAo9Ca,SAAC3wC,GACzC,OAAOigD,GAAuBpP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBtI,YAAuB,SAACroC,GACtC,OAAOkgD,GAAoBrP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAx9C8B,YAw9Ca,SAAC3wC,GAC1C,OAAOmgD,GAAwBtP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA19CyB,YA09Ca,SAAC3wC,GACrC,OAAOogD,GAAmBvP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA59CqB,WA49Ca,SAAC3wC,GACjC,OAAOqgD,GAAexP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA99C2B,YA89Ca,SAAC3wC,GACvC,OAAOsgD,GAAqBzP,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAh+CiB,YAg+Ca,SAAC3wC,GAC7B,OAAOugD,GAAW1P,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAl+C2B,YAk+Ca,SAAC3wC,GACvC,OAAOwgD,GAAqB3P,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBrI,YAA6B,SAACtoC,GAC5C,OAAOygD,GAA0B5P,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAt+CoC,YAs+Ca,SAAC3wC,GAChD,OAAO0gD,GAA8B7P,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAAgBpI,IAAa,SAACvoC,GAC5B,OAAO2gD,GAAU9P,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA1+CoB,WA0+Ca,SAAC3wC,GAChC,OAAO4gD,GAAc/P,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgBnI,YAAwB,SAACxoC,GACvC,OAAO6gD,GAAqBhQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA9+C+B,YA8+Ca,SAAC3wC,GAC3C,OAAO8gD,GAAyBjQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgBlI,WAAiB,SAACzoC,GAChC,OAAO+gD,GAAclQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAl/CwB,YAk/Ca,SAAC3wC,GACpC,OAAOghD,GAAkBnQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAp/Ce,YAo/Ca,SAAC3wC,GAC3B,OAAOihD,GAASpQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAt/CmB,WAs/Ca,SAAC3wC,GAC/B,OAAOkhD,GAAarQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAx/CmB,YAw/Ca,SAAC3wC,GAC/B,OAAOmhD,GAAatQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GA1/C4B,WA0/Ca,SAAC3wC,GACxC,OAAOohD,GAAsBvQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA5/C6B,YA4/Ca,SAAC3wC,GACzC,OAAOqhD,GAAuBxQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA9/C2B,YA8/Ca,SAAC3wC,GACvC,OAAOshD,GAAqBzQ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAhgDuC,YAggDa,SAAC3wC,GACnD,OAAOuhD,GAAiC1Q,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAAgBjI,YAA6B,SAAC1oC,GAC5C,OAAOwhD,GAA0B3Q,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgBhI,YAAsC,SAAC3oC,GACrD,OAAOyhD,GAAmC5Q,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GAtgDqC,YAsgDa,SAAC3wC,GACjD,OAAO0hD,GAA+B7Q,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAxgDuC,YAwgDa,SAAC3wC,GACnD,OAAO2hD,GAAiC9Q,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GA1gDmC,YA0gDa,SAAC3wC,GAC/C,OAAO4hD,GAA6B/Q,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA5gD2B,WA4gDa,SAAC3wC,GACvC,OAAO6hD,GAAqBhR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA9gDkC,YA8gDa,SAAC3wC,GAC9C,OAAO8hD,GAA4BjR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAhhDc,YAghDa,SAAC3wC,GAC1B,OAAO+hD,GAAQlR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAlhD+B,YAkhDa,SAAC3wC,GAC3C,OAAOgiD,GAAyBnR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAphDmB,YAohDa,SAAC3wC,GAC/B,OAAOiiD,GAAapR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAthDwB,WAshDa,SAAC3wC,GACpC,OAAOkiD,GAAkBrR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAxhDqB,YAwhDa,SAAC3wC,GACjC,OAAOmiD,GAAetR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA1hDqB,WA0hDa,SAAC3wC,GACjC,OAAOoiD,GAAevR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA5hD8B,YA4hDa,SAAC3wC,GAC1C,OAAOqiD,GAAwBxR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgB/H,UAAe,SAAC5oC,GAC9B,OAAOsiD,GAAYzR,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgB9H,YAAmB,SAAC7oC,GAClC,OAAOuiD,GAAgB1R,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAliDoC,YAkiDa,SAAC3wC,GAChD,OAAOwiD,GAA8B3R,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAAgB7H,IAAU,SAAC9oC,GACzB,OAAOyiD,GAAO5R,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzC,EACA+rC,GAtiDiB,WAsiDa,SAAC3wC,GAC7B,OAAO0iD,GAAW7R,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAAgB5H,WAAe,SAAC/oC,GAC9B,OAAO2iD,GAAY9R,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA1iDsB,YA0iDa,SAAC3wC,GAClC,OAAO4iD,GAAgB/R,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAAgB3H,YAAqB,SAAChpC,GACpC,OAAO6iD,GAAkBhS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgB1H,YAA6B,SAACjpC,GAC5C,OAAO8iD,GAA0BjS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgBzH,YAAgC,SAAClpC,GAC/C,OAAO+iD,GAA6BlS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAljDuB,WAkjDa,SAAC3wC,GACnC,OAAOgjD,GAAiBnS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GApjD+B,WAojDa,SAAC3wC,GAC3C,OAAOijD,GAAyBpS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAtjD4B,WAsjDa,SAAC3wC,GACxC,OAAOkjD,GAAsBrS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBxH,IAAa,SAACnpC,GAC5B,OAAOmjD,GAAUtS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA1jDoB,YA0jDa,SAAC3wC,GAChC,OAAOojD,GAAcvS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgBvH,YAA8B,SAACppC,GAC7C,OAAOqjD,GAA2BxS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA9jDqC,YA8jDa,SAAC3wC,GACjD,OAAOsjD,GAA+BzS,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAhkDsC,YAgkDa,SAAC3wC,GAClD,OAAOujD,GAAgC1S,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GAAgBtH,YAAqB,SAACrpC,GACpC,OAAOwjD,GAAkB3S,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GApkD4B,YAokDa,SAAC3wC,GACxC,OAAOyjD,GAAsB5S,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBrH,YAAkB,SAACtpC,GACjC,OAAO0jD,GAAe7S,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAxkDyB,YAwkDa,SAAC3wC,GACrC,OAAO2jD,GAAmB9S,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBpH,WAAqB,SAACvpC,GACpC,OAAO4jD,GAAkB/S,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA5kD4B,YA4kDa,SAAC3wC,GACxC,OAAO6jD,GAAsBhT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBnH,YAAgB,SAACxpC,GAC/B,OAAO8jD,GAAajT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAhlDuB,YAglDa,SAAC3wC,GACnC,OAAO+jD,GAAiBlT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAAgBlH,YAAuB,SAACzpC,GACtC,OAAOgkD,GAAoBnT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAplD8B,YAolDa,SAAC3wC,GAC1C,OAAOikD,GAAwBpT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgBjH,WAAkB,SAAC1pC,GACjC,OAAOkkD,GAAerT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAxlDyB,YAwlDa,SAAC3wC,GACrC,OAAOmkD,GAAmBtT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBhH,WAAwB,SAAC3pC,GACvC,OAAOokD,GAAqBvT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA5lD+B,YA4lDa,SAAC3wC,GAC3C,OAAOqkD,GAAyBxT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB/G,YAAmB,SAAC5pC,GAClC,OAAOskD,GAAgBzT,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAhmD0B,YAgmDa,SAAC3wC,GACtC,OAAOukD,GAAoB1T,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgB9G,YAA0B,SAAC7pC,GACzC,OAAOwkD,GAAuB3T,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GApmDiC,YAomDa,SAAC3wC,GAC7C,OAAOykD,GAA2B5T,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB7G,IAAc,SAAC9pC,GAC7B,OAAO0kD,GAAW7T,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAxmDqB,YAwmDa,SAAC3wC,GACjC,OAAO2kD,GAAe9T,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAAgB5G,IAAwB,SAAC/pC,GACvC,OAAO4kD,GAAqB/T,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA5mD+B,YA4mDa,SAAC3wC,GAC3C,OAAO6kD,GAAyBhU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB3G,YAAgB,SAAChqC,GAC/B,OAAO8kD,GAAajU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAhnDuB,YAgnDa,SAAC3wC,GACnC,OAAO+kD,GAAiBlU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAAgB1G,YAAwB,SAACjqC,GACvC,OAAOglD,GAAqBnU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GApnD+B,YAonDa,SAAC3wC,GAC3C,OAAOilD,GAAyBpU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAtnD2B,WAsnDa,SAAC3wC,GACvC,OAAOklD,GAAqBrU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAxnDwC,YAwnDa,SAAC3wC,GACpD,OAAOmlD,GAAkCtU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GA1nDqC,YA0nDa,SAAC3wC,GACjD,OAAOolD,GAA+BvU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GA5nD2C,YA4nDa,SAAC3wC,GACvD,OAAOqlD,GAAqCxU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvE,EACA+rC,GA9nDsB,YA8nDa,SAAC3wC,GAClC,OAAOslD,GAAgBzU,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAAgBzG,IAAW,SAAClqC,GAC1B,OAAOulD,GAAQ1U,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAloDkB,WAkoDa,SAAC3wC,GAC9B,OAAOwlD,GAAY3U,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GApoDuB,WAooDa,SAAC3wC,GACnC,OAAOylD,GAAiB5U,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtoDe,YAsoDa,SAAC3wC,GAC3B,OAAO0lD,GAAS7U,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAxoDwB,WAwoDa,SAAC3wC,GACpC,OAAO2lD,GAAkB9U,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBxG,YAAoB,SAACnqC,GACnC,OAAO4lD,GAAiB/U,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA5oD2B,YA4oDa,SAAC3wC,GACvC,OAAO6lD,GAAqBhV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBvG,YAAiB,SAACpqC,GAChC,OAAO8lD,GAAcjV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAhpDwB,YAgpDa,SAAC3wC,GACpC,OAAO+lD,GAAkBlV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAlpD0B,YAkpDa,SAAC3wC,GACtC,OAAOgmD,GAAoBnV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAppDsB,YAopDa,SAAC3wC,GAClC,OAAOimD,GAAgBpV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAtpD0B,YAspDa,SAAC3wC,GACtC,OAAOkmD,GAAoBrV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAxpD0B,YAwpDa,SAAC3wC,GACtC,OAAOmmD,GAAoBtV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA1pD8B,WA0pDa,SAAC3wC,GAC1C,OAAOomD,GAAwBvV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA5pDuC,YA4pDa,SAAC3wC,GACnD,OAAOqmD,GAAiCxV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GA9pD2B,YA8pDa,SAAC3wC,GACvC,OAAOsmD,GAAqBzV,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAhqDmC,YAgqDa,SAAC3wC,GAC/C,OAAOumD,GAA6B1V,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAAgBtG,YAAkB,SAACrqC,GACjC,OAAOwmD,GAAe3V,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GApqDyB,YAoqDa,SAAC3wC,GACrC,OAAOymD,GAAmB5V,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAtqD2B,YAsqDa,SAAC3wC,GACvC,OAAO0mD,GAAqB7V,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAxqDmB,YAwqDa,SAAC3wC,GAC/B,OAAO2mD,GAAa9V,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GA1qD6B,YA0qDa,SAAC3wC,GACzC,OAAO4mD,GAAuB/V,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA5qDkC,YA4qDa,SAAC3wC,GAC9C,OAAO6mD,GAA4BhW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAAgBrG,YAAkB,SAACtqC,GACjC,OAAO8mD,GAAejW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAhrDyB,YAgrDa,SAAC3wC,GACrC,OAAO+mD,GAAmBlW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAlrD0B,WAkrDa,SAAC3wC,GACtC,OAAOgnD,GAAoBnW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAprDuB,YAorDa,SAAC3wC,GACnC,OAAOinD,GAAiBpW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtrD2B,WAsrDa,SAAC3wC,GACvC,OAAOknD,GAAqBrW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAxrDiB,YAwrDa,SAAC3wC,GAC7B,OAAOmnD,GAAWtW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAAgBpG,IAAW,SAACvqC,GAC1B,OAAOonD,GAAQvW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GA5rDkB,YA4rDa,SAAC3wC,GAC9B,OAAOqnD,GAAYxW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA9rD4B,YA8rDa,SAAC3wC,GACxC,OAAOsnD,GAAsBzW,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAhsD0B,YAgsDa,SAAC3wC,GACtC,OAAOunD,GAAoB1W,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAlsD+B,YAksDa,SAAC3wC,GAC3C,OAAOwnD,GAAyB3W,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgBnG,WAAmB,SAACxqC,GAClC,OAAOynD,GAAgB5W,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAtsD0B,YAssDa,SAAC3wC,GACtC,OAAO0nD,GAAoB7W,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAxsDoC,YAwsDa,SAAC3wC,GAChD,OAAO2nD,GAA8B9W,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GA1sDqB,YA0sDa,SAAC3wC,GACjC,OAAO4nD,GAAe/W,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA5sD4B,WA4sDa,SAAC3wC,GACxC,OAAO6nD,GAAsBhX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA9sDgC,YA8sDa,SAAC3wC,GAC5C,OAAO8nD,GAA0BjX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAhtDgC,YAgtDa,SAAC3wC,GAC5C,OAAO+nD,GAA0BlX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAltD+B,YAktDa,SAAC3wC,GAC3C,OAAOgoD,GAAyBnX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAptDyB,YAotDa,SAAC3wC,GACrC,OAAOioD,GAAmBpX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAttDc,YAstDa,SAAC3wC,GAC1B,OAAOkoD,GAAQrX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAxtDuB,YAwtDa,SAAC3wC,GACnC,OAAOmoD,GAAiBtX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA1tDyB,WA0tDa,SAAC3wC,GACrC,OAAOooD,GAAmBvX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBlG,YAA+B,SAACzqC,GAC9C,OAAOqoD,GAA4BxX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA9tDwB,YA8tDa,SAAC3wC,GACpC,OAAOsoD,GAAkBzX,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAhuDc,YAguDa,SAAC3wC,GAC1B,OAAOuoD,GAAQ1X,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAluD2B,YAkuDa,SAAC3wC,GACvC,OAAOwoD,GAAqB3X,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GApuDuB,YAouDa,SAAC3wC,GACnC,OAAOyoD,GAAiB5X,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtuDoB,YAsuDa,SAAC3wC,GAChC,OAAO0oD,GAAc7X,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAxuDkB,YAwuDa,SAAC3wC,GAC9B,OAAO2oD,GAAY9X,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA1uD4C,YA0uDa,SAAC3wC,GACxD,OAAO4oD,GAAsC/X,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxE,EACA+rC,GA5uD6B,WA4uDa,SAAC3wC,GACzC,OAAO6oD,GAAuBhY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA9uDgC,YA8uDa,SAAC3wC,GAC5C,OAAO8oD,GAA0BjY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAhvD4B,WAgvDa,SAAC3wC,GACxC,OAAO+oD,GAAsBlY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAlvD0C,YAkvDa,SAAC3wC,GACtD,OAAOgpD,GAAoCnY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtE,EACA+rC,GApvDuB,WAovDa,SAAC3wC,GACnC,OAAOipD,GAAiBpY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtvD0B,YAsvDa,SAAC3wC,GACtC,OAAOkpD,GAAoBrY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAxvD+B,YAwvDa,SAAC3wC,GAC3C,OAAOmpD,GAAyBtY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA1vDkC,YA0vDa,SAAC3wC,GAC9C,OAAOopD,GAA4BvY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA5vDsB,YA4vDa,SAAC3wC,GAClC,OAAOqpD,GAAgBxY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA9vDyB,YA8vDa,SAAC3wC,GACrC,OAAOspD,GAAmBzY,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAhwD4B,WAgwDa,SAAC3wC,GACxC,OAAOupD,GAAsB1Y,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAlwDiC,YAkwDa,SAAC3wC,GAC7C,OAAOwpD,GAA2B3Y,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GApwDyC,YAowDa,SAAC3wC,GACrD,OAAOypD,GAAmC5Y,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GAtwDoC,WAswDa,SAAC3wC,GAChD,OAAO0pD,GAA8B7Y,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAxwD4B,YAwwDa,SAAC3wC,GACxC,OAAO2pD,GAAsB9Y,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA1wD8B,WA0wDa,SAAC3wC,GAC1C,OAAO4pD,GAAwB/Y,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA5wDiC,YA4wDa,SAAC3wC,GAC7C,OAAO6pD,GAA2BhZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA9wDyB,YA8wDa,SAAC3wC,GACrC,OAAO8pD,GAAmBjZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBjG,WAAyB,SAAC1qC,GACxC,OAAO+pD,GAAsBlZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAlxDgC,YAkxDa,SAAC3wC,GAC5C,OAAOgqD,GAA0BnZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgBhG,YAAoB,SAAC3qC,GACnC,OAAOiqD,GAAiBpZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtxD2B,YAsxDa,SAAC3wC,GACvC,OAAOkqD,GAAqBrZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgB/F,IAAa,SAAC5qC,GAC5B,OAAOmqD,GAAUtZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAAgB9F,YAAyB,SAAC7qC,GACxC,OAAOoqD,GAAsBvZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA5xDoB,YA4xDa,SAAC3wC,GAChC,OAAOqqD,GAAcxZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA9xDgB,YA8xDa,SAAC3wC,GAC5B,OAAOsqD,GAAUzZ,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAhyD4B,YAgyDa,SAAC3wC,GACxC,OAAOuqD,GAAsB1Z,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAlyDsB,YAkyDa,SAAC3wC,GAClC,OAAOwqD,GAAgB3Z,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAAgB7F,YAAsB,SAAC9qC,GACrC,OAAOyqD,GAAmB5Z,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAtyD6B,WAsyDa,SAAC3wC,GACzC,OAAO0qD,GAAuB7Z,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAxyDmB,YAwyDa,SAAC3wC,GAC/B,OAAO2qD,GAAa9Z,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GA1yDgB,YA0yDa,SAAC3wC,GAC5B,OAAO4qD,GAAU/Z,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA5yD0B,WA4yDa,SAAC3wC,GACtC,OAAO6qD,GAAoBha,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA9yDyB,YA8yDa,SAAC3wC,GACrC,OAAO8qD,GAAmBja,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAhzDmB,YAgzDa,SAAC3wC,GAC/B,OAAO+qD,GAAala,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAlzDkB,YAkzDa,SAAC3wC,GAC9B,OAAOgrD,GAAYna,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GApzDqB,WAozDa,SAAC3wC,GACjC,OAAOirD,GAAepa,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAtzDuB,YAszDa,SAAC3wC,GACnC,OAAOkrD,GAAiBra,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAxzDuB,YAwzDa,SAAC3wC,GACnC,OAAOmrD,GAAiBta,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA1zDgC,YA0zDa,SAAC3wC,GAC5C,OAAOorD,GAA0Bva,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GA5zDmB,YA4zDa,SAAC3wC,GAC/B,OAAOqrD,GAAaxa,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAAgB5F,IAAqB,SAAC/qC,GACpC,OAAOsrD,GAAkBza,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgB3F,YAA0B,SAAChrC,GACzC,OAAOurD,GAAuB1a,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAl0DsB,YAk0Da,SAAC3wC,GAClC,OAAOwrD,GAAgB3a,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAp0DkC,YAo0Da,SAAC3wC,GAC9C,OAAOyrD,GAA4B5a,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAt0D+B,WAs0Da,SAAC3wC,GAC3C,OAAO0rD,GAAyB7a,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAx0DsB,YAw0Da,SAAC3wC,GAClC,OAAO2rD,GAAgB9a,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA10D4B,WA00Da,SAAC3wC,GACxC,OAAO4rD,GAAsB/a,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgB1F,IAAa,SAACjrC,GAC5B,OAAO6rD,GAAUhb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA90DoB,YA80Da,SAAC3wC,GAChC,OAAO8rD,GAAcjb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAh1DsB,YAg1Da,SAAC3wC,GAClC,OAAO+rD,GAAgBlb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAl1DiC,YAk1Da,SAAC3wC,GAC7C,OAAOgsD,GAA2Bnb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAp1Dc,YAo1Da,SAAC3wC,GAC1B,OAAOisD,GAAQpb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAt1DgB,YAs1Da,SAAC3wC,GAC5B,OAAOksD,GAAUrb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAx1D4B,YAw1Da,SAAC3wC,GACxC,OAAOmsD,GAAsBtb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA11DqC,YA01Da,SAAC3wC,GACjD,OAAOosD,GAA+Bvb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GA51DgB,YA41Da,SAAC3wC,GAC5B,OAAOqsD,GAAUxb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA91DgB,YA81Da,SAAC3wC,GAC5B,OAAOssD,GAAUzb,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAh2D+B,WAg2Da,SAAC3wC,GAC3C,OAAOusD,GAAyB1b,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAl2DiC,YAk2Da,SAAC3wC,GAC7C,OAAOwsD,GAA2B3b,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAp2D0B,YAo2Da,SAAC3wC,GACtC,OAAOysD,GAAoB5b,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAt2DgC,YAs2Da,SAAC3wC,GAC5C,OAAO0sD,GAA0B7b,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgBzF,IAAW,SAAClrC,GAC1B,OAAO2sD,GAAQ9b,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GA12DkB,YA02Da,SAAC3wC,GAC9B,OAAO4sD,GAAY/b,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgBxF,WAAkB,SAACnrC,GACjC,OAAO6sD,GAAehc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA92DyB,WA82Da,SAAC3wC,GACrC,OAAO8sD,GAAmBjc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBvF,YAAkB,SAACprC,GACjC,OAAO+sD,GAAelc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAl3DyB,YAk3Da,SAAC3wC,GACrC,OAAOgtD,GAAmBnc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAp3DsB,WAo3Da,SAAC3wC,GAClC,OAAOitD,GAAgBpc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAt3DmB,YAs3Da,SAAC3wC,GAC/B,OAAOktD,GAAarc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAx3DmB,WAw3Da,SAAC3wC,GAC/B,OAAOmtD,GAAatc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GA13DsB,YA03Da,SAAC3wC,GAClC,OAAOotD,GAAgBvc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA53De,WA43Da,SAAC3wC,GAC3B,OAAOqtD,GAASxc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAAgBtF,IAAY,SAACrrC,GAC3B,OAAOstD,GAASzc,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAAgBrF,YAAwB,SAACtrC,GACvC,OAAOutD,GAAqB1c,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAl4DmB,YAk4Da,SAAC3wC,GAC/B,OAAOwtD,GAAa3c,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAp4De,YAo4Da,SAAC3wC,GAC3B,OAAOytD,GAAS5c,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAt4DsB,YAs4Da,SAAC3wC,GAClC,OAAO0tD,GAAgB7c,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAx4DwB,YAw4Da,SAAC3wC,GACpC,OAAO2tD,GAAkB9c,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA14DkB,YA04Da,SAAC3wC,GAC9B,OAAO4tD,GAAY/c,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA54DmC,YA44Da,SAAC3wC,GAC/C,OAAO6tD,GAA6Bhd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA94D0B,YA84Da,SAAC3wC,GACtC,OAAO8tD,GAAoBjd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAh5DkB,YAg5Da,SAAC3wC,GAC9B,OAAO+tD,GAAYld,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgBpF,IAAW,SAACvrC,GAC1B,OAAOguD,GAAQnd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAAgBnF,YAAyB,SAACxrC,GACxC,OAAOiuD,GAAsBpd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAt5DuB,YAs5Da,SAAC3wC,GACnC,OAAOkuD,GAAiBrd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAx5D0B,WAw5Da,SAAC3wC,GACtC,OAAOmuD,GAAoBtd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA15D6B,YA05Da,SAAC3wC,GACzC,OAAOouD,GAAuBvd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA55DwB,YA45Da,SAAC3wC,GACpC,OAAOquD,GAAkBxd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA95D8B,YA85Da,SAAC3wC,GAC1C,OAAOsuD,GAAwBzd,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAh6D+B,YAg6Da,SAAC3wC,GAC3C,OAAOuuD,GAAyB1d,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAl6D4B,YAk6Da,SAAC3wC,GACxC,OAAOwuD,GAAsB3d,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAp6D0B,WAo6Da,SAAC3wC,GACtC,OAAOyuD,GAAoB5d,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAt6DqC,YAs6Da,SAAC3wC,GACjD,OAAO0uD,GAA+B7d,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAx6DoC,YAw6Da,SAAC3wC,GAChD,OAAO2uD,GAA8B9d,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GA16D2B,YA06Da,SAAC3wC,GACvC,OAAO4uD,GAAqB/d,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA56DqC,YA46Da,SAAC3wC,GACjD,OAAO6uD,GAA+Bhe,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GA96DmB,YA86Da,SAAC3wC,GAC/B,OAAO8uD,GAAaje,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAh7DuB,WAg7Da,SAAC3wC,GACnC,OAAO+uD,GAAiBle,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAl7DiB,YAk7Da,SAAC3wC,GAC7B,OAAOgvD,GAAWne,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAp7DiB,YAo7Da,SAAC3wC,GAC7B,OAAOivD,GAAWpe,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAAgBlF,IAA6B,SAACzrC,GAC5C,OAAOkvD,GAA0Bre,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAx7D+B,YAw7Da,SAAC3wC,GAC3C,OAAOmvD,GAAyBte,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA17DoB,YA07Da,SAAC3wC,GAChC,OAAOovD,GAAcve,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA57D2B,YA47Da,SAAC3wC,GACvC,OAAOqvD,GAAqBxe,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBjF,IAAc,SAAC1rC,GAC7B,OAAOsvD,GAAWze,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAh8DwB,WAg8Da,SAAC3wC,GACpC,OAAOuvD,GAAkB1e,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAl8DsB,YAk8Da,SAAC3wC,GAClC,OAAOwvD,GAAgB3e,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAp8DsB,YAo8Da,SAAC3wC,GAClC,OAAOyvD,GAAgB5e,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAAgBhF,YAAwB,SAAC3rC,GACvC,OAAO0vD,GAAqB7e,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAx8DkB,YAw8Da,SAAC3wC,GAC9B,OAAO2vD,GAAY9e,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA18D6B,WA08Da,SAAC3wC,GACzC,OAAO4vD,GAAuB/e,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA58D8B,WA48Da,SAAC3wC,GAC1C,OAAO6vD,GAAwBhf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA98D4B,YA88Da,SAAC3wC,GACxC,OAAO8vD,GAAsBjf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAh9DwC,WAg9Da,SAAC3wC,GACpD,OAAO+vD,GAAkClf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GAl9DiC,YAk9Da,SAAC3wC,GAC7C,OAAOgwD,GAA2Bnf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAp9D6B,YAo9Da,SAAC3wC,GACzC,OAAOiwD,GAAuBpf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAt9D2B,YAs9Da,SAAC3wC,GACvC,OAAOkwD,GAAqBrf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAx9DgC,WAw9Da,SAAC3wC,GAC5C,OAAOmwD,GAA0Btf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GA19DqB,YA09Da,SAAC3wC,GACjC,OAAOowD,GAAevf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA59D+B,YA49Da,SAAC3wC,GAC3C,OAAOqwD,GAAyBxf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA99D6B,WA89Da,SAAC3wC,GACzC,OAAOswD,GAAuBzf,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAh+D6B,YAg+Da,SAAC3wC,GACzC,OAAOuwD,GAAuB1f,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAl+D4B,WAk+Da,SAAC3wC,GACxC,OAAOwwD,GAAsB3f,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAp+D0B,YAo+Da,SAAC3wC,GACtC,OAAOywD,GAAoB5f,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAt+DoC,YAs+Da,SAAC3wC,GAChD,OAAO0wD,GAA8B7f,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAAgB/E,WAAuB,SAAC5rC,GACtC,OAAO2wD,GAAoB9f,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgB9E,YAAmC,SAAC7rC,GAClD,OAAO4wD,GAAgC/f,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GA5+D0C,WA4+Da,SAAC3wC,GACtD,OAAO6wD,GAAoChgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtE,EACA+rC,GA9+D8B,YA8+Da,SAAC3wC,GAC1C,OAAO8wD,GAAwBjgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgB7E,IAAY,SAAC9rC,GAC3B,OAAO+wD,GAASlgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAAgB5E,IAAW,SAAC/rC,GAC1B,OAAOgxD,GAAQngB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAp/DkB,YAo/Da,SAAC3wC,GAC9B,OAAOixD,GAAYpgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAt/DsB,YAs/Da,SAAC3wC,GAClC,OAAOkxD,GAAgBrgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAx/DuB,YAw/Da,SAAC3wC,GACnC,OAAOmxD,GAAiBtgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA1/DwB,WA0/Da,SAAC3wC,GACpC,OAAOoxD,GAAkBvgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA5/DqB,YA4/Da,SAAC3wC,GACjC,OAAOqxD,GAAexgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA9/DsB,YA8/Da,SAAC3wC,GAClC,OAAOsxD,GAAgBzgB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAhgEwB,YAggEa,SAAC3wC,GACpC,OAAOuxD,GAAkB1gB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAlgEwB,WAkgEa,SAAC3wC,GACpC,OAAOwxD,GAAkB3gB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgB3E,IAAc,SAAChsC,GAC7B,OAAOyxD,GAAW5gB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAtgEqB,YAsgEa,SAAC3wC,GACjC,OAAO0xD,GAAe7gB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAAgB1E,IAAW,SAACjsC,GAC1B,OAAO2xD,GAAQ9gB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAAgBzE,YAAiB,SAAClsC,GAChC,OAAO4xD,GAAc/gB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA5gEwB,YA4gEa,SAAC3wC,GACpC,OAAO6xD,GAAkBhhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA9gEkB,YA8gEa,SAAC3wC,GAC9B,OAAO8xD,GAAYjhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAhhEuC,YAghEa,SAAC3wC,GACnD,OAAO+xD,GAAiClhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAlhEyC,WAkhEa,SAAC3wC,GACrD,OAAOgyD,GAAmCnhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GAphEmC,YAohEa,SAAC3wC,GAC/C,OAAOiyD,GAA6BphB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAthE6B,YAshEa,SAAC3wC,GACzC,OAAOkyD,GAAuBrhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAxhE4B,YAwhEa,SAAC3wC,GACxC,OAAOmyD,GAAsBthB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA1hEmC,YA0hEa,SAAC3wC,GAC/C,OAAOoyD,GAA6BvhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA5hE2B,YA4hEa,SAAC3wC,GACvC,OAAOqyD,GAAqBxhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA9hEmB,YA8hEa,SAAC3wC,GAC/B,OAAOsyD,GAAazhB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAAgBxE,YAAe,SAACnsC,GAC9B,OAAOuyD,GAAY1hB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAliE2B,YAkiEa,SAAC3wC,GACvC,OAAOwyD,GAAqB3hB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GApiEoC,YAoiEa,SAAC3wC,GAChD,OAAOyyD,GAA8B5hB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAtiE2C,YAsiEa,SAAC3wC,GACvD,OAAO0yD,GAAqC7hB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvE,EACA+rC,GAAgBvE,WAAqB,SAACpsC,GACpC,OAAO2yD,GAAkB9hB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA1iE4B,YA0iEa,SAAC3wC,GACxC,OAAO4yD,GAAsB/hB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBtE,YAAyB,SAACrsC,GACxC,OAAO6yD,GAAsBhiB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA9iEgC,WA8iEa,SAAC3wC,GAC5C,OAAO8yD,GAA0BjiB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgBrE,YAAsB,SAACtsC,GACrC,OAAO+yD,GAAmBliB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAljE6B,YAkjEa,SAAC3wC,GACzC,OAAOgzD,GAAuBniB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBpE,IAAoB,SAACvsC,GACnC,OAAOizD,GAAiBpiB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAtjEoB,YAsjEa,SAAC3wC,GAChC,OAAOkzD,GAAcriB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAxjE2B,YAwjEa,SAAC3wC,GACvC,OAAOmzD,GAAqBtiB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA1jE6B,YA0jEa,SAAC3wC,GACzC,OAAOozD,GAAuBviB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA5jE2B,YA4jEa,SAAC3wC,GACvC,OAAOqzD,GAAqBxiB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA9jEmC,YA8jEa,SAAC3wC,GAC/C,OAAOszD,GAA6BziB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAhkE6B,YAgkEa,SAAC3wC,GACzC,OAAOuzD,GAAuB1iB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAlkE6B,YAkkEa,SAAC3wC,GACzC,OAAOwzD,GAAuB3iB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GApkE8B,WAokEa,SAAC3wC,GAC1C,OAAOyzD,GAAwB5iB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAtkEuB,YAskEa,SAAC3wC,GACnC,OAAO0zD,GAAiB7iB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAxkE+B,YAwkEa,SAAC3wC,GAC3C,OAAO2zD,GAAyB9iB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA1kEqC,WA0kEa,SAAC3wC,GACjD,OAAO4zD,GAA+B/iB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GA5kEiC,YA4kEa,SAAC3wC,GAC7C,OAAO6zD,GAA2BhjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA9kE+B,WA8kEa,SAAC3wC,GAC3C,OAAO8zD,GAAyBjjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAhlE8B,YAglEa,SAAC3wC,GAC1C,OAAO+zD,GAAwBljB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgBnE,IAA4B,SAACxsC,GAC3C,OAAOg0D,GAAyBnjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAplEqB,WAolEa,SAAC3wC,GACjC,OAAOi0D,GAAepjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAtlE6B,YAslEa,SAAC3wC,GACzC,OAAOk0D,GAAuBrjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAxlEiC,YAwlEa,SAAC3wC,GAC7C,OAAOm0D,GAA2BtjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA1lEkC,YA0lEa,SAAC3wC,GAC9C,OAAOo0D,GAA4BvjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA5lE0B,YA4lEa,SAAC3wC,GACtC,OAAOq0D,GAAoBxjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA9lEuC,YA8lEa,SAAC3wC,GACnD,OAAOs0D,GAAiCzjB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAhmEqC,YAgmEa,SAAC3wC,GACjD,OAAOu0D,GAA+B1jB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAlmEqC,WAkmEa,SAAC3wC,GACjD,OAAOw0D,GAA+B3jB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GApmE0C,YAomEa,SAAC3wC,GACtD,OAAOy0D,GAAoC5jB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtE,EACA+rC,GAAgBlE,IAAqC,SAACzsC,GACpD,OAAO00D,GAAkC7jB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GAxmE+B,WAwmEa,SAAC3wC,GAC3C,OAAO20D,GAAyB9jB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA1mEyB,YA0mEa,SAAC3wC,GACrC,OAAO40D,GAAmB/jB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA5mEqB,YA4mEa,SAAC3wC,GACjC,OAAO60D,GAAehkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA9mEuB,YA8mEa,SAAC3wC,GACnC,OAAO80D,GAAiBjkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAhnEoB,WAgnEa,SAAC3wC,GAChC,OAAO+0D,GAAclkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAlnE4B,YAknEa,SAAC3wC,GACxC,OAAOg1D,GAAsBnkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBjE,IAA6B,SAAC1sC,GAC5C,OAAOi1D,GAA0BpkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAtnE8B,WAsnEa,SAAC3wC,GAC1C,OAAOk1D,GAAwBrkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgBhE,IAAuB,SAAC3sC,GACtC,OAAOm1D,GAAoBtkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA1nEyB,YA0nEa,SAAC3wC,GACrC,OAAOo1D,GAAmBvkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA5nEgC,WA4nEa,SAAC3wC,GAC5C,OAAOq1D,GAA0BxkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GA9nE+B,WA8nEa,SAAC3wC,GAC3C,OAAOs1D,GAAyBzkB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAhoEkB,YAgoEa,SAAC3wC,GAC9B,OAAOu1D,GAAY1kB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAloEsB,YAkoEa,SAAC3wC,GAClC,OAAOw1D,GAAgB3kB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GApoE4B,WAooEa,SAAC3wC,GACxC,OAAOy1D,GAAsB5kB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAtoEyC,YAsoEa,SAAC3wC,GACrD,OAAO01D,GAAmC7kB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrE,EACA+rC,GAxoEqB,YAwoEa,SAAC3wC,GACjC,OAAO21D,GAAe9kB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA1oE8B,WA0oEa,SAAC3wC,GAC1C,OAAO41D,GAAwB/kB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA5oE0B,YA4oEa,SAAC3wC,GACtC,OAAO61D,GAAoBhlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA9oEkC,YA8oEa,SAAC3wC,GAC9C,OAAO81D,GAA4BjlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAhpEkC,YAgpEa,SAAC3wC,GAC9C,OAAO+1D,GAA4BllB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAlpEyB,YAkpEa,SAAC3wC,GACrC,OAAOg2D,GAAmBnlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAppEsB,WAopEa,SAAC3wC,GAClC,OAAOi2D,GAAgBplB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAtpE6C,WAspEa,SAAC3wC,GACzD,OAAOk2D,GAAuCrlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzE,EACA+rC,GAxpEwB,YAwpEa,SAAC3wC,GACpC,OAAOm2D,GAAkBtlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA1pE+B,YA0pEa,SAAC3wC,GAC3C,OAAOo2D,GAAyBvlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GA5pE4B,YA4pEa,SAAC3wC,GACxC,OAAOq2D,GAAsBxlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA9pE2B,YA8pEa,SAAC3wC,GACvC,OAAOs2D,GAAqBzlB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAhqEkB,YAgqEa,SAAC3wC,GAC9B,OAAOu2D,GAAY1lB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAlqEsC,YAkqEa,SAAC3wC,GAClD,OAAOw2D,GAAgC3lB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GApqEwC,YAoqEa,SAAC3wC,GACpD,OAAOy2D,GAAkC5lB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GAtqEmC,YAsqEa,SAAC3wC,GAC/C,OAAO02D,GAA6B7lB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAxqEsB,YAwqEa,SAAC3wC,GAClC,OAAO22D,GAAgB9lB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA1qE2B,YA0qEa,SAAC3wC,GACvC,OAAO42D,GAAqB/lB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA5qEkC,YA4qEa,SAAC3wC,GAC9C,OAAO62D,GAA4BhmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA9qE2B,YA8qEa,SAAC3wC,GACvC,OAAO82D,GAAqBjmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAhrE+B,YAgrEa,SAAC3wC,GAC3C,OAAO+2D,GAAyBlmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB/D,IAAW,SAAC5sC,GAC1B,OAAOg3D,GAAQnmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAprEkB,YAorEa,SAAC3wC,GAC9B,OAAOi3D,GAAYpmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAtrEc,YAsrEa,SAAC3wC,GAC1B,OAAOk3D,GAAQrmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAxrEoC,YAwrEa,SAAC3wC,GAChD,OAAOm3D,GAA8BtmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GA1rEgB,WA0rEa,SAAC3wC,GAC5B,OAAOo3D,GAAUvmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAAgB9D,YAAuB,SAAC7sC,GACtC,OAAOq3D,GAAoBxmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA9rE8B,YA8rEa,SAAC3wC,GAC1C,OAAOs3D,GAAwBzmB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAhsEwB,YAgsEa,SAAC3wC,GACpC,OAAOu3D,GAAkB1mB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAlsEmB,YAksEa,SAAC3wC,GAC/B,OAAOw3D,GAAa3mB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GApsE2B,YAosEa,SAAC3wC,GACvC,OAAOy3D,GAAqB5mB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAtsEwC,YAssEa,SAAC3wC,GACpD,OAAO03D,GAAkC7mB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GAxsEwB,YAwsEa,SAAC3wC,GACpC,OAAO23D,GAAkB9mB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA1sEkC,YA0sEa,SAAC3wC,GAC9C,OAAO43D,GAA4B/mB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA5sEwB,YA4sEa,SAAC3wC,GACpC,OAAO63D,GAAkBhnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgB7D,IAAa,SAAC9sC,GAC5B,OAAO83D,GAAUjnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAhtEoB,YAgtEa,SAAC3wC,GAChC,OAAO+3D,GAAclnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgB5D,YAAoB,SAAC/sC,GACnC,OAAOg4D,GAAiBnnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAptE2B,YAotEa,SAAC3wC,GACvC,OAAOi4D,GAAqBpnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAttEqB,WAstEa,SAAC3wC,GACjC,OAAOk4D,GAAernB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAxtEoB,YAwtEa,SAAC3wC,GAChC,OAAOm4D,GAActnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA1tE6B,YA0tEa,SAAC3wC,GACzC,OAAOo4D,GAAuBvnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA5tEgC,YA4tEa,SAAC3wC,GAC5C,OAAOq4D,GAA0BxnB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GA9tEwB,YA8tEa,SAAC3wC,GACpC,OAAOs4D,GAAkBznB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAhuEgC,YAguEa,SAAC3wC,GAC5C,OAAOu4D,GAA0B1nB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgB3D,IAAW,SAAChtC,GAC1B,OAAOw4D,GAAQ3nB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAAgB1D,IAAW,SAACjtC,GAC1B,OAAOy4D,GAAQ5nB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAAgBzD,YAAwB,SAACltC,GACvC,OAAO04D,GAAqB7nB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBxD,YAAuB,SAACntC,GACtC,OAAO24D,GAAoB9nB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA1uEkB,YA0uEa,SAAC3wC,GAC9B,OAAO44D,GAAY/nB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA5uEqC,YA4uEa,SAAC3wC,GACjD,OAAO64D,GAA+BhoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAAgBvD,YAAkB,SAACptC,GACjC,OAAO84D,GAAejoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAhvEyB,YAgvEa,SAAC3wC,GACrC,OAAO+4D,GAAmBloB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAlvEoB,WAkvEa,SAAC3wC,GAChC,OAAOg5D,GAAcnoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAAgBtD,IAAY,SAACrtC,GAC3B,OAAOi5D,GAASpoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAAgBrD,YAAkB,SAACttC,GACjC,OAAOk5D,GAAeroB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAxvEyB,YAwvEa,SAAC3wC,GACrC,OAAOm5D,GAAmBtoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA1vEmB,YA0vEa,SAAC3wC,GAC/B,OAAOo5D,GAAavoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAAgBpD,YAAqB,SAACvtC,GACpC,OAAOq5D,GAAkBxoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA9vE4B,WA8vEa,SAAC3wC,GACxC,OAAOs5D,GAAsBzoB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAAgBnD,YAA8B,SAACxtC,GAC7C,OAAOu5D,GAA2B1oB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAlwEqC,YAkwEa,SAAC3wC,GACjD,OAAOw5D,GAA+B3oB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAAgBlD,WAAkB,SAACztC,GACjC,OAAOy5D,GAAe5oB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAtwEyB,YAswEa,SAAC3wC,GACrC,OAAO05D,GAAmB7oB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAxwEgB,WAwwEa,SAAC3wC,GAC5B,OAAO25D,GAAU9oB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GA1wE0B,YA0wEa,SAAC3wC,GACtC,OAAO45D,GAAoB/oB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgBjD,YAAoB,SAAC1tC,GACnC,OAAO65D,GAAiBhpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA9wE2B,YA8wEa,SAAC3wC,GACvC,OAAO85D,GAAqBjpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBhD,IAAY,SAAC3tC,GAC3B,OAAO+5D,GAASlpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAAgB/C,IAAkB,SAAC5tC,GACjC,OAAOg6D,GAAenpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GApxEyB,YAoxEa,SAAC3wC,GACrC,OAAOi6D,GAAmBppB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAtxEmB,WAsxEa,SAAC3wC,GAC/B,OAAOk6D,GAAarpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAAgB9C,WAAuB,SAAC7tC,GACtC,OAAOm6D,GAAoBtpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgB7C,YAAyB,SAAC9tC,GACxC,OAAOo6D,GAAsBvpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA5xEiC,YA4xEa,SAAC3wC,GAC7C,OAAOq6D,GAA2BxpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB5C,YAA2B,SAAC/tC,GAC1C,OAAOs6D,GAAwBzpB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAhyEuC,YAgyEa,SAAC3wC,GACnD,OAAOu6D,GAAiC1pB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAAgB3C,YAA4B,SAAChuC,GAC3C,OAAOw6D,GAAyB3pB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB1C,YAAgC,SAACjuC,GAC/C,OAAOy6D,GAA6B5pB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAAgBzC,WAA4B,SAACluC,GAC3C,OAAO06D,GAAyB7pB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgBxC,YAAmC,SAACnuC,GAClD,OAAO26D,GAAgC9pB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GAAgBvC,YAA8B,SAACpuC,GAC7C,OAAO46D,GAA2B/pB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgBtC,YAAqB,SAACruC,GACpC,OAAO66D,GAAkBhqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBrC,YAA6B,SAACtuC,GAC5C,OAAO86D,GAA0BjqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAhzEwB,YAgzEa,SAAC3wC,GACpC,OAAO+6D,GAAkBlqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAlzE4B,WAkzEa,SAAC3wC,GACxC,OAAOg7D,GAAsBnqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GApzEqC,YAozEa,SAAC3wC,GACjD,OAAOi7D,GAA+BpqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAtzE6B,YAszEa,SAAC3wC,GACzC,OAAOk7D,GAAuBrqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAxzEmC,YAwzEa,SAAC3wC,GAC/C,OAAOm7D,GAA6BtqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA1zEgC,WA0zEa,SAAC3wC,GAC5C,OAAOo7D,GAA0BvqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GA5zEmC,YA4zEa,SAAC3wC,GAC/C,OAAOq7D,GAA6BxqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GA9zE0C,YA8zEa,SAAC3wC,GACtD,OAAOs7D,GAAoCzqB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtE,EACA+rC,GAh0EoD,YAg0Ea,SAAC3wC,GAChE,OAAOu7D,GAA8C1qB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChF,EACA+rC,GAl0EmC,YAk0Ea,SAAC3wC,GAC/C,OAAOw7D,GAA6B3qB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAp0E0C,YAo0Ea,SAAC3wC,GACtD,OAAOy7D,GAAoC5qB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtE,EACA+rC,GAt0E8B,YAs0Ea,SAAC3wC,GAC1C,OAAO07D,GAAwB7qB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAx0EmC,YAw0Ea,SAAC3wC,GAC/C,OAAO27D,GAA6B9qB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAAgBpC,WAAuB,SAACvuC,GACtC,OAAO47D,GAAoB/qB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgBnC,YAA6B,SAACxuC,GAC5C,OAAO67D,GAA0BhrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAAgBlC,YAA4B,SAACzuC,GAC3C,OAAO87D,GAAyBjrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgBjC,WAAgC,SAAC1uC,GAC/C,OAAO+7D,GAA6BlrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAAgBhC,YAA8B,SAAC3uC,GAC7C,OAAOg8D,GAA2BnrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB/B,YAAyB,SAAC5uC,GACxC,OAAOi8D,GAAsBprB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAt1E+B,YAs1Ea,SAAC3wC,GAC3C,OAAOk8D,GAAyBrrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgB9B,YAA8B,SAAC7uC,GAC7C,OAAOm8D,GAA2BtrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB7B,YAAkC,SAAC9uC,GACjD,OAAOo8D,GAA+BvrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjE,EACA+rC,GAAgB5B,YAA8B,SAAC/uC,GAC7C,OAAOq8D,GAA2BxrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgB3B,YAAqC,SAAChvC,GACpD,OAAOs8D,GAAkCzrB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpE,EACA+rC,GAAgB1B,WAAgC,SAACjvC,GAC/C,OAAOu8D,GAA6B1rB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAl2EoB,YAk2Ea,SAAC3wC,GAChC,OAAOw8D,GAAc3rB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAp2EoB,YAo2Ea,SAAC3wC,GAChC,OAAOy8D,GAAc5rB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAt2E8B,YAs2Ea,SAAC3wC,GAC1C,OAAO08D,GAAwB7rB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAx2E6B,WAw2Ea,SAAC3wC,GACzC,OAAO28D,GAAuB9rB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA12EiC,YA02Ea,SAAC3wC,GAC7C,OAAO48D,GAA2B/rB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA52EiB,YA42Ea,SAAC3wC,GAC7B,OAAO68D,GAAWhsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GA92EiB,YA82Ea,SAAC3wC,GAC7B,OAAO88D,GAAWjsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7C,EACA+rC,GAh3EsB,WAg3Ea,SAAC3wC,GAClC,OAAO+8D,GAAgBlsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAl3EoC,YAk3Ea,SAAC3wC,GAChD,OAAOg9D,GAA8BnsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAAgBzB,YAAqB,SAAClvC,GACpC,OAAOi9D,GAAkBpsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAt3EkC,YAs3Ea,SAAC3wC,GAC9C,OAAOk9D,GAA4BrsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAx3E6B,YAw3Ea,SAAC3wC,GACzC,OAAOm9D,GAAuBtsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GA13EkC,YA03Ea,SAAC3wC,GAC9C,OAAOo9D,GAA4BvsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GA53EsB,YA43Ea,SAAC3wC,GAClC,OAAOq9D,GAAgBxsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GA93E8B,YA83Ea,SAAC3wC,GAC1C,OAAOs9D,GAAwBzsB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAh4EgC,YAg4Ea,SAAC3wC,GAC5C,OAAOu9D,GAA0B1sB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAl4E+B,YAk4Ea,SAAC3wC,GAC3C,OAAOw9D,GAAyB3sB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAp4E6B,WAo4Ea,SAAC3wC,GACzC,OAAOy9D,GAAuB5sB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAt4EkC,YAs4Ea,SAAC3wC,GAC9C,OAAO09D,GAA4B7sB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAx4EwB,WAw4Ea,SAAC3wC,GACpC,OAAO29D,GAAkB9sB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA14EwB,YA04Ea,SAAC3wC,GACpC,OAAO49D,GAAkB/sB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA54EwB,YA44Ea,SAAC3wC,GACpC,OAAO69D,GAAkBhtB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA94EiC,YA84Ea,SAAC3wC,GAC7C,OAAO89D,GAA2BjtB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAh5EsB,WAg5Ea,SAAC3wC,GAClC,OAAO+9D,GAAgBltB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAAgBxB,YAAsB,SAACnvC,GACrC,OAAOg+D,GAAmBntB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAp5E6B,YAo5Ea,SAAC3wC,GACzC,OAAOi+D,GAAuBptB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAt5EgB,YAs5Ea,SAAC3wC,GAC5B,OAAOk+D,GAAUrtB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAAgBvB,WAA6B,SAACpvC,GAC5C,OAAOm+D,GAA0BttB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GA15EoC,YA05Ea,SAAC3wC,GAChD,OAAOo+D,GAA8BvtB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GA55E0B,YA45Ea,SAAC3wC,GACtC,OAAOq+D,GAAoBxtB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA95Ee,WA85Ea,SAAC3wC,GAC3B,OAAOs+D,GAASztB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAh6EqB,YAg6Ea,SAAC3wC,GACjC,OAAOu+D,GAAe1tB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAl6EkB,WAk6Ea,SAAC3wC,GAC9B,OAAOw+D,GAAY3tB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgBtB,IAAW,SAACrvC,GAC1B,OAAOy+D,GAAQ5tB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAt6EkB,SAs6Ea,SAAC3wC,GAC9B,OAAO0+D,GAAY7tB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAx6Ec,YAw6Ea,SAAC3wC,GAC1B,OAAO2+D,GAAQ9tB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GA16EkB,YA06Ea,SAAC3wC,GAC9B,OAAO4+D,GAAY/tB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA56E2B,YA46Ea,SAAC3wC,GACvC,OAAO6+D,GAAqBhuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA96EkB,YA86Ea,SAAC3wC,GAC9B,OAAO8+D,GAAYjuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAh7EwB,WAg7Ea,SAAC3wC,GACpC,OAAO++D,GAAkBluB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBrB,IAAa,SAACtvC,GAC5B,OAAOg/D,GAAUnuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAAgBpB,YAAmB,SAACvvC,GAClC,OAAOi/D,GAAgBpuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAt7E0B,YAs7Ea,SAAC3wC,GACtC,OAAOk/D,GAAoBruB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgBnB,YAAoB,SAACxvC,GACnC,OAAOm/D,GAAiBtuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GA17E2B,YA07Ea,SAAC3wC,GACvC,OAAOo/D,GAAqBvuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GA57EoB,YA47Ea,SAAC3wC,GAChC,OAAOq/D,GAAcxuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA97E4B,YA87Ea,SAAC3wC,GACxC,OAAOs/D,GAAsBzuB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GAh8EyB,WAg8Ea,SAAC3wC,GACrC,OAAOu/D,GAAmB1uB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAl8EqB,YAk8Ea,SAAC3wC,GACjC,OAAOw/D,GAAe3uB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAp8E+B,YAo8Ea,SAAC3wC,GAC3C,OAAOy/D,GAAyB5uB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAt8EmB,YAs8Ea,SAAC3wC,GAC/B,OAAO0/D,GAAa7uB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAx8E4B,YAw8Ea,SAAC3wC,GACxC,OAAO2/D,GAAsB9uB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA18EiC,YA08Ea,SAAC3wC,GAC7C,OAAO4/D,GAA2B/uB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GA58E4B,YA48Ea,SAAC3wC,GACxC,OAAO6/D,GAAsBhvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA98E2B,WA88Ea,SAAC3wC,GACvC,OAAO8/D,GAAqBjvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAh9EoC,YAg9Ea,SAAC3wC,GAChD,OAAO+/D,GAA8BlvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChE,EACA+rC,GAl9EoB,YAk9Ea,SAAC3wC,GAChC,OAAOggE,GAAcnvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAp9EuB,YAo9Ea,SAAC3wC,GACnC,OAAOigE,GAAiBpvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAt9E2B,YAs9Ea,SAAC3wC,GACvC,OAAOkgE,GAAqBrvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAx9EoB,YAw9Ea,SAAC3wC,GAChC,OAAOmgE,GAActvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA19EoB,YA09Ea,SAAC3wC,GAChC,OAAOogE,GAAcvvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA59EyB,WA49Ea,SAAC3wC,GACrC,OAAOqgE,GAAmBxvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA99EuC,YA89Ea,SAAC3wC,GACnD,OAAOsgE,GAAiCzvB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnE,EACA+rC,GAh+EgC,YAg+Ea,SAAC3wC,GAC5C,OAAOugE,GAA0B1vB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAl+EyB,YAk+Ea,SAAC3wC,GACrC,OAAOwgE,GAAmB3vB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAAgBlB,YAAkB,SAACzvC,GACjC,OAAOygE,GAAe5vB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAt+EyB,YAs+Ea,SAAC3wC,GACrC,OAAO0gE,GAAmB7vB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GAx+EkC,YAw+Ea,SAAC3wC,GAC9C,OAAO2gE,GAA4B9vB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9D,EACA+rC,GAAgBjB,YAAuB,SAAC1vC,GACtC,OAAO4gE,GAAoB/vB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA5+E8B,YA4+Ea,SAAC3wC,GAC1C,OAAO6gE,GAAwBhwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GA9+E6B,YA8+Ea,SAAC3wC,GACzC,OAAO8gE,GAAuBjwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAh/E6B,YAg/Ea,SAAC3wC,GACzC,OAAO+gE,GAAuBlwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAl/EsC,YAk/Ea,SAAC3wC,GAClD,OAAOghE,GAAgCnwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClE,EACA+rC,GAp/EsB,YAo/Ea,SAAC3wC,GAClC,OAAOihE,GAAgBpwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAAgBhB,YAAiB,SAAC3vC,GAChC,OAAOkhE,GAAcrwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAx/EwB,YAw/Ea,SAAC3wC,GACpC,OAAOmhE,GAAkBtwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GA1/EoB,YA0/Ea,SAAC3wC,GAChC,OAAOohE,GAAcvwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GA5/EqB,YA4/Ea,SAAC3wC,GACjC,OAAOqhE,GAAexwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA9/EqB,YA8/Ea,SAAC3wC,GACjC,OAAOshE,GAAezwB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAhgFsB,YAggFa,SAAC3wC,GAClC,OAAOuhE,GAAgB1wB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAlgF0B,WAkgFa,SAAC3wC,GACtC,OAAOwhE,GAAoB3wB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GAAgBf,IAAqB,SAAC5vC,GACpC,OAAOyhE,GAAkB5wB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBd,WAA4B,SAAC7vC,GAC3C,OAAO0hE,GAAyB7wB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAxgFmC,YAwgFa,SAAC3wC,GAC/C,OAAO2hE,GAA6B9wB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/D,EACA+rC,GAAgBb,YAAuB,SAAC9vC,GACtC,OAAO4hE,GAAoB/wB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA5gF8B,YA4gFa,SAAC3wC,GAC1C,OAAO6hE,GAAwBhxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1D,EACA+rC,GAAgBZ,IAAY,SAAC/vC,GAC3B,OAAO8hE,GAASjxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3C,EACA+rC,GAhhFmB,WAghFa,SAAC3wC,GAC/B,OAAO+hE,GAAalxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC/C,EACA+rC,GAlhFgB,YAkhFa,SAAC3wC,GAC5B,OAAOgiE,GAAUnxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAphFgB,YAohFa,SAAC3wC,GAC5B,OAAOiiE,GAAUpxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAthFoB,YAshFa,SAAC3wC,GAChC,OAAOkiE,GAAcrxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAxhFqB,YAwhFa,SAAC3wC,GACjC,OAAOmiE,GAAetxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GAAgBX,YAAsB,SAAChwC,GACrC,OAAOoiE,GAAmBvxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACrD,EACA+rC,GA5hF6B,YA4hFa,SAAC3wC,GACzC,OAAOqiE,GAAuBxxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACzD,EACA+rC,GAAgBV,YAAwB,SAACjwC,GACvC,OAAOsiE,GAAqBzxB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAhiF+B,YAgiFa,SAAC3wC,GAC3C,OAAOuiE,GAAyB1xB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgBT,YAAqB,SAAClwC,GACpC,OAAOwiE,GAAkB3xB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GApiFiC,WAoiFa,SAAC3wC,GAC7C,OAAOyiE,GAA2B5xB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC7D,EACA+rC,GAAgBR,WAAqB,SAACnwC,GACpC,OAAO0iE,GAAkB7xB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACpD,EACA+rC,GAAgBP,IAAW,SAACpwC,GAC1B,OAAO2iE,GAAQ9xB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EACA+rC,GAAgBN,YAAwB,SAACrwC,GACvC,OAAO4iE,GAAqB/xB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBL,IAAuB,SAACtwC,GACtC,OAAO6iE,GAAoBhyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA9iFkB,YA8iFa,SAAC3wC,GAC9B,OAAO8iE,GAAYjyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAAgBJ,YAAoB,SAACvwC,GACnC,OAAO+iE,GAAiBlyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACnD,EACA+rC,GAljF2B,YAkjFa,SAAC3wC,GACvC,OAAOgjE,GAAqBnyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACvD,EACA+rC,GAAgBH,IAAa,SAACxwC,GAC5B,OAAOijE,GAAUpyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5C,EACA+rC,GAtjFgC,WAsjFa,SAAC3wC,GAC5C,OAAOkjE,GAA0BryB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC5D,EACA+rC,GAxjF+B,WAwjFa,SAAC3wC,GAC3C,OAAOmjE,GAAyBtyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC3D,EACA+rC,GAAgBF,WAAyB,SAACzwC,GACxC,OAAOojE,GAAsBvyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACxD,EACA+rC,GA5jFqB,YA4jFa,SAAC3wC,GACjC,OAAOqjE,GAAexyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GA9jFoB,YA8jFa,SAAC3wC,GAChC,OAAOsjE,GAAczyB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAChD,EACA+rC,GAhkFsB,YAgkFa,SAAC3wC,GAClC,OAAOujE,GAAgB1yB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAlkFqB,YAkkFa,SAAC3wC,GACjC,OAAOwjE,GAAe3yB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACjD,EACA+rC,GApkFkB,YAokFa,SAAC3wC,GAC9B,OAAOyjE,GAAY5yB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GAtkFsB,YAskFa,SAAC3wC,GAClC,OAAO0jE,GAAgB7yB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAClD,EACA+rC,GAxkFkB,YAwkFa,SAAC3wC,GAC9B,OAAO2jE,GAAY9yB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC9C,EACA+rC,GA1kF0B,YA0kFa,SAAC3wC,GACtC,OAAO4jE,GAAoB/yB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UACtD,EACA+rC,GA5kFc,YA4kFa,SAAC3wC,GAC1B,OAAO6jE,GAAQhzB,SAAS7wC,EAAE8wC,GAAI9wC,EAAEvU,KAAMuU,EAAE4E,UAC1C,EAYA,IAinBIk/D,GAAwB,aAC1B,WAAY15C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF05C,GAAyBC,MAAQ,QACjCD,GAAyBE,IAAM,MAC/BF,GAAyBG,MAAQ,QACjCH,GAAyBI,KAAO,OAChCJ,GAAyBK,OAAS,SAClCL,GAAyBM,YAAc,cACvCN,GAAyBO,WAAa,aACtC,IAAIC,GAAuB,aACzB,WAAYl6C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk6C,GAAwBC,YAAc,cACtCD,GAAwBE,cAAgB,gBACxCF,GAAwBG,YAAc,cACtCH,GAAwBI,OAAS,SACjCJ,GAAwBK,OAAS,SACjCL,GAAwBM,eAAiB,iBACzCN,GAAwBO,aAAe,eACvCP,GAAwBQ,cAAgB,gBACxCR,GAAwBS,aAAe,eACvCT,GAAwBU,KAAO,OAC/BV,GAAwBW,QAAU,UAClCX,GAAwBY,OAAS,SACjCZ,GAAwBa,UAAY,YACpCb,GAAwBc,SAAW,WACnCd,GAAwBe,SAAW,WACnCf,GAAwBgB,oBAAsB,sBAC9ChB,GAAwBiB,UAAY,YACpCjB,GAAwBkB,MAAQ,QAChClB,GAAwBmB,YAAc,cACtCnB,GAAwBoB,SAAW,WACnCpB,GAAwBqB,IAAM,MAC9BrB,GAAwBsB,QAAU,UAClCtB,GAAwBuB,KAAO,OAC/BvB,GAAwBwB,KAAO,OAC/BxB,GAAwByB,OAAS,SACjCzB,GAAwBF,YAAc,cACtCE,GAAwBD,WAAa,aACrC,IAAI2B,GAAiB,aACnB,WAAY57C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF47C,GAAkBC,YAAc,cAChCD,GAAkBE,WAAa,aAC/BF,GAAkBG,gBAAkB,kBACpCH,GAAkB5B,YAAc,cAChC4B,GAAkB3B,WAAa,aAC/B,IAAI+B,GAAmB,aACrB,WAAYh8C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFg8C,GAAoBC,iBAAmB,mBACvCD,GAAoBE,qBAAuB,uBAC3CF,GAAoBG,kBAAoB,oBACxCH,GAAoBI,kBAAoB,oBACxCJ,GAAoBK,qBAAuB,uBAC3CL,GAAoBhC,YAAc,cAClCgC,GAAoB/B,WAAa,aACjC,IAAIqC,GAAkB,aACpB,WAAYt8C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs8C,GAAmBC,OAAS,SAC5BD,GAAmBE,KAAO,OAC1BF,GAAmBG,KAAO,OAC1BH,GAAmBI,kBAAoB,oBACvCJ,GAAmBtC,YAAc,cACjC,IAAI2C,GAAyB,aAC3B,WAAY38C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF28C,GAA0BC,aAAe,eACzCD,GAA0BE,8BAAgC,gCAC1DF,GAA0BG,gCAAkC,kCAC5DH,GAA0B3C,YAAc,cACxC2C,GAA0B1C,WAAa,aACvC,IAAI8C,GAAsB,aACxB,WAAY/8C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+8C,GAAuBC,SAAW,WAClCD,GAAuBE,OAAS,SAChCF,GAAuBG,OAAS,SAChCH,GAAuBI,SAAW,WAClCJ,GAAuB/C,YAAc,cACrC+C,GAAuB9C,WAAa,aACpC,IAAImD,GAA+B,aACjC,WAAYp9C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFo9C,GAAgCC,+BAAiC,iCACjED,GAAgCE,6BAA+B,+BAC/DF,GAAgCG,gCAAkC,kCAClEH,GAAgCI,YAAc,cAC9CJ,GAAgCK,kBAAoB,oBACpDL,GAAgCM,SAAW,WAC3CN,GAAgCO,+BAAiC,iCACjEP,GAAgCQ,qCAAuC,uCACvER,GAAgCS,mCAAqC,qCACrET,GAAgCpD,YAAc,cAC9CoD,GAAgCnD,WAAa,aAC7C,IAAI6D,GAAgB,aAClB,WAAY99C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF89C,GAAiBC,KAAO,OACxBD,GAAiBE,iBAAmB,mBACpCF,GAAiBG,MAAQ,QACzBH,GAAiBI,cAAgB,gBACjCJ,GAAiBK,MAAQ,QACzBL,GAAiBM,QAAU,UAC3BN,GAAiB9D,YAAc,cAC/B8D,GAAiB7D,WAAa,aAC9B,IAAIoE,GAAoB,aACtB,WAAYr+C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFq+C,GAAqBrE,YAAc,cACnCqE,GAAqBpE,WAAa,aAClC,IAAIqE,GAAwB,aAC1B,WAAYt+C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs+C,GAAyBC,oBAAsB,sBAC/CD,GAAyBE,qBAAuB,uBAChDF,GAAyBG,WAAa,aACtCH,GAAyBtE,YAAc,cACvCsE,GAAyBrE,WAAa,aACtC,IAAIyE,GAAyB,aAC3B,WAAY1+C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0+C,GAA0BC,mBAAqB,qBAC/CD,GAA0BE,oBAAsB,sBAChDF,GAA0BG,mBAAqB,qBAC/CH,GAA0BI,sBAAwB,wBAClDJ,GAA0B1E,YAAc,cACxC0E,GAA0BzE,WAAa,aACvC,IAAI8E,GAAyB,aAC3B,WAAY/+C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF++C,GAA0BC,IAAM,MAChCD,GAA0BE,OAAS,SACnCF,GAA0BG,SAAW,WACrCH,GAA0BI,SAAW,WACrC,IAAIC,GAAoB,aACtB,WAAYp/C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFo/C,GAAqB5C,KAAO,OAC5B4C,GAAqBC,QAAU,UAC/BD,GAAqBnF,WAAa,aAClC,IAAIqF,GAA+B,aACjC,WAAYt/C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs/C,GAAgCC,UAAY,YAC5CD,GAAgCE,OAAS,SACzCF,GAAgCG,QAAU,UAC1CH,GAAgCI,WAAa,aAC7CJ,GAAgCK,OAAS,SACzCL,GAAgCM,UAAY,YAC5CN,GAAgCO,SAAW,WAC3CP,GAAgCQ,QAAU,UAC1CR,GAAgCS,SAAW,WAC3CT,GAAgCU,UAAY,YAC5CV,GAAgCW,MAAQ,QACxCX,GAAgCtF,YAAc,cAC9CsF,GAAgCrF,WAAa,aAC7C,IAAIiG,GAAmB,aACrB,WAAYlgD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkgD,GAAoBC,cAAgB,gBACpCD,GAAoBE,aAAe,eACnCF,GAAoBG,aAAe,eACnCH,GAAoBI,cAAgB,gBACpCJ,GAAoBK,eAAiB,iBACrCL,GAAoBM,YAAc,cAClC,IAAIC,GAAqB,aACvB,WAAYzgD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFygD,GAAsBC,WAAa,aACnCD,GAAsBE,iBAAmB,mBACzCF,GAAsBG,aAAe,eACrCH,GAAsBI,eAAiB,iBACvCJ,GAAsBK,cAAgB,gBACtCL,GAAsBM,mBAAqB,qBAC3CN,GAAsBO,WAAa,aACnCP,GAAsBQ,iBAAmB,mBACzCR,GAAsBS,aAAe,eACrCT,GAAsBU,yBAA2B,2BACjDV,GAAsBD,YAAc,cACpC,IAAIY,GAAe,aACjB,WAAYphD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFohD,GAAgBC,KAAO,OACvBD,GAAgBE,MAAQ,QACxBF,GAAgBG,WAAa,aAC7BH,GAAgBI,OAAS,SACzBJ,GAAgBK,SAAW,WAC3BL,GAAgBM,OAAS,SACzBN,GAAgBO,eAAiB,iBACjCP,GAAgBQ,UAAY,YAC5BR,GAAgBS,QAAU,UAC1BT,GAAgBU,SAAW,WAC3BV,GAAgBW,QAAU,UAC1BX,GAAgBY,SAAW,WAC3BZ,GAAgBpH,YAAc,cAC9BoH,GAAgBnH,WAAa,aAC7B,IAAIgI,GAA8B,aAChC,WAAYjiD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFiiD,GAA+BC,eAAiB,iBAChDD,GAA+BE,oBAAsB,sBACrDF,GAA+BG,mBAAqB,qBACpDH,GAA+BI,cAAgB,gBAC/CJ,GAA+BhI,WAAa,aAC5C,IAAIqI,GAAkB,aACpB,WAAYtiD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsiD,GAAmBC,YAAc,cACjCD,GAAmBE,UAAY,YAC/BF,GAAmBG,YAAc,cACjCH,GAAmBI,IAAM,MACzBJ,GAAmBK,MAAQ,QAC3BL,GAAmBM,OAAS,SAC5BN,GAAmBO,OAAS,SAC5BP,GAAmBQ,KAAO,OAC1BR,GAAmBtI,YAAc,cACjCsI,GAAmBrI,WAAa,aAChC,IAAI8I,GAAgB,aAClB,WAAY/iD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+iD,GAAiBC,YAAc,cAC/BD,GAAiBE,qBAAuB,uBACxCF,GAAiBG,SAAW,WAC5BH,GAAiBI,kBAAoB,oBACrCJ,GAAiBK,QAAU,UAC3BL,GAAiBM,WAAa,aAC9BN,GAAiBO,SAAW,WAC5BP,GAAiBQ,YAAc,cAC/BR,GAAiBS,WAAa,aAC9BT,GAAiBU,cAAgB,gBACjC,IAAIC,GAAiB,aACnB,WAAY1jD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0jD,GAAkBC,MAAQ,QAC1BD,GAAkBE,MAAQ,QAC1BF,GAAkB1J,YAAc,cAChC0J,GAAkBzJ,WAAa,aAC/B,IAAI4J,GAAkB,aACpB,WAAY7jD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6jD,GAAmBC,MAAQ,QAC3BD,GAAmBE,aAAe,eAClCF,GAAmBG,WAAa,aAChC,IAAIC,GAAqB,aACvB,WAAYjkD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFikD,GAAsBC,SAAW,WACjCD,GAAsBE,KAAO,OAC7BF,GAAsBG,aAAe,eACrCH,GAAsBI,WAAa,aACnCJ,GAAsBK,KAAO,OAC7BL,GAAsBM,aAAe,eACrCN,GAAsBO,MAAQ,QAC9BP,GAAsBQ,aAAe,eACrCR,GAAsBS,eAAiB,iBACvCT,GAAsBU,iBAAmB,mBACzCV,GAAsBjK,YAAc,cACpCiK,GAAsBhK,WAAa,aACnC,IAAI2K,GAAiB,aACnB,WAAY5kD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4kD,GAAkBC,OAAS,SAC3BD,GAAkBE,aAAe,eACjCF,GAAkBG,WAAa,aAC/BH,GAAkBI,QAAU,UAC5BJ,GAAkBK,UAAY,YAC9BL,GAAkBM,OAAS,SAC3BN,GAAkBO,WAAa,aAC/BP,GAAkBQ,MAAQ,QAC1BR,GAAkB5K,YAAc,cAChC4K,GAAkB3K,WAAa,aAC/B,IAAIoL,GAA8B,aAChC,WAAYrlD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqlD,GAA+BC,WAAa,aAC5CD,GAA+BE,aAAe,eAC9CF,GAA+BG,MAAQ,QACvCH,GAA+BrL,YAAc,cAC7CqL,GAA+BpL,WAAa,aAC5C,IAAIwL,GAA+B,aACjC,WAAYzlD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFylD,GAAgCC,QAAU,UAC1CD,GAAgCE,QAAU,UAC1CF,GAAgCG,QAAU,UAC1CH,GAAgCI,iBAAmB,mBACnDJ,GAAgCK,kBAAoB,oBACpDL,GAAgCzL,YAAc,cAC9CyL,GAAgCxL,WAAa,aAC7C,IAAI8L,GAAyB,aAC3B,WAAY/lD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+lD,GAA0BC,aAAe,eACzCD,GAA0B1B,WAAa,aACvC0B,GAA0BE,YAAc,cACxCF,GAA0BG,WAAa,aACvCH,GAA0BI,QAAU,UACpCJ,GAA0BhL,UAAY,YACtCgL,GAA0BK,YAAc,cACxCL,GAA0BM,aAAe,eACzCN,GAA0B/L,YAAc,cACxC+L,GAA0B9L,WAAa,aACvC,IAAIqM,GAAiB,aACnB,WAAYtmD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsmD,GAAkBtM,YAAc,cAChCsM,GAAkBrM,WAAa,aAC/B,IAAIsM,GAA8B,aAChC,WAAYvmD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFumD,GAA+BC,KAAO,OACtCD,GAA+BE,MAAQ,QACvCF,GAA+BG,QAAU,UACzCH,GAA+BI,IAAM,MACrCJ,GAA+BvM,YAAc,cAC7CuM,GAA+BtM,WAAa,aAC5C,IAAI2M,GAA8B,aAChC,WAAY5mD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4mD,GAA+BC,mBAAqB,qBACpDD,GAA+BE,iBAAmB,mBAClDF,GAA+BG,qBAAuB,uBACtDH,GAA+BI,eAAiB,iBAChDJ,GAA+B5M,YAAc,cAC7C4M,GAA+B3M,WAAa,aAC5C,IAAIgN,GAAuB,aACzB,WAAYjnD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFinD,GAAwBC,UAAY,YACpCD,GAAwBE,MAAQ,QAChCF,GAAwBG,KAAO,OAC/BH,GAAwBI,SAAW,WACnCJ,GAAwBK,WAAa,aACrCL,GAAwBjN,YAAc,cACtCiN,GAAwBhN,WAAa,aACrC,IAAIsN,GAAuB,aACzB,WAAYvnD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFunD,GAAwBC,cAAgB,gBACxCD,GAAwBE,aAAe,eACvCF,GAAwBG,iBAAmB,mBAC3CH,GAAwBI,YAAc,cACtCJ,GAAwBvN,YAAc,cACtCuN,GAAwBtN,WAAa,aACrC,IAAI2N,GAA4B,aAC9B,WAAY5nD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4nD,GAA6BC,KAAO,OACpCD,GAA6BE,QAAU,UACvCF,GAA6B5N,YAAc,cAC3C4N,GAA6B3N,WAAa,aAC1C,IAAI8N,GAAmB,aACrB,WAAY/nD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+nD,GAAoBC,SAAW,WAC/BD,GAAoBE,SAAW,WAC/BF,GAAoBG,MAAQ,QAC5BH,GAAoBI,QAAU,UAC9BJ,GAAoB9N,WAAa,aACjC,IAAImO,GAAkB,aACpB,WAAYpoD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFooD,GAAmBC,UAAY,YAC/BD,GAAmBE,YAAc,cACjCF,GAAmBG,aAAe,eAClCH,GAAmBpO,YAAc,cACjCoO,GAAmBnO,WAAa,aAChC,IAAIuO,GAAkB,aACpB,WAAYxoD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwoD,GAAmBxO,YAAc,cACjCwO,GAAmBvO,WAAa,aAChC,IAAIwO,GAAe,aACjB,WAAYzoD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFyoD,GAAgBC,cAAgB,gBAChCD,GAAgBE,oBAAsB,sBACtCF,GAAgBG,eAAiB,iBACjCH,GAAgBI,aAAe,eAC/BJ,GAAgBK,iBAAmB,mBACnCL,GAAgBM,iBAAmB,mBACnCN,GAAgBO,iBAAmB,mBACnCP,GAAgBzO,YAAc,cAC9ByO,GAAgBxO,WAAa,aAC7B,IAAIgP,GAAiB,aACnB,WAAYjpD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFipD,GAAkBC,OAAS,SAC3BD,GAAkBE,SAAW,WAC7BF,GAAkBG,SAAW,WAC7BH,GAAkBI,iBAAmB,mBACrCJ,GAAkBK,YAAc,cAChCL,GAAkBjP,YAAc,cAChCiP,GAAkBhP,WAAa,aAC/B,IAAIsP,GAAkC,aACpC,WAAYvpD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFupD,GAAmCC,QAAU,UAC7CD,GAAmCE,SAAW,WAC9CF,GAAmC3P,IAAM,MACzC2P,GAAmCG,QAAU,UAC7CH,GAAmCI,MAAQ,QAC3CJ,GAAmCK,iBAAmB,mBACtDL,GAAmCM,cAAgB,gBACnDN,GAAmCO,WAAa,aAChDP,GAAmCQ,QAAU,UAC7CR,GAAmCS,SAAW,WAC9CT,GAAmCU,OAAS,SAC5CV,GAAmCW,QAAU,UAC7CX,GAAmCvP,YAAc,cACjDuP,GAAmCtP,WAAa,aAChD,IAAIkQ,GAAkC,aACpC,WAAYnqD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmqD,GAAmCC,UAAY,YAC/CD,GAAmCE,UAAY,YAC/C,IAAIC,GAAqB,aACvB,WAAYtqD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsqD,GAAsBC,QAAU,UAChCD,GAAsBE,cAAgB,gBACtCF,GAAsBG,OAAS,SAC/BH,GAAsBI,OAAS,SAC/BJ,GAAsBK,WAAa,aACnCL,GAAsBM,YAAc,cACpCN,GAAsBO,QAAU,UAChCP,GAAsBQ,SAAW,WACjCR,GAAsBS,SAAW,WACjCT,GAAsBU,aAAe,eACrCV,GAAsBW,oBAAsB,sBAC5CX,GAAsBY,cAAgB,gBACtCZ,GAAsBa,WAAa,aACnCb,GAAsBc,YAAc,cACpCd,GAAsBe,UAAY,YAClCf,GAAsBtQ,YAAc,cACpCsQ,GAAsBrQ,WAAa,aACnC,IAAIqR,GAAoB,aACtB,WAAYtrD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsrD,GAAqBjD,UAAY,YACjCiD,GAAqBC,kBAAoB,oBACzCD,GAAqBhD,YAAc,cACnCgD,GAAqBE,uBAAyB,yBAC9CF,GAAqBG,qBAAuB,uBAC5CH,GAAqBI,qBAAuB,uBAC5CJ,GAAqBK,sBAAwB,wBAC7CL,GAAqBtR,YAAc,cACnCsR,GAAqBrR,WAAa,aAClC,IAAI2R,GAAqB,aACvB,WAAY5rD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4rD,GAAsBC,OAAS,SAC/BD,GAAsBE,QAAU,UAChCF,GAAsBG,MAAQ,QAC9BH,GAAsB3R,WAAa,aACnC,IAAI+R,GAAiB,aACnB,WAAYhsD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgsD,GAAkBC,KAAO,OACzBD,GAAkBE,KAAO,OACzBF,GAAkBG,SAAW,WAC7BH,GAAkBhS,YAAc,cAChCgS,GAAkB/R,WAAa,aAC/B,IAAImS,GAAwC,aAC1C,WAAYpsD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFosD,GAAyCC,YAAc,cACvDD,GAAyCE,YAAc,cACvDF,GAAyCG,SAAW,WACpDH,GAAyCI,QAAU,UACnDJ,GAAyCK,SAAW,WACpDL,GAAyCM,OAAS,SAClDN,GAAyCO,QAAU,UACnDP,GAAyCQ,aAAe,eACxDR,GAAyCpS,YAAc,cACvDoS,GAAyCnS,WAAa,aACtD,IAAI4S,GAAuC,aACzC,WAAY7sD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6sD,GAAwCC,WAAa,aACrDD,GAAwCE,SAAW,WACnDF,GAAwCG,QAAU,UAClDH,GAAwCI,KAAO,OAC/CJ,GAAwCK,OAAS,SACjDL,GAAwCM,QAAU,UAClDN,GAAwCO,MAAQ,QAChDP,GAAwCQ,QAAU,UAClDR,GAAwCS,KAAO,OAC/CT,GAAwC5S,WAAa,aACrD4S,GAAwC7S,YAAc,cACtD,IAAIuT,GAAsC,aACxC,WAAYvtD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFutD,GAAuCC,SAAW,WAClDD,GAAuCE,SAAW,WAClDF,GAAuCvT,YAAc,cACrDuT,GAAuCtT,WAAa,aACpD,IAAIyT,GAAqB,aACvB,WAAY1tD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0tD,GAAsBC,SAAW,WACjCD,GAAsBE,aAAe,eACrCF,GAAsBG,aAAe,eACrCH,GAAsBI,cAAgB,gBACtCJ,GAAsBK,YAAc,cACpCL,GAAsB1T,YAAc,cACpC0T,GAAsBzT,WAAa,aACnC,IAAI+T,GAAqB,aACvB,WAAYhuD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFguD,GAAsBC,OAAS,SAC/BD,GAAsBE,QAAU,UAChCF,GAAsBhU,YAAc,cACpCgU,GAAsB/T,WAAa,aACnC,IAAIkU,GAAuB,aACzB,WAAYnuD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmuD,GAAwBC,aAAe,eACvCD,GAAwBE,uBAAyB,yBACjDF,GAAwBG,sBAAwB,wBAChDH,GAAwBnU,YAAc,cACtCmU,GAAwBlU,WAAa,aACrC,IAAIsU,GAAmB,aACrB,WAAYvuD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFuuD,GAAoBvU,YAAc,cAClCuU,GAAoBtU,WAAa,aACjC,IAAIuU,GAAuB,aACzB,WAAYxuD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwuD,GAAwBC,OAAS,SACjCD,GAAwBE,SAAW,WACnCF,GAAwBG,SAAW,WACnCH,GAAwBI,OAAS,SACjCJ,GAAwBK,uBAAyB,yBACjDL,GAAwBM,yBAA2B,2BACnDN,GAAwBO,gBAAkB,kBAC1CP,GAAwBxU,YAAc,cACtCwU,GAAwBvU,WAAa,aACrC,IAAI+U,GAAmB,aACrB,WAAYhvD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgvD,GAAoBC,QAAU,UAC9BD,GAAoBE,SAAW,WAC/BF,GAAoBG,SAAW,WAC/BH,GAAoBI,QAAU,UAC9BJ,GAAoBK,QAAU,UAC9BL,GAAoBM,cAAgB,gBACpCN,GAAoB1J,WAAa,aACjC0J,GAAoBO,SAAW,WAC/BP,GAAoBQ,SAAW,WAC/BR,GAAoBS,SAAW,WAC/BT,GAAoBU,OAAS,SAC7BV,GAAoBhV,YAAc,cAClCgV,GAAoB/U,WAAa,aACjC,IAAI0V,GAAuB,aACzB,WAAY3vD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF2vD,GAAwBpT,OAAS,SACjCoT,GAAwBnT,KAAO,OAC/BmT,GAAwB3V,YAAc,cACtC2V,GAAwB1V,WAAa,aACrC,IAAI2V,GAAsB,aACxB,WAAY5vD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4vD,GAAuB5V,YAAc,cACrC4V,GAAuB3V,WAAa,aACpC,IAAI4V,GAAyB,aAC3B,WAAY7vD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6vD,GAA0BC,OAAS,SACnCD,GAA0BE,WAAa,aACvCF,GAA0BG,QAAU,UACpCH,GAA0B5V,WAAa,aACvC,IAAIgW,GAAiB,aACnB,WAAYjwD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFiwD,GAAkBC,gBAAkB,kBACpCD,GAAkBE,gBAAkB,kBACpCF,GAAkBG,YAAc,cAChCH,GAAkBI,cAAgB,gBAClCJ,GAAkBK,WAAa,aAC/BL,GAAkBM,gBAAkB,kBACpCN,GAAkBO,gBAAkB,kBACpCP,GAAkBQ,cAAgB,gBAClCR,GAAkBS,oBAAsB,sBACxCT,GAAkBU,aAAe,eACjCV,GAAkBW,YAAc,cAChCX,GAAkBjW,YAAc,cAChCiW,GAAkBhW,WAAa,aAC/B,IAAI4W,GAAiB,aACnB,WAAY7wD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6wD,GAAkBC,SAAW,WAC7BD,GAAkBE,UAAY,YAC9BF,GAAkBG,UAAY,YAC9BH,GAAkB7W,YAAc,cAChC6W,GAAkB5W,WAAa,aAC/B,IAAIgX,GAAkB,aACpB,WAAYjxD,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFixD,GAAmBC,oBAAsB,sBACzCD,GAAmBE,gBAAkB,kBACrCF,GAAmBG,uBAAyB,yBAC5CH,GAAmBI,qBAAuB,uBAC1CJ,GAAmBK,oBAAsB,sBACzCL,GAAmBM,qBAAuB,uBAC1CN,GAAmBO,+BAAiC,iCACpDP,GAAmBQ,uBAAyB,yBAC5CR,GAAmBS,mBAAqB,qBACxCT,GAAmBU,gBAAkB,kBACrCV,GAAmBW,iBAAmB,mBACtCX,GAAmBY,wBAA0B,0BAC7CZ,GAAmBa,oBAAsB,sBACzCb,GAAmBc,yBAA2B,2BAC9Cd,GAAmBe,sBAAwB,wBAC3Cf,GAAmBgB,uBAAyB,yBAC5ChB,GAAmBiB,sBAAwB,wBAC3CjB,GAAmBkB,yBAA2B,2BAC9ClB,GAAmBmB,sBAAwB,wBAC3CnB,GAAmBoB,uBAAyB,yBAC5CpB,GAAmBqB,wBAA0B,0BAC7CrB,GAAmBsB,WAAa,aAChCtB,GAAmBuB,oBAAsB,sBACzCvB,GAAmBwB,iBAAmB,mBACtCxB,GAAmByB,gBAAkB,kBACrCzB,GAAmB0B,gBAAkB,kBACrC1B,GAAmB2B,wBAA0B,0BAC7C3B,GAAmB4B,iBAAmB,mBACtC5B,GAAmB6B,oBAAsB,sBACzC7B,GAAmB8B,wBAA0B,0BAC7C9B,GAAmB+B,8BAAgC,gCACnD/B,GAAmBgC,iBAAmB,mBACtChC,GAAmBiC,cAAgB,gBACnCjC,GAAmBkC,iBAAmB,mBACtClC,GAAmBmC,qBAAuB,uBAC1CnC,GAAmBoC,kCAAoC,oCACvDpC,GAAmBqC,kBAAoB,oBACvCrC,GAAmBsC,oCAAsC,sCACzDtC,GAAmBuC,wCAA0C,0CAC7DvC,GAAmBwC,OAAS,SAC5BxC,GAAmByC,mBAAqB,qBACxCzC,GAAmB0C,wBAA0B,0BAC7C1C,GAAmB2C,mBAAqB,qBACxC3C,GAAmB4C,oBAAsB,sBACzC5C,GAAmB6C,eAAiB,iBACpC7C,GAAmB8C,uBAAyB,yBAC5C9C,GAAmB+C,kBAAoB,oBACvC/C,GAAmBgD,wBAA0B,0BAC7ChD,GAAmBiD,4BAA8B,8BACjDjD,GAAmBkD,gCAAkC,kCACrDlD,GAAmBmD,oBAAsB,sBACzCnD,GAAmBoD,kBAAoB,oBACvCpD,GAAmBjX,YAAc,cACjC,IAAIsa,GAAqB,aACvB,WAAYt0D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs0D,GAAsBC,SAAW,WACjCD,GAAsBE,SAAW,WACjC,IAAIC,GAA4B,aAC9B,WAAYz0D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFy0D,GAA6BC,YAAc,cAC3CD,GAA6BE,QAAU,UACvCF,GAA6BG,KAAO,OACpCH,GAA6BI,uBAAyB,yBACtDJ,GAA6Bza,YAAc,cAC3Cya,GAA6Bxa,WAAa,aAC1C,IAAI6a,GAAqC,aACvC,WAAY90D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF80D,GAAsCC,WAAa,aACnDD,GAAsCE,kBAAoB,oBAC1DF,GAAsCG,cAAgB,gBACtDH,GAAsCI,QAAU,UAChDJ,GAAsCK,aAAe,eACrDL,GAAsCM,KAAO,OAC7CN,GAAsCO,OAAS,SAC/CP,GAAsCQ,aAAe,eACrDR,GAAsC9a,YAAc,cACpD8a,GAAsC7a,WAAa,aACnD,IAAIsb,GAA2B,aAC7B,WAAYv1D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFu1D,GAA4BC,MAAQ,QACpCD,GAA4BE,aAAe,eAC3CF,GAA4BG,KAAO,OACnCH,GAA4BI,KAAO,OACnCJ,GAA4Bvb,YAAc,cAC1Cub,GAA4Btb,WAAa,aACzC,IAAI2b,GAAyB,aAC3B,WAAY51D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF41D,GAA0BC,gBAAkB,kBAC5CD,GAA0BE,YAAc,cACxCF,GAA0BG,SAAW,WACrCH,GAA0BI,aAAe,eACzCJ,GAA0BK,cAAgB,gBAC1CL,GAA0BM,cAAgB,gBAC1CN,GAA0BO,eAAiB,iBAC3CP,GAA0BQ,QAAU,UACpCR,GAA0BS,UAAY,YACtCT,GAA0BU,KAAO,OACjCV,GAA0BW,SAAW,WACrCX,GAA0BY,kBAAoB,oBAC9CZ,GAA0Ba,iBAAmB,mBAC7Cb,GAA0Bc,SAAW,WACrCd,GAA0Be,SAAW,WACrCf,GAA0BgB,WAAa,aACvChB,GAA0BiB,gBAAkB,kBAC5CjB,GAA0BkB,QAAU,UACpClB,GAA0BmB,eAAiB,iBAC3CnB,GAA0B3I,KAAO,OACjC2I,GAA0BoB,IAAM,MAChCpB,GAA0BqB,UAAY,YACtCrB,GAA0BpJ,QAAU,UACpCoJ,GAA0BnJ,SAAW,WACrCmJ,GAA0BsB,oBAAsB,sBAChDtB,GAA0BuB,oBAAsB,sBAChDvB,GAA0BwB,IAAM,MAChCxB,GAA0ByB,YAAc,cACxCzB,GAA0B0B,gBAAkB,kBAC5C1B,GAA0B2B,UAAY,YACtC3B,GAA0B4B,cAAgB,gBAC1C5B,GAA0B6B,SAAW,WACrC7B,GAA0B8B,OAAS,SACnC9B,GAA0B+B,OAAS,SACnC/B,GAA0BgC,WAAa,aACvChC,GAA0B5V,UAAY,YACtC4V,GAA0BiC,GAAK,KAC/BjC,GAA0BkC,OAAS,SACnClC,GAA0BmC,KAAO,OACjCnC,GAA0BoC,YAAc,cACxCpC,GAA0BqC,WAAa,aACvCrC,GAA0BsC,YAAc,cACxCtC,GAA0B5b,YAAc,cACxC4b,GAA0B3b,WAAa,aACvC,IAAIke,GAA8B,aAChC,WAAYn4D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFm4D,GAA+BC,OAAS,SACxCD,GAA+BE,WAAa,aAC5CF,GAA+BG,aAAe,eAC9CH,GAA+BI,SAAW,WAC1CJ,GAA+Bne,YAAc,cAC7Cme,GAA+Ble,WAAa,aAC5C,IAAIue,GAAqB,aACvB,WAAYx4D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFw4D,GAAsBC,MAAQ,QAC9BD,GAAsBE,WAAa,aACnCF,GAAsBG,MAAQ,QAC9BH,GAAsBI,SAAW,WACjCJ,GAAsBve,WAAa,aACnC,IAAI4e,GAAyB,aAC3B,WAAY74D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF64D,GAA0BC,SAAW,WACrCD,GAA0BE,cAAgB,gBAC1CF,GAA0BG,QAAU,UACpCH,GAA0BI,QAAU,UACpCJ,GAA0BK,UAAY,YACtCL,GAA0BM,UAAY,YACtCN,GAA0BO,WAAa,aACvCP,GAA0B7e,YAAc,cACxC6e,GAA0B5e,WAAa,aACvC,IAAIof,GAAwB,aAC1B,WAAYr5D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFq5D,GAAyBC,KAAO,OAChCD,GAAyBE,OAAS,SAClCF,GAAyBG,MAAQ,QACjCH,GAAyBpf,WAAa,aACtC,IAAIwf,GAA4B,aAC9B,WAAYz5D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFy5D,GAA6BC,UAAY,YACzCD,GAA6BE,iBAAmB,mBAChDF,GAA6BG,MAAQ,QACrCH,GAA6BnM,KAAO,OACpCmM,GAA6BI,eAAiB,iBAC9CJ,GAA6BK,kBAAoB,oBACjDL,GAA6BpM,QAAU,UACvCoM,GAA6Bzf,YAAc,cAC3Cyf,GAA6Bxf,WAAa,aAC1C,IAAI8f,GAAyB,aAC3B,WAAY/5D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+5D,GAA0BC,kBAAoB,oBAC9CD,GAA0BE,mBAAqB,qBAC/CF,GAA0BG,yBAA2B,2BACrDH,GAA0BI,uCAAyC,yCACnEJ,GAA0BK,wCAA0C,0CACpEL,GAA0BM,kBAAoB,oBAC9CN,GAA0BO,mBAAqB,qBAC/CP,GAA0BQ,yBAA2B,2BACrDR,GAA0BS,gBAAkB,kBAC5CT,GAA0BU,iBAAmB,mBAC7CV,GAA0BW,oBAAsB,sBAChDX,GAA0BY,gBAAkB,kBAC5CZ,GAA0Ba,iBAAmB,mBAC7Cb,GAA0Bc,oBAAsB,sBAChDd,GAA0Bb,UAAY,YACtCa,GAA0BZ,UAAY,YACtCY,GAA0B/f,YAAc,cACxC+f,GAA0B9f,WAAa,aACvC,IAAI6gB,GAAe,aACjB,WAAY96D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF86D,GAAgBC,KAAO,OACvBD,GAAgBE,KAAO,OACvBF,GAAgBG,SAAW,WAC3BH,GAAgB9gB,YAAc,cAC9B8gB,GAAgB7gB,WAAa,aAC7B,IAAIihB,GAAwB,aAC1B,WAAYl7D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk7D,GAAyBlB,kBAAoB,oBAC7CkB,GAAyBjB,mBAAqB,qBAC9CiB,GAAyBhB,yBAA2B,2BACpDgB,GAAyBf,uCAAyC,yCAClEe,GAAyBd,wCAA0C,0CACnEc,GAAyBb,kBAAoB,oBAC7Ca,GAAyBZ,mBAAqB,qBAC9CY,GAAyBX,yBAA2B,2BACpDW,GAAyBV,gBAAkB,kBAC3CU,GAAyBT,iBAAmB,mBAC5CS,GAAyBR,oBAAsB,sBAC/CQ,GAAyBP,gBAAkB,kBAC3CO,GAAyBN,iBAAmB,mBAC5CM,GAAyBL,oBAAsB,sBAC/CK,GAAyBhC,UAAY,YACrCgC,GAAyB/B,UAAY,YACrC+B,GAAyBC,iBAAmB,mBAC5CD,GAAyBE,kBAAoB,oBAC7CF,GAAyBlhB,YAAc,cACvCkhB,GAAyBjhB,WAAa,aACtC,IAAIohB,GAAsB,aACxB,WAAYr7D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFq7D,GAAuB7U,KAAO,OAC9B6U,GAAuBnU,UAAY,YACnCmU,GAAuBlU,MAAQ,QAC/BkU,GAAuBjU,KAAO,OAC9BiU,GAAuBhU,SAAW,WAClCgU,GAAuBC,YAAc,cACrCD,GAAuB/T,WAAa,aACpC+T,GAAuBrhB,YAAc,cACrCqhB,GAAuBphB,WAAa,aACpC,IAAIshB,GAAsB,aACxB,WAAYv7D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFu7D,GAAuBC,aAAe,eACtCD,GAAuBE,gBAAkB,kBACzCF,GAAuBvhB,YAAc,cACrCuhB,GAAuBthB,WAAa,aACpC,IAAIyhB,GAAuB,aACzB,WAAY17D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF07D,GAAwBC,SAAW,WACnCD,GAAwBE,YAAc,cACtCF,GAAwBG,MAAQ,QAChCH,GAAwB1hB,YAAc,cACtC0hB,GAAwBzhB,WAAa,aACrC,IAAI6hB,GAA4B,aAC9B,WAAY97D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF87D,GAA6BC,WAAa,aAC1CD,GAA6BE,eAAiB,iBAC9CF,GAA6BG,2BAA6B,6BAC1DH,GAA6BI,gBAAkB,kBAC/CJ,GAA6BK,wBAA0B,0BACvDL,GAA6BM,wBAA0B,0BACvDN,GAA6BO,QAAU,UACvCP,GAA6BQ,eAAiB,iBAC9CR,GAA6BS,UAAY,YACzCT,GAA6BU,eAAiB,iBAC9CV,GAA6BW,UAAY,YACzCX,GAA6BY,YAAc,cAC3CZ,GAA6Ba,aAAe,eAC5Cb,GAA6Bc,YAAc,cAC3Cd,GAA6Be,eAAiB,iBAC9Cf,GAA6BgB,eAAiB,iBAC9ChB,GAA6B9hB,YAAc,cAC3C8hB,GAA6B7hB,WAAa,aAC1C,IAAI8iB,GAAoC,aACtC,WAAY/8D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+8D,GAAqCC,aAAe,eACpDD,GAAqCE,kBAAoB,oBACzDF,GAAqCG,mBAAqB,qBAC1DH,GAAqCI,YAAc,cACnDJ,GAAqC/iB,YAAc,cACnD+iB,GAAqC9iB,WAAa,aAClD,IAAImjB,GAAoC,aACtC,WAAYp9D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFo9D,GAAqCC,QAAU,UAC/CD,GAAqCE,cAAgB,gBACrDF,GAAqCG,eAAiB,iBACtDH,GAAqCI,aAAe,eACpDJ,GAAqCK,IAAM,MAC3CL,GAAqCpjB,YAAc,cACnDojB,GAAqCnjB,WAAa,aAClD,IAAIyjB,GAA4B,aAC9B,WAAY19D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF09D,GAA6BC,IAAM,MACnCD,GAA6BE,gBAAkB,kBAC/CF,GAA6BG,WAAa,aAC1CH,GAA6B1jB,YAAc,cAC3C0jB,GAA6BzjB,WAAa,aAC1C,IAAI6jB,GAAwB,aAC1B,WAAY99D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF89D,GAAyBC,GAAK,KAC9BD,GAAyBE,UAAY,YACrCF,GAAyBG,UAAY,YACrCH,GAAyBI,sBAAwB,wBACjDJ,GAAyBK,YAAc,cACvCL,GAAyB9jB,YAAc,cACvC8jB,GAAyB7jB,WAAa,aACtC,IAAImkB,GAA8B,aAChC,WAAYp+D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFo+D,GAA+BC,UAAY,YAC3CD,GAA+BE,UAAY,YAC3CF,GAA+BG,MAAQ,QACvCH,GAA+BpkB,YAAc,cAC7CokB,GAA+BnkB,WAAa,aAC5C,IAAIukB,GAA0B,aAC5B,WAAYx+D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFw+D,GAA2BC,mBAAqB,qBAChDD,GAA2BE,KAAO,OAClCF,GAA2BG,UAAY,YACvCH,GAA2BI,aAAe,eAC1CJ,GAA2BtZ,OAAS,SACpCsZ,GAA2BK,mBAAqB,qBAChDL,GAA2BM,YAAc,cACzCN,GAA2BO,WAAa,aACxCP,GAA2BpZ,MAAQ,QACnCoZ,GAA2Bta,SAAW,WACtCsa,GAA2Bla,KAAO,OAClCka,GAA2Bha,MAAQ,QACnCga,GAA2BQ,cAAgB,gBAC3CR,GAA2Bra,KAAO,OAClCqa,GAA2BxkB,YAAc,cACzCwkB,GAA2BvkB,WAAa,aACxC,IAAIglB,GAAyB,aAC3B,WAAYj/D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFi/D,GAA0BvZ,QAAU,UACpCuZ,GAA0BtZ,QAAU,UACpCsZ,GAA0BrZ,QAAU,UACpC,IAAIsZ,GAAiB,aACnB,WAAYl/D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk/D,GAAkBC,mBAAqB,qBACvCD,GAAkBE,mBAAqB,qBACvCF,GAAkBllB,YAAc,cAChCklB,GAAkBjlB,WAAa,aAC/B,IAAIolB,GAA4B,aAC9B,WAAYr/D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFq/D,GAA6BC,sCAAwC,wCACrED,GAA6BE,qCAAuC,uCACpEF,GAA6BG,2CAA6C,6CAC1EH,GAA6BI,yCAA2C,2CACxEJ,GAA6BK,2BAA6B,6BAC1DL,GAA6BM,oCAAsC,sCACnEN,GAA6BO,2BAA6B,6BAC1DP,GAA6BQ,4CAA8C,8CAC3ER,GAA6BS,0BAA4B,4BACzDT,GAA6BrlB,YAAc,cAC3CqlB,GAA6BplB,WAAa,aAC1C,IAAI8lB,GAAqB,aACvB,WAAY//D,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+/D,GAAsBC,gBAAkB,kBACxCD,GAAsBE,4BAA8B,8BACpDF,GAAsBG,0BAA4B,4BAClDH,GAAsBI,2BAA6B,6BACnDJ,GAAsBK,oBAAsB,sBAC5CL,GAAsBM,aAAe,eACrCN,GAAsB/lB,YAAc,cACpC+lB,GAAsB9lB,WAAa,aACnC,IAAIqmB,GAAuB,aACzB,WAAYtgE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsgE,GAAwBC,UAAY,YACpCD,GAAwBE,aAAe,eACvCF,GAAwBG,UAAY,YACpCH,GAAwBI,aAAe,eACvCJ,GAAwBtmB,YAAc,cACtCsmB,GAAwBrmB,WAAa,aACrC,IAAI0mB,GAAgB,aAClB,WAAY3gE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF2gE,GAAiBC,WAAa,aAC9BD,GAAiBE,SAAW,WAC5BF,GAAiBG,kBAAoB,oBACrCH,GAAiB3mB,YAAc,cAC/B2mB,GAAiB1mB,WAAa,aAC9B,IAAI8mB,GAAiC,aACnC,WAAY/gE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+gE,GAAkCC,SAAW,WAC7CD,GAAkCE,eAAiB,iBACnDF,GAAkCG,eAAiB,iBACnDH,GAAkCI,cAAgB,gBAClDJ,GAAkC/mB,YAAc,cAChD+mB,GAAkC9mB,WAAa,aAC/C,IAAImnB,GAAc,aAChB,WAAYphE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFohE,GAAeC,yBAA2B,2BAC1CD,GAAeE,kBAAoB,oBACnCF,GAAeG,kCAAoC,oCACnDH,GAAeI,mBAAqB,qBACpCJ,GAAeK,UAAY,YAC3BL,GAAeM,UAAY,YAC3BN,GAAeO,eAAiB,iBAChCP,GAAepnB,YAAc,cAC7BonB,GAAennB,WAAa,aAC5B,IAAI2nB,GAAmB,aACrB,WAAY5hE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4hE,GAAoBC,KAAO,OAC3BD,GAAoBE,OAAS,SAC7BF,GAAoBG,KAAO,OAC3BH,GAAoB5nB,YAAc,cAClC4nB,GAAoB3nB,WAAa,aACjC,IAAI+nB,GAAiB,aACnB,WAAYhiE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgiE,GAAkBC,kBAAoB,oBACtCD,GAAkBE,oBAAsB,sBACxCF,GAAkBG,WAAa,aAC/BH,GAAkBI,UAAY,YAC9BJ,GAAkBK,SAAW,WAC7BL,GAAkBM,YAAc,cAChCN,GAAkBhoB,YAAc,cAChCgoB,GAAkB/nB,WAAa,aAC/B,IAAIsoB,GAAkC,aACpC,WAAYviE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFuiE,GAAmCC,eAAiB,iBACpDD,GAAmCE,YAAc,cACjDF,GAAmCG,SAAW,WAC9CH,GAAmCI,UAAY,YAC/CJ,GAAmCK,mBAAqB,qBACxDL,GAAmCvoB,YAAc,cACjDuoB,GAAmCtoB,WAAa,aAChD,IAAI4oB,GAAoB,aACtB,WAAY7iE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6iE,GAAqBC,OAAS,SAC9BD,GAAqBE,KAAO,OAC5BF,GAAqBG,cAAgB,gBACrCH,GAAqB5oB,WAAa,aAClC,IAAIgpB,GAAyB,aAC3B,WAAYjjE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFijE,GAA0BC,cAAgB,gBAC1CD,GAA0BE,YAAc,cACxCF,GAA0BG,QAAU,UACpCH,GAA0BI,eAAiB,iBAC3CJ,GAA0BK,iBAAmB,mBAC7CL,GAA0BM,gBAAkB,kBAC5CN,GAA0BO,eAAiB,iBAC3CP,GAA0BQ,cAAgB,gBAC1CR,GAA0BjpB,YAAc,cACxCipB,GAA0BhpB,WAAa,aACvC,IAAIypB,GAAoB,aACtB,WAAY1jE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0jE,GAAqBC,YAAc,cACnCD,GAAqBE,SAAW,WAChCF,GAAqBG,SAAW,WAChCH,GAAqBI,WAAa,aAClCJ,GAAqB1pB,YAAc,cACnC0pB,GAAqBzpB,WAAa,aAClC,IAAI8pB,GAAkB,aACpB,WAAY/jE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+jE,GAAmBC,mBAAqB,qBACxCD,GAAmBE,aAAe,eAClCF,GAAmBG,YAAc,cACjCH,GAAmBI,SAAW,WAC9BJ,GAAmBK,cAAgB,gBACnCL,GAAmB/pB,YAAc,cACjC+pB,GAAmB9pB,WAAa,aAChC,IAAIoqB,GAAoB,aACtB,WAAYrkE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqkE,GAAqBC,MAAQ,QAC7BD,GAAqBE,MAAQ,QAC7BF,GAAqBG,KAAO,OAC5BH,GAAqBI,IAAM,MAC3BJ,GAAqBK,YAAc,cACnCL,GAAqBM,MAAQ,QAC7BN,GAAqBO,KAAO,OAC5BP,GAAqBrqB,YAAc,cACnCqqB,GAAqBpqB,WAAa,aAClC,IAAI4qB,GAA4B,aAC9B,WAAY7kE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6kE,GAA6BC,QAAU,UACvCD,GAA6BE,kBAAoB,oBACjDF,GAA6B7qB,YAAc,cAC3C6qB,GAA6B5qB,WAAa,aAC1C,IAAI+qB,GAA0B,aAC5B,WAAYhlE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFglE,GAA2BC,WAAa,aACxCD,GAA2BE,YAAc,cACzCF,GAA2BG,WAAa,aACxCH,GAA2BI,UAAY,YACvCJ,GAA2BK,oBAAsB,sBACjDL,GAA2BM,aAAe,eAC1CN,GAA2BO,eAAiB,iBAC5CP,GAA2BhrB,YAAc,cACzCgrB,GAA2B/qB,WAAa,aACxC,IAAIurB,GAAoB,aACtB,WAAYxlE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwlE,GAAqBC,cAAgB,gBACrCD,GAAqBE,aAAe,eACpC,IAAIC,GAAe,aACjB,WAAY3lE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF2lE,GAAgB/J,YAAc,cAC9B+J,GAAgBC,OAAS,SACzBD,GAAgBE,WAAa,aAC7BF,GAAgBG,UAAY,YAC5BH,GAAgB3rB,YAAc,cAC9B2rB,GAAgB1rB,WAAa,aAC7B,IAAI8rB,GAAwB,aAC1B,WAAY/lE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+lE,GAAyBC,MAAQ,QACjCD,GAAyBE,aAAe,eACxCF,GAAyB/rB,YAAc,cACvC+rB,GAAyB9rB,WAAa,aACtC,IAAIisB,GAAqB,aACvB,WAAYlmE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkmE,GAAsBC,eAAiB,iBACvCD,GAAsBE,mBAAqB,qBAC3CF,GAAsBG,aAAe,eACrCH,GAAsBI,uBAAyB,yBAC/CJ,GAAsBK,mBAAqB,qBAC3CL,GAAsBM,oBAAsB,sBAC5CN,GAAsBO,oBAAsB,sBAC5CP,GAAsBQ,6BAA+B,+BACrDR,GAAsBS,iBAAmB,mBACzCT,GAAsBU,mBAAqB,qBAC3CV,GAAsBW,gBAAkB,kBACxCX,GAAsBY,eAAiB,iBACvCZ,GAAsBa,cAAgB,gBACtCb,GAAsBlsB,YAAc,cACpCksB,GAAsBjsB,WAAa,aACnC,IAAI+sB,GAAsB,aACxB,WAAYhnE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgnE,GAAuBC,SAAW,WAClCD,GAAuBE,OAAS,SAChCF,GAAuB5P,IAAM,MAC7B4P,GAAuBG,OAAS,SAChCH,GAAuBhtB,YAAc,cACrCgtB,GAAuB/sB,WAAa,aACpC,IAAImtB,GAAyB,aAC3B,WAAYpnE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFonE,GAA0BC,SAAW,WACrCD,GAA0BpG,SAAW,WACrCoG,GAA0BnG,eAAiB,iBAC3CmG,GAA0BlG,eAAiB,iBAC3CkG,GAA0BjG,cAAgB,gBAC1CiG,GAA0BntB,WAAa,aACvC,IAAIqtB,GAAoB,aACtB,WAAYtnE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsnE,GAAqBC,eAAiB,iBACtCD,GAAqBE,eAAiB,iBACtCF,GAAqBG,mBAAqB,qBAC1CH,GAAqBttB,YAAc,cACnCstB,GAAqBrtB,WAAa,aAClC,IAAIytB,GAAsB,aACxB,WAAY1nE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0nE,GAAuBpR,KAAO,OAC9BoR,GAAuBC,MAAQ,QAC/BD,GAAuB1tB,YAAc,cACrC0tB,GAAuBztB,WAAa,aACpC,IAAI2tB,GAAW,aACb,WAAY5nE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4nE,GAAYC,cAAgB,gBAC5BD,GAAYE,oBAAsB,sBAClCF,GAAYG,uBAAyB,yBACrCH,GAAYpnB,YAAc,cAC1B,IAAIwnB,GAAwB,aAC1B,WAAYhoE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgoE,GAAyBC,eAAiB,iBAC1CD,GAAyBE,UAAY,YACrCF,GAAyBG,SAAW,WACpCH,GAAyBjb,SAAW,WACpCib,GAAyBhb,QAAU,UACnCgb,GAAyBI,SAAW,WACpCJ,GAAyBK,UAAY,YACrCL,GAAyB9Y,SAAW,WACpC8Y,GAAyBM,QAAU,UACnCN,GAAyBO,KAAO,OAChCP,GAAyBQ,YAAc,cACvCR,GAAyB7a,QAAU,UACnC6a,GAAyBS,SAAW,WACpCT,GAAyBtb,OAAS,SAClCsb,GAAyBU,SAAW,WACpCV,GAAyB5Y,QAAU,UACnC4Y,GAAyBW,YAAc,cACvCX,GAAyBY,UAAY,YACrCZ,GAAyBa,UAAY,YACrCb,GAAyBhuB,YAAc,cACvCguB,GAAyB/tB,WAAa,aACtC,IAAI6uB,GAAe,aACjB,WAAY9oE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8oE,GAAgBC,mBAAqB,qBACrCD,GAAgBE,YAAc,cAC9BF,GAAgBG,QAAU,UAC1BH,GAAgBI,oBAAsB,sBACtCJ,GAAgBK,mBAAqB,qBACrCL,GAAgBM,IAAM,MACtBN,GAAgBO,YAAc,cAC9BP,GAAgBQ,KAAO,OACvBR,GAAgBS,iBAAmB,mBACnCT,GAAgB9uB,YAAc,cAC9B8uB,GAAgB7uB,WAAa,aAC7B,IAAIuvB,GAAwB,aAC1B,WAAYxpE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwpE,GAAyBC,MAAQ,QACjCD,GAAyBE,MAAQ,QACjCF,GAAyBG,MAAQ,QACjC,IAAIC,GAA6B,aAC/B,WAAY5pE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4pE,GAA8BC,OAAS,SACvCD,GAA8BE,OAAS,SACvCF,GAA8BG,OAAS,SACvCH,GAA8B3vB,WAAa,aAC3C,IAAI+vB,GAA0B,aAC5B,WAAYhqE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgqE,GAA2BjB,mBAAqB,qBAChDiB,GAA2BhB,YAAc,cACzCgB,GAA2Bd,oBAAsB,sBACjDc,GAA2Bb,mBAAqB,qBAChDa,GAA2BC,mBAAqB,qBAChDD,GAA2BE,kBAAoB,oBAC/CF,GAA2BG,kBAAoB,oBAC/CH,GAA2BI,mBAAqB,qBAChDJ,GAA2BX,YAAc,cACzCW,GAA2BT,iBAAmB,mBAC9CS,GAA2B/vB,WAAa,aACxC,IAAIowB,GAAuB,aACzB,WAAYrqE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqqE,GAAwBC,YAAc,cACtCD,GAAwBE,gBAAkB,kBAC1CF,GAAwBG,iBAAmB,mBAC3CH,GAAwBrwB,YAAc,cACtCqwB,GAAwBpwB,WAAa,aACrC,IAAIwwB,GAAoB,aACtB,WAAYzqE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFyqE,GAAqBC,WAAa,aAClCD,GAAqBE,UAAY,YACjCF,GAAqBG,iBAAmB,mBACxCH,GAAqBzwB,YAAc,cACnCywB,GAAqBxwB,WAAa,aAClC,IAAI4wB,GAAsB,aACxB,WAAY7qE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6qE,GAAuBC,WAAa,aACpCD,GAAuBE,UAAY,YACnCF,GAAuBG,WAAa,aACpCH,GAAuBI,cAAgB,gBACvCJ,GAAuBK,aAAe,eACtC,IAAIC,GAA6B,aAC/B,WAAYnrE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmrE,GAA8BC,WAAa,aAC3CD,GAA8BE,KAAO,OACrCF,GAA8BG,MAAQ,QACtCH,GAA8BI,KAAO,OACrCJ,GAA8BK,UAAY,YAC1CL,GAA8BM,MAAQ,QACtCN,GAA8BO,MAAQ,QACtCP,GAA8BQ,eAAiB,iBAC/CR,GAA8BS,OAAS,SACvCT,GAA8BU,mBAAqB,qBACnDV,GAA8BW,QAAU,UACxCX,GAA8BnxB,YAAc,cAC5CmxB,GAA8BlxB,WAAa,aAC3C,IAAI8xB,GAAwB,aAC1B,WAAY/rE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+rE,GAAyBC,WAAa,aACtCD,GAAyBE,YAAc,cACvCF,GAAyBG,gBAAkB,kBAC3CH,GAAyBI,YAAc,cACvCJ,GAAyBK,cAAgB,gBACzCL,GAAyB/xB,YAAc,cACvC+xB,GAAyB9xB,WAAa,aACtC,IAAIoyB,GAAiB,aACnB,WAAYrsE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqsE,GAAkBC,MAAQ,QAC1BD,GAAkBE,MAAQ,QAC1BF,GAAkBG,OAAS,SAC3BH,GAAkBI,OAAS,SAC3BJ,GAAkBK,QAAU,UAC5BL,GAAkBrG,MAAQ,QAC1BqG,GAAkBvyB,KAAO,OACzBuyB,GAAkBM,OAAS,SAC3BN,GAAkBO,OAAS,SAC3BP,GAAkBQ,SAAW,WAC7BR,GAAkBS,MAAQ,QAC1BT,GAAkBU,KAAO,OACzBV,GAAkBW,eAAiB,iBACnCX,GAAkBY,aAAe,eACjCZ,GAAkBa,iBAAmB,mBACrCb,GAAkBc,UAAY,YAC9Bd,GAAkBe,WAAa,aAC/Bf,GAAkBryB,YAAc,cAChCqyB,GAAkBpyB,WAAa,aAC/B,IAAIozB,GAA0B,aAC5B,WAAYrtE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqtE,GAA2BC,UAAY,YACvCD,GAA2BE,SAAW,WACtCF,GAA2BG,YAAc,cACzCH,GAA2BrzB,YAAc,cACzCqzB,GAA2BpzB,WAAa,aACxB,aACd,WAAYj6C,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEWytE,KAAO,OACpB,IAAIC,GAAiB,aACnB,WAAY1tE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0tE,GAAkBC,QAAU,UAC5BD,GAAkBE,QAAU,UAC5BF,GAAkBtX,QAAU,UAC5BsX,GAAkBG,SAAW,WAC7BH,GAAkBI,MAAQ,QAC1BJ,GAAkBK,MAAQ,QAC1BL,GAAkBM,QAAU,UAC5BN,GAAkBzzB,WAAa,aAC/B,IAAIg0B,GAAgB,aAClB,WAAYjuE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFiuE,GAAiBC,eAAiB,iBAClCD,GAAiBE,WAAa,aAC9BF,GAAiBG,aAAe,eAChCH,GAAiBjN,SAAW,WAC5BiN,GAAiBI,gBAAkB,kBACnCJ,GAAiBK,cAAgB,gBACjCL,GAAiBM,UAAY,YAC7BN,GAAiBO,UAAY,YAC7BP,GAAiBQ,YAAc,cAC/BR,GAAiBS,cAAgB,gBACjCT,GAAiBU,iBAAmB,mBACpCV,GAAiBj0B,YAAc,cAC/Bi0B,GAAiBh0B,WAAa,aAC9B,IAAI20B,GAAmB,aACrB,WAAY5uE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4uE,GAAoBC,SAAW,WAC/BD,GAAoBE,SAAW,WAC/BF,GAAoBG,OAAS,SAC7BH,GAAoBI,OAAS,SAC7BJ,GAAoBK,aAAe,eACnCL,GAAoBM,MAAQ,QAC5BN,GAAoBO,OAAS,SAC7BP,GAAoB50B,YAAc,cAClC40B,GAAoB30B,WAAa,aACjC,IAAIm1B,GAAyB,aAC3B,WAAYpvE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFovE,GAA0BC,QAAU,UACpCD,GAA0BE,OAAS,SACnCF,GAA0Bp1B,YAAc,cACxCo1B,GAA0Bn1B,WAAa,aACvC,IAAIs1B,GAAiB,aACnB,WAAYvvE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFuvE,GAAkBC,kBAAoB,oBACtCD,GAAkBE,qBAAuB,uBACzCF,GAAkBG,YAAc,cAChCH,GAAkBI,WAAa,aAC/BJ,GAAkBK,gBAAkB,kBACpCL,GAAkBv1B,YAAc,cAChCu1B,GAAkBt1B,WAAa,aAC/B,IAAI41B,GAA6B,aAC/B,WAAY7vE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6vE,GAA8B71B,YAAc,cAC5C61B,GAA8B51B,WAAa,aAC3C,IAAI61B,GAAiC,aACnC,WAAY9vE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8vE,GAAkCC,MAAQ,QAC1CD,GAAkCE,OAAS,SAC3CF,GAAkCG,OAAS,SAC3CH,GAAkC91B,YAAc,cAChD81B,GAAkC71B,WAAa,aAC/C,IAAIi2B,GAAiB,aACnB,WAAYlwE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkwE,GAAkBC,OAAS,SAC3BD,GAAkBE,SAAW,WAC7BF,GAAkBG,KAAO,OACzBH,GAAkBl2B,YAAc,cAChCk2B,GAAkBj2B,WAAa,aAC/B,IAAIq2B,GAAwB,aAC1B,WAAYtwE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFswE,GAAyBC,SAAW,WACpCD,GAAyBE,QAAU,UACnCF,GAAyBr2B,WAAa,aACtC,IAAIw2B,GAAuB,aACzB,WAAYzwE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFywE,GAAwBC,cAAgB,gBACxCD,GAAwBE,UAAY,YACpCF,GAAwBG,iBAAmB,mBAC3CH,GAAwBI,aAAe,eACvCJ,GAAwBz2B,YAAc,cACtCy2B,GAAwBx2B,WAAa,aACrC,IAAI62B,GAAe,aACjB,WAAY9wE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8wE,GAAgBC,MAAQ,QACxBD,GAAgBE,OAAS,SACzBF,GAAgBG,YAAc,cAC9BH,GAAgBI,SAAW,WAC3BJ,GAAgBK,SAAW,WAC3BL,GAAgBM,QAAU,UAC1BN,GAAgB92B,YAAc,cAC9B82B,GAAgB72B,WAAa,aAC7B,IAAIo3B,GAAsB,aACxB,WAAYrxE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqxE,GAAuB7qB,KAAO,OAC9B6qB,GAAuBnqB,UAAY,YACnCmqB,GAAuBlqB,MAAQ,QAC/BkqB,GAAuBjqB,KAAO,OAC9BiqB,GAAuBhqB,SAAW,WAClCgqB,GAAuB/V,YAAc,cACrC+V,GAAuB/pB,WAAa,aACpC+pB,GAAuBr3B,YAAc,cACrCq3B,GAAuBp3B,WAAa,aACpC,IAAIq3B,GAAsB,aACxB,WAAYtxE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsxE,GAAuBtsB,QAAU,UACjCssB,GAAuB7V,gBAAkB,kBACzC6V,GAAuB9V,aAAe,eACtC8V,GAAuBC,OAAS,SAChCD,GAAuBE,MAAQ,QAC/BF,GAAuBt3B,YAAc,cACrCs3B,GAAuBr3B,WAAa,aACpC,IAAIw3B,GAAgB,aAClB,WAAYzxE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFyxE,GAAiBC,cAAgB,gBACjCD,GAAiBE,MAAQ,QACzBF,GAAiBG,aAAe,eAChCH,GAAiBI,UAAY,YAC7BJ,GAAiBK,gBAAkB,kBACnCL,GAAiBM,aAAe,eAChCN,GAAiBO,YAAc,cAC/BP,GAAiBQ,aAAe,eAChCR,GAAiBS,WAAa,aAC9BT,GAAiBz3B,YAAc,cAC/By3B,GAAiBx3B,WAAa,aAC9B,IAAIk4B,GAAsC,aACxC,WAAYnyE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmyE,GAAuCC,QAAU,UACjDD,GAAuCE,UAAY,YACnDF,GAAuCG,UAAY,YACnD,IAAIC,GAAoB,aACtB,WAAYvyE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFuyE,GAAqBC,eAAiB,iBACtCD,GAAqBE,YAAc,cACnCF,GAAqBG,eAAiB,iBACtCH,GAAqBI,YAAc,cACnCJ,GAAqBK,WAAa,aAClCL,GAAqBM,SAAW,WAChCN,GAAqBO,QAAU,UAC/BP,GAAqBv4B,YAAc,cACnCu4B,GAAqBt4B,WAAa,aAClC,IAAI84B,GAAkB,aACpB,WAAY/yE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+yE,GAAmBC,MAAQ,QAC3BD,GAAmBE,KAAO,OAC1B,IAAIC,GAAuB,aACzB,WAAYlzE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkzE,GAAwBC,YAAc,cACtCD,GAAwBE,qBAAuB,uBAC/CF,GAAwBG,UAAY,YACpCH,GAAwBI,cAAgB,gBACxCJ,GAAwBK,UAAY,YACpCL,GAAwBl5B,YAAc,cACtCk5B,GAAwBj5B,WAAa,aACrC,IAAIu5B,GAA4B,aAC9B,WAAYxzE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwzE,GAA6BC,iBAAmB,mBAChDD,GAA6BE,YAAc,cAC3C,IAAIC,GAA4B,aAC9B,WAAY3zE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF2zE,GAA6BC,QAAU,UACvCD,GAA6BE,SAAW,WACxCF,GAA6B35B,YAAc,cAC3C25B,GAA6B15B,WAAa,aAC1C,IAAI65B,GAA8B,aAChC,WAAY9zE,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8zE,GAA+BC,oBAAsB,sBACrDD,GAA+BE,wBAA0B,0BACzDF,GAA+BG,sBAAwB,wBACvDH,GAA+BI,uBAAyB,yBACxDJ,GAA+BK,mBAAqB,qBACpDL,GAA+BM,uBAAyB,yBACxDN,GAA+BO,qBAAuB,uBACtDP,GAA+B75B,WAAa,aAC5C,IAAIq6B,GAAuC,aACzC,WAAYt0E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs0E,GAAwCC,WAAa,aACrDD,GAAwCE,gBAAkB,kBAC1DF,GAAwCG,gBAAkB,kBAC1DH,GAAwCI,QAAU,UAClDJ,GAAwCt6B,YAAc,cACtDs6B,GAAwCr6B,WAAa,aACrD,IAAI06B,GAA2B,aAC7B,WAAY30E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF20E,GAA4BC,eAAiB,iBAC7CD,GAA4BE,2BAA6B,6BACzDF,GAA4BG,eAAiB,iBAC7CH,GAA4BI,iBAAmB,mBAC/CJ,GAA4BK,8BAAgC,gCAC5DL,GAA4BM,sBAAwB,wBACpDN,GAA4BO,SAAW,WACvCP,GAA4B36B,YAAc,cAC1C26B,GAA4B16B,WAAa,aACzC,IAAIk7B,GAAe,aACjB,WAAYn1E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFm1E,GAAgBC,WAAa,aAC7BD,GAAgBE,WAAa,aAC7BF,GAAgBG,UAAY,YAC5BH,GAAgBI,gBAAkB,kBAClCJ,GAAgBK,SAAW,WAC3BL,GAAgBM,eAAiB,iBACjCN,GAAgBO,gBAAkB,kBAClCP,GAAgBn7B,YAAc,cAC9Bm7B,GAAgBl7B,WAAa,aAC7B,IAAI07B,GAAkB,aACpB,WAAY31E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF21E,GAAmBC,SAAW,WAC9BD,GAAmBE,UAAY,YAC/BF,GAAmBG,WAAa,aAChCH,GAAmB37B,YAAc,cACjC27B,GAAmB17B,WAAa,aAChC,IAAI87B,GAAqB,aACvB,WAAY/1E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+1E,GAAsBC,SAAW,WACjCD,GAAsBE,OAAS,SAC/BF,GAAsB/7B,YAAc,cACpC+7B,GAAsB97B,WAAa,aACnC,IAAIi8B,GAAe,aACjB,WAAYl2E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk2E,GAAgBC,kBAAoB,oBACpCD,GAAgBE,sBAAwB,wBACxCF,GAAgBG,kBAAoB,oBACpCH,GAAgBI,sBAAwB,wBACxCJ,GAAgBK,eAAiB,iBACjCL,GAAgBM,YAAc,cAC9BN,GAAgBl8B,YAAc,cAC9Bk8B,GAAgBj8B,WAAa,aAC7B,IAAIw8B,GAAqB,aACvB,WAAYz2E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFy2E,GAAsBC,MAAQ,QAC9BD,GAAsBE,OAAS,SAC/BF,GAAsBG,wBAA0B,0BAChDH,GAAsBI,oBAAsB,sBAC5CJ,GAAsBK,aAAe,eACrCL,GAAsBM,iBAAmB,mBACzCN,GAAsBO,uBAAyB,yBAC/CP,GAAsBQ,mBAAqB,qBAC3C,IAAIC,GAAmB,aACrB,WAAYl3E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk3E,GAAoBC,UAAY,YAChCD,GAAoBE,UAAY,YAChCF,GAAoBG,QAAU,UAC9BH,GAAoBl9B,YAAc,cAClCk9B,GAAoBj9B,WAAa,aACjC,IAAIq9B,GAAwB,aAC1B,WAAYt3E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs3E,GAAyBC,MAAQ,QACjCD,GAAyBE,KAAO,OAChCF,GAAyBG,MAAQ,QACjCH,GAAyBI,KAAO,OAChCJ,GAAyBlqB,MAAQ,QACjCkqB,GAAyBK,OAAS,SAClCL,GAAyBM,MAAQ,QACjCN,GAAyBjqB,QAAU,UACnCiqB,GAAyBO,QAAU,UACnCP,GAAyBr9B,WAAa,aACtC,IAAI69B,GAAyB,aAC3B,WAAY93E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF83E,GAA0BC,KAAO,OACjCD,GAA0BE,MAAQ,QAClCF,GAA0BG,SAAW,WACrCH,GAA0B/K,KAAO,OACjC+K,GAA0BI,SAAW,WACrCJ,GAA0BK,KAAO,OACjCL,GAA0BM,KAAO,OACjCN,GAA0BO,UAAY,YACtCP,GAA0B99B,YAAc,cACxC89B,GAA0B79B,WAAa,aACvC,IAAIq+B,GAA4B,aAC9B,WAAYt4E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs4E,GAA6BC,MAAQ,QACrCD,GAA6BE,SAAW,WACxC,IAAIC,GAAyB,aAC3B,WAAYz4E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFy4E,GAA0BJ,UAAY,YACtCI,GAA0BN,KAAO,OACjCM,GAA0BR,SAAW,WACrCQ,GAA0BV,KAAO,OACjCU,GAA0BP,SAAW,WACrCO,GAA0BL,KAAO,OACjCK,GAA0BT,MAAQ,QAClCS,GAA0B1L,KAAO,OACjC0L,GAA0BC,SAAW,WACrCD,GAA0Bz+B,YAAc,cACxCy+B,GAA0Bx+B,WAAa,aACvC,IAAI0+B,GAA0B,aAC5B,WAAY34E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF24E,GAA2B3+B,YAAc,cACzC2+B,GAA2B1+B,WAAa,aACxC,IAAI2+B,GAAW,aACb,WAAY54E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF44E,GAAYC,SAAW,WACvBD,GAAYE,aAAe,eAC3BF,GAAYG,WAAa,aACzBH,GAAYI,cAAgB,gBAC5BJ,GAAYK,UAAY,YACxBL,GAAYM,mBAAqB,qBACjCN,GAAYO,aAAe,eAC3BP,GAAYQ,OAAS,SACrBR,GAAYS,cAAgB,gBAC5BT,GAAYU,iBAAmB,mBAC/BV,GAAYW,mBAAqB,qBACjCX,GAAYY,mBAAqB,qBACjCZ,GAAYa,eAAiB,iBAC7Bb,GAAYc,kBAAoB,oBAChCd,GAAYe,cAAgB,gBAC5Bf,GAAYgB,sBAAwB,wBACpChB,GAAYiB,SAAW,WACvBjB,GAAY1J,MAAQ,QACpB0J,GAAYkB,WAAa,aACzBlB,GAAYmB,oBAAsB,sBAClCnB,GAAYoB,yBAA2B,2BACvCpB,GAAYqB,SAAW,WACvBrB,GAAY5+B,YAAc,cAC1B,IAAIkgC,GAAe,aACjB,WAAYl6E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk6E,GAAgBC,UAAY,YAC5BD,GAAgBE,UAAY,YAC5BF,GAAgBG,WAAa,aAC7BH,GAAgBI,SAAW,WAC3BJ,GAAgBK,kBAAoB,oBACpCL,GAAgBM,aAAe,eAC/BN,GAAgBO,aAAe,eAC/BP,GAAgBQ,YAAc,cAC9BR,GAAgBS,aAAe,eAC/BT,GAAgBU,eAAiB,iBACjCV,GAAgBW,cAAgB,gBAChCX,GAAgBY,UAAY,YAC5BZ,GAAgBa,SAAW,WAC3Bb,GAAgBlgC,YAAc,cAC9BkgC,GAAgBjgC,WAAa,aAC7B,IAAI+gC,GAAW,aACb,WAAYh7E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFg7E,GAAYC,IAAM,MAClBD,GAAYE,KAAO,OACnBF,GAAYG,KAAO,OACnBH,GAAYI,KAAO,OACnBJ,GAAYK,KAAO,OACnBL,GAAYM,KAAO,OACnBN,GAAYO,MAAQ,QACpBP,GAAYQ,KAAO,OACnBR,GAAYS,KAAO,OACnBT,GAAYU,MAAQ,QACpBV,GAAYW,MAAQ,QACpBX,GAAYY,MAAQ,QACpBZ,GAAYa,KAAO,OACnBb,GAAYc,KAAO,OACnBd,GAAYe,MAAQ,QACpBf,GAAYgB,KAAO,OACnB,IAAIC,GAAa,aACf,WAAYj8E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFi8E,GAAcC,OAAS,SACvBD,GAAcE,UAAY,YAC1BF,GAAcG,QAAU,UACxBH,GAAcI,QAAU,UACxBJ,GAAcK,YAAc,cAC5BL,GAAcM,eAAiB,iBAC/BN,GAAcO,MAAQ,QACtBP,GAAcQ,KAAO,OACrBR,GAAcS,KAAO,OACrBT,GAAcU,MAAQ,QACtBV,GAAcW,MAAQ,QACtBX,GAAcY,MAAQ,QACtBZ,GAAca,OAAS,SACvBb,GAAcc,MAAQ,QACtBd,GAAce,IAAM,MACpBf,GAAcgB,MAAQ,QACtBhB,GAAciB,KAAO,OACrBjB,GAAckB,OAAS,SACvBlB,GAAcmB,IAAM,MACpBnB,GAAcoB,OAAS,SACvBpB,GAAcqB,OAAS,SACvBrB,GAAcsB,OAAS,SACvBtB,GAAcuB,QAAU,UACxBvB,GAAcwB,QAAU,UACxBxB,GAAcyB,aAAe,eAC7BzB,GAAc0B,UAAY,YAC1B1B,GAAc2B,MAAQ,QACtB3B,GAAc4B,KAAO,OACrB5B,GAAc6B,KAAO,OACrB7B,GAAc8B,MAAQ,QACtB,IAAIC,GAA2B,aAC7B,WAAYh+E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFg+E,GAA4BC,KAAO,OACnCD,GAA4BE,MAAQ,QACpCF,GAA4BG,QAAU,UACtCH,GAA4BI,OAAS,SACrCJ,GAA4Bjb,KAAO,OACnCib,GAA4BK,iBAAmB,mBAC/CL,GAA4BM,UAAY,YACxCN,GAA4BO,OAAS,SACrCP,GAA4BQ,cAAgB,gBAC5CR,GAA4BS,OAAS,SACrCT,GAA4BhkC,YAAc,cAC1CgkC,GAA4B/jC,WAAa,aACzC,IAAIykC,GAAkB,aACpB,WAAY1+E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0+E,GAAmBC,QAAU,UAC7BD,GAAmBE,QAAU,UAC7B,IAAIC,GAAiB,aACnB,WAAY7+E,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6+E,GAAkBC,SAAW,WAC7BD,GAAkBE,UAAY,YAC9BF,GAAkBG,kBAAoB,oBACtCH,GAAkBI,cAAgB,gBAClCJ,GAAkBK,WAAa,aAC/BL,GAAkBM,WAAa,aAC/BN,GAAkBO,YAAc,cAChCP,GAAkBQ,UAAY,YAC9BR,GAAkBS,WAAa,aAC/BT,GAAkBU,eAAiB,iBACnCV,GAAkBW,iBAAmB,mBACrCX,GAAkBY,uBAAyB,yBAC3CZ,GAAkBa,YAAc,cAChCb,GAAkBc,YAAc,cAChCd,GAAkBe,eAAiB,iBACnCf,GAAkBgB,eAAiB,iBACnChB,GAAkBiB,SAAW,WAC7BjB,GAAkBkB,eAAiB,iBACnClB,GAAkBmB,gBAAkB,kBACpCnB,GAAkBoB,oBAAsB,sBACxCpB,GAAkBqB,YAAc,cAChCrB,GAAkBsB,YAAc,cAChCtB,GAAkBuB,kBAAoB,oBACtCvB,GAAkBwB,WAAa,aAC/BxB,GAAkB7kC,YAAc,cAChC6kC,GAAkB5kC,WAAa,aAC/B,IAAIqmC,GAAe,aACjB,WAAYtgF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsgF,GAAgBC,YAAc,cAC9BD,GAAgBE,aAAe,eAC/BF,GAAgBG,aAAe,eAC/BH,GAAgBI,cAAgB,gBAChCJ,GAAgBtmC,YAAc,cAC9BsmC,GAAgBrmC,WAAa,aAC7B,IAAI0mC,GAAwB,aAC1B,WAAY3gF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF2gF,GAAyBC,SAAW,WACpCD,GAAyBE,QAAU,UACnCF,GAAyBG,OAAS,SAClCH,GAAyB3mC,YAAc,cACvC2mC,GAAyB1mC,WAAa,aACtC,IAAI8mC,GAAiC,aACnC,WAAY/gF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+gF,GAAkCC,cAAgB,gBAClDD,GAAkCE,kBAAoB,oBACtDF,GAAkCG,eAAiB,iBACnDH,GAAkCI,YAAc,cAChDJ,GAAkCK,aAAe,eACjDL,GAAkCM,iBAAmB,mBACrDN,GAAkCO,SAAW,WAC7CP,GAAkCQ,OAAS,SAC3CR,GAAkCS,SAAW,WAC7CT,GAAkCU,QAAU,UAC5CV,GAAkCW,SAAW,WAC7CX,GAAkCY,OAAS,SAC3C,IAAIC,GAAe,aACjB,WAAY5hF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4hF,GAAgBC,MAAQ,QACxBD,GAAgBE,KAAO,OACvBF,GAAgBG,QAAU,UAC1BH,GAAgBI,SAAW,WAC3BJ,GAAgBK,cAAgB,gBAChCL,GAAgBl1B,OAAS,SACzBk1B,GAAgBM,QAAU,UAC1BN,GAAgBO,SAAW,WAC3BP,GAAgB5nC,YAAc,cAC9B4nC,GAAgB3nC,WAAa,aAC7B,IAAImoC,GAAsB,aACxB,WAAYpiF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFoiF,GAAuBC,eAAiB,iBACxCD,GAAuBE,WAAa,aACpCF,GAAuBpoC,YAAc,cACrCooC,GAAuBnoC,WAAa,aACpC,IAAIsoC,GAAsB,aACxB,WAAYviF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFuiF,GAAuBC,UAAY,YACnCD,GAAuBE,SAAW,WAClCF,GAAuBvoC,YAAc,cACrCuoC,GAAuBtoC,WAAa,aACpC,IAAIyoC,GAAgB,aAClB,WAAY1iF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0iF,GAAiBC,MAAQ,QACzBD,GAAiBE,QAAU,UAC3BF,GAAiBG,IAAM,MACvBH,GAAiBrb,SAAW,WAC5Bqb,GAAiB1hB,SAAW,WAC5B0hB,GAAiB1oC,YAAc,cAC/B0oC,GAAiBzoC,WAAa,aAC9B,IAAI6oC,GAAsB,aACxB,WAAY9iF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8iF,GAAuBC,aAAe,eACtCD,GAAuBE,WAAa,aACpCF,GAAuBr2B,SAAW,WAClCq2B,GAAuBG,UAAY,YACnCH,GAAuBrrB,SAAW,WAClCqrB,GAAuBpO,QAAU,UACjCoO,GAAuB/nC,UAAY,YACnC+nC,GAAuB9qB,YAAc,cACrC8qB,GAAuB9oC,YAAc,cACrC8oC,GAAuB7oC,WAAa,aACpC,IAAIipC,GAAwB,aAC1B,WAAYljF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkjF,GAAyBC,SAAW,WACpCD,GAAyBE,KAAO,OAChCF,GAAyBG,gBAAkB,kBAC3CH,GAAyBlpC,YAAc,cACvCkpC,GAAyBjpC,WAAa,aACtC,IAAIqpC,GAAsB,aACxB,WAAYtjF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFsjF,GAAuBtN,SAAW,WAClCsN,GAAuBC,OAAS,SAChCD,GAAuBrN,OAAS,SAChCqN,GAAuBE,OAAS,SAChCF,GAAuBvI,SAAW,WAClCuI,GAAuBtpC,YAAc,cACrCspC,GAAuBrpC,WAAa,aACpC,IAAIwpC,GAAgB,aAClB,WAAYzjF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFyjF,GAAiBC,mBAAqB,qBACtCD,GAAiBE,uBAAyB,yBAC1CF,GAAiBG,sBAAwB,wBACzCH,GAAiBI,mBAAqB,qBACtCJ,GAAiBK,mBAAqB,qBACtCL,GAAiBM,gBAAkB,kBACnCN,GAAiBO,0BAA4B,4BAC7CP,GAAiBQ,uBAAyB,yBAC1CR,GAAiBS,4BAA8B,8BAC/CT,GAAiBU,yBAA2B,2BAC5CV,GAAiBW,aAAe,eAChCX,GAAiBY,oBAAsB,sBACvCZ,GAAiBa,iBAAmB,mBACpCb,GAAiBc,qBAAuB,uBACxCd,GAAiBzpC,YAAc,cAC/BypC,GAAiBxpC,WAAa,aAC9B,IAAIuqC,GAAY,aACd,WAAYxkF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwkF,GAAaC,UAAY,YACzBD,GAAaE,SAAW,WACxBF,GAAaG,OAAS,SACtBH,GAAaI,gBAAkB,kBAC/BJ,GAAaK,eAAiB,iBAC9B,IAAIC,GAAkC,aACpC,WAAY9kF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8kF,GAAmCC,MAAQ,QAC3CD,GAAmCh1B,OAAS,SAC5Cg1B,GAAmCE,UAAY,YAC/CF,GAAmCG,YAAc,cACjDH,GAAmCI,MAAQ,QAC3CJ,GAAmCK,SAAW,WAC9CL,GAAmCM,SAAW,WAC9CN,GAAmC9qC,YAAc,cACjD8qC,GAAmC7qC,WAAa,aAChD,IAAIorC,GAAgC,aAClC,WAAYrlF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqlF,GAAiCC,oBAAsB,sBACvDD,GAAiCE,kBAAoB,oBACrDF,GAAiC7vB,MAAQ,QACzC6vB,GAAiCG,eAAiB,iBAClDH,GAAiCI,mBAAqB,qBACtDJ,GAAiCrrC,YAAc,cAC/CqrC,GAAiCprC,WAAa,aAC9C,IAAIyrC,GAAoC,aACtC,WAAY1lF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0lF,GAAqCX,MAAQ,QAC7CW,GAAqCC,SAAW,WAChDD,GAAqCN,SAAW,WAChDM,GAAqCE,WAAa,aAClDF,GAAqC1rC,YAAc,cACnD0rC,GAAqCzrC,WAAa,aAClD,IAAI4rC,GAAkC,aACpC,WAAY7lF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6lF,GAAmCC,gBAAkB,kBACrDD,GAAmCE,iBAAmB,mBACtDF,GAAmCG,MAAQ,QAC3CH,GAAmC7rC,YAAc,cACjD6rC,GAAmC5rC,WAAa,aAChD,IAAIgsC,GAA8B,aAChC,WAAYjmF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFimF,GAA+BC,SAAW,WAC1CD,GAA+B5V,KAAO,OACtC4V,GAA+BjsC,YAAc,cAC7CisC,GAA+BhsC,WAAa,aAC5C,IAAIksC,GAAyB,aAC3B,WAAYnmF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmmF,GAA0BC,KAAO,OACjCD,GAA0BE,IAAM,MAChCF,GAA0BG,UAAY,YACtCH,GAA0BI,OAAS,SACnCJ,GAA0BnsC,YAAc,cACxCmsC,GAA0BlsC,WAAa,aACvC,IAAIusC,GAAc,aAChB,WAAYxmF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwmF,GAAejyB,SAAW,WAC1BiyB,GAAehyB,SAAW,WAC1BgyB,GAAeC,KAAO,OACtB,IAAIC,GAA0B,aAC5B,WAAY1mF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0mF,GAA2BC,UAAY,YACvCD,GAA2BE,aAAe,eAC1CF,GAA2BG,cAAgB,gBAC3CH,GAA2BI,OAAS,SACpCJ,GAA2BK,gBAAkB,kBAC7CL,GAA2BM,eAAiB,iBAC5CN,GAA2BO,QAAU,UACrCP,GAA2BQ,mBAAqB,qBAChDR,GAA2BS,aAAe,eAC1CT,GAA2B1sC,YAAc,cACzC0sC,GAA2BzsC,WAAa,aACxC,IAAImtC,GAAiC,aACnC,WAAYpnF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFonF,GAAkCC,MAAQ,QAC1CD,GAAkCE,YAAc,cAChDF,GAAkCptC,YAAc,cAChDotC,GAAkCntC,WAAa,aAC/C,IAAIstC,GAAe,aACjB,WAAYvnF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFunF,GAAgBC,MAAQ,QACxBD,GAAgBE,cAAgB,gBAChCF,GAAgBG,UAAY,YAC5BH,GAAgBI,iBAAmB,mBACnCJ,GAAgBK,eAAiB,iBACjCL,GAAgBM,QAAU,UAC1BN,GAAgBO,OAAS,SACzBP,GAAgBvtC,YAAc,cAC9ButC,GAAgBttC,WAAa,aAC7B,IAAI8tC,GAAmB,aACrB,WAAY/nF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+nF,GAAoBC,YAAc,cAClCD,GAAoBE,SAAW,WAC/BF,GAAoB9tC,WAAa,aACjC,IAAIiuC,GAAe,aACjB,WAAYloF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkoF,GAAgBC,WAAa,aAC7BD,GAAgBnF,aAAe,eAC/BmF,GAAgBE,WAAa,aAC7BF,GAAgBG,UAAY,YAC5BH,GAAgB3xB,SAAW,WAC3B2xB,GAAgBI,aAAe,eAC/BJ,GAAgBK,SAAW,WAC3BL,GAAgBM,YAAc,cAC9BN,GAAgBO,KAAO,OACvBP,GAAgBQ,UAAY,YAC5BR,GAAgBS,QAAU,UAC1BT,GAAgBU,WAAa,aAC7BV,GAAgBluC,YAAc,cAC9BkuC,GAAgBjuC,WAAa,aAC7B,IAAI4uC,GAAuB,aACzB,WAAY7oF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6oF,GAAwB/c,QAAU,UAClC+c,GAAwBC,UAAY,YACpCD,GAAwBE,eAAiB,iBACzCF,GAAwB7uC,YAAc,cACtC6uC,GAAwB5uC,WAAa,aACrC,IAAI+uC,GAAwB,aAC1B,WAAYhpF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgpF,GAAyBtzB,KAAO,OAChCszB,GAAyBld,QAAU,UACnCkd,GAAyBC,cAAgB,gBACzCD,GAAyBE,QAAU,UACnCF,GAAyBG,QAAU,UACnCH,GAAyBhvC,YAAc,cACvCgvC,GAAyB/uC,WAAa,aACtC,IAAImvC,GAAiB,aACnB,WAAYppF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFopF,GAAkBC,IAAM,MACxBD,GAAkBE,OAAS,SAC3BF,GAAkBG,OAAS,SAC3BH,GAAkBI,KAAO,OACzBJ,GAAkBpvC,YAAc,cAChCovC,GAAkBnvC,WAAa,aAC/B,IAAIwvC,GAAW,aACb,WAAYzpF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFypF,GAAYnwB,KAAO,OACnBmwB,GAAYjwB,MAAQ,QACpBiwB,GAAYC,GAAK,KACjBD,GAAYE,KAAO,OACnB,IAAIC,GAAyB,aAC3B,WAAY5pF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4pF,GAA0BC,WAAa,aACvCD,GAA0BxE,SAAW,WACrCwE,GAA0BE,eAAiB,iBAC3CF,GAA0BG,gBAAkB,kBAC5CH,GAA0BI,kBAAoB,oBAC9CJ,GAA0BK,oBAAsB,sBAChDL,GAA0B3vC,WAAa,aACvC,IAAIiwC,GAAsB,aACxB,WAAYlqF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkqF,GAAuB1uC,QAAU,UACjC0uC,GAAuBC,UAAY,YACnCD,GAAuBE,SAAW,WAClCF,GAAuBG,UAAY,YACnCH,GAAuBI,QAAU,UACjCJ,GAAuBlwC,YAAc,cACrCkwC,GAAuBjwC,WAAa,aACpC,IAAIswC,GAAiB,aACnB,WAAYvqF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFuqF,GAAkBC,cAAgB,gBAClCD,GAAkBV,WAAa,aAC/BU,GAAkBE,iBAAmB,mBACrCF,GAAkBG,8BAAgC,gCAClD,IAAIC,GAAsB,aACxB,WAAY3qF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF2qF,GAAuBC,oBAAsB,sBAC7CD,GAAuBE,WAAa,aACpCF,GAAuBG,cAAgB,gBACvCH,GAAuBI,YAAc,cACrCJ,GAAuBK,cAAgB,gBACvCL,GAAuBM,UAAY,YACnC,IAAIC,GAA2B,aAC7B,WAAYlrF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFkrF,GAA4BC,SAAW,WACvCD,GAA4BE,UAAY,YACxCF,GAA4BG,cAAgB,gBAC5CH,GAA4BI,SAAW,WACvCJ,GAA4BK,YAAc,cAC1CL,GAA4BlxC,YAAc,cAC1CkxC,GAA4BjxC,WAAa,aACzC,IAAIuxC,GAAqB,aACvB,WAAYxrF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwrF,GAAsBC,UAAY,YAClCD,GAAsBhd,UAAY,YAClCgd,GAAsBhrC,YAAc,cACpC,IAAIkrC,GAAqB,aACvB,WAAY1rF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0rF,GAAsBC,OAAS,SAC/BD,GAAsB1xC,YAAc,cACpC0xC,GAAsBzxC,WAAa,aACnC,IAAI2xC,GAAW,aACb,WAAY5rF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF4rF,GAAYC,iBAAmB,mBAC/BD,GAAYE,sBAAwB,wBACpCF,GAAYG,SAAW,WACvBH,GAAYI,mBAAqB,qBACjCJ,GAAYK,wBAA0B,0BACtCL,GAAYM,mBAAqB,qBACjCN,GAAYO,wBAA0B,0BACtCP,GAAYQ,oBAAsB,sBAClCR,GAAYS,uBAAyB,yBACrCT,GAAYU,oBAAsB,sBAClCV,GAAYW,WAAa,aACzBX,GAAYY,UAAY,YACxBZ,GAAYa,cAAgB,gBAC5Bb,GAAYc,gBAAkB,kBAC9Bd,GAAYe,eAAiB,iBAC7Bf,GAAYgB,WAAa,aACzBhB,GAAYiB,iBAAmB,mBAC/BjB,GAAYkB,sBAAwB,wBACpClB,GAAYmB,wBAA0B,0BACtCnB,GAAYoB,iBAAmB,mBAC/BpB,GAAYqB,SAAW,WACvBrB,GAAYsB,eAAiB,iBAC7BtB,GAAYuB,UAAY,YACxBvB,GAAYwB,aAAe,eAC3BxB,GAAYyB,kBAAoB,oBAChCzB,GAAY0B,eAAiB,iBAC7B1B,GAAY2B,6BAA+B,+BAC3C3B,GAAY4B,SAAW,WACvB5B,GAAY6B,WAAa,aACzB7B,GAAY5xC,YAAc,cAC1B,IAAI0zC,GAAgC,aAClC,WAAY1tF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF0tF,GAAiCC,WAAa,aAC9CD,GAAiCE,aAAe,eAChDF,GAAiCG,kBAAoB,oBACrDH,GAAiCI,eAAiB,iBAClDJ,GAAiCK,WAAa,aAC9CL,GAAiCM,WAAa,aAC9CN,GAAiCO,WAAa,aAC9CP,GAAiCQ,eAAiB,iBAClDR,GAAiC1zC,YAAc,cAC/C0zC,GAAiCzzC,WAAa,aAC9C,IAAIk0C,GAA2B,aAC7B,WAAYnuF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmuF,GAA4BC,WAAa,aACzCD,GAA4BE,oBAAsB,sBAClDF,GAA4BG,aAAe,eAC3CH,GAA4BI,YAAc,cAC1CJ,GAA4BK,YAAc,cAC1CL,GAA4Bn0C,YAAc,cAC1Cm0C,GAA4Bl0C,WAAa,aACzC,IAAIw0C,GAAgB,aAClB,WAAYzuF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFyuF,GAAiBC,WAAa,aAC9BD,GAAiBE,WAAa,aAC9BF,GAAiBG,WAAa,aAC9BH,GAAiBI,MAAQ,QACzBJ,GAAiBK,cAAgB,gBACjCL,GAAiBM,UAAY,YAC7BN,GAAiBO,YAAc,cAC/BP,GAAiBQ,YAAc,cAC/BR,GAAiBS,iBAAmB,mBACpCT,GAAiBU,OAAS,SAC1BV,GAAiBW,SAAW,WAC5BX,GAAiBY,QAAU,UAC3BZ,GAAiBa,OAAS,SAC1Bb,GAAiBc,UAAY,YAC7Bd,GAAiBe,OAAS,SAC1Bf,GAAiBgB,iBAAmB,mBACpChB,GAAiBiB,eAAiB,iBAClCjB,GAAiBkB,WAAa,aAC9BlB,GAAiBmB,aAAe,eAChCnB,GAAiBoB,UAAY,YAC7BpB,GAAiBqB,SAAW,WAC5BrB,GAAiBz0C,YAAc,cAC/By0C,GAAiBx0C,WAAa,aAC9B,IAAI81C,GAA0B,aAC5B,WAAY/vF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+vF,GAA2BC,cAAgB,gBAC3CD,GAA2BE,YAAc,cACzCF,GAA2BG,YAAc,cACzCH,GAA2B5e,SAAW,WACtC4e,GAA2BI,QAAU,UACrCJ,GAA2BK,OAAS,SACpCL,GAA2B/1C,YAAc,cACzC+1C,GAA2B91C,WAAa,aACxC,IAAIo2C,GAA4B,aAC9B,WAAYrwF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFqwF,GAA6BC,YAAc,cAC3CD,GAA6BE,OAAS,SACtCF,GAA6BG,KAAO,OACpCH,GAA6Br2C,YAAc,cAC3Cq2C,GAA6Bp2C,WAAa,aAC1C,IAAIw2C,GAAyB,aAC3B,WAAYzwF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFywF,GAA0BC,OAAS,SACnCD,GAA0BE,MAAQ,QAClCF,GAA0BG,KAAO,OACjCH,GAA0BI,MAAQ,QAClCJ,GAA0BK,QAAU,UACpCL,GAA0BtY,KAAO,OACjCsY,GAA0Bz2C,YAAc,cACxCy2C,GAA0Bx2C,WAAa,aACvC,IAAI82C,GAAe,aACjB,WAAY/wF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF+wF,GAAgBC,QAAU,UAC1BD,GAAgBE,QAAU,UAC1BF,GAAgBG,aAAe,eAC/BH,GAAgBI,aAAe,eAC/BJ,GAAgB/Y,MAAQ,QACxB+Y,GAAgBK,UAAY,YAC5BL,GAAgBM,SAAW,WAC3BN,GAAgB/L,UAAY,YAC5B+L,GAAgBO,cAAgB,gBAChCP,GAAgBQ,cAAgB,gBAChCR,GAAgB/2C,YAAc,cAC9B+2C,GAAgB92C,WAAa,aAC7B,IAAIu3C,GAAwB,aAC1B,WAAYxxF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFwxF,GAAyBC,UAAY,YACrCD,GAAyBE,WAAa,aACtCF,GAAyBG,UAAY,YACrCH,GAAyBI,UAAY,YACrCJ,GAAyBK,UAAY,YACrCL,GAAyBM,kBAAoB,oBAC7CN,GAAyBO,UAAY,YACrCP,GAAyBx3C,YAAc,cACvCw3C,GAAyBv3C,WAAa,aACtC,IAAI+3C,GAA2B,aAC7B,WAAYhyF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFgyF,GAA4BC,kBAAoB,oBAChDD,GAA4BE,iBAAmB,mBAC/CF,GAA4BG,qBAAuB,uBACnDH,GAA4BI,oBAAsB,sBAClDJ,GAA4BK,QAAU,UACtCL,GAA4BM,WAAa,aACzCN,GAA4BO,gBAAkB,kBAC9CP,GAA4BQ,cAAgB,gBAC5CR,GAA4BS,kBAAoB,oBAChDT,GAA4BU,gBAAkB,kBAC9CV,GAA4BW,kBAAoB,oBAChDX,GAA4BY,cAAgB,gBAC5CZ,GAA4Ba,eAAiB,iBAC7Cb,GAA4B/3C,WAAa,aACzC,IAAI64C,GAA0B,aAC5B,WAAY9yF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF8yF,GAA2Bx5B,KAAO,OAClCw5B,GAA2Bv5B,OAAS,SACpCu5B,GAA2Bt5B,MAAQ,QACnCs5B,GAA2BC,OAAS,SACpCD,GAA2BE,IAAM,MACjCF,GAA2B74C,WAAa,aACxC,IAAIg5C,GAA8B,aAChC,WAAYjzF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFizF,GAA+Bv5B,UAAY,YAC3Cu5B,GAA+Bt5B,iBAAmB,mBAClDs5B,GAA+Br5B,MAAQ,QACvCq5B,GAA+B3lC,KAAO,OACtC2lC,GAA+Bp5B,eAAiB,iBAChDo5B,GAA+B5lC,QAAU,UACzC4lC,GAA+BC,mBAAqB,qBACpDD,GAA+Bh5C,WAAa,aAC5C,IAAIk5C,GAA2B,aAC7B,WAAYnzF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFmzF,GAA4BC,aAAe,eAC3CD,GAA4BE,sBAAwB,wBACpDF,GAA4BG,wBAA0B,0BACtDH,GAA4BI,sBAAwB,wBACpDJ,GAA4BK,oBAAsB,sBAClDL,GAA4BM,iBAAmB,mBAC/CN,GAA4BO,kBAAoB,oBAChDP,GAA4BQ,mBAAqB,qBACjDR,GAA4BS,wBAA0B,0BACtDT,GAA4Bn5C,YAAc,cAC1Cm5C,GAA4Bl5C,WAAa,aACzC,IAAI45C,GAAiB,aACnB,WAAY7zF,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF6zF,GAAkBC,OAAS,SAC3BD,GAAkBE,SAAW,WAC7BF,GAAkBG,UAAY,YAC9BH,GAAkB75C,YAAc,cAChC65C,GAAkB55C,WAAa,aAC/B,IAAIg6C,GAA6B,aAC/B,WAAYj0F,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFi0F,GAA8Bb,aAAe,eAC7Ca,GAA8BZ,sBAAwB,wBACtDY,GAA8BX,wBAA0B,0BACxDW,GAA8BV,sBAAwB,wBACtDU,GAA8BT,oBAAsB,sBACpDS,GAA8BR,iBAAmB,mBACjDQ,GAA8BP,kBAAoB,oBAClDO,GAA8BN,mBAAqB,qBACnDM,GAA8BL,wBAA0B,0BACxDK,GAA8Bj6C,YAAc,cAC5Ci6C,GAA8Bh6C,WAAa,aAC3C,IAAIi6C,GAAuB,aACzB,WAAYl0F,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFk0F,GAAwBC,WAAa,aACrCD,GAAwBE,YAAc,cACtCF,GAAwBG,WAAa,aACrCH,GAAwBl6C,YAAc,cACtCk6C,GAAwBj6C,WAAa,aACrC,IAAIq6C,GAAmB,aACrB,WAAYt0F,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEFs0F,GAAoBC,OAAS,SAC7BD,GAAoBE,SAAW,WAC/BF,GAAoBG,QAAU,UAC9BH,GAAoBt6C,YAAc,cAClCs6C,GAAoBr6C,WAAa,aACjC,IAAIy6C,GAAuB,aACzB,WAAY10F,GAAG,oBACbv/B,KAAKsC,MAAQi9B,CACf,IAEF00F,GAAwBH,OAAS,SACjCG,GAAwBF,SAAW,WACnCE,GAAwBD,QAAU,UAClCC,GAAwB16C,YAAc,cACtC06C,GAAwBz6C,WAAa,aACrC,IAs6jCI06C,GAt6jCAnuE,GAAgB,WAClB,WAAYouE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAAiB,oBAC3I50H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK00H,eAAiBA,EACtB10H,KAAK20H,OAASA,EACd30H,KAAK40H,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAIp4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK20H,QAEfn4F,EAAK7nB,KAAK3U,KAAK40H,iBAERp4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIm5C,EAAiBouE,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACbioH,EAAKjoH,KACIioH,EAAKjoH,KAE7B,KAAC,EA1BiB,GAkDhBs5C,GAAQ,WACV,WAAYiuE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYM,GAAU,oBAC5F90H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK80H,SAAWA,CAClB,CAUC,OAVA,mCAWD,WACE,IAAIt4F,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK80H,UAERt4F,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIs5C,EAASiuE,EAAWvzH,EANhBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EApBS,GAsCRu5C,GAAY,WACd,WAAYguE,EAAWvzH,EAAMm0H,EAAMC,EAAiBT,GAAa,oBAC/Dv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+0H,KAAOA,EACZ/0H,KAAKg1H,gBAAkBA,EACvBh1H,KAAKu0H,YAAcA,CACrB,CAOC,OAPA,mCAQD,WACE,IAAI/3F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK+0H,MAEfv4F,EAAK7nB,KAAK3U,KAAKg1H,iBAEfx4F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIu5C,EAAaguE,EAAWvzH,EAHxBi0H,EAAKjoH,KACMioH,EAAKjoH,KACTioH,EAAKjoH,KAEzB,KAAC,EAda,GA0BZw5C,GAAW,WACb,WAAY+tE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIw5C,EAAY+tE,EAAWvzH,EATnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BY,GAkDXy5C,GAAe,WACjB,WAAY8tE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIy5C,EAAgB8tE,EAAWvzH,EAVvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BgB,GAsDf05C,GAAU,WACZ,WAAY6tE,EAAWvzH,EAAM40H,EAASjB,EAAakB,GAAoB,oBACrEz1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw1H,QAAUA,EACfx1H,KAAKu0H,YAAcA,EACnBv0H,KAAKy1H,mBAAqBA,CAC5B,CAOC,OAPA,mCAQD,WACE,IAAIj5F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKy1H,oBAERj5F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI05C,EAAW6tE,EAAWvzH,EAHnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACEioH,EAAKjoH,KAEhC,KAAC,EAdW,GA0BV25C,GAAe,WACjB,WAAY4tE,EAAWvzH,EAAM80H,GAAO,oBAClC11H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK01H,MAAQA,CACf,CAKC,OALA,mCAMD,WACE,IAAIl5F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK01H,OAERl5F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI25C,EAAgB4tE,EAAWvzH,EAD1Bi0H,EAAKjoH,KAEnB,KAAC,EAVgB,GAkBf45C,GAAwB,WAC1B,WAAY2tE,EAAWvzH,EAAM80H,EAAOC,GAAO,oBACzC31H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK01H,MAAQA,EACb11H,KAAK21H,MAAQA,CACf,CAMC,OANA,mCAOD,WACE,IAAIn5F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK01H,OAEfl5F,EAAK7nB,KAAK3U,KAAK21H,OAERn5F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI45C,EAAyB2tE,EAAWvzH,EAFnCi0H,EAAKjoH,KACLioH,EAAKjoH,KAEnB,KAAC,EAZyB,GAsBxB65C,GAAe,WACjB,WAAY0tE,EAAWvzH,EAAMg1H,EAAQC,EAAaC,GAAW,oBAC3D91H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK41H,OAASA,EACd51H,KAAK61H,YAAcA,EACnB71H,KAAK81H,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAIt5F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK41H,QAEfp5F,EAAK7nB,KAAK3U,KAAK61H,aAEfr5F,EAAK7nB,KAAK3U,KAAK81H,WAERt5F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI65C,EAAgB0tE,EAAWvzH,EAHzBi0H,EAAKjoH,KACAioH,EAAKjoH,KACPioH,EAAKjoH,KAEvB,KAAC,EAdgB,GA0Bf85C,GAAc,WAChB,WAAYytE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI85C,EAAeytE,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDd+5C,GAAiB,WACnB,WAAYwtE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+5C,EAAkBwtE,EAAWvzH,EATzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BkB,GAkDjBg6C,GAAqB,WACvB,WAAYutE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIg6C,EAAsButE,EAAWvzH,EAV7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BsB,GAsDrBi6C,GAAkB,WACpB,WAAYstE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIi6C,EAAmBstE,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBk6C,GAAuB,WACzB,WAAYqtE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIk6C,EAAwBqtE,EAAWvzH,EAT/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BwB,GAkDvBm6C,GAA2B,WAC7B,WAAYotE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIm6C,EAA4BotE,EAAWvzH,EAVnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B4B,GAsD3Bo6C,GAAQ,WACV,WAAYmtE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo6C,EAASmtE,EAAWvzH,EAThBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BS,GAkDRq6C,GAAY,WACd,WAAYktE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq6C,EAAaktE,EAAWvzH,EAVpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Ba,GAsDZs6C,GAAY,WACd,WAAYitE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBa,EAAMrB,GAAgB,oBACzI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK+1H,KAAOA,EACZ/1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK+1H,MAEfv5F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIs6C,EAAaitE,EAAWvzH,EATpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACfioH,EAAKjoH,KACKioH,EAAKjoH,KAE5B,KAAC,EA1Ba,GAkDZu6C,GAAwB,WAC1B,WAAYgtE,EAAWvzH,EAAMo1H,EAAgBC,GAAU,oBACrDj2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg2H,eAAiBA,EACtBh2H,KAAKi2H,SAAWA,CAClB,CAMC,OANA,mCAOD,WACE,IAAIz5F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKg2H,gBAEfx5F,EAAK7nB,KAAK3U,KAAKi2H,UAERz5F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIu6C,EAAyBgtE,EAAWvzH,EAF1Bi0H,EAAKjoH,KACXioH,EAAKjoH,KAEtB,KAAC,EAZyB,GAsBxBw6C,GAA+B,WACjC,WAAY+sE,EAAWvzH,EAAMs1H,EAAsBC,EAAUC,EAAQC,GAAe,oBAClFr2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk2H,qBAAuBA,EAC5Bl2H,KAAKm2H,SAAWA,EAChBn2H,KAAKo2H,OAASA,EACdp2H,KAAKq2H,cAAgBA,CACvB,CAQC,OARA,mCASD,WACE,IAAI75F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKk2H,sBAEf15F,EAAK7nB,KAAK3U,KAAKm2H,UAEf35F,EAAK7nB,KAAK3U,KAAKo2H,QAEf55F,EAAK7nB,KAAK3U,KAAKq2H,eAER75F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIw6C,EAAgC+sE,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACjBioH,EAAKjoH,KACPioH,EAAKjoH,KACEioH,EAAKjoH,KAE3B,KAAC,EAhBgC,GA8B/By6C,GAAqB,WACvB,WAAY8sE,EAAWvzH,EAAMs1H,EAAsBC,EAAUC,GAAQ,oBACnEp2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk2H,qBAAuBA,EAC5Bl2H,KAAKm2H,SAAWA,EAChBn2H,KAAKo2H,OAASA,CAChB,CAOC,OAPA,mCAQD,WACE,IAAI55F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKk2H,sBAEf15F,EAAK7nB,KAAK3U,KAAKm2H,UAEf35F,EAAK7nB,KAAK3U,KAAKo2H,QAER55F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIy6C,EAAsB8sE,EAAWvzH,EAHjBi0H,EAAKjoH,KACjBioH,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EAdsB,GA0BrB06C,GAA+B,WACjC,WAAY6sE,EAAWvzH,EAAMs1H,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,EAAeC,EAAQC,GAAU,oBACnJ12H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk2H,qBAAuBA,EAC5Bl2H,KAAKm2H,SAAWA,EAChBn2H,KAAKo2H,OAASA,EACdp2H,KAAKg2H,eAAiBA,EACtBh2H,KAAKs2H,iBAAmBA,EACxBt2H,KAAKu2H,YAAcA,EACnBv2H,KAAKw2H,cAAgBA,EACrBx2H,KAAKy2H,OAASA,EACdz2H,KAAK02H,SAAWA,CAClB,CAaC,OAbA,mCAcD,WACE,IAAIl6F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKk2H,sBAEf15F,EAAK7nB,KAAK3U,KAAKm2H,UAEf35F,EAAK7nB,KAAK3U,KAAKo2H,QAEf55F,EAAK7nB,KAAK3U,KAAKg2H,gBAEfx5F,EAAK7nB,KAAK3U,KAAKs2H,kBAEf95F,EAAK7nB,KAAK3U,KAAKu2H,aAEf/5F,EAAK7nB,KAAK3U,KAAKw2H,eAEfh6F,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAK02H,UAERl6F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI06C,EAAgC6sE,EAAWvzH,EAT3Bi0H,EAAKjoH,KACjBioH,EAAKjoH,KACPioH,EAAKjoH,KACGioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KACZioH,EAAKjoH,KACHioH,EAAKjoH,KAEtB,KAAC,EA1BgC,GAkD/B26C,GAAwB,WAC1B,WAAY4sE,EAAWvzH,EAAMs1H,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,GAAe,oBACjIx2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk2H,qBAAuBA,EAC5Bl2H,KAAKm2H,SAAWA,EAChBn2H,KAAKo2H,OAASA,EACdp2H,KAAKg2H,eAAiBA,EACtBh2H,KAAKs2H,iBAAmBA,EACxBt2H,KAAKu2H,YAAcA,EACnBv2H,KAAKw2H,cAAgBA,CACvB,CAWC,OAXA,mCAYD,WACE,IAAIh6F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKk2H,sBAEf15F,EAAK7nB,KAAK3U,KAAKm2H,UAEf35F,EAAK7nB,KAAK3U,KAAKo2H,QAEf55F,EAAK7nB,KAAK3U,KAAKg2H,gBAEfx5F,EAAK7nB,KAAK3U,KAAKs2H,kBAEf95F,EAAK7nB,KAAK3U,KAAKu2H,aAEf/5F,EAAK7nB,KAAK3U,KAAKw2H,eAERh6F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI26C,EAAyB4sE,EAAWvzH,EAPpBi0H,EAAKjoH,KACjBioH,EAAKjoH,KACPioH,EAAKjoH,KACGioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EAtByB,GA0CxB46C,GAAgC,WAClC,WAAY2sE,EAAWvzH,EAAMs1H,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,EAAeG,EAAkBD,GAAU,oBAC7J12H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk2H,qBAAuBA,EAC5Bl2H,KAAKm2H,SAAWA,EAChBn2H,KAAKo2H,OAASA,EACdp2H,KAAKg2H,eAAiBA,EACtBh2H,KAAKs2H,iBAAmBA,EACxBt2H,KAAKu2H,YAAcA,EACnBv2H,KAAKw2H,cAAgBA,EACrBx2H,KAAK22H,iBAAmBA,EACxB32H,KAAK02H,SAAWA,CAClB,CAaC,OAbA,mCAcD,WACE,IAAIl6F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKk2H,sBAEf15F,EAAK7nB,KAAK3U,KAAKm2H,UAEf35F,EAAK7nB,KAAK3U,KAAKo2H,QAEf55F,EAAK7nB,KAAK3U,KAAKg2H,gBAEfx5F,EAAK7nB,KAAK3U,KAAKs2H,kBAEf95F,EAAK7nB,KAAK3U,KAAKu2H,aAEf/5F,EAAK7nB,KAAK3U,KAAKw2H,eAEfh6F,EAAK7nB,KAAK3U,KAAK22H,kBAEfn6F,EAAK7nB,KAAK3U,KAAK02H,UAERl6F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI46C,EAAiC2sE,EAAWvzH,EAT5Bi0H,EAAKjoH,KACjBioH,EAAKjoH,KACPioH,EAAKjoH,KACGioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KACFioH,EAAKjoH,KACbioH,EAAKjoH,KAEtB,KAAC,EA1BiC,GAkDhC66C,GAAsB,WACxB,WAAY0sE,EAAWvzH,EAAMq1H,GAAU,oBACrCj2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi2H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIz5F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKi2H,UAERz5F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI66C,EAAuB0sE,EAAWvzH,EAD9Bi0H,EAAKjoH,KAEtB,KAAC,EAVuB,GAkBtB86C,GAA6B,WAC/B,WAAYysE,EAAWvzH,EAAMs1H,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,GAAe,oBACjIx2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk2H,qBAAuBA,EAC5Bl2H,KAAKm2H,SAAWA,EAChBn2H,KAAKo2H,OAASA,EACdp2H,KAAKg2H,eAAiBA,EACtBh2H,KAAKs2H,iBAAmBA,EACxBt2H,KAAKu2H,YAAcA,EACnBv2H,KAAKw2H,cAAgBA,CACvB,CAWC,OAXA,mCAYD,WACE,IAAIh6F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKk2H,sBAEf15F,EAAK7nB,KAAK3U,KAAKm2H,UAEf35F,EAAK7nB,KAAK3U,KAAKo2H,QAEf55F,EAAK7nB,KAAK3U,KAAKg2H,gBAEfx5F,EAAK7nB,KAAK3U,KAAKs2H,kBAEf95F,EAAK7nB,KAAK3U,KAAKu2H,aAEf/5F,EAAK7nB,KAAK3U,KAAKw2H,eAERh6F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI86C,EAA8BysE,EAAWvzH,EAPzBi0H,EAAKjoH,KACjBioH,EAAKjoH,KACPioH,EAAKjoH,KACGioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EAtB8B,GA0C7B+6C,GAAiB,WACnB,WAAYwsE,EAAWvzH,EAAMg2H,EAAYC,EAAU1B,GAAK,oBACtDn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK42H,WAAaA,EAClB52H,KAAK62H,SAAWA,EAChB72H,KAAKm1H,IAAMA,CACb,CAOC,OAPA,mCAQD,WACE,IAAI34F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK42H,YAEfp6F,EAAK7nB,KAAK3U,KAAK62H,UAEfr6F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+6C,EAAkBwsE,EAAWvzH,EAHvBi0H,EAAKjoH,KACPioH,EAAKjoH,KACVioH,EAAKjoH,KAEjB,KAAC,EAdkB,GA0BjBg7C,GAAa,WACf,WAAYusE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,GAAgB,oBACnHl1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI14F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAER14F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIg7C,EAAcusE,EAAWvzH,EAPrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBc,GA0Cbi7C,GAAqB,WACvB,WAAYssE,EAAWvzH,EAAMk2H,EAAeC,GAAiB,oBAC3D/2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK82H,cAAgBA,EACrB92H,KAAK+2H,gBAAkBA,CACzB,CAMC,OANA,mCAOD,WACE,IAAIv6F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK82H,eAEft6F,EAAK7nB,KAAK3U,KAAK+2H,iBAERv6F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIi7C,EAAsBssE,EAAWvzH,EAFxBi0H,EAAKjoH,KACHioH,EAAKjoH,KAE7B,KAAC,EAZsB,GAsBrBk7C,GAAc,WAChB,WAAYqsE,EAAWvzH,EAAMo2H,EAAsBC,EAASC,EAAqBC,GAAuB,oBACtGn3H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg3H,qBAAuBA,EAC5Bh3H,KAAKi3H,QAAUA,EACfj3H,KAAKk3H,oBAAsBA,EAC3Bl3H,KAAKm3H,sBAAwBA,CAC/B,CAQC,OARA,mCASD,WACE,IAAI36F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKg3H,sBAEfx6F,EAAK7nB,KAAK3U,KAAKi3H,SAEfz6F,EAAK7nB,KAAK3U,KAAKk3H,qBAEf16F,EAAK7nB,KAAK3U,KAAKm3H,uBAER36F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIk7C,EAAeqsE,EAAWvzH,EAJVi0H,EAAKjoH,KAClBioH,EAAKjoH,KACOioH,EAAKjoH,KACHioH,EAAKjoH,KAEnC,KAAC,EAhBe,GA8Bdm7C,GAAe,WACjB,WAAYosE,EAAWvzH,EAAM0zH,EAAMC,EAAa6C,EAAcC,EAAWC,EAAgBC,EAAgBC,EAAUC,EAAWC,EAAoBC,GAAY,oBAC5J33H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo3H,aAAeA,EACpBp3H,KAAKq3H,UAAYA,EACjBr3H,KAAKs3H,eAAiBA,EACtBt3H,KAAKu3H,eAAiBA,EACtBv3H,KAAKw3H,SAAWA,EAChBx3H,KAAKy3H,UAAYA,EACjBz3H,KAAK03H,mBAAqBA,EAC1B13H,KAAK23H,WAAaA,CACpB,CAcC,OAdA,mCAeD,WACE,IAAIn7F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo3H,cAEf56F,EAAK7nB,KAAK3U,KAAKq3H,WAEf76F,EAAK7nB,KAAK3U,KAAKs3H,gBAEf96F,EAAK7nB,KAAK3U,KAAKu3H,gBAEf/6F,EAAK7nB,KAAK3U,KAAKw3H,UAEfh7F,EAAK7nB,KAAK3U,KAAKy3H,WAEfj7F,EAAK7nB,KAAK3U,KAAK03H,oBAEfl7F,EAAK7nB,KAAK3U,KAAK23H,YAERn7F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIm7C,EAAgBosE,EAAWvzH,EAV3Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KACXioH,EAAKjoH,KACJioH,EAAKjoH,KACIioH,EAAKjoH,KACbioH,EAAKjoH,KAExB,KAAC,EA5BgB,GAsDfo7C,GAAW,WACb,WAAYmsE,EAAWvzH,EAAMg3H,EAAYtD,EAAMC,EAAasD,EAAgBlD,EAAQmD,EAAOC,EAAWC,EAAoBC,GAAgB,oBACxIj4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK43H,WAAaA,EAClB53H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK63H,eAAiBA,EACtB73H,KAAK20H,OAASA,EACd30H,KAAK83H,MAAQA,EACb93H,KAAK+3H,UAAYA,EACjB/3H,KAAKg4H,mBAAqBA,EAC1Bh4H,KAAKi4H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIz7F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAK43H,YAEfp7F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK63H,gBAEfr7F,EAAK7nB,KAAK3U,KAAK20H,QAEfn4F,EAAK7nB,KAAK3U,KAAK83H,OAEft7F,EAAK7nB,KAAK3U,KAAK+3H,WAEfv7F,EAAK7nB,KAAK3U,KAAKg4H,oBAEfx7F,EAAK7nB,KAAK3U,KAAKi4H,gBAERz7F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo7C,EAAYmsE,EAAWvzH,EATjBi0H,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACbioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACIioH,EAAKjoH,KACTioH,EAAKjoH,KAE5B,KAAC,EA1BY,GAkDXq7C,GAAuB,WACzB,WAAYksE,EAAWvzH,EAAM0zH,EAAMC,EAAa2D,EAAkBC,GAAkB,oBAClFn4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKk4H,iBAAmBA,EACxBl4H,KAAKm4H,iBAAmBA,CAC1B,CAQC,OARA,mCASD,WACE,IAAI37F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKk4H,kBAEf17F,EAAK7nB,KAAK3U,KAAKm4H,kBAER37F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIq7C,EAAwBksE,EAAWvzH,EAJnCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KAE9B,KAAC,EAhBwB,GA8BvBs7C,GAA4B,WAC9B,WAAYisE,EAAWvzH,EAAMw3H,EAAaC,EAAaC,GAAY,oBACjEt4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKs4H,WAAaA,CACpB,CAOC,OAPA,mCAQD,WACE,IAAI97F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKs4H,YAER97F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIs7C,EAA6BisE,EAAWvzH,EAHjCi0H,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KAExB,KAAC,EAd6B,GA0B5Bu7C,GAA0B,WAC5B,WAAYgsE,EAAWvzH,EAAMw3H,EAAaC,EAAaE,GAAO,oBAC5Dv4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKu4H,MAAQA,CACf,CAOC,OAPA,mCAQD,WACE,IAAI/7F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKu4H,OAER/7F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIu7C,EAA2BgsE,EAAWvzH,EAH/Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACXioH,EAAKjoH,KAEnB,KAAC,EAd2B,GA0B1Bw7C,GAA+B,WACjC,WAAY+rE,EAAWvzH,EAAMw3H,EAAaC,EAAaC,EAAYE,GAAa,oBAC9Ex4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKs4H,WAAaA,EAClBt4H,KAAKw4H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAIh8F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKs4H,YAEf97F,EAAK7nB,KAAK3U,KAAKw4H,aAERh8F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIw7C,EAAgC+rE,EAAWvzH,EAJpCi0H,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KAEzB,KAAC,EAhBgC,GA8B/By7C,GAAQ,WACV,WAAY8rE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBgE,EAAeC,EAAcC,EAAsBC,EAAOC,EAAMC,EAAmBC,EAAmBC,GAAkB,oBAC1Nh5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAKy4H,cAAgBA,EACrBz4H,KAAK04H,aAAeA,EACpB14H,KAAK24H,qBAAuBA,EAC5B34H,KAAK44H,MAAQA,EACb54H,KAAK64H,KAAOA,EACZ74H,KAAK84H,kBAAoBA,EACzB94H,KAAK+4H,kBAAoBA,EACzB/4H,KAAKg5H,iBAAmBA,CAC1B,CAkBC,OAlBA,mCAmBD,WACE,IAAIx8F,EAAO,GA6BX,OA5BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKy4H,eAEfj8F,EAAK7nB,KAAK3U,KAAK04H,cAEfl8F,EAAK7nB,KAAK3U,KAAK24H,sBAEfn8F,EAAK7nB,KAAK3U,KAAK44H,OAEfp8F,EAAK7nB,KAAK3U,KAAK64H,MAEfr8F,EAAK7nB,KAAK3U,KAAK84H,mBAEft8F,EAAK7nB,KAAK3U,KAAK+4H,mBAEfv8F,EAAK7nB,KAAK3U,KAAKg5H,kBAERx8F,CACT,IAAC,uBAjDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAeV,OAAO,IAAIy7C,EAAS8rE,EAAWvzH,EAdhBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACNioH,EAAKjoH,KACGioH,EAAKjoH,KACpBioH,EAAKjoH,KACNioH,EAAKjoH,KACQioH,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KAE9B,KAAC,EApCS,GAsER07C,GAA6B,WAC/B,WAAY6rE,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAUC,EAAmBC,EAAcC,EAAcC,EAAuBC,EAA0BC,EAAgBC,EAAoBC,EAAuBC,EAAwBC,EAAmBC,EAAqBC,GAAgB,oBAC1S75H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAKk5H,kBAAoBA,EACzBl5H,KAAKm5H,aAAeA,EACpBn5H,KAAKo5H,aAAeA,EACpBp5H,KAAKq5H,sBAAwBA,EAC7Br5H,KAAKs5H,yBAA2BA,EAChCt5H,KAAKu5H,eAAiBA,EACtBv5H,KAAKw5H,mBAAqBA,EAC1Bx5H,KAAKy5H,sBAAwBA,EAC7Bz5H,KAAK05H,uBAAyBA,EAC9B15H,KAAK25H,kBAAoBA,EACzB35H,KAAK45H,oBAAsBA,EAC3B55H,KAAK65H,eAAiBA,CACxB,CAmBC,OAnBA,mCAoBD,WACE,IAAIr9F,EAAO,GA+BX,OA9BAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKk5H,mBAEf18F,EAAK7nB,KAAK3U,KAAKm5H,cAEf38F,EAAK7nB,KAAK3U,KAAKo5H,cAEf58F,EAAK7nB,KAAK3U,KAAKq5H,uBAEf78F,EAAK7nB,KAAK3U,KAAKs5H,0BAEf98F,EAAK7nB,KAAK3U,KAAKu5H,gBAEf/8F,EAAK7nB,KAAK3U,KAAKw5H,oBAEfh9F,EAAK7nB,KAAK3U,KAAKy5H,uBAEfj9F,EAAK7nB,KAAK3U,KAAK05H,wBAEfl9F,EAAK7nB,KAAK3U,KAAK25H,mBAEfn9F,EAAK7nB,KAAK3U,KAAK45H,qBAEfp9F,EAAK7nB,KAAK3U,KAAK65H,gBAERr9F,CACT,IAAC,uBApDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAgBV,OAAO,IAAI07C,EAA8B6rE,EAAWvzH,EAflCi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACLioH,EAAKjoH,KACIioH,EAAKjoH,KACFioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACJioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KAE5B,KAAC,EAtC8B,GA0E7B27C,GAAuB,WACzB,WAAY4rE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI27C,EAAwB4rE,EAAWvzH,EAT/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BwB,GAkDvB47C,GAA2B,WAC7B,WAAY2rE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI47C,EAA4B2rE,EAAWvzH,EAVnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B4B,GAsD3B67C,GAAiB,WACnB,WAAY0rE,EAAWvzH,EAAMk5H,EAAU/D,GAAM,oBAC3C/1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAK+1H,KAAOA,CACd,CAMC,OANA,mCAOD,WACE,IAAIv5F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAK+1H,MAERv5F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI67C,EAAkB0rE,EAAWvzH,EAFzBi0H,EAAKjoH,KACTioH,EAAKjoH,KAElB,KAAC,EAZkB,GAsBjB87C,GAAmB,WACrB,WAAYyrE,EAAWvzH,EAAMk5H,EAAUC,GAAc,oBACnD/5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAK+5H,aAAeA,CACtB,CAMC,OANA,mCAOD,WACE,IAAIv9F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAK+5H,cAERv9F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI87C,EAAoByrE,EAAWvzH,EAF3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KAE1B,KAAC,EAZoB,GAsBnB+7C,GAAmB,WACrB,WAAYwrE,EAAWvzH,EAAMk5H,EAAU/D,EAAMgE,GAAc,oBACzD/5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAK+1H,KAAOA,EACZ/1H,KAAK+5H,aAAeA,CACtB,CAOC,OAPA,mCAQD,WACE,IAAIv9F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAK+1H,MAEfv5F,EAAK7nB,KAAK3U,KAAK+5H,cAERv9F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+7C,EAAoBwrE,EAAWvzH,EAH3Bi0H,EAAKjoH,KACTioH,EAAKjoH,KACGioH,EAAKjoH,KAE1B,KAAC,EAdoB,GA0BnBg8C,GAAe,WACjB,WAAYurE,EAAWvzH,EAAMo5H,EAAQC,EAAmBC,EAAWC,EAAaC,GAAe,oBAC7Fp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg6H,OAASA,EACdh6H,KAAKi6H,kBAAoBA,EACzBj6H,KAAKk6H,UAAYA,EACjBl6H,KAAKm6H,YAAcA,EACnBn6H,KAAKo6H,cAAgBA,CACvB,CASC,OATA,mCAUD,WACE,IAAI59F,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKg6H,QAEfx9F,EAAK7nB,KAAK3U,KAAKi6H,mBAEfz9F,EAAK7nB,KAAK3U,KAAKk6H,WAEf19F,EAAK7nB,KAAK3U,KAAKm6H,aAEf39F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIg8C,EAAgBurE,EAAWvzH,EALzBi0H,EAAKjoH,KACMioH,EAAKjoH,KACbioH,EAAKjoH,KACHioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EAlBgB,GAkCfi8C,GAAwB,WAC1B,WAAYsrE,EAAWvzH,EAAMo5H,EAAQC,EAAmBC,EAAWC,EAAaC,EAAeC,EAAoBC,EAAOC,GAAU,oBAClIv6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg6H,OAASA,EACdh6H,KAAKi6H,kBAAoBA,EACzBj6H,KAAKk6H,UAAYA,EACjBl6H,KAAKm6H,YAAcA,EACnBn6H,KAAKo6H,cAAgBA,EACrBp6H,KAAKq6H,mBAAqBA,EAC1Br6H,KAAKs6H,MAAQA,EACbt6H,KAAKu6H,SAAWA,CAClB,CAYC,OAZA,mCAaD,WACE,IAAI/9F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKg6H,QAEfx9F,EAAK7nB,KAAK3U,KAAKi6H,mBAEfz9F,EAAK7nB,KAAK3U,KAAKk6H,WAEf19F,EAAK7nB,KAAK3U,KAAKm6H,aAEf39F,EAAK7nB,KAAK3U,KAAKo6H,eAEf59F,EAAK7nB,KAAK3U,KAAKq6H,oBAEf79F,EAAK7nB,KAAK3U,KAAKs6H,OAEf99F,EAAK7nB,KAAK3U,KAAKu6H,UAER/9F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIi8C,EAAyBsrE,EAAWvzH,EARlCi0H,EAAKjoH,KACMioH,EAAKjoH,KACbioH,EAAKjoH,KACHioH,EAAKjoH,KACHioH,EAAKjoH,KACAioH,EAAKjoH,KAClBioH,EAAKjoH,KACFioH,EAAKjoH,KAEtB,KAAC,EAxByB,GA8CxBk8C,GAAiB,WACnB,WAAYqrE,EAAWvzH,EAAM45H,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,GAAe,oBAC9Gp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw6H,QAAUA,EACfx6H,KAAKy6H,QAAUA,EACfz6H,KAAKi6H,kBAAoBA,EACzBj6H,KAAK06H,YAAcA,EACnB16H,KAAK26H,QAAUA,EACf36H,KAAK46H,QAAUA,EACf56H,KAAKo6H,cAAgBA,CACvB,CAWC,OAXA,mCAYD,WACE,IAAI59F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKw6H,SAEfh+F,EAAK7nB,KAAK3U,KAAKy6H,SAEfj+F,EAAK7nB,KAAK3U,KAAKi6H,mBAEfz9F,EAAK7nB,KAAK3U,KAAK06H,aAEfl+F,EAAK7nB,KAAK3U,KAAK26H,SAEfn+F,EAAK7nB,KAAK3U,KAAK46H,SAEfp+F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIk8C,EAAkBqrE,EAAWvzH,EAP1Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KACTioH,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KAE3B,KAAC,EAtBkB,GA0CjBm8C,GAA0B,WAC5B,WAAYorE,EAAWvzH,EAAM45H,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,EAAeS,EAAiBC,EAAiBC,EAAQC,EAAQT,GAAU,oBAC1Kv6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw6H,QAAUA,EACfx6H,KAAKy6H,QAAUA,EACfz6H,KAAKi6H,kBAAoBA,EACzBj6H,KAAK06H,YAAcA,EACnB16H,KAAK26H,QAAUA,EACf36H,KAAK46H,QAAUA,EACf56H,KAAKo6H,cAAgBA,EACrBp6H,KAAK66H,gBAAkBA,EACvB76H,KAAK86H,gBAAkBA,EACvB96H,KAAK+6H,OAASA,EACd/6H,KAAKg7H,OAASA,EACdh7H,KAAKu6H,SAAWA,CAClB,CAgBC,OAhBA,mCAiBD,WACE,IAAI/9F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKw6H,SAEfh+F,EAAK7nB,KAAK3U,KAAKy6H,SAEfj+F,EAAK7nB,KAAK3U,KAAKi6H,mBAEfz9F,EAAK7nB,KAAK3U,KAAK06H,aAEfl+F,EAAK7nB,KAAK3U,KAAK26H,SAEfn+F,EAAK7nB,KAAK3U,KAAK46H,SAEfp+F,EAAK7nB,KAAK3U,KAAKo6H,eAEf59F,EAAK7nB,KAAK3U,KAAK66H,iBAEfr+F,EAAK7nB,KAAK3U,KAAK86H,iBAEft+F,EAAK7nB,KAAK3U,KAAK+6H,QAEfv+F,EAAK7nB,KAAK3U,KAAKg7H,QAEfx+F,EAAK7nB,KAAK3U,KAAKu6H,UAER/9F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIm8C,EAA2BorE,EAAWvzH,EAZnCi0H,EAAKjoH,KACLioH,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KACTioH,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACdioH,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KAEtB,KAAC,EAhC2B,GA8D1Bo8C,GAAO,WACT,WAAYmrE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo8C,EAAQmrE,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPq8C,GAAmB,WACrB,WAAYkrE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIq8C,EAAoBkrE,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnBs8C,GAAW,WACb,WAAYirE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIs8C,EAAYirE,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXu8C,GAAU,WACZ,WAAYgrE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIu8C,EAAWgrE,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDVw8C,GAAc,WAChB,WAAY+qE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIw8C,EAAe+qE,EAAWvzH,EAVtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Be,GAsDdy8C,GAAc,WAChB,WAAY8qE,EAAWvzH,EAAMq6H,EAASC,EAASC,EAAMC,EAAkBC,EAAWC,EAAcC,GAAY,oBAC1Gv7H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi7H,QAAUA,EACfj7H,KAAKk7H,QAAUA,EACfl7H,KAAKm7H,KAAOA,EACZn7H,KAAKo7H,iBAAmBA,EACxBp7H,KAAKq7H,UAAYA,EACjBr7H,KAAKs7H,aAAeA,EACpBt7H,KAAKu7H,WAAaA,CACpB,CAWC,OAXA,mCAYD,WACE,IAAI/+F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKi7H,SAEfz+F,EAAK7nB,KAAK3U,KAAKk7H,SAEf1+F,EAAK7nB,KAAK3U,KAAKm7H,MAEf3+F,EAAK7nB,KAAK3U,KAAKo7H,kBAEf5+F,EAAK7nB,KAAK3U,KAAKq7H,WAEf7+F,EAAK7nB,KAAK3U,KAAKs7H,cAEf9+F,EAAK7nB,KAAK3U,KAAKu7H,YAER/+F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIy8C,EAAe8qE,EAAWvzH,EAPvBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACOioH,EAAKjoH,KACZioH,EAAKjoH,KACFioH,EAAKjoH,KACPioH,EAAKjoH,KAExB,KAAC,EAtBe,GA0Cd08C,GAAQ,WACV,WAAY6qE,EAAWvzH,EAAMq4H,EAAUuC,EAASC,EAASC,GAAS,oBAChE17H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKw7H,QAAUA,EACfx7H,KAAKy7H,QAAUA,EACfz7H,KAAK07H,QAAUA,CACjB,CAQC,OARA,mCASD,WACE,IAAIl/F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKw7H,SAEfh/F,EAAK7nB,KAAK3U,KAAKy7H,SAEfj/F,EAAK7nB,KAAK3U,KAAK07H,SAERl/F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI08C,EAAS6qE,EAAWvzH,EAJhBi0H,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAErB,KAAC,EAhBS,GA8BR28C,GAAS,WACX,WAAY4qE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI28C,EAAU4qE,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDT48C,GAAa,WACf,WAAY2qE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI48C,EAAc2qE,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDb68C,GAAwB,WAC1B,WAAY0qE,EAAWvzH,EAAM+6H,EAAUC,EAAcC,GAAe,oBAClE77H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK27H,SAAWA,EAChB37H,KAAK47H,aAAeA,EACpB57H,KAAK67H,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAIr/F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK27H,UAEfn/F,EAAK7nB,KAAK3U,KAAK47H,cAEfp/F,EAAK7nB,KAAK3U,KAAK67H,eAERr/F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI68C,EAAyB0qE,EAAWvzH,EAHhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KAE3B,KAAC,EAdyB,GA0BxB88C,GAAgB,WAClB,WAAYyqE,EAAWvzH,EAAM+6H,EAAUC,EAAcC,GAAe,oBAClE77H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK27H,SAAWA,EAChB37H,KAAK47H,aAAeA,EACpB57H,KAAK67H,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAIr/F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK27H,UAEfn/F,EAAK7nB,KAAK3U,KAAK47H,cAEfp/F,EAAK7nB,KAAK3U,KAAK67H,eAERr/F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI88C,EAAiByqE,EAAWvzH,EAHxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KAE3B,KAAC,EAdiB,GA0BhB+8C,GAAoB,WACtB,WAAYwqE,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI+8C,EAAqBwqE,EAAWvzH,EADhCi0H,EAAKjoH,KAElB,KAAC,EAVqB,GAkBpBg9C,GAAgB,WAClB,WAAYuqE,EAAWvzH,EAAMq1H,EAAUmE,GAAe,oBACpDp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi2H,SAAWA,EAChBj2H,KAAKo6H,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI59F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi2H,UAEfz5F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIg9C,EAAiBuqE,EAAWvzH,EAFxBi0H,EAAKjoH,KACAioH,EAAKjoH,KAE3B,KAAC,EAZiB,GAsBhBi9C,GAAwB,WAC1B,WAAYsqE,EAAWvzH,EAAM0zH,EAAMwH,EAAiCC,EAAiCC,EAAiCC,EAA8BC,EAA8BC,GAA8B,oBAC9Nn8H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK87H,gCAAkCA,EACvC97H,KAAK+7H,gCAAkCA,EACvC/7H,KAAKg8H,gCAAkCA,EACvCh8H,KAAKi8H,6BAA+BA,EACpCj8H,KAAKk8H,6BAA+BA,EACpCl8H,KAAKm8H,6BAA+BA,CACtC,CAWC,OAXA,mCAYD,WACE,IAAI3/F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK87H,iCAEft/F,EAAK7nB,KAAK3U,KAAK+7H,iCAEfv/F,EAAK7nB,KAAK3U,KAAKg8H,iCAEfx/F,EAAK7nB,KAAK3U,KAAKi8H,8BAEfz/F,EAAK7nB,KAAK3U,KAAKk8H,8BAEf1/F,EAAK7nB,KAAK3U,KAAKm8H,8BAER3/F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIi9C,EAAyBsqE,EAAWvzH,EAPpCi0H,EAAKjoH,KACsBioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE1C,KAAC,EAtByB,GA0CxBk9C,GAAwB,WAC1B,WAAYqqE,EAAWvzH,EAAM0zH,EAAM8H,EAA+BC,EAA+BC,GAA+B,oBAC9Ht8H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKo8H,8BAAgCA,EACrCp8H,KAAKq8H,8BAAgCA,EACrCr8H,KAAKs8H,8BAAgCA,CACvC,CAQC,OARA,mCASD,WACE,IAAI9/F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKo8H,+BAEf5/F,EAAK7nB,KAAK3U,KAAKq8H,+BAEf7/F,EAAK7nB,KAAK3U,KAAKs8H,+BAER9/F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIk9C,EAAyBqqE,EAAWvzH,EAJpCi0H,EAAKjoH,KACoBioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE3C,KAAC,EAhByB,GA8BxBm9C,GAAwB,WAC1B,WAAYoqE,EAAWvzH,EAAM0zH,EAAMiI,EAAyBC,EAAyBC,EAAyBC,EAAsBC,EAAsBC,GAAsB,oBAC9K58H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu8H,wBAA0BA,EAC/Bv8H,KAAKw8H,wBAA0BA,EAC/Bx8H,KAAKy8H,wBAA0BA,EAC/Bz8H,KAAK08H,qBAAuBA,EAC5B18H,KAAK28H,qBAAuBA,EAC5B38H,KAAK48H,qBAAuBA,CAC9B,CAWC,OAXA,mCAYD,WACE,IAAIpgG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu8H,yBAEf//F,EAAK7nB,KAAK3U,KAAKw8H,yBAEfhgG,EAAK7nB,KAAK3U,KAAKy8H,yBAEfjgG,EAAK7nB,KAAK3U,KAAK08H,sBAEflgG,EAAK7nB,KAAK3U,KAAK28H,sBAEfngG,EAAK7nB,KAAK3U,KAAK48H,sBAERpgG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIm9C,EAAyBoqE,EAAWvzH,EAPpCi0H,EAAKjoH,KACcioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAElC,KAAC,EAtByB,GA0CxBo9C,GAA+B,WACjC,WAAYmqE,EAAWvzH,EAAM0zH,EAAMiI,EAAyBC,EAAyBC,EAAyBC,EAAsBC,EAAsBC,EAAsBC,GAAkB,oBAChM78H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu8H,wBAA0BA,EAC/Bv8H,KAAKw8H,wBAA0BA,EAC/Bx8H,KAAKy8H,wBAA0BA,EAC/Bz8H,KAAK08H,qBAAuBA,EAC5B18H,KAAK28H,qBAAuBA,EAC5B38H,KAAK48H,qBAAuBA,EAC5B58H,KAAK68H,iBAAmBA,CAC1B,CAYC,OAZA,mCAaD,WACE,IAAIrgG,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu8H,yBAEf//F,EAAK7nB,KAAK3U,KAAKw8H,yBAEfhgG,EAAK7nB,KAAK3U,KAAKy8H,yBAEfjgG,EAAK7nB,KAAK3U,KAAK08H,sBAEflgG,EAAK7nB,KAAK3U,KAAK28H,sBAEfngG,EAAK7nB,KAAK3U,KAAK48H,sBAEfpgG,EAAK7nB,KAAK3U,KAAK68H,kBAERrgG,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIo9C,EAAgCmqE,EAAWvzH,EAR3Ci0H,EAAKjoH,KACcioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACTioH,EAAKjoH,KAE9B,KAAC,EAxBgC,GA8C/Bq9C,GAAe,WACjB,WAAYkqE,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI5qE,EAAgBkqE,EAAWvzH,EACxC,KAAC,EARgB,GAcfspD,GAAiB,WACnB,WAAYiqE,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI3qE,EAAkBiqE,EAAWvzH,EAC1C,KAAC,EARkB,GAcjBupD,GAAc,WAChB,WAAYgqE,EAAWvzH,EAAMk8H,EAAQC,EAAMC,EAAMC,GAAM,oBACrDj9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK88H,OAASA,EACd98H,KAAK+8H,KAAOA,EACZ/8H,KAAKg9H,KAAOA,EACZh9H,KAAKi9H,KAAOA,CACd,CAQC,OARA,mCASD,WACE,IAAIzgG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAK88H,QAEftgG,EAAK7nB,KAAK3U,KAAK+8H,MAEfvgG,EAAK7nB,KAAK3U,KAAKg9H,MAEfxgG,EAAK7nB,KAAK3U,KAAKi9H,MAERzgG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIu9C,EAAegqE,EAAWvzH,EAJxBi0H,EAAKjoH,KACPioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAElB,KAAC,EAhBe,GA8Bdw9C,GAAiB,WACnB,WAAY+pE,EAAWvzH,EAAMs8H,EAAaC,EAAeC,GAAW,oBAClEp9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk9H,YAAcA,EACnBl9H,KAAKm9H,cAAgBA,EACrBn9H,KAAKo9H,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAI5gG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKk9H,aAEf1gG,EAAK7nB,KAAK3U,KAAKm9H,eAEf3gG,EAAK7nB,KAAK3U,KAAKo9H,WAER5gG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIw9C,EAAkB+pE,EAAWvzH,EAHtBi0H,EAAKjoH,KACHioH,EAAKjoH,KACTioH,EAAKjoH,KAEvB,KAAC,EAdkB,GA0BjBy9C,GAAS,WACX,WAAY8pE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,EAAiB5I,GAAgB,oBAC9J10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,EACvBt9H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAEf9gG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIy9C,EAAU8pE,EAAWvzH,EAVjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EA5BU,GAsDT09C,GAAa,WACf,WAAY6pE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,EAAiB5I,GAAgB,oBAC9J10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,EACvBt9H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAEf9gG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI09C,EAAc6pE,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDb29C,GAAW,WACb,WAAY4pE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,EAAiBC,EAAsBC,EAAoBC,GAAiB,oBACzMz9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,EACvBt9H,KAAKu9H,qBAAuBA,EAC5Bv9H,KAAKw9H,mBAAqBA,EAC1Bx9H,KAAKy9H,gBAAkBA,CACzB,CAgBC,OAhBA,mCAiBD,WACE,IAAIjhG,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAEf9gG,EAAK7nB,KAAK3U,KAAKu9H,sBAEf/gG,EAAK7nB,KAAK3U,KAAKw9H,oBAEfhhG,EAAK7nB,KAAK3U,KAAKy9H,iBAERjhG,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI29C,EAAY4pE,EAAWvzH,EAZnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACPioH,EAAKjoH,KACRioH,EAAKjoH,KAE7B,KAAC,EAhCY,GA8DX49C,GAAkB,WACpB,WAAY2pE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI49C,EAAmB2pE,EAAWvzH,EAR1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBmB,GA8ClB69C,GAAsB,WACxB,WAAY0pE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI69C,EAAuB0pE,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BuB,GAkDtB89C,GAA0B,WAC5B,WAAYypE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI89C,EAA2BypE,EAAWvzH,EAVlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B2B,GAsD1B+9C,GAAuB,WACzB,WAAYwpE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+9C,EAAwBwpE,EAAWvzH,EAT/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BwB,GAkDvBg+C,GAA2B,WAC7B,WAAYupE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIg+C,EAA4BupE,EAAWvzH,EAVnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B4B,GAsD3Bi+C,GAAsB,WACxB,WAAYspE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIi+C,EAAuBspE,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BuB,GAkDtBk+C,GAAiB,WACnB,WAAYqpE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,EAAiBI,GAAW,oBACzJ19H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,EACvBt9H,KAAK09H,UAAYA,CACnB,CAcC,OAdA,mCAeD,WACE,IAAIlhG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAEf9gG,EAAK7nB,KAAK3U,KAAK09H,WAERlhG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIk+C,EAAkBqpE,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACXioH,EAAKjoH,KAEvB,KAAC,EA5BkB,GAsDjBm+C,GAAiB,WACnB,WAAYopE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB2I,GAAU,oBAC5Gr9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK00H,eAAiBA,EACtB10H,KAAKq9H,SAAWA,CAClB,CAWC,OAXA,mCAYD,WACE,IAAI7gG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKq9H,UAER7gG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIm+C,EAAkBopE,EAAWvzH,EAPzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACXioH,EAAKjoH,KAEtB,KAAC,EAtBkB,GA0CjBo+C,GAAS,WACX,WAAYmpE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo+C,EAAUmpE,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDTq+C,GAAa,WACf,WAAYkpE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq+C,EAAckpE,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDbs+C,GAAmB,WACrB,WAAYipE,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU0E,EAAOC,EAAOC,EAAeC,EAAOC,GAAsB,oBACzH/9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK29H,MAAQA,EACb39H,KAAK49H,MAAQA,EACb59H,KAAK69H,cAAgBA,EACrB79H,KAAK89H,MAAQA,EACb99H,KAAK+9H,qBAAuBA,CAC9B,CAYC,OAZA,mCAaD,WACE,IAAIvhG,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK29H,OAEfnhG,EAAK7nB,KAAK3U,KAAK49H,OAEfphG,EAAK7nB,KAAK3U,KAAK69H,eAEfrhG,EAAK7nB,KAAK3U,KAAK89H,OAEfthG,EAAK7nB,KAAK3U,KAAK+9H,sBAERvhG,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIs+C,EAAoBipE,EAAWvzH,EARxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACGioH,EAAKjoH,KACbioH,EAAKjoH,KACUioH,EAAKjoH,KAElC,KAAC,EAxBoB,GA8CnBu+C,GAAsB,WACxB,WAAYgpE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIu+C,EAAuBgpE,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BuB,GAkDtBw+C,GAA0B,WAC5B,WAAY+oE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIw+C,EAA2B+oE,EAAWvzH,EAVlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B2B,GAsD1By+C,GAAsB,WACxB,WAAY8oE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIy+C,EAAuB8oE,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BuB,GAkDtB0+C,GAA0B,WAC5B,WAAY6oE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI0+C,EAA2B6oE,EAAWvzH,EAVlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B2B,GAsD1B2+C,GAAe,WACjB,WAAY4oE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2+C,EAAgB4oE,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BgB,GAkDf4+C,GAAmB,WACrB,WAAY2oE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4+C,EAAoB2oE,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoB,GAsDnB6+C,GAAe,WACjB,WAAY0oE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6+C,EAAgB0oE,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BgB,GAkDf8+C,GAAmB,WACrB,WAAYyoE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI8+C,EAAoByoE,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoB,GAsDnB++C,GAAoB,WACtB,WAAYwoE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI++C,EAAqBwoE,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBg/C,GAAwB,WAC1B,WAAYuoE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIg/C,EAAyBuoE,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxBi/C,GAAiB,WACnB,WAAYsoE,EAAWvzH,EAAMo9H,GAAa,oBACxCh+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg+H,YAAcA,CACrB,CAKC,OALA,mCAMD,WACE,IAAIxhG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKg+H,aAERxhG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIi/C,EAAkBsoE,EAAWvzH,EADtBi0H,EAAKjoH,KAEzB,KAAC,EAVkB,GAkBjBk/C,GAAqB,WACvB,WAAYqoE,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI/oE,EAAsBqoE,EAAWvzH,EAC9C,KAAC,EARsB,GAcrBmrD,GAAuB,WACzB,WAAYooE,EAAWvzH,EAAMq9H,EAAWC,GAAS,oBAC/Cl+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi+H,UAAYA,EACjBj+H,KAAKk+H,QAAUA,CACjB,CAMC,OANA,mCAOD,WACE,IAAI1hG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi+H,WAEfzhG,EAAK7nB,KAAK3U,KAAKk+H,SAER1hG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIm/C,EAAwBooE,EAAWvzH,EAF9Bi0H,EAAKjoH,KACPioH,EAAKjoH,KAErB,KAAC,EAZwB,GAsBvBo/C,GAAuB,WACzB,WAAYmoE,EAAWvzH,EAAMq9H,EAAWC,GAAS,oBAC/Cl+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi+H,UAAYA,EACjBj+H,KAAKk+H,QAAUA,CACjB,CAMC,OANA,mCAOD,WACE,IAAI1hG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi+H,WAEfzhG,EAAK7nB,KAAK3U,KAAKk+H,SAER1hG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIo/C,EAAwBmoE,EAAWvzH,EAF9Bi0H,EAAKjoH,KACPioH,EAAKjoH,KAErB,KAAC,EAZwB,GAsBvBq/C,GAAkC,WACpC,WAAYkoE,EAAWvzH,EAAMu9H,EAAOC,EAAOC,EAAaC,GAAO,oBAC7Dt+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKm+H,MAAQA,EACbn+H,KAAKo+H,MAAQA,EACbp+H,KAAKq+H,YAAcA,EACnBr+H,KAAKs+H,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAI9hG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKm+H,OAEf3hG,EAAK7nB,KAAK3U,KAAKo+H,OAEf5hG,EAAK7nB,KAAK3U,KAAKq+H,aAEf7hG,EAAK7nB,KAAK3U,KAAKs+H,OAER9hG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIq/C,EAAmCkoE,EAAWvzH,EAJ7Ci0H,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACXioH,EAAKjoH,KAEnB,KAAC,EAhBmC,GA8BlCs/C,GAAoC,WACtC,WAAYioE,EAAWvzH,EAAMu9H,EAAOC,EAAOC,EAAaC,GAAO,oBAC7Dt+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKm+H,MAAQA,EACbn+H,KAAKo+H,MAAQA,EACbp+H,KAAKq+H,YAAcA,EACnBr+H,KAAKs+H,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAI9hG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKm+H,OAEf3hG,EAAK7nB,KAAK3U,KAAKo+H,OAEf5hG,EAAK7nB,KAAK3U,KAAKq+H,aAEf7hG,EAAK7nB,KAAK3U,KAAKs+H,OAER9hG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIs/C,EAAqCioE,EAAWvzH,EAJ/Ci0H,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACXioH,EAAKjoH,KAEnB,KAAC,EAhBqC,GA8BpCu/C,GAA8C,WAChD,WAAYgoE,EAAWvzH,EAAMu9H,EAAOC,EAAOC,EAAaC,EAAOC,GAAQ,oBACrEv+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKm+H,MAAQA,EACbn+H,KAAKo+H,MAAQA,EACbp+H,KAAKq+H,YAAcA,EACnBr+H,KAAKs+H,MAAQA,EACbt+H,KAAKu+H,OAASA,CAChB,CASC,OATA,mCAUD,WACE,IAAI/hG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKm+H,OAEf3hG,EAAK7nB,KAAK3U,KAAKo+H,OAEf5hG,EAAK7nB,KAAK3U,KAAKq+H,aAEf7hG,EAAK7nB,KAAK3U,KAAKs+H,OAEf9hG,EAAK7nB,KAAK3U,KAAKu+H,QAER/hG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIu/C,EAA+CgoE,EAAWvzH,EALzDi0H,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACXioH,EAAKjoH,KACJioH,EAAKjoH,KAEpB,KAAC,EAlB+C,GAkC9Cw/C,GAAoC,WACtC,WAAY+nE,EAAWvzH,EAAMu9H,EAAOC,EAAOC,EAAaC,EAAOE,GAAO,oBACpEx+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKm+H,MAAQA,EACbn+H,KAAKo+H,MAAQA,EACbp+H,KAAKq+H,YAAcA,EACnBr+H,KAAKs+H,MAAQA,EACbt+H,KAAKw+H,MAAQA,CACf,CASC,OATA,mCAUD,WACE,IAAIhiG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKm+H,OAEf3hG,EAAK7nB,KAAK3U,KAAKo+H,OAEf5hG,EAAK7nB,KAAK3U,KAAKq+H,aAEf7hG,EAAK7nB,KAAK3U,KAAKs+H,OAEf9hG,EAAK7nB,KAAK3U,KAAKw+H,OAERhiG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIw/C,EAAqC+nE,EAAWvzH,EAL/Ci0H,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACXioH,EAAKjoH,KACLioH,EAAKjoH,KAEnB,KAAC,EAlBqC,GAkCpCy/C,GAA8C,WAChD,WAAY8nE,EAAWvzH,EAAMu9H,EAAOC,EAAOC,EAAaC,EAAOE,EAAOD,EAAQE,GAAQ,oBACpFz+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKm+H,MAAQA,EACbn+H,KAAKo+H,MAAQA,EACbp+H,KAAKq+H,YAAcA,EACnBr+H,KAAKs+H,MAAQA,EACbt+H,KAAKw+H,MAAQA,EACbx+H,KAAKu+H,OAASA,EACdv+H,KAAKy+H,OAASA,CAChB,CAWC,OAXA,mCAYD,WACE,IAAIjiG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKm+H,OAEf3hG,EAAK7nB,KAAK3U,KAAKo+H,OAEf5hG,EAAK7nB,KAAK3U,KAAKq+H,aAEf7hG,EAAK7nB,KAAK3U,KAAKs+H,OAEf9hG,EAAK7nB,KAAK3U,KAAKw+H,OAEfhiG,EAAK7nB,KAAK3U,KAAKu+H,QAEf/hG,EAAK7nB,KAAK3U,KAAKy+H,QAERjiG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIy/C,EAA+C8nE,EAAWvzH,EAPzDi0H,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACXioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KAEpB,KAAC,EAtB+C,GA0C9C0/C,GAAuB,WACzB,WAAY6nE,EAAWvzH,EAAMw3H,EAAaC,EAAaE,EAAOmG,GAAW,oBACvE1+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKu4H,MAAQA,EACbv4H,KAAK0+H,UAAYA,CACnB,CAQC,OARA,mCASD,WACE,IAAIliG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKu4H,OAEf/7F,EAAK7nB,KAAK3U,KAAK0+H,WAERliG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI0/C,EAAwB6nE,EAAWvzH,EAJ5Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACXioH,EAAKjoH,KACDioH,EAAKjoH,KAEvB,KAAC,EAhBwB,GA8BvB2/C,GAAU,WACZ,WAAY4nE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2/C,EAAW4nE,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDV4/C,GAAc,WAChB,WAAY2nE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4/C,EAAe2nE,EAAWvzH,EAVtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Be,GAsDd6/C,GAAU,WACZ,WAAY0nE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6/C,EAAW0nE,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDV8/C,GAAc,WAChB,WAAYynE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI8/C,EAAeynE,EAAWvzH,EAVtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Be,GAsDd+/C,GAAS,WACX,WAAYwnE,EAAWvzH,EAAMq4H,EAAUxC,GAAQ,oBAC7Cz2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,CAChB,CAMC,OANA,mCAOD,WACE,IAAIj6F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAERj6F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI+/C,EAAUwnE,EAAWvzH,EAFjBi0H,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EAZU,GAsBTggD,GAAyB,WAC3B,WAAYunE,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAUxC,EAAQoH,GAAe,oBACtF79H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,EACdz2H,KAAK69H,cAAgBA,CACvB,CASC,OATA,mCAUD,WACE,IAAIrhG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAK69H,eAERrhG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIggD,EAA0BunE,EAAWvzH,EAL9Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACPioH,EAAKjoH,KACEioH,EAAKjoH,KAE3B,KAAC,EAlB0B,GAkCzBigD,GAAmB,WACrB,WAAYsnE,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAUxC,GAAQ,oBACvEz2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,CAChB,CAQC,OARA,mCASD,WACE,IAAIj6F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAERj6F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIigD,EAAoBsnE,EAAWvzH,EAJxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EAhBoB,GA8BnBkgD,GAAuB,WACzB,WAAYqnE,EAAWvzH,EAAM+9H,EAAYC,EAAgBC,EAAepI,EAAQqI,GAAO,oBACrF9+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2+H,WAAaA,EAClB3+H,KAAK4+H,eAAiBA,EACtB5+H,KAAK6+H,cAAgBA,EACrB7+H,KAAKy2H,OAASA,EACdz2H,KAAK8+H,MAAQA,CACf,CASC,OATA,mCAUD,WACE,IAAItiG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAK2+H,YAEfniG,EAAK7nB,KAAK3U,KAAK4+H,gBAEfpiG,EAAK7nB,KAAK3U,KAAK6+H,eAEfriG,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAK8+H,OAERtiG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIkgD,EAAwBqnE,EAAWvzH,EAL7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACZioH,EAAKjoH,KACNioH,EAAKjoH,KAEnB,KAAC,EAlBwB,GAkCvBmgD,GAAe,WACjB,WAAYonE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAImgD,EAAgBonE,EAAWvzH,EARvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBgB,GA8CfogD,GAAmB,WACrB,WAAYmnE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIogD,EAAoBmnE,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BoB,GAkDnBqgD,GAAiB,WACnB,WAAYknE,EAAWvzH,EAAMm+H,EAAQC,EAASC,EAAa3K,EAAMC,EAAauF,EAAUoF,GAAiB,oBACvGl/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK++H,OAASA,EACd/+H,KAAKg/H,QAAUA,EACfh/H,KAAKi/H,YAAcA,EACnBj/H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK85H,SAAWA,EAChB95H,KAAKk/H,gBAAkBA,CACzB,CAWC,OAXA,mCAYD,WACE,IAAI1iG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAK++H,QAEfviG,EAAK7nB,KAAK3U,KAAKg/H,SAEfxiG,EAAK7nB,KAAK3U,KAAKi/H,aAEfziG,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKk/H,iBAER1iG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIqgD,EAAkBknE,EAAWvzH,EAP3Bi0H,EAAKjoH,KACJioH,EAAKjoH,KACDioH,EAAKjoH,KACZioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACEioH,EAAKjoH,KAE7B,KAAC,EAtBkB,GA0CjBsgD,GAA0B,WAC5B,WAAYinE,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,EAAM6K,EAAkB5K,EAAa6K,GAAM,oBAChGp/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,EACZt0H,KAAKm/H,iBAAmBA,EACxBn/H,KAAKu0H,YAAcA,EACnBv0H,KAAKo/H,KAAOA,CACd,CAUC,OAVA,mCAWD,WACE,IAAI5iG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKm/H,kBAEf3iG,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo/H,MAER5iG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIsgD,EAA2BinE,EAAWvzH,EANlCi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KACOioH,EAAKjoH,KACVioH,EAAKjoH,KACZioH,EAAKjoH,KAElB,KAAC,EApB2B,GAsC1BugD,GAAc,WAChB,WAAYgnE,EAAWvzH,EAAMy+H,GAAU,oBACrCr/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq/H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI7iG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKq/H,UAER7iG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIugD,EAAegnE,EAAWvzH,EADtBi0H,EAAKjoH,KAEtB,KAAC,EAVe,GAkBdwgD,GAAO,WACT,WAAY+mE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwgD,EAAQ+mE,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPygD,GAAW,WACb,WAAY8mE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIygD,EAAY8mE,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDX0gD,GAAY,WACd,WAAY6mE,EAAWvzH,EAAM0zH,EAAMgL,EAAKC,EAAOC,GAAM,oBACnDx/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKs/H,IAAMA,EACXt/H,KAAKu/H,MAAQA,EACbv/H,KAAKw/H,KAAOA,CACd,CAQC,OARA,mCASD,WACE,IAAIhjG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKs/H,KAEf9iG,EAAK7nB,KAAK3U,KAAKu/H,OAEf/iG,EAAK7nB,KAAK3U,KAAKw/H,MAERhjG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI0gD,EAAa6mE,EAAWvzH,EAJxBi0H,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KAElB,KAAC,EAhBa,GA8BZ2gD,GAAgB,WAClB,WAAY4mE,EAAWvzH,EAAM6+H,GAAY,oBACvCz/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKy/H,WAAaA,CACpB,CAKC,OALA,mCAMD,WACE,IAAIjjG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKy/H,YAERjjG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI2gD,EAAiB4mE,EAAWvzH,EADtBi0H,EAAKjoH,KAExB,KAAC,EAViB,GAkBhB4gD,GAAsB,WACxB,WAAY2mE,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI4gD,EAAuB2mE,EAAWvzH,EADlCi0H,EAAKjoH,KAElB,KAAC,EAVuB,GAkBtB6gD,GAAS,WACX,WAAY0mE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6gD,EAAU0mE,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDT8gD,GAAqB,WACvB,WAAYymE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8gD,EAAsBymE,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BsB,GAkDrB+gD,GAAa,WACf,WAAYwmE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI+gD,EAAcwmE,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDbghD,GAA0B,WAC5B,WAAYumE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIghD,EAA2BumE,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1B2B,GAkD1BihD,GAA8B,WAChC,WAAYsmE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIihD,EAA+BsmE,EAAWvzH,EAVtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B+B,GAsD9BkhD,GAAkB,WACpB,WAAYqmE,EAAWvzH,EAAM0zH,EAAMC,EAAamL,EAAWC,GAAe,oBACxE3/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK0/H,UAAYA,EACjB1/H,KAAK2/H,cAAgBA,CACvB,CAQC,OARA,mCASD,WACE,IAAInjG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK0/H,WAEfljG,EAAK7nB,KAAK3U,KAAK2/H,eAERnjG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIkhD,EAAmBqmE,EAAWvzH,EAJ9Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACDioH,EAAKjoH,KAE3B,KAAC,EAhBmB,GA8BlBmhD,GAA0B,WAC5B,WAAYomE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAamL,EAAWE,EAAcC,GAAsB,oBACrH7/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK0/H,UAAYA,EACjB1/H,KAAK4/H,aAAeA,EACpB5/H,KAAK6/H,qBAAuBA,CAC9B,CAWC,OAXA,mCAYD,WACE,IAAIrjG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK0/H,WAEfljG,EAAK7nB,KAAK3U,KAAK4/H,cAEfpjG,EAAK7nB,KAAK3U,KAAK6/H,sBAERrjG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAImhD,EAA2BomE,EAAWvzH,EAPlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACFioH,EAAKjoH,KACGioH,EAAKjoH,KAElC,KAAC,EAtB2B,GA0C1BohD,GAAiB,WACnB,WAAYmmE,EAAWvzH,EAAMq1H,EAAUmE,GAAe,oBACpDp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi2H,SAAWA,EAChBj2H,KAAKo6H,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI59F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi2H,UAEfz5F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIohD,EAAkBmmE,EAAWvzH,EAFzBi0H,EAAKjoH,KACAioH,EAAKjoH,KAE3B,KAAC,EAZkB,GAsBjBqhD,GAA0B,WAC5B,WAAYkmE,EAAWvzH,EAAMq1H,EAAUmE,GAAe,oBACpDp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi2H,SAAWA,EAChBj2H,KAAKo6H,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI59F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi2H,UAEfz5F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIqhD,EAA2BkmE,EAAWvzH,EAFlCi0H,EAAKjoH,KACAioH,EAAKjoH,KAE3B,KAAC,EAZ2B,GAsB1BshD,GAAwB,WAC1B,WAAYimE,EAAWvzH,EAAMk/H,EAAYhK,EAAWiK,GAAa,oBAC/D//H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK8/H,WAAaA,EAClB9/H,KAAK81H,UAAYA,EACjB91H,KAAK+/H,YAAcA,CACrB,CAOC,OAPA,mCAQD,WACE,IAAIvjG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK8/H,YAEftjG,EAAK7nB,KAAK3U,KAAK81H,WAEft5F,EAAK7nB,KAAK3U,KAAK+/H,aAERvjG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIshD,EAAyBimE,EAAWvzH,EAH9Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KAEzB,KAAC,EAdyB,GA0BxBuhD,GAAsB,WACxB,WAAYgmE,EAAWvzH,EAAMw3H,EAAaC,EAAa2H,EAAUC,GAAO,oBACtEjgI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKggI,SAAWA,EAChBhgI,KAAKigI,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIzjG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKggI,UAEfxjG,EAAK7nB,KAAK3U,KAAKigI,OAERzjG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIuhD,EAAuBgmE,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KAEnB,KAAC,EAhBuB,GA8BtBwhD,GAAa,WACf,WAAY+lE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwhD,EAAc+lE,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDbyhD,GAAiB,WACnB,WAAY8lE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIyhD,EAAkB8lE,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjB0hD,GAAY,WACd,WAAY6lE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0hD,EAAa6lE,EAAWvzH,EATpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Ba,GAkDZ2hD,GAAgB,WAClB,WAAY4lE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2hD,EAAiB4lE,EAAWvzH,EAVxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BiB,GAsDhB4hD,GAAQ,WACV,WAAY2lE,EAAWvzH,EAAMq4H,GAAU,oBACrCj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIz8F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI4hD,EAAS2lE,EAAWvzH,EADhBi0H,EAAKjoH,KAEtB,KAAC,EAVS,GAkBR6hD,GAAmB,WACrB,WAAY0lE,EAAWvzH,EAAMy+H,GAAU,oBACrCr/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq/H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI7iG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKq/H,UAER7iG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI6hD,EAAoB0lE,EAAWvzH,EAD3Bi0H,EAAKjoH,KAEtB,KAAC,EAVoB,GAkBnB8hD,GAA0B,WAC5B,WAAYylE,EAAWvzH,EAAMs/H,EAAwBC,GAAuB,oBAC1EngI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKkgI,uBAAyBA,EAC9BlgI,KAAKmgI,sBAAwBA,CAC/B,CAMC,OANA,mCAOD,WACE,IAAI3jG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKkgI,wBAEf1jG,EAAK7nB,KAAK3U,KAAKmgI,uBAER3jG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI8hD,EAA2BylE,EAAWvzH,EAFpBi0H,EAAKjoH,KACNioH,EAAKjoH,KAEnC,KAAC,EAZ2B,GAsB1B+hD,GAAqB,WACvB,WAAYwlE,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIlmE,EAAsBwlE,EAAWvzH,EAC9C,KAAC,EARsB,GAcrBguD,GAA8B,WAChC,WAAYulE,EAAWvzH,EAAMw/H,EAAwBC,EAAuBC,EAAiBC,EAAiBC,GAAiB,oBAC7HxgI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKogI,uBAAyBA,EAC9BpgI,KAAKqgI,sBAAwBA,EAC7BrgI,KAAKsgI,gBAAkBA,EACvBtgI,KAAKugI,gBAAkBA,EACvBvgI,KAAKwgI,gBAAkBA,CACzB,CASC,OATA,mCAUD,WACE,IAAIhkG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKogI,wBAEf5jG,EAAK7nB,KAAK3U,KAAKqgI,uBAEf7jG,EAAK7nB,KAAK3U,KAAKsgI,iBAEf9jG,EAAK7nB,KAAK3U,KAAKugI,iBAEf/jG,EAAK7nB,KAAK3U,KAAKwgI,iBAERhkG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIgiD,EAA+BulE,EAAWvzH,EALxBi0H,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE7B,KAAC,EAlB+B,GAkC9BiiD,GAA0B,WAC5B,WAAYslE,EAAWvzH,EAAMw/H,EAAwBC,GAAuB,oBAC1ErgI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKogI,uBAAyBA,EAC9BpgI,KAAKqgI,sBAAwBA,CAC/B,CAMC,OANA,mCAOD,WACE,IAAI7jG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKogI,wBAEf5jG,EAAK7nB,KAAK3U,KAAKqgI,uBAER7jG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIiiD,EAA2BslE,EAAWvzH,EAFpBi0H,EAAKjoH,KACNioH,EAAKjoH,KAEnC,KAAC,EAZ2B,GAsB1BkiD,GAA4B,WAC9B,WAAYqlE,EAAWvzH,EAAM6/H,EAA0BC,GAAyB,oBAC9E1gI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKygI,yBAA2BA,EAChCzgI,KAAK0gI,wBAA0BA,CACjC,CAMC,OANA,mCAOD,WACE,IAAIlkG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKygI,0BAEfjkG,EAAK7nB,KAAK3U,KAAK0gI,yBAERlkG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIkiD,EAA6BqlE,EAAWvzH,EAFpBi0H,EAAKjoH,KACNioH,EAAKjoH,KAErC,KAAC,EAZ6B,GAsB5BmiD,GAA2B,WAC7B,WAAYolE,EAAWvzH,EAAM+/H,EAAyBC,GAAwB,oBAC5E5gI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2gI,wBAA0BA,EAC/B3gI,KAAK4gI,uBAAyBA,CAChC,CAMC,OANA,mCAOD,WACE,IAAIpkG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK2gI,yBAEfnkG,EAAK7nB,KAAK3U,KAAK4gI,wBAERpkG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAImiD,EAA4BolE,EAAWvzH,EAFpBi0H,EAAKjoH,KACNioH,EAAKjoH,KAEpC,KAAC,EAZ4B,GAsB3BoiD,GAAa,WACf,WAAYmlE,EAAWvzH,EAAM0zH,EAAMC,EAAasM,EAAiBC,EAAkBC,EAAeC,EAAcC,GAAkB,oBAChIjhI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK6gI,gBAAkBA,EACvB7gI,KAAK8gI,iBAAmBA,EACxB9gI,KAAK+gI,cAAgBA,EACrB/gI,KAAKghI,aAAeA,EACpBhhI,KAAKihI,iBAAmBA,CAC1B,CAWC,OAXA,mCAYD,WACE,IAAIzkG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK6gI,iBAEfrkG,EAAK7nB,KAAK3U,KAAK8gI,kBAEftkG,EAAK7nB,KAAK3U,KAAK+gI,eAEfvkG,EAAK7nB,KAAK3U,KAAKghI,cAEfxkG,EAAK7nB,KAAK3U,KAAKihI,kBAERzkG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIoiD,EAAcmlE,EAAWvzH,EAPzBi0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KAE9B,KAAC,EAtBc,GA0CbqiD,GAAgC,WAClC,WAAYklE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,EAAc1M,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIqiD,EAAiCklE,EAAWvzH,EAXxCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EA9BiC,GA0DhCsiD,GAAoC,WACtC,WAAYilE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,EAAc1M,GAAgB,oBACrM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIsiD,EAAqCilE,EAAWvzH,EAZ5Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAhCqC,GA8DpCuiD,GAA+B,WACjC,WAAYglE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,EAAc1M,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIuiD,EAAgCglE,EAAWvzH,EAXvCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EA9BgC,GA0D/BwiD,GAAmC,WACrC,WAAY+kE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,EAAc1M,GAAgB,oBACrM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIwiD,EAAoC+kE,EAAWvzH,EAZ3Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAhCoC,GA8DnCyiD,GAA8B,WAChC,WAAY8kE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,EAAc1M,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIyiD,EAA+B8kE,EAAWvzH,EAXtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EA9B+B,GA0D9B0iD,GAAkC,WACpC,WAAY6kE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,EAAc1M,GAAgB,oBACrM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI0iD,EAAmC6kE,EAAWvzH,EAZ1Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAhCmC,GA8DlC2iD,GAAuB,WACzB,WAAY4kE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,GAAc,oBACnJphI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,CACtB,CAcC,OAdA,mCAeD,WACE,IAAI5kG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAER5kG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2iD,EAAwB4kE,EAAWvzH,EAV/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KAE1B,KAAC,EA5BwB,GAsDvB4iD,GAA2B,WAC7B,WAAY2kE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,GAAc,oBACrLphI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,CACtB,CAeC,OAfA,mCAgBD,WACE,IAAI5kG,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAER5kG,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI4iD,EAA4B2kE,EAAWvzH,EAXnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KAE1B,KAAC,EA9B4B,GA0D3B6iD,GAAU,WACZ,WAAY0kE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAY6I,EAAUiE,EAAOC,EAAwBC,GAAgB,oBAC3IxhI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKq9H,SAAWA,EAChBr9H,KAAKshI,MAAQA,EACbthI,KAAKuhI,uBAAyBA,EAC9BvhI,KAAKwhI,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIhlG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKshI,OAEf9kG,EAAK7nB,KAAK3U,KAAKuhI,wBAEf/kG,EAAK7nB,KAAK3U,KAAKwhI,gBAERhlG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6iD,EAAW0kE,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACRioH,EAAKjoH,KACYioH,EAAKjoH,KACbioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDV8iD,GAAuB,WACzB,WAAYykE,EAAWvzH,EAAM6gI,EAAYC,EAAUpN,GAAM,oBACvDt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyhI,WAAaA,EAClBzhI,KAAK0hI,SAAWA,EAChB1hI,KAAKs0H,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI93F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKyhI,YAEfjlG,EAAK7nB,KAAK3U,KAAK0hI,UAEfllG,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI8iD,EAAwBykE,EAAWvzH,EAH7Bi0H,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KAElB,KAAC,EAdwB,GA0BvB+iD,GAAU,WACZ,WAAYwkE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,GAAgB,oBAClGz0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAIj4F,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAERj4F,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI+iD,EAAWwkE,EAAWvzH,EANlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EApBW,GAsCVgjD,GAAa,WACf,WAAYukE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgjD,EAAcukE,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDbijD,GAAiB,WACnB,WAAYskE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIijD,EAAkBskE,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjBkjD,GAAsB,WACxB,WAAYqkE,EAAWvzH,EAAM6gI,EAAYC,EAAUpN,EAAMqN,GAAkB,oBACzE3hI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyhI,WAAaA,EAClBzhI,KAAK0hI,SAAWA,EAChB1hI,KAAKs0H,KAAOA,EACZt0H,KAAK2hI,iBAAmBA,CAC1B,CAQC,OARA,mCASD,WACE,IAAInlG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKyhI,YAEfjlG,EAAK7nB,KAAK3U,KAAK0hI,UAEfllG,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2hI,kBAERnlG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIkjD,EAAuBqkE,EAAWvzH,EAJ5Bi0H,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACOioH,EAAKjoH,KAE9B,KAAC,EAhBuB,GA8BtBmjD,GAAgC,WAClC,WAAYokE,EAAWvzH,EAAM6gI,EAAYC,EAAUpN,EAAMqN,EAAkBC,GAAkB,oBAC3F5hI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyhI,WAAaA,EAClBzhI,KAAK0hI,SAAWA,EAChB1hI,KAAKs0H,KAAOA,EACZt0H,KAAK2hI,iBAAmBA,EACxB3hI,KAAK4hI,iBAAmBA,CAC1B,CASC,OATA,mCAUD,WACE,IAAIplG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKyhI,YAEfjlG,EAAK7nB,KAAK3U,KAAK0hI,UAEfllG,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2hI,kBAEfnlG,EAAK7nB,KAAK3U,KAAK4hI,kBAERplG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAImjD,EAAiCokE,EAAWvzH,EALtCi0H,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACOioH,EAAKjoH,KACLioH,EAAKjoH,KAE9B,KAAC,EAlBiC,GAkChCojD,GAAa,WACf,WAAYmkE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIojD,EAAcmkE,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDbqjD,GAAiB,WACnB,WAAYkkE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqjD,EAAkBkkE,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjBsjD,GAAe,WACjB,WAAYikE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIsjD,EAAgBikE,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BgB,GAkDfujD,GAAmB,WACrB,WAAYgkE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIujD,EAAoBgkE,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoB,GAsDnBwjD,GAAsB,WACxB,WAAY+jE,EAAWvzH,EAAMihI,EAAWC,GAAW,oBACjD9hI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6hI,UAAYA,EACjB7hI,KAAK8hI,UAAYA,CACnB,CAMC,OANA,mCAOD,WACE,IAAItlG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK6hI,WAEfrlG,EAAK7nB,KAAK3U,KAAK8hI,WAERtlG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIwjD,EAAuB+jE,EAAWvzH,EAF7Bi0H,EAAKjoH,KACLioH,EAAKjoH,KAEvB,KAAC,EAZuB,GAsBtByjD,GAA4B,WAC9B,WAAY8jE,EAAWvzH,EAAM0zH,EAAMC,EAAawN,EAAeC,GAAe,oBAC5EhiI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK+hI,cAAgBA,EACrB/hI,KAAKgiI,cAAgBA,CACvB,CAQC,OARA,mCASD,WACE,IAAIxlG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK+hI,eAEfvlG,EAAK7nB,KAAK3U,KAAKgiI,eAERxlG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIyjD,EAA6B8jE,EAAWvzH,EAJxCi0H,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KAE3B,KAAC,EAhB6B,GA8B5B0jD,GAAW,WACb,WAAY6jE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBuN,EAAYC,GAAgB,oBAC9IliI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK00H,eAAiBA,EACtB10H,KAAKiiI,WAAaA,EAClBjiI,KAAKkiI,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAI1lG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKiiI,YAEfzlG,EAAK7nB,KAAK3U,KAAKkiI,gBAER1lG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0jD,EAAY6jE,EAAWvzH,EATnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACTioH,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EA1BY,GAkDX2jD,GAAe,WACjB,WAAY4jE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQwN,EAAaC,GAAY,oBACnJpiI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK00H,eAAiBA,EACtB10H,KAAK20H,OAASA,EACd30H,KAAKmiI,YAAcA,EACnBniI,KAAKoiI,WAAaA,CACpB,CAcC,OAdA,mCAeD,WACE,IAAI5lG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK20H,QAEfn4F,EAAK7nB,KAAK3U,KAAKmiI,aAEf3lG,EAAK7nB,KAAK3U,KAAKoiI,YAER5lG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2jD,EAAgB4jE,EAAWvzH,EAVvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACbioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAExB,KAAC,EA5BgB,GAsDf4jD,GAAY,WACd,WAAY2jE,EAAWvzH,EAAM0zH,EAAMC,EAAa6C,EAAcC,EAAWC,EAAgBC,EAAgBC,EAAUC,EAAWC,EAAoBC,GAAY,oBAC5J33H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo3H,aAAeA,EACpBp3H,KAAKq3H,UAAYA,EACjBr3H,KAAKs3H,eAAiBA,EACtBt3H,KAAKu3H,eAAiBA,EACtBv3H,KAAKw3H,SAAWA,EAChBx3H,KAAKy3H,UAAYA,EACjBz3H,KAAK03H,mBAAqBA,EAC1B13H,KAAK23H,WAAaA,CACpB,CAcC,OAdA,mCAeD,WACE,IAAIn7F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo3H,cAEf56F,EAAK7nB,KAAK3U,KAAKq3H,WAEf76F,EAAK7nB,KAAK3U,KAAKs3H,gBAEf96F,EAAK7nB,KAAK3U,KAAKu3H,gBAEf/6F,EAAK7nB,KAAK3U,KAAKw3H,UAEfh7F,EAAK7nB,KAAK3U,KAAKy3H,WAEfj7F,EAAK7nB,KAAK3U,KAAK03H,oBAEfl7F,EAAK7nB,KAAK3U,KAAK23H,YAERn7F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4jD,EAAa2jE,EAAWvzH,EAVxBi0H,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KACXioH,EAAKjoH,KACJioH,EAAKjoH,KACIioH,EAAKjoH,KACbioH,EAAKjoH,KAExB,KAAC,EA5Ba,GAsDZ6jD,GAAW,WACb,WAAY0jE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6jD,EAAY0jE,EAAWvzH,EATnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BY,GAkDX8jD,GAAe,WACjB,WAAYyjE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI8jD,EAAgByjE,EAAWvzH,EAVvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BgB,GAsDf+jD,GAAe,WACjB,WAAYwjE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,EAAc1M,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI+jD,EAAgBwjE,EAAWvzH,EAXvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EA9BgB,GA0DfgkD,GAAmB,WACrB,WAAYujE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,EAAc1M,GAAgB,oBACrM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIgkD,EAAoBujE,EAAWvzH,EAZ3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAhCoB,GA8DnBikD,GAAiB,WACnB,WAAYsjE,EAAWvzH,EAAMq4H,GAAU,oBACrCj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIz8F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIikD,EAAkBsjE,EAAWvzH,EADzBi0H,EAAKjoH,KAEtB,KAAC,EAVkB,GAkBjBkkD,GAAW,WACb,WAAYqjE,EAAWvzH,EAAMyhI,GAAoB,oBAC/CriI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKqiI,mBAAqBA,CAC5B,CAKC,OALA,mCAMD,WACE,IAAI7lG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKqiI,oBAER7lG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIkkD,EAAYqjE,EAAWvzH,EADTi0H,EAAKjoH,KAEhC,KAAC,EAVY,GAkBXmkD,GAAuB,WACzB,WAAYojE,EAAWvzH,EAAM0zH,EAAMC,EAAa+N,EAAsBC,EAAqBC,EAAcC,EAAcC,GAAY,oBACjI1iI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKsiI,qBAAuBA,EAC5BtiI,KAAKuiI,oBAAsBA,EAC3BviI,KAAKwiI,aAAeA,EACpBxiI,KAAKyiI,aAAeA,EACpBziI,KAAK0iI,WAAaA,CACpB,CAWC,OAXA,mCAYD,WACE,IAAIlmG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKsiI,sBAEf9lG,EAAK7nB,KAAK3U,KAAKuiI,qBAEf/lG,EAAK7nB,KAAK3U,KAAKwiI,cAEfhmG,EAAK7nB,KAAK3U,KAAKyiI,cAEfjmG,EAAK7nB,KAAK3U,KAAK0iI,YAERlmG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAImkD,EAAwBojE,EAAWvzH,EAPnCi0H,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACNioH,EAAKjoH,KACZioH,EAAKjoH,KACLioH,EAAKjoH,KACPioH,EAAKjoH,KAExB,KAAC,EAtBwB,GA0CvBokD,GAAc,WAChB,WAAYmjE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIokD,EAAemjE,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdqkD,GAAkB,WACpB,WAAYkjE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqkD,EAAmBkjE,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBskD,GAAQ,WACV,WAAYijE,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI3jE,EAASijE,EAAWvzH,EACjC,KAAC,EARS,GAcRuwD,GAAoB,WACtB,WAAYgjE,EAAWvzH,EAAM+hI,EAAc7L,EAAeC,GAAiB,oBACzE/2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2iI,aAAeA,EACpB3iI,KAAK82H,cAAgBA,EACrB92H,KAAK+2H,gBAAkBA,CACzB,CAOC,OAPA,mCAQD,WACE,IAAIv6F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK2iI,cAEfnmG,EAAK7nB,KAAK3U,KAAK82H,eAEft6F,EAAK7nB,KAAK3U,KAAK+2H,iBAERv6F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIukD,EAAqBgjE,EAAWvzH,EAHxBi0H,EAAKjoH,KACJioH,EAAKjoH,KACHioH,EAAKjoH,KAE7B,KAAC,EAdqB,GA0BpBwkD,GAAsB,WACxB,WAAY+iE,EAAWvzH,EAAM+hI,EAAcC,EAAYC,GAAe,oBACpE7iI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2iI,aAAeA,EACpB3iI,KAAK4iI,WAAaA,EAClB5iI,KAAK6iI,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAIrmG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK2iI,cAEfnmG,EAAK7nB,KAAK3U,KAAK4iI,YAEfpmG,EAAK7nB,KAAK3U,KAAK6iI,eAERrmG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIwkD,EAAuB+iE,EAAWvzH,EAH1Bi0H,EAAKjoH,KACPioH,EAAKjoH,KACFioH,EAAKjoH,KAE3B,KAAC,EAduB,GA0BtBykD,GAAiB,WACnB,WAAY8iE,EAAWvzH,EAAM+9H,EAAYC,EAAgBC,GAAe,oBACtE7+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2+H,WAAaA,EAClB3+H,KAAK4+H,eAAiBA,EACtB5+H,KAAK6+H,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAIriG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK2+H,YAEfniG,EAAK7nB,KAAK3U,KAAK4+H,gBAEfpiG,EAAK7nB,KAAK3U,KAAK6+H,eAERriG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIykD,EAAkB8iE,EAAWvzH,EAHvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KAE3B,KAAC,EAdkB,GA0BjB0kD,GAAa,WACf,WAAY6iE,EAAWvzH,EAAM0zH,EAAMwO,EAAWC,EAAYC,EAAaC,GAAmB,oBACxFjjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK8iI,UAAYA,EACjB9iI,KAAK+iI,WAAaA,EAClB/iI,KAAKgjI,YAAcA,EACnBhjI,KAAKijI,kBAAoBA,CAC3B,CASC,OATA,mCAUD,WACE,IAAIzmG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK8iI,WAEftmG,EAAK7nB,KAAK3U,KAAK+iI,YAEfvmG,EAAK7nB,KAAK3U,KAAKgjI,aAEfxmG,EAAK7nB,KAAK3U,KAAKijI,mBAERzmG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI0kD,EAAc6iE,EAAWvzH,EALzBi0H,EAAKjoH,KACAioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACCioH,EAAKjoH,KAE/B,KAAC,EAlBc,GAkCb2kD,GAAiB,WACnB,WAAY4iE,EAAWvzH,EAAM0zH,EAAM4O,GAAa,oBAC9CljI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKkjI,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI1mG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKkjI,aAER1mG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI2kD,EAAkB4iE,EAAWvzH,EAF7Bi0H,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAZkB,GAsBjB4kD,GAA2B,WAC7B,WAAY2iE,EAAWvzH,EAAM0zH,EAAMwO,EAAWK,GAAkB,oBAC9DnjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK8iI,UAAYA,EACjB9iI,KAAKmjI,iBAAmBA,CAC1B,CAOC,OAPA,mCAQD,WACE,IAAI3mG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK8iI,WAEftmG,EAAK7nB,KAAK3U,KAAKmjI,kBAER3mG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI4kD,EAA4B2iE,EAAWvzH,EAHvCi0H,EAAKjoH,KACAioH,EAAKjoH,KACEioH,EAAKjoH,KAE9B,KAAC,EAd4B,GA0B3B6kD,GAAwB,WAC1B,WAAY0iE,EAAWvzH,EAAMwiI,EAAsBC,GAAwB,oBACzErjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKojI,qBAAuBA,EAC5BpjI,KAAKqjI,uBAAyBA,CAChC,CAMC,OANA,mCAOD,WACE,IAAI7mG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKojI,sBAEf5mG,EAAK7nB,KAAK3U,KAAKqjI,wBAER7mG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI6kD,EAAyB0iE,EAAWvzH,EAFpBi0H,EAAKjoH,KACHioH,EAAKjoH,KAEpC,KAAC,EAZyB,GAsBxB8kD,GAAqB,WACvB,WAAYyiE,EAAWvzH,EAAMq4H,EAAUxC,GAAQ,oBAC7Cz2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,CAChB,CAMC,OANA,mCAOD,WACE,IAAIj6F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAERj6F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI8kD,EAAsByiE,EAAWvzH,EAF7Bi0H,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EAZsB,GAsBrB+kD,GAAS,WACX,WAAYwiE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+kD,EAAUwiE,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDTglD,GAAa,WACf,WAAYuiE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIglD,EAAcuiE,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDbilD,GAAiB,WACnB,WAAYsiE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIilD,EAAkBsiE,EAAWvzH,EARzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBkB,GA8CjBklD,GAAqB,WACvB,WAAYqiE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIklD,EAAsBqiE,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BsB,GAkDrBmlD,GAAoB,WACtB,WAAYoiE,EAAWvzH,EAAMw3H,EAAaC,EAAaiL,EAAe3H,EAAUsE,GAAO,oBACrFjgI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKsjI,cAAgBA,EACrBtjI,KAAK27H,SAAWA,EAChB37H,KAAKigI,MAAQA,CACf,CASC,OATA,mCAUD,WACE,IAAIzjG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKsjI,eAEf9mG,EAAK7nB,KAAK3U,KAAK27H,UAEfn/F,EAAK7nB,KAAK3U,KAAKigI,OAERzjG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAImlD,EAAqBoiE,EAAWvzH,EALzBi0H,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACRioH,EAAKjoH,KAEnB,KAAC,EAlBqB,GAkCpBolD,GAAc,WAChB,WAAYmiE,EAAWvzH,EAAM2iI,EAAU7B,EAAU8B,GAAiB,oBAChExjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKujI,SAAWA,EAChBvjI,KAAK0hI,SAAWA,EAChB1hI,KAAKwjI,gBAAkBA,CACzB,CAOC,OAPA,mCAQD,WACE,IAAIhnG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKujI,UAEf/mG,EAAK7nB,KAAK3U,KAAK0hI,UAEfllG,EAAK7nB,KAAK3U,KAAKwjI,iBAERhnG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIolD,EAAemiE,EAAWvzH,EAHtBi0H,EAAKjoH,KACLioH,EAAKjoH,KACEioH,EAAKjoH,KAE7B,KAAC,EAde,GA0BdqlD,GAAqB,WACvB,WAAYkiE,EAAWvzH,EAAM6iI,EAAMC,GAAU,oBAC3C1jI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyjI,KAAOA,EACZzjI,KAAK0jI,SAAWA,CAClB,CAMC,OANA,mCAOD,WACE,IAAIlnG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAK0jI,UAERlnG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIqlD,EAAsBkiE,EAAWvzH,EAFjCi0H,EAAKjoH,KACDioH,EAAKjoH,KAEtB,KAAC,EAZsB,GAsBrBslD,GAAuB,WACzB,WAAYiiE,EAAWvzH,EAAM+iI,EAAgBC,EAAcC,EAAcC,EAAyBC,EAAkCC,EAA2BC,GAA2B,oBACxLjkI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2jI,eAAiBA,EACtB3jI,KAAK4jI,aAAeA,EACpB5jI,KAAK6jI,aAAeA,EACpB7jI,KAAK8jI,wBAA0BA,EAC/B9jI,KAAK+jI,iCAAmCA,EACxC/jI,KAAKgkI,0BAA4BA,EACjChkI,KAAKikI,0BAA4BA,CACnC,CAWC,OAXA,mCAYD,WACE,IAAIznG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAK2jI,gBAEfnnG,EAAK7nB,KAAK3U,KAAK4jI,cAEfpnG,EAAK7nB,KAAK3U,KAAK6jI,cAEfrnG,EAAK7nB,KAAK3U,KAAK8jI,yBAEftnG,EAAK7nB,KAAK3U,KAAK+jI,kCAEfvnG,EAAK7nB,KAAK3U,KAAKgkI,2BAEfxnG,EAAK7nB,KAAK3U,KAAKikI,2BAERznG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIslD,EAAwBiiE,EAAWvzH,EAPzBi0H,EAAKjoH,KACPioH,EAAKjoH,KACLioH,EAAKjoH,KACMioH,EAAKjoH,KACIioH,EAAKjoH,KACZioH,EAAKjoH,KACLioH,EAAKjoH,KAEvC,KAAC,EAtBwB,GA0CvBulD,GAAY,WACd,WAAYgiE,EAAWvzH,EAAMsjI,GAAiB,oBAC5ClkI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKkkI,gBAAkBA,CACzB,CAKC,OALA,mCAMD,WACE,IAAI1nG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKkkI,iBAER1nG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIulD,EAAagiE,EAAWvzH,EADbi0H,EAAKjoH,KAE7B,KAAC,EAVa,GAkBZwlD,GAAoB,WACtB,WAAY+hE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwlD,EAAqB+hE,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBylD,GAAwB,WAC1B,WAAY8hE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIylD,EAAyB8hE,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxB0lD,GAAqB,WACvB,WAAY6hE,EAAWvzH,EAAMujI,EAAeC,EAAeC,EAAgBC,EAAoBC,GAAiB,oBAC9GvkI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKmkI,cAAgBA,EACrBnkI,KAAKokI,cAAgBA,EACrBpkI,KAAKqkI,eAAiBA,EACtBrkI,KAAKskI,mBAAqBA,EAC1BtkI,KAAKukI,gBAAkBA,CACzB,CASC,OATA,mCAUD,WACE,IAAI/nG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKmkI,eAEf3nG,EAAK7nB,KAAK3U,KAAKokI,eAEf5nG,EAAK7nB,KAAK3U,KAAKqkI,gBAEf7nG,EAAK7nB,KAAK3U,KAAKskI,oBAEf9nG,EAAK7nB,KAAK3U,KAAKukI,iBAER/nG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI0lD,EAAsB6hE,EAAWvzH,EALxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KAE7B,KAAC,EAlBsB,GAkCrB2lD,GAA6B,WAC/B,WAAY4hE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2lD,EAA8B4hE,EAAWvzH,EATrCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1B8B,GAkD7B4lD,GAAiC,WACnC,WAAY2hE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4lD,EAAkC2hE,EAAWvzH,EAVzCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkC,GAsDjC6lD,GAAsB,WACxB,WAAY0hE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAY6I,EAAU3I,GAAgB,oBAC5G10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKq9H,SAAWA,EAChBr9H,KAAK00H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAIl4F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI6lD,EAAuB0hE,EAAWvzH,EAP9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EAtBuB,GA0CtB8lD,GAA6B,WAC/B,WAAYyhE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI8lD,EAA8ByhE,EAAWvzH,EARrCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxB8B,GA8C7B+lD,GAAiC,WACnC,WAAYwhE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+lD,EAAkCwhE,EAAWvzH,EATzCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BkC,GAkDjCgmD,GAAsB,WACxB,WAAYuhE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIgmD,EAAuBuhE,EAAWvzH,EAR9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBuB,GA8CtBimD,GAA0B,WAC5B,WAAYshE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIimD,EAA2BshE,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1B2B,GAkD1BkmD,GAA0B,WAC5B,WAAYqhE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIkmD,EAA2BqhE,EAAWvzH,EARlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxB2B,GA8C1BmmD,GAA8B,WAChC,WAAYohE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImmD,EAA+BohE,EAAWvzH,EATtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1B+B,GAkD9BomD,GAAmB,WACrB,WAAYmhE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBsP,EAAe9P,EAAgB+P,GAAY,oBAC9JzkI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKwkI,cAAgBA,EACrBxkI,KAAK00H,eAAiBA,EACtB10H,KAAKykI,WAAaA,CACpB,CAcC,OAdA,mCAeD,WACE,IAAIjoG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKwkI,eAEfhoG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKykI,YAERjoG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIomD,EAAoBmhE,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KAExB,KAAC,EA5BoB,GAsDnBqmD,GAAqB,WACvB,WAAYkhE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAY6I,EAAU3I,GAAgB,oBAC5G10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKq9H,SAAWA,EAChBr9H,KAAK00H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAIl4F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIqmD,EAAsBkhE,EAAWvzH,EAP7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EAtBsB,GA0CrBsmD,GAAsB,WACxB,WAAYihE,EAAWvzH,EAAM6zH,EAAgBH,EAAMC,EAAauF,EAAUtE,EAASkP,EAAaC,EAAOC,EAAUC,EAAeC,EAAS9D,EAAc+D,EAAkBC,EAAkBC,EAAWC,EAAYC,EAAiBxQ,GAAQ,oBACzO30H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK85H,SAAWA,EAChB95H,KAAKw1H,QAAUA,EACfx1H,KAAK0kI,YAAcA,EACnB1kI,KAAK2kI,MAAQA,EACb3kI,KAAK4kI,SAAWA,EAChB5kI,KAAK6kI,cAAgBA,EACrB7kI,KAAK8kI,QAAUA,EACf9kI,KAAKghI,aAAeA,EACpBhhI,KAAK+kI,iBAAmBA,EACxB/kI,KAAKglI,iBAAmBA,EACxBhlI,KAAKilI,UAAYA,EACjBjlI,KAAKklI,WAAaA,EAClBllI,KAAKmlI,gBAAkBA,EACvBnlI,KAAK20H,OAASA,CAChB,CAqBC,OArBA,mCAsBD,WACE,IAAIn4F,EAAO,GAmCX,OAlCAA,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAK0kI,aAEfloG,EAAK7nB,KAAK3U,KAAK2kI,OAEfnoG,EAAK7nB,KAAK3U,KAAK4kI,UAEfpoG,EAAK7nB,KAAK3U,KAAK6kI,eAEfroG,EAAK7nB,KAAK3U,KAAK8kI,SAEftoG,EAAK7nB,KAAK3U,KAAKghI,cAEfxkG,EAAK7nB,KAAK3U,KAAK+kI,kBAEfvoG,EAAK7nB,KAAK3U,KAAKglI,kBAEfxoG,EAAK7nB,KAAK3U,KAAKilI,WAEfzoG,EAAK7nB,KAAK3U,KAAKklI,YAEf1oG,EAAK7nB,KAAK3U,KAAKmlI,iBAEf3oG,EAAK7nB,KAAK3U,KAAK20H,QAERn4F,CACT,IAAC,uBA1DD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAkBV,OAAO,IAAIsmD,EAAuBihE,EAAWvzH,EAjBxBi0H,EAAKjoH,KACfioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACXioH,EAAKjoH,KACFioH,EAAKjoH,KACAioH,EAAKjoH,KACXioH,EAAKjoH,KACAioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACZioH,EAAKjoH,KACJioH,EAAKjoH,KACAioH,EAAKjoH,KACdioH,EAAKjoH,KAEpB,KAAC,EA1CuB,GAkFtBumD,GAAkC,WACpC,WAAYghE,EAAWvzH,EAAM0zH,EAAMC,EAAa6Q,EAAkBC,EAAkBC,GAAkB,oBACpGtlI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKolI,iBAAmBA,EACxBplI,KAAKqlI,iBAAmBA,EACxBrlI,KAAKslI,iBAAmBA,CAC1B,CASC,OATA,mCAUD,WACE,IAAI9oG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKolI,kBAEf5oG,EAAK7nB,KAAK3U,KAAKqlI,kBAEf7oG,EAAK7nB,KAAK3U,KAAKslI,kBAER9oG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIumD,EAAmCghE,EAAWvzH,EAL9Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE9B,KAAC,EAlBmC,GAkClCwmD,GAAoB,WACtB,WAAY+gE,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,EAAMC,EAAagR,GAAoB,oBAC5FvlI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKulI,mBAAqBA,CAC5B,CASC,OATA,mCAUD,WACE,IAAI/oG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKulI,oBAER/oG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIwmD,EAAqB+gE,EAAWvzH,EAL5Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KACEioH,EAAKjoH,KACEioH,EAAKjoH,KAEhC,KAAC,EAlBqB,GAkCpBymD,GAAO,WACT,WAAY8gE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAc/Q,EAAgBgR,EAAeC,GAA0B,oBAC9M3lI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAKwlI,cAAgBA,EACrBxlI,KAAKylI,aAAeA,EACpBzlI,KAAK00H,eAAiBA,EACtB10H,KAAK0lI,cAAgBA,EACrB1lI,KAAK2lI,yBAA2BA,CAClC,CAiBC,OAjBA,mCAkBD,WACE,IAAInpG,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKwlI,eAEfhpG,EAAK7nB,KAAK3U,KAAKylI,cAEfjpG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK2lI,0BAERnpG,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAIymD,EAAQ8gE,EAAWvzH,EAbfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACKioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACMioH,EAAKjoH,KAEtC,KAAC,EAlCQ,GAkEP0mD,GAAuB,WACzB,WAAY6gE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaqR,EAAaC,EAAiBC,EAAgBC,EAAoBC,EAAkBC,EAAeC,EAAcC,EAAiBC,EAAiBC,EAAaC,EAAkBC,EAAsBC,GAAsB,oBACpSxmI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK4lI,YAAcA,EACnB5lI,KAAK6lI,gBAAkBA,EACvB7lI,KAAK8lI,eAAiBA,EACtB9lI,KAAK+lI,mBAAqBA,EAC1B/lI,KAAKgmI,iBAAmBA,EACxBhmI,KAAKimI,cAAgBA,EACrBjmI,KAAKkmI,aAAeA,EACpBlmI,KAAKmmI,gBAAkBA,EACvBnmI,KAAKomI,gBAAkBA,EACvBpmI,KAAKqmI,YAAcA,EACnBrmI,KAAKsmI,iBAAmBA,EACxBtmI,KAAKumI,qBAAuBA,EAC5BvmI,KAAKwmI,qBAAuBA,CAC9B,CAqBC,OArBA,mCAsBD,WACE,IAAIhqG,EAAO,GAmCX,OAlCAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK4lI,aAEfppG,EAAK7nB,KAAK3U,KAAK6lI,iBAEfrpG,EAAK7nB,KAAK3U,KAAK8lI,gBAEftpG,EAAK7nB,KAAK3U,KAAK+lI,oBAEfvpG,EAAK7nB,KAAK3U,KAAKgmI,kBAEfxpG,EAAK7nB,KAAK3U,KAAKimI,eAEfzpG,EAAK7nB,KAAK3U,KAAKkmI,cAEf1pG,EAAK7nB,KAAK3U,KAAKmmI,iBAEf3pG,EAAK7nB,KAAK3U,KAAKomI,iBAEf5pG,EAAK7nB,KAAK3U,KAAKqmI,aAEf7pG,EAAK7nB,KAAK3U,KAAKsmI,kBAEf9pG,EAAK7nB,KAAK3U,KAAKumI,sBAEf/pG,EAAK7nB,KAAK3U,KAAKwmI,sBAERhqG,CACT,IAAC,uBA1DD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAkBV,OAAO,IAAI0mD,EAAwB6gE,EAAWvzH,EAjB/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KACTioH,EAAKjoH,KACAioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KAElC,KAAC,EA1CwB,GAkFvB2mD,GAAsB,WACxB,WAAY4gE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAakS,EAAYC,EAAgBC,EAAYC,EAAeN,GAAkB,oBAC/ItmI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKymI,WAAaA,EAClBzmI,KAAK0mI,eAAiBA,EACtB1mI,KAAK2mI,WAAaA,EAClB3mI,KAAK4mI,cAAgBA,EACrB5mI,KAAKsmI,iBAAmBA,CAC1B,CAaC,OAbA,mCAcD,WACE,IAAI9pG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKymI,YAEfjqG,EAAK7nB,KAAK3U,KAAK0mI,gBAEflqG,EAAK7nB,KAAK3U,KAAK2mI,YAEfnqG,EAAK7nB,KAAK3U,KAAK4mI,eAEfpqG,EAAK7nB,KAAK3U,KAAKsmI,kBAER9pG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2mD,EAAuB4gE,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACTioH,EAAKjoH,KACFioH,EAAKjoH,KACFioH,EAAKjoH,KAE9B,KAAC,EA1BuB,GAkDtB4mD,GAAmB,WACrB,WAAY2gE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAc/Q,EAAgBgR,EAAeC,GAA0B,oBAC9M3lI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAKwlI,cAAgBA,EACrBxlI,KAAKylI,aAAeA,EACpBzlI,KAAK00H,eAAiBA,EACtB10H,KAAK0lI,cAAgBA,EACrB1lI,KAAK2lI,yBAA2BA,CAClC,CAiBC,OAjBA,mCAkBD,WACE,IAAInpG,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKwlI,eAEfhpG,EAAK7nB,KAAK3U,KAAKylI,cAEfjpG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK2lI,0BAERnpG,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAI4mD,EAAoB2gE,EAAWvzH,EAb3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACKioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACMioH,EAAKjoH,KAEtC,KAAC,EAlCoB,GAkEnB6mD,GAAY,WACd,WAAY0gE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKuQ,EAAemB,EAAkBC,EAA0BC,GAAU,oBAC3M/mI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAK0lI,cAAgBA,EACrB1lI,KAAK6mI,iBAAmBA,EACxB7mI,KAAK8mI,yBAA2BA,EAChC9mI,KAAK+mI,SAAWA,CAClB,CAgBC,OAhBA,mCAiBD,WACE,IAAIvqG,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK6mI,kBAEfrqG,EAAK7nB,KAAK3U,KAAK8mI,0BAEftqG,EAAK7nB,KAAK3U,KAAK+mI,UAERvqG,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI6mD,EAAa0gE,EAAWvzH,EAZpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACKioH,EAAKjoH,KACFioH,EAAKjoH,KACGioH,EAAKjoH,KACrBioH,EAAKjoH,KAEtB,KAAC,EAhCa,GA8DZ8mD,GAAW,WACb,WAAYygE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgBgR,EAAeoB,EAA0BnB,GAA0B,oBACtO3lI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAK0lI,cAAgBA,EACrB1lI,KAAK8mI,yBAA2BA,EAChC9mI,KAAK2lI,yBAA2BA,CAClC,CAiBC,OAjBA,mCAkBD,WACE,IAAInpG,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK8mI,0BAEftqG,EAAK7nB,KAAK3U,KAAK2lI,0BAERnpG,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAI8mD,EAAYygE,EAAWvzH,EAbnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACNioH,EAAKjoH,KACMioH,EAAKjoH,KACLioH,EAAKjoH,KAEtC,KAAC,EAlCY,GAkEX+mD,GAA6B,WAC/B,WAAYwgE,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI+mD,EAA8BwgE,EAAWvzH,EADzCi0H,EAAKjoH,KAElB,KAAC,EAV8B,GAkB7BgnD,GAAgC,WAClC,WAAYugE,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIgnD,EAAiCugE,EAAWvzH,EAD5Ci0H,EAAKjoH,KAElB,KAAC,EAViC,GAkBhCinD,GAAc,WAChB,WAAYsgE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIinD,EAAesgE,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdknD,GAAkB,WACpB,WAAYqgE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIknD,EAAmBqgE,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBmnD,GAAc,WAChB,WAAYogE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImnD,EAAeogE,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdonD,GAAkB,WACpB,WAAYmgE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIonD,EAAmBmgE,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBqnD,GAAe,WACjB,WAAYkgE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqnD,EAAgBkgE,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BgB,GAkDfsnD,GAAmB,WACrB,WAAYigE,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIsnD,EAAoBigE,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoB,GAsDnBunD,GAAO,WACT,WAAYggE,EAAWvzH,EAAMomI,EAAWC,GAAS,oBAC/CjnI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgnI,UAAYA,EACjBhnI,KAAKinI,QAAUA,CACjB,CAMC,OANA,mCAOD,WACE,IAAIzqG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKgnI,WAEfxqG,EAAK7nB,KAAK3U,KAAKinI,SAERzqG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIunD,EAAQggE,EAAWvzH,EAFdi0H,EAAKjoH,KACPioH,EAAKjoH,KAErB,KAAC,EAZQ,GAsBPwnD,GAAY,WACd,WAAY+/D,EAAWvzH,EAAMomI,EAAWC,EAASC,EAAcpR,GAAW,oBACxE91H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgnI,UAAYA,EACjBhnI,KAAKinI,QAAUA,EACfjnI,KAAKknI,aAAeA,EACpBlnI,KAAK81H,UAAYA,CACnB,CAQC,OARA,mCASD,WACE,IAAIt5F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKgnI,WAEfxqG,EAAK7nB,KAAK3U,KAAKinI,SAEfzqG,EAAK7nB,KAAK3U,KAAKknI,cAEf1qG,EAAK7nB,KAAK3U,KAAK81H,WAERt5F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIwnD,EAAa+/D,EAAWvzH,EAJnBi0H,EAAKjoH,KACPioH,EAAKjoH,KACAioH,EAAKjoH,KACRioH,EAAKjoH,KAEvB,KAAC,EAhBa,GA8BZynD,GAAW,WACb,WAAY8/D,EAAWvzH,EAAMumI,GAAU,oBACrCnnI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKmnI,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI3qG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKmnI,UAER3qG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIynD,EAAY8/D,EAAWvzH,EADnBi0H,EAAKjoH,KAEtB,KAAC,EAVY,GAkBX0nD,GAAoB,WACtB,WAAY6/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0nD,EAAqB6/D,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpB2nD,GAAwB,WAC1B,WAAY4/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2nD,EAAyB4/D,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxB4nD,GAA4B,WAC9B,WAAY2/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4nD,EAA6B2/D,EAAWvzH,EATpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1B6B,GAkD5B6nD,GAAgC,WAClC,WAAY0/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI6nD,EAAiC0/D,EAAWvzH,EAVxCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BiC,GAsDhC8nD,GAA4B,WAC9B,WAAYy/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8nD,EAA6By/D,EAAWvzH,EATpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1B6B,GAkD5B+nD,GAAgC,WAClC,WAAYw/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI+nD,EAAiCw/D,EAAWvzH,EAVxCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BiC,GAsDhCgoD,GAAoB,WACtB,WAAYu/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgoD,EAAqBu/D,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBioD,GAAwB,WAC1B,WAAYs/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIioD,EAAyBs/D,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxBkoD,GAAgB,WAClB,WAAYq/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIkoD,EAAiBq/D,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BiB,GAkDhBmoD,GAAoB,WACtB,WAAYo/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAImoD,EAAqBo/D,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpBooD,GAAsB,WACxB,WAAYm/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIooD,EAAuBm/D,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BuB,GAkDtBqoD,GAA0B,WAC5B,WAAYk/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqoD,EAA2Bk/D,EAAWvzH,EAVlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B2B,GAsD1BsoD,GAAU,WACZ,WAAYi/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIsoD,EAAWi/D,EAAWvzH,EARlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBW,GA8CVuoD,GAAkB,WACpB,WAAYg/D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKiS,EAAe1S,GAAgB,oBACvJ10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAKonI,cAAgBA,EACrBpnI,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKonI,eAEf5qG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIuoD,EAAmBg/D,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACKioH,EAAKjoH,KACJioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBwoD,GAAsB,WACxB,WAAY++D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIwoD,EAAuB++D,EAAWvzH,EAV9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BuB,GAsDtByoD,GAAmB,WACrB,WAAY8+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIyoD,EAAoB8+D,EAAWvzH,EAR3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBoB,GA8CnB0oD,GAAuB,WACzB,WAAY6+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0oD,EAAwB6+D,EAAWvzH,EAT/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BwB,GAkDvB2oD,GAAkB,WACpB,WAAY4+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa8S,EAAqBC,GAAY,oBACvGtnI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKqnI,oBAAsBA,EAC3BrnI,KAAKsnI,WAAaA,CACpB,CAUC,OAVA,mCAWD,WACE,IAAI9qG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKqnI,qBAEf7qG,EAAK7nB,KAAK3U,KAAKsnI,YAER9qG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI2oD,EAAmB4+D,EAAWvzH,EAN1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACGioH,EAAKjoH,KACdioH,EAAKjoH,KAExB,KAAC,EApBmB,GAsClB4oD,GAAc,WAChB,WAAY2+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4oD,EAAe2+D,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1Be,GAkDd6oD,GAAoB,WACtB,WAAY0+D,EAAWvzH,EAAMq4H,GAAU,oBACrCj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIz8F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI6oD,EAAqB0+D,EAAWvzH,EAD5Bi0H,EAAKjoH,KAEtB,KAAC,EAVqB,GAkBpB8oD,GAAU,WACZ,WAAYy+D,EAAWvzH,EAAMq4H,EAAUsO,EAAWC,GAAW,oBAC3DxnI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKunI,UAAYA,EACjBvnI,KAAKwnI,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAIhrG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKunI,WAEf/qG,EAAK7nB,KAAK3U,KAAKwnI,WAERhrG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI8oD,EAAWy+D,EAAWvzH,EAHlBi0H,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KAEvB,KAAC,EAdW,GA0BV+oD,GAAoB,WACtB,WAAYw+D,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAUsO,EAAWC,GAAW,oBACrFxnI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAKunI,UAAYA,EACjBvnI,KAAKwnI,UAAYA,CACnB,CASC,OATA,mCAUD,WACE,IAAIhrG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKunI,WAEf/qG,EAAK7nB,KAAK3U,KAAKwnI,WAERhrG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI+oD,EAAqBw+D,EAAWvzH,EALzBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KAEvB,KAAC,EAlBqB,GAkCpBgpD,GAAyB,WAC3B,WAAYu+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIgpD,EAA0Bu+D,EAAWvzH,EARjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxB0B,GA8CzBipD,GAA6B,WAC/B,WAAYs+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIipD,EAA8Bs+D,EAAWvzH,EATrCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1B8B,GAkD7BkpD,GAAS,WACX,WAAYq+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIkpD,EAAUq+D,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDTmpD,GAAa,WACf,WAAYo+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAImpD,EAAco+D,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDbopD,GAAoB,WACtB,WAAYm+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIopD,EAAqBm+D,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBqpD,GAAwB,WAC1B,WAAYk+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqpD,EAAyBk+D,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxBspD,GAAa,WACf,WAAYi+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIspD,EAAci+D,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDbupD,GAAiB,WACnB,WAAYg+D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIupD,EAAkBg+D,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjBwpD,GAAQ,WACV,WAAY+9D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBF,EAAgB+S,EAAkBC,EAA6BC,GAAoB,oBACtM3nI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAK00H,eAAiBA,EACtB10H,KAAKynI,iBAAmBA,EACxBznI,KAAK0nI,4BAA8BA,EACnC1nI,KAAK2nI,mBAAqBA,CAC5B,CAeC,OAfA,mCAgBD,WACE,IAAInrG,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKynI,kBAEfjrG,EAAK7nB,KAAK3U,KAAK0nI,6BAEflrG,EAAK7nB,KAAK3U,KAAK2nI,oBAERnrG,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIwpD,EAAS+9D,EAAWvzH,EAXhBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACMioH,EAAKjoH,KACdioH,EAAKjoH,KAEhC,KAAC,EA9BS,GA0DRypD,GAAY,WACd,WAAY89D,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,EAAuBC,EAAYC,EAAWC,EAAUC,GAAc,oBACnHjoI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAK8nI,WAAaA,EAClB9nI,KAAK+nI,UAAYA,EACjB/nI,KAAKgoI,SAAWA,EAChBhoI,KAAKioI,aAAeA,CACtB,CAWC,OAXA,mCAYD,WACE,IAAIzrG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAK8nI,YAEftrG,EAAK7nB,KAAK3U,KAAK+nI,WAEfvrG,EAAK7nB,KAAK3U,KAAKgoI,UAEfxrG,EAAK7nB,KAAK3U,KAAKioI,cAERzrG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIypD,EAAa89D,EAAWvzH,EAPxBi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KAChBioH,EAAKjoH,KACNioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KAE1B,KAAC,EAtBa,GA0CZ0pD,GAAY,WACd,WAAY69D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiBsT,EAAaxT,EAAgB+S,EAAkBC,GAA6B,oBAC1N1nI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkoI,YAAcA,EACnBloI,KAAK00H,eAAiBA,EACtB10H,KAAKynI,iBAAmBA,EACxBznI,KAAK0nI,4BAA8BA,CACrC,CAgBC,OAhBA,mCAiBD,WACE,IAAIlrG,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkoI,aAEf1rG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKynI,kBAEfjrG,EAAK7nB,KAAK3U,KAAK0nI,6BAERlrG,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI0pD,EAAa69D,EAAWvzH,EAZpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KACMioH,EAAKjoH,KAEzC,KAAC,EAhCa,GA8DZ2pD,GAAqB,WACvB,WAAY49D,EAAWvzH,EAAM0zH,EAAMC,EAAa4T,GAAa,oBAC3DnoI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKooI,WAAaD,CACpB,CAOC,OAPA,mCAQD,WACE,IAAI3rG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKooI,YAER5rG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI2pD,EAAsB49D,EAAWvzH,EAHjCi0H,EAAKjoH,KACEioH,EAAKjoH,KACLioH,EAAKjoH,KAEzB,KAAC,EAdsB,GA0BrB4pD,GAAsB,WACxB,WAAY29D,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIr+D,EAAuB29D,EAAWvzH,EAC/C,KAAC,EARuB,GActB61D,GAAoB,WACtB,WAAY09D,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,GAAM,oBAC3Dt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI93F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI6pD,EAAqB09D,EAAWvzH,EAH5Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EAdqB,GA0BpB8pD,GAAgC,WAClC,WAAYy9D,EAAWvzH,EAAM0zH,EAAMC,EAAa8T,EAAmBC,GAAwB,oBACzFtoI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKqoI,kBAAoBA,EACzBroI,KAAKsoI,uBAAyBA,CAChC,CAQC,OARA,mCASD,WACE,IAAI9rG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKqoI,mBAEf7rG,EAAK7nB,KAAK3U,KAAKsoI,wBAER9rG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI8pD,EAAiCy9D,EAAWvzH,EAJ5Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACCioH,EAAKjoH,KACAioH,EAAKjoH,KAEpC,KAAC,EAhBiC,GA8BhC+pD,GAAyB,WAC3B,WAAYw9D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAU3I,GAAgB,oBAC7I10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+pD,EAA0Bw9D,EAAWvzH,EATjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EA1B0B,GAkDzBgqD,GAAkC,WACpC,WAAYu9D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,GAAU,oBAC7Hr9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,CAClB,CAYC,OAZA,mCAaD,WACE,IAAI7gG,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAER7gG,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIgqD,EAAmCu9D,EAAWvzH,EAR1Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KAEtB,KAAC,EAxBmC,GA8ClCiqD,GAA8B,WAChC,WAAYs9D,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,GAAM,oBAC3Dt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI93F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIiqD,EAA+Bs9D,EAAWvzH,EAHtCi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EAd+B,GA0B9BkqD,GAAgC,WAClC,WAAYq9D,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,GAAM,oBAC3Dt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI93F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIkqD,EAAiCq9D,EAAWvzH,EAHxCi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EAdiC,GA0BhCmqD,GAA4B,WAC9B,WAAYo9D,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,GAAM,oBAC3Dt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI93F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAImqD,EAA6Bo9D,EAAWvzH,EAHpCi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EAd6B,GA0B5BoqD,GAAoB,WACtB,WAAYm9D,EAAWvzH,EAAM2nI,EAAWtP,EAAUuP,EAAmB7K,GAAO,oBAC1E39H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,EAChBj5H,KAAKwoI,kBAAoBA,EACzBxoI,KAAK29H,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAInhG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKwoI,mBAEfhsG,EAAK7nB,KAAK3U,KAAK29H,OAERnhG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIoqD,EAAqBm9D,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACIioH,EAAKjoH,KACjBioH,EAAKjoH,KAEnB,KAAC,EAhBqB,GA8BpBqqD,GAA2B,WAC7B,WAAYk9D,EAAWvzH,EAAM2nI,EAAWtP,EAAUuP,EAAmB7K,EAAO8K,GAAc,oBACxFzoI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,EAChBj5H,KAAKwoI,kBAAoBA,EACzBxoI,KAAK29H,MAAQA,EACb39H,KAAKyoI,aAAeA,CACtB,CASC,OATA,mCAUD,WACE,IAAIjsG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKwoI,mBAEfhsG,EAAK7nB,KAAK3U,KAAK29H,OAEfnhG,EAAK7nB,KAAK3U,KAAKyoI,cAERjsG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIqqD,EAA4Bk9D,EAAWvzH,EALlCi0H,EAAKjoH,KACNioH,EAAKjoH,KACIioH,EAAKjoH,KACjBioH,EAAKjoH,KACEioH,EAAKjoH,KAE1B,KAAC,EAlB4B,GAkC3BsqD,GAAO,WACT,WAAYi9D,EAAWvzH,EAAMg1H,GAAQ,oBACnC51H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK41H,OAASA,CAChB,CAKC,OALA,mCAMD,WACE,IAAIp5F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK41H,QAERp5F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIsqD,EAAQi9D,EAAWvzH,EADjBi0H,EAAKjoH,KAEpB,KAAC,EAVQ,GAkBPuqD,GAAwB,WAC1B,WAAYg9D,EAAWvzH,EAAM8nI,GAAW,oBACtC1oI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK0oI,UAAYA,CACnB,CAKC,OALA,mCAMD,WACE,IAAIlsG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK0oI,WAERlsG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIuqD,EAAyBg9D,EAAWvzH,EAD/Bi0H,EAAKjoH,KAEvB,KAAC,EAVyB,GAkBxBwqD,GAAY,WACd,WAAY+8D,EAAWvzH,EAAM+nI,EAAOC,GAAa,oBAC/C5oI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2oI,MAAQA,EACb3oI,KAAK4oI,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAIpsG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK2oI,OAEfnsG,EAAK7nB,KAAK3U,KAAK4oI,aAERpsG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIwqD,EAAa+8D,EAAWvzH,EAFvBi0H,EAAKjoH,KACCioH,EAAKjoH,KAEzB,KAAC,EAZa,GAsBZyqD,GAAiB,WACnB,WAAY88D,EAAWvzH,EAAM+nI,EAAOC,GAAa,oBAC/C5oI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2oI,MAAQA,EACb3oI,KAAK4oI,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAIpsG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK2oI,OAEfnsG,EAAK7nB,KAAK3U,KAAK4oI,aAERpsG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIyqD,EAAkB88D,EAAWvzH,EAF5Bi0H,EAAKjoH,KACCioH,EAAKjoH,KAEzB,KAAC,EAZkB,GAsBjB0qD,GAAc,WAChB,WAAY68D,EAAWvzH,EAAMg1H,EAAQC,EAAaC,GAAW,oBAC3D91H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK41H,OAASA,EACd51H,KAAK61H,YAAcA,EACnB71H,KAAK81H,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAIt5F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK41H,QAEfp5F,EAAK7nB,KAAK3U,KAAK61H,aAEfr5F,EAAK7nB,KAAK3U,KAAK81H,WAERt5F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI0qD,EAAe68D,EAAWvzH,EAHxBi0H,EAAKjoH,KACAioH,EAAKjoH,KACPioH,EAAKjoH,KAEvB,KAAC,EAde,GA0Bd2qD,GAAc,WAChB,WAAY48D,EAAWvzH,EAAM80H,GAAO,oBAClC11H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK01H,MAAQA,CACf,CAKC,OALA,mCAMD,WACE,IAAIl5F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK01H,OAERl5F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI2qD,EAAe48D,EAAWvzH,EADzBi0H,EAAKjoH,KAEnB,KAAC,EAVe,GAkBd4qD,GAAuB,WACzB,WAAY28D,EAAWvzH,EAAM80H,EAAOC,GAAO,oBACzC31H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK01H,MAAQA,EACb11H,KAAK21H,MAAQA,CACf,CAMC,OANA,mCAOD,WACE,IAAIn5F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK01H,OAEfl5F,EAAK7nB,KAAK3U,KAAK21H,OAERn5F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI4qD,EAAwB28D,EAAWvzH,EAFlCi0H,EAAKjoH,KACLioH,EAAKjoH,KAEnB,KAAC,EAZwB,GAsBvB6qD,GAAW,WACb,WAAY08D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,GAAiB,oBAC9It9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAI9gG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAER9gG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6qD,EAAY08D,EAAWvzH,EATnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KAE7B,KAAC,EA1BY,GAkDX8qD,GAAe,WACjB,WAAYy8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,GAAiB,oBAC9It9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAI9gG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAER9gG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8qD,EAAgBy8D,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KAE7B,KAAC,EA1BgB,GAkDf+qD,GAA6B,WAC/B,WAAYw8D,EAAWvzH,EAAM0zH,EAAMuU,EAAiBC,EAAiBC,EAAiBC,EAAqBC,EAAqBC,GAAqB,oBACnJlpI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK6oI,gBAAkBA,EACvB7oI,KAAK8oI,gBAAkBA,EACvB9oI,KAAK+oI,gBAAkBA,EACvB/oI,KAAKgpI,oBAAsBA,EAC3BhpI,KAAKipI,oBAAsBA,EAC3BjpI,KAAKkpI,oBAAsBA,CAC7B,CAWC,OAXA,mCAYD,WACE,IAAI1sG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK6oI,iBAEfrsG,EAAK7nB,KAAK3U,KAAK8oI,iBAEftsG,EAAK7nB,KAAK3U,KAAK+oI,iBAEfvsG,EAAK7nB,KAAK3U,KAAKgpI,qBAEfxsG,EAAK7nB,KAAK3U,KAAKipI,qBAEfzsG,EAAK7nB,KAAK3U,KAAKkpI,qBAER1sG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI+qD,EAA8Bw8D,EAAWvzH,EAPzCi0H,EAAKjoH,KACMioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAEjC,KAAC,EAtB8B,GA0C7BgrD,GAAM,WACR,WAAYu8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgrD,EAAOu8D,EAAWvzH,EATdi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BO,GAkDNirD,GAAU,WACZ,WAAYs8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIirD,EAAWs8D,EAAWvzH,EAVlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BW,GAsDVkrD,GAAW,WACb,WAAYq8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIkrD,EAAYq8D,EAAWvzH,EATnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BY,GAkDXmrD,GAAe,WACjB,WAAYo8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAImrD,EAAgBo8D,EAAWvzH,EAVvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BgB,GAsDforD,GAAiB,WACnB,WAAYm8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIorD,EAAkBm8D,EAAWvzH,EARzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBkB,GA8CjBqrD,GAAyB,WAC3B,WAAYk8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIqrD,EAA0Bk8D,EAAWvzH,EARjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxB0B,GA8CzBsrD,GAA4B,WAC9B,WAAYi8D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIsrD,EAA6Bi8D,EAAWvzH,EARpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxB6B,GA8C5BurD,GAAgB,WAClB,WAAYg8D,EAAWvzH,EAAM0zH,EAAM6U,EAAYC,GAAmB,oBAChEppI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKmpI,WAAaA,EAClBnpI,KAAKopI,kBAAoBA,CAC3B,CAOC,OAPA,mCAQD,WACE,IAAI5sG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKmpI,YAEf3sG,EAAK7nB,KAAK3U,KAAKopI,mBAER5sG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIurD,EAAiBg8D,EAAWvzH,EAH5Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACEioH,EAAKjoH,KAE/B,KAAC,EAdiB,GA0BhBwrD,GAAwB,WAC1B,WAAY+7D,EAAWvzH,EAAMyoI,EAAqBC,EAAsBC,EAA2BC,EAAcC,GAAgB,oBAC/HzpI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKqpI,oBAAsBA,EAC3BrpI,KAAKspI,qBAAuBA,EAC5BtpI,KAAKupI,0BAA4BA,EACjCvpI,KAAKwpI,aAAeA,EACpBxpI,KAAKypI,eAAiBA,CACxB,CASC,OATA,mCAUD,WACE,IAAIjtG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKqpI,qBAEf7sG,EAAK7nB,KAAK3U,KAAKspI,sBAEf9sG,EAAK7nB,KAAK3U,KAAKupI,2BAEf/sG,EAAK7nB,KAAK3U,KAAKwpI,cAEfhtG,EAAK7nB,KAAK3U,KAAKypI,gBAERjtG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIwrD,EAAyB+7D,EAAWvzH,EALrBi0H,EAAKjoH,KACJioH,EAAKjoH,KACAioH,EAAKjoH,KAClBioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAlByB,GAkCxByrD,GAAqB,WACvB,WAAY87D,EAAWvzH,EAAM8oI,EAAeC,EAAOC,GAAa,oBAC9D5pI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK0pI,cAAgBA,EACrB1pI,KAAK2pI,MAAQA,EACb3pI,KAAK4pI,YAAcA,CACrB,CAOC,OAPA,mCAQD,WACE,IAAIptG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK0pI,eAEfltG,EAAK7nB,KAAK3U,KAAK2pI,OAEfntG,EAAK7nB,KAAK3U,KAAK4pI,aAERptG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIyrD,EAAsB87D,EAAWvzH,EAHxBi0H,EAAKjoH,KACbioH,EAAKjoH,KACCioH,EAAKjoH,KAEzB,KAAC,EAdsB,GA0BrB0rD,GAAS,WACX,WAAY67D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0rD,EAAU67D,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDT2rD,GAAa,WACf,WAAY47D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2rD,EAAc47D,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDb4rD,GAA0B,WAC5B,WAAY27D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4rD,EAA2B27D,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1B2B,GAkD1B6rD,GAA8B,WAChC,WAAY07D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI6rD,EAA+B07D,EAAWvzH,EAVtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B+B,GAsD9B8rD,GAA+B,WACjC,WAAYy7D,EAAWvzH,EAAM2nI,EAAWtP,EAAU4Q,EAAWC,EAAYC,EAAUC,GAAgB,oBACjGhqI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,EAChBj5H,KAAK6pI,UAAYA,EACjB7pI,KAAK8pI,WAAaA,EAClB9pI,KAAK+pI,SAAWA,EAChB/pI,KAAKgqI,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAIxtG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK6pI,WAEfrtG,EAAK7nB,KAAK3U,KAAK8pI,YAEfttG,EAAK7nB,KAAK3U,KAAK+pI,UAEfvtG,EAAK7nB,KAAK3U,KAAKgqI,gBAERxtG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI8rD,EAAgCy7D,EAAWvzH,EANtCi0H,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EApBgC,GAsC/B+rD,GAAiB,WACnB,WAAYw7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI+rD,EAAkBw7D,EAAWvzH,EARzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBkB,GA8CjBgsD,GAAqB,WACvB,WAAYu7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgsD,EAAsBu7D,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BsB,GAkDrBisD,GAAc,WAChB,WAAYs7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIisD,EAAes7D,EAAWvzH,EARtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBe,GA8CdksD,GAAkB,WACpB,WAAYq7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIksD,EAAmBq7D,EAAWvzH,EAT1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BmB,GAkDlBmsD,GAAiB,WACnB,WAAYo7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImsD,EAAkBo7D,EAAWvzH,EATzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BkB,GAkDjBosD,GAAqB,WACvB,WAAYm7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIosD,EAAsBm7D,EAAWvzH,EAV7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BsB,GAsDrBqsD,GAAY,WACd,WAAYk7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqsD,EAAak7D,EAAWvzH,EATpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Ba,GAkDZssD,GAAgB,WAClB,WAAYi7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIssD,EAAiBi7D,EAAWvzH,EAVxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BiB,GAsDhBusD,GAAmB,WACrB,WAAYg7D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIusD,EAAoBg7D,EAAWvzH,EAR3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBoB,GA8CnBwsD,GAAuB,WACzB,WAAY+6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwsD,EAAwB+6D,EAAWvzH,EAT/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BwB,GAkDvBysD,GAAc,WAChB,WAAY86D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIysD,EAAe86D,EAAWvzH,EARtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBe,GA8Cd0sD,GAAkB,WACpB,WAAY66D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0sD,EAAmB66D,EAAWvzH,EAT1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BmB,GAkDlB2sD,GAAoB,WACtB,WAAY46D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI2sD,EAAqB46D,EAAWvzH,EAR5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBqB,GA8CpB4sD,GAAwB,WAC1B,WAAY26D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4sD,EAAyB26D,EAAWvzH,EAThCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1ByB,GAkDxB6sD,GAAe,WACjB,WAAY06D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI6sD,EAAgB06D,EAAWvzH,EARvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBgB,GA8Cf8sD,GAAmB,WACrB,WAAYy6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8sD,EAAoBy6D,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BoB,GAkDnB+sD,GAAsB,WACxB,WAAYw6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI+sD,EAAuBw6D,EAAWvzH,EAR9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBuB,GA8CtBgtD,GAA0B,WAC5B,WAAYu6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgtD,EAA2Bu6D,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1B2B,GAkD1BitD,GAAU,WACZ,WAAYs6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIitD,EAAWs6D,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDVktD,GAAc,WAChB,WAAYq6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIktD,EAAeq6D,EAAWvzH,EAVtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Be,GAsDdmtD,GAAoB,WACtB,WAAYo6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAImtD,EAAqBo6D,EAAWvzH,EAR5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBqB,GA8CpBotD,GAAwB,WAC1B,WAAYm6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIotD,EAAyBm6D,EAAWvzH,EAThCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1ByB,GAkDxBqtD,GAAY,WACd,WAAYk6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqtD,EAAak6D,EAAWvzH,EATpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Ba,GAkDZstD,GAAgB,WAClB,WAAYi6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAa6R,EAAe1S,GAAgB,oBAClL10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAKonI,cAAgBA,EACrBpnI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAKonI,eAEf5qG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIstD,EAAiBi6D,EAAWvzH,EAXxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KAE5B,KAAC,EA9BiB,GA0DhButD,GAAoB,WACtB,WAAYg6D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIutD,EAAqBg6D,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBwtD,GAAwB,WAC1B,WAAY+5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIwtD,EAAyB+5D,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxBytD,GAAoB,WACtB,WAAY85D,EAAWvzH,EAAM2iI,GAAU,oBACrCvjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKujI,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI/mG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKujI,UAER/mG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIytD,EAAqB85D,EAAWvzH,EAD5Bi0H,EAAKjoH,KAEtB,KAAC,EAVqB,GAkBpB0tD,GAAiC,WACnC,WAAY65D,EAAWvzH,EAAMqpI,EAAmBC,EAAaC,EAA0BC,EAAWC,EAAuBC,GAAW,oBAClItqI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiqI,kBAAoBA,EACzBjqI,KAAKkqI,YAAcA,EACnBlqI,KAAKmqI,yBAA2BA,EAChCnqI,KAAKoqI,UAAYA,EACjBpqI,KAAKqqI,sBAAwBA,EAC7BrqI,KAAKsqI,UAAYA,CACnB,CAUC,OAVA,mCAWD,WACE,IAAI9tG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKiqI,mBAEfztG,EAAK7nB,KAAK3U,KAAKkqI,aAEf1tG,EAAK7nB,KAAK3U,KAAKmqI,0BAEf3tG,EAAK7nB,KAAK3U,KAAKoqI,WAEf5tG,EAAK7nB,KAAK3U,KAAKqqI,uBAEf7tG,EAAK7nB,KAAK3U,KAAKsqI,WAER9tG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI0tD,EAAkC65D,EAAWvzH,EANhCi0H,EAAKjoH,KACXioH,EAAKjoH,KACQioH,EAAKjoH,KACpBioH,EAAKjoH,KACOioH,EAAKjoH,KACjBioH,EAAKjoH,KAEvB,KAAC,EApBkC,GAsCjC2tD,GAA8B,WAChC,WAAY45D,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIt6D,EAA+B45D,EAAWvzH,EACvD,KAAC,EAR+B,GAc9B45D,GAAoC,WACtC,WAAY25D,EAAWvzH,EAAMqpI,EAAmBC,EAAaC,EAA0BC,EAAWC,EAAuBC,EAAWC,EAAeC,EAAaC,EAAYC,GAAuB,oBACjM1qI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiqI,kBAAoBA,EACzBjqI,KAAKkqI,YAAcA,EACnBlqI,KAAKmqI,yBAA2BA,EAChCnqI,KAAKoqI,UAAYA,EACjBpqI,KAAKqqI,sBAAwBA,EAC7BrqI,KAAKsqI,UAAYA,EACjBtqI,KAAKuqI,cAAgBA,EACrBvqI,KAAKwqI,YAAcA,EACnBxqI,KAAKyqI,WAAaA,EAClBzqI,KAAK0qI,sBAAwBA,CAC/B,CAcC,OAdA,mCAeD,WACE,IAAIluG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKiqI,mBAEfztG,EAAK7nB,KAAK3U,KAAKkqI,aAEf1tG,EAAK7nB,KAAK3U,KAAKmqI,0BAEf3tG,EAAK7nB,KAAK3U,KAAKoqI,WAEf5tG,EAAK7nB,KAAK3U,KAAKqqI,uBAEf7tG,EAAK7nB,KAAK3U,KAAKsqI,WAEf9tG,EAAK7nB,KAAK3U,KAAKuqI,eAEf/tG,EAAK7nB,KAAK3U,KAAKwqI,aAEfhuG,EAAK7nB,KAAK3U,KAAKyqI,YAEfjuG,EAAK7nB,KAAK3U,KAAK0qI,uBAERluG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4tD,EAAqC25D,EAAWvzH,EAVnCi0H,EAAKjoH,KACXioH,EAAKjoH,KACQioH,EAAKjoH,KACpBioH,EAAKjoH,KACOioH,EAAKjoH,KACjBioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACNioH,EAAKjoH,KACMioH,EAAKjoH,KAEnC,KAAC,EA5BqC,GAsDpC6tD,GAAe,WACjB,WAAY05D,EAAWvzH,EAAM2iI,GAAU,oBACrCvjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKujI,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI/mG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKujI,UAER/mG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI6tD,EAAgB05D,EAAWvzH,EADvBi0H,EAAKjoH,KAEtB,KAAC,EAVgB,GAkBf8tD,GAAO,WACT,WAAYy5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgByV,EAAOC,EAAOC,EAAOnW,GAAgB,oBACxJ10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK2qI,MAAQA,EACb3qI,KAAK4qI,MAAQA,EACb5qI,KAAK6qI,MAAQA,EACb7qI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK2qI,OAEfnuG,EAAK7nB,KAAK3U,KAAK4qI,OAEfpuG,EAAK7nB,KAAK3U,KAAK6qI,OAEfruG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI8tD,EAAQy5D,EAAWvzH,EAXfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACdioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACIioH,EAAKjoH,KAE5B,KAAC,EA9BQ,GA0DP+tD,GAAW,WACb,WAAYw5D,EAAWvzH,EAAMkqI,EAASC,EAAWjV,GAAW,oBAC1D91H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK8qI,QAAUA,EACf9qI,KAAK+qI,UAAYA,EACjB/qI,KAAK81H,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAIt5F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK8qI,SAEftuG,EAAK7nB,KAAK3U,KAAK+qI,WAEfvuG,EAAK7nB,KAAK3U,KAAK81H,WAERt5F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+tD,EAAYw5D,EAAWvzH,EAHpBi0H,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KAEvB,KAAC,EAdY,GA0BXguD,GAAgB,WAClB,WAAYu5D,EAAWvzH,EAAMoqI,EAAgBC,EAAmBC,GAAuB,oBACrFlrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgrI,eAAiBA,EACtBhrI,KAAKirI,kBAAoBA,EACzBjrI,KAAKkrI,sBAAwBA,CAC/B,CAOC,OAPA,mCAQD,WACE,IAAI1uG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKgrI,gBAEfxuG,EAAK7nB,KAAK3U,KAAKirI,mBAEfzuG,EAAK7nB,KAAK3U,KAAKkrI,uBAER1uG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIguD,EAAiBu5D,EAAWvzH,EAHlBi0H,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KAEnC,KAAC,EAdiB,GA0BhBiuD,GAAQ,WACV,WAAYs5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,GAAY,oBAClFx0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,CACpB,CASC,OATA,mCAUD,WACE,IAAIh4F,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAERh4F,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIiuD,EAASs5D,EAAWvzH,EALhBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KAExB,KAAC,EAlBS,GAkCRkuD,GAAiB,WACnB,WAAYq5D,EAAWvzH,EAAMs8H,EAAaC,GAAe,oBACvDn9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk9H,YAAcA,EACnBl9H,KAAKm9H,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI3gG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKk9H,aAEf1gG,EAAK7nB,KAAK3U,KAAKm9H,eAER3gG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIkuD,EAAkBq5D,EAAWvzH,EAFtBi0H,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EAZkB,GAsBjBmuD,GAAgB,WAClB,WAAYo5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImuD,EAAiBo5D,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BiB,GAkDhBouD,GAAoB,WACtB,WAAYm5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIouD,EAAqBm5D,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpBquD,GAAa,WACf,WAAYk5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIquD,EAAck5D,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDbsuD,GAAiB,WACnB,WAAYi5D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIsuD,EAAkBi5D,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjBuuD,GAAmB,WACrB,WAAYg5D,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAUwM,EAActM,EAAcC,EAAc+R,EAAiBC,EAAcC,EAAkBC,GAAa,oBACvKtrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAKylI,aAAeA,EACpBzlI,KAAKm5H,aAAeA,EACpBn5H,KAAKo5H,aAAeA,EACpBp5H,KAAKmrI,gBAAkBA,EACvBnrI,KAAKorI,aAAeA,EACpBprI,KAAKqrI,iBAAmBA,EACxBrrI,KAAKsrI,YAAcA,CACrB,CAcC,OAdA,mCAeD,WACE,IAAI9uG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKylI,cAEfjpG,EAAK7nB,KAAK3U,KAAKm5H,cAEf38F,EAAK7nB,KAAK3U,KAAKo5H,cAEf58F,EAAK7nB,KAAK3U,KAAKmrI,iBAEf3uG,EAAK7nB,KAAK3U,KAAKorI,cAEf5uG,EAAK7nB,KAAK3U,KAAKqrI,kBAEf7uG,EAAK7nB,KAAK3U,KAAKsrI,aAER9uG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIuuD,EAAoBg5D,EAAWvzH,EAVxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACFioH,EAAKjoH,KACRioH,EAAKjoH,KACDioH,EAAKjoH,KACVioH,EAAKjoH,KAEzB,KAAC,EA5BoB,GAsDnBwuD,GAAe,WACjB,WAAY+4D,EAAWvzH,EAAMq6H,EAASC,EAASC,EAAMC,EAAkBC,EAAWkQ,GAAc,oBAC9FvrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi7H,QAAUA,EACfj7H,KAAKk7H,QAAUA,EACfl7H,KAAKm7H,KAAOA,EACZn7H,KAAKo7H,iBAAmBA,EACxBp7H,KAAKq7H,UAAYA,EACjBr7H,KAAKurI,aAAeA,CACtB,CAUC,OAVA,mCAWD,WACE,IAAI/uG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKi7H,SAEfz+F,EAAK7nB,KAAK3U,KAAKk7H,SAEf1+F,EAAK7nB,KAAK3U,KAAKm7H,MAEf3+F,EAAK7nB,KAAK3U,KAAKo7H,kBAEf5+F,EAAK7nB,KAAK3U,KAAKq7H,WAEf7+F,EAAK7nB,KAAK3U,KAAKurI,cAER/uG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIwuD,EAAgB+4D,EAAWvzH,EANxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACOioH,EAAKjoH,KACZioH,EAAKjoH,KACFioH,EAAKjoH,KAE1B,KAAC,EApBgB,GAsCfyuD,GAAmB,WACrB,WAAY84D,EAAWvzH,EAAM4qI,EAAUC,EAASC,EAASC,GAAa,oBACpE3rI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKwrI,SAAWA,EAChBxrI,KAAKyrI,QAAUA,EACfzrI,KAAK0rI,QAAUA,EACf1rI,KAAK2rI,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAInvG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKwrI,UAEfhvG,EAAK7nB,KAAK3U,KAAKyrI,SAEfjvG,EAAK7nB,KAAK3U,KAAK0rI,SAEflvG,EAAK7nB,KAAK3U,KAAK2rI,aAERnvG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIyuD,EAAoB84D,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KAEzB,KAAC,EAhBoB,GA8BnB0uD,GAAmB,WACrB,WAAY64D,EAAWvzH,EAAMgrI,EAAQ3V,EAAUmE,GAAe,oBAC5Dp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK4rI,OAASA,EACd5rI,KAAKi2H,SAAWA,EAChBj2H,KAAKo6H,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAI59F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK4rI,QAEfpvG,EAAK7nB,KAAK3U,KAAKi2H,UAEfz5F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI0uD,EAAoB64D,EAAWvzH,EAH7Bi0H,EAAKjoH,KACHioH,EAAKjoH,KACAioH,EAAKjoH,KAE3B,KAAC,EAdoB,GA0BnB2uD,GAAuB,WACzB,WAAY44D,EAAWvzH,EAAMirI,GAAY,oBACvC7rI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6rI,WAAaA,CACpB,CAKC,OALA,mCAMD,WACE,IAAIrvG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK6rI,YAERrvG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI2uD,EAAwB44D,EAAWvzH,EAD7Bi0H,EAAKjoH,KAExB,KAAC,EAVwB,GAkBvB4uD,GAAgC,WAClC,WAAY24D,EAAWvzH,EAAMirI,EAAYC,GAAmB,oBAC1D9rI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6rI,WAAaA,EAClB7rI,KAAK8rI,kBAAoBA,CAC3B,CAMC,OANA,mCAOD,WACE,IAAItvG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK6rI,YAEfrvG,EAAK7nB,KAAK3U,KAAK8rI,mBAERtvG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI4uD,EAAiC24D,EAAWvzH,EAFtCi0H,EAAKjoH,KACEioH,EAAKjoH,KAE/B,KAAC,EAZiC,GAsBhC6uD,GAAoB,WACtB,WAAY04D,EAAWvzH,EAAMmrI,EAAMP,EAAUQ,GAAW,oBACtDhsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+rI,KAAOA,EACZ/rI,KAAKwrI,SAAWA,EAChBxrI,KAAKgsI,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAIxvG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK+rI,MAEfvvG,EAAK7nB,KAAK3U,KAAKwrI,UAEfhvG,EAAK7nB,KAAK3U,KAAKgsI,WAERxvG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI6uD,EAAqB04D,EAAWvzH,EAHhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KAEvB,KAAC,EAdqB,GA0BpB8uD,GAA4B,WAC9B,WAAYy4D,EAAWvzH,EAAMmrI,EAAMP,EAAUQ,EAAWC,GAAe,oBACrEjsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+rI,KAAOA,EACZ/rI,KAAKwrI,SAAWA,EAChBxrI,KAAKgsI,UAAYA,EACjBhsI,KAAKisI,cAAgBA,CACvB,CAQC,OARA,mCASD,WACE,IAAIzvG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAK+rI,MAEfvvG,EAAK7nB,KAAK3U,KAAKwrI,UAEfhvG,EAAK7nB,KAAK3U,KAAKgsI,WAEfxvG,EAAK7nB,KAAK3U,KAAKisI,eAERzvG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI8uD,EAA6By4D,EAAWvzH,EAJxCi0H,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACDioH,EAAKjoH,KAE3B,KAAC,EAhB6B,GA8B5B+uD,GAAc,WAChB,WAAYw4D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+uD,EAAew4D,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdgvD,GAAkB,WACpB,WAAYu4D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIgvD,EAAmBu4D,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBivD,GAAoB,WACtB,WAAYs4D,EAAWvzH,EAAMsrI,EAASC,EAAoBC,GAAsB,oBAC9EpsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKksI,QAAUA,EACflsI,KAAKmsI,mBAAqBA,EAC1BnsI,KAAKosI,qBAAuBA,CAC9B,CAOC,OAPA,mCAQD,WACE,IAAI5vG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKksI,SAEf1vG,EAAK7nB,KAAK3U,KAAKmsI,oBAEf3vG,EAAK7nB,KAAK3U,KAAKosI,sBAER5vG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIivD,EAAqBs4D,EAAWvzH,EAH7Bi0H,EAAKjoH,KACMioH,EAAKjoH,KACHioH,EAAKjoH,KAElC,KAAC,EAdqB,GA0BpBkvD,GAAY,WACd,WAAYq4D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB2X,EAAcC,EAAoBC,EAAgB7T,EAAcD,GAAe,oBACjLz4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK00H,eAAiBA,EACtB10H,KAAKqsI,aAAeA,EACpBrsI,KAAKssI,mBAAqBA,EAC1BtsI,KAAKusI,eAAiBA,EACtBvsI,KAAK04H,aAAeA,EACpB14H,KAAKy4H,cAAgBA,CACvB,CAeC,OAfA,mCAgBD,WACE,IAAIj8F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKqsI,cAEf7vG,EAAK7nB,KAAK3U,KAAKssI,oBAEf9vG,EAAK7nB,KAAK3U,KAAKusI,gBAEf/vG,EAAK7nB,KAAK3U,KAAK04H,cAEfl8F,EAAK7nB,KAAK3U,KAAKy4H,eAERj8F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIkvD,EAAaq4D,EAAWvzH,EAXpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACCioH,EAAKjoH,KACTioH,EAAKjoH,KACPioH,EAAKjoH,KACJioH,EAAKjoH,KAE3B,KAAC,EA9Ba,GA0DZmvD,GAAsB,WACxB,WAAYo4D,EAAWvzH,EAAM0zH,EAAMC,EAAaiY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,EAAMkJ,GAAQ,oBACvI3sI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKwsI,UAAYA,EACjBxsI,KAAKysI,QAAUA,EACfzsI,KAAK0sI,mBAAqBA,EAC1B1sI,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAKyjI,KAAOA,EACZzjI,KAAK2sI,OAASA,CAChB,CAaC,OAbA,mCAcD,WACE,IAAInwG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAKysI,SAEfjwG,EAAK7nB,KAAK3U,KAAK0sI,oBAEflwG,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAK2sI,QAERnwG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImvD,EAAuBo4D,EAAWvzH,EATlCi0H,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KACMioH,EAAKjoH,KACbioH,EAAKjoH,KACMioH,EAAKjoH,KACtBioH,EAAKjoH,KACHioH,EAAKjoH,KAEpB,KAAC,EA1BuB,GAkDtBovD,GAA2B,WAC7B,WAAYm4D,EAAWvzH,EAAMgsI,EAAWC,GAAY,oBAClD7sI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK4sI,UAAYA,EACjB5sI,KAAK6sI,WAAaA,CACpB,CAMC,OANA,mCAOD,WACE,IAAIrwG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK4sI,WAEfpwG,EAAK7nB,KAAK3U,KAAK6sI,YAERrwG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIovD,EAA4Bm4D,EAAWvzH,EAFlCi0H,EAAKjoH,KACJioH,EAAKjoH,KAExB,KAAC,EAZ4B,GAsB3BqvD,GAAc,WAChB,WAAYk4D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqvD,EAAek4D,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdsvD,GAAkB,WACpB,WAAYi4D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIsvD,EAAmBi4D,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBuvD,GAAmB,WACrB,WAAYg4D,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU0E,EAAOC,EAAOc,EAAW0M,EAAc0B,EAAYC,GAAU,oBAC5H/sI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK29H,MAAQA,EACb39H,KAAK49H,MAAQA,EACb59H,KAAK0+H,UAAYA,EACjB1+H,KAAKorI,aAAeA,EACpBprI,KAAK8sI,WAAaA,EAClB9sI,KAAK+sI,SAAWA,CAClB,CAaC,OAbA,mCAcD,WACE,IAAIvwG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK29H,OAEfnhG,EAAK7nB,KAAK3U,KAAK49H,OAEfphG,EAAK7nB,KAAK3U,KAAK0+H,WAEfliG,EAAK7nB,KAAK3U,KAAKorI,cAEf5uG,EAAK7nB,KAAK3U,KAAK8sI,YAEftwG,EAAK7nB,KAAK3U,KAAK+sI,UAERvwG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIuvD,EAAoBg4D,EAAWvzH,EATxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EA1BoB,GAkDnBwvD,GAAgB,WAClB,WAAY+3D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,EAAc1M,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIwvD,EAAiB+3D,EAAWvzH,EAXxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EA9BiB,GA0DhByvD,GAAoB,WACtB,WAAY83D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,EAAc1M,GAAgB,oBACrM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIyvD,EAAqB83D,EAAWvzH,EAZ5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAhCqB,GA8DpB0vD,GAAU,WACZ,WAAY63D,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,EAAuBmF,EAAUC,GAAc,oBAC5FjtI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAKgtI,SAAWA,EAChBhtI,KAAKitI,aAAeA,CACtB,CASC,OATA,mCAUD,WACE,IAAIzwG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAKgtI,UAEfxwG,EAAK7nB,KAAK3U,KAAKitI,cAERzwG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI0vD,EAAW63D,EAAWvzH,EALtBi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KAClBioH,EAAKjoH,KACDioH,EAAKjoH,KAE1B,KAAC,EAlBW,GAkCV2vD,GAAO,WACT,WAAY43D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2vD,EAAQ43D,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDP4vD,GAAW,WACb,WAAY23D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4vD,EAAY23D,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDX6vD,GAAqB,WACvB,WAAY03D,EAAWvzH,EAAM0zH,EAAM2C,EAASiW,EAAWC,EAAarT,EAAUvF,GAAa,oBACzFv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKi3H,QAAUA,EACfj3H,KAAKktI,UAAYA,EACjBltI,KAAKmtI,YAAcA,EACnBntI,KAAK85H,SAAWA,EAChB95H,KAAKu0H,YAAcA,CACrB,CAUC,OAVA,mCAWD,WACE,IAAI/3F,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKi3H,SAEfz6F,EAAK7nB,KAAK3U,KAAKktI,WAEf1wG,EAAK7nB,KAAK3U,KAAKmtI,aAEf3wG,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI6vD,EAAsB03D,EAAWvzH,EANjCi0H,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KACHioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KAEzB,KAAC,EApBsB,GAsCrB8vD,GAAmB,WACrB,WAAYy3D,EAAWvzH,EAAMk5H,EAAUrF,EAAgBH,EAAMC,EAAa6Y,EAAUC,GAAmB,oBACrGrtI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,EAChB95H,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKotI,SAAWA,EAChBptI,KAAKqtI,kBAAoBA,CAC3B,CAUC,OAVA,mCAWD,WACE,IAAI7wG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAK85H,UAEft9F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKotI,UAEf5wG,EAAK7nB,KAAK3U,KAAKqtI,mBAER7wG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI8vD,EAAoBy3D,EAAWvzH,EAN3Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACIioH,EAAKjoH,KAE/B,KAAC,EApBoB,GAsCnB+vD,GAAwB,WAC1B,WAAYw3D,EAAWvzH,EAAM0sI,EAAgBC,EAAqBC,GAAmB,oBACnFxtI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKstI,eAAiBA,EACtBttI,KAAKutI,oBAAsBA,EAC3BvtI,KAAKwtI,kBAAoBA,CAC3B,CAOC,OAPA,mCAQD,WACE,IAAIhxG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKstI,gBAEf9wG,EAAK7nB,KAAK3U,KAAKutI,qBAEf/wG,EAAK7nB,KAAK3U,KAAKwtI,mBAERhxG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+vD,EAAyBw3D,EAAWvzH,EAH1Bi0H,EAAKjoH,KACAioH,EAAKjoH,KACPioH,EAAKjoH,KAE/B,KAAC,EAdyB,GA0BxBgwD,GAAe,WACjB,WAAYu3D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgwD,EAAgBu3D,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BgB,GAkDfiwD,GAAmB,WACrB,WAAYs3D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIiwD,EAAoBs3D,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoB,GAsDnBkwD,GAA6B,WAC/B,WAAYq3D,EAAWvzH,EAAM6sI,EAAwBC,GAAkB,oBACrE1tI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKytI,uBAAyBA,EAC9BztI,KAAK0tI,iBAAmBA,CAC1B,CAMC,OANA,mCAOD,WACE,IAAIlxG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKytI,wBAEfjxG,EAAK7nB,KAAK3U,KAAK0tI,kBAERlxG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIkwD,EAA8Bq3D,EAAWvzH,EAFvBi0H,EAAKjoH,KACXioH,EAAKjoH,KAE9B,KAAC,EAZ8B,GAsB7BmwD,GAAc,WAChB,WAAYo3D,EAAWvzH,EAAM0zH,EAAMqZ,EAAaC,EAAkBC,GAAW,oBAC3E7tI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2tI,YAAcA,EACnB3tI,KAAK4tI,iBAAmBA,EACxB5tI,KAAK6tI,UAAYA,CACnB,CAQC,OARA,mCASD,WACE,IAAIrxG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2tI,aAEfnxG,EAAK7nB,KAAK3U,KAAK4tI,kBAEfpxG,EAAK7nB,KAAK3U,KAAK6tI,WAERrxG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAImwD,EAAeo3D,EAAWvzH,EAJ1Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KAEvB,KAAC,EAhBe,GA8BdowD,GAAqB,WACvB,WAAYm3D,EAAWvzH,EAAM0zH,EAAMqZ,EAAaC,EAAkBC,GAAW,oBAC3E7tI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2tI,YAAcA,EACnB3tI,KAAK4tI,iBAAmBA,EACxB5tI,KAAK6tI,UAAYA,CACnB,CAQC,OARA,mCASD,WACE,IAAIrxG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2tI,aAEfnxG,EAAK7nB,KAAK3U,KAAK4tI,kBAEfpxG,EAAK7nB,KAAK3U,KAAK6tI,WAERrxG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIowD,EAAsBm3D,EAAWvzH,EAJjCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KAEvB,KAAC,EAhBsB,GA8BrBqwD,GAAyB,WAC3B,WAAYk3D,EAAWvzH,EAAM0zH,EAAMqZ,EAAaC,EAAkBC,EAAWjF,GAAa,oBACxF5oI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2tI,YAAcA,EACnB3tI,KAAK4tI,iBAAmBA,EACxB5tI,KAAK6tI,UAAYA,EACjB7tI,KAAK4oI,YAAcA,CACrB,CASC,OATA,mCAUD,WACE,IAAIpsG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2tI,aAEfnxG,EAAK7nB,KAAK3U,KAAK4tI,kBAEfpxG,EAAK7nB,KAAK3U,KAAK6tI,WAEfrxG,EAAK7nB,KAAK3U,KAAK4oI,aAERpsG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIqwD,EAA0Bk3D,EAAWvzH,EALrCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KACHioH,EAAKjoH,KAEzB,KAAC,EAlB0B,GAkCzBswD,GAAyB,WAC3B,WAAYi3D,EAAWvzH,EAAM0zH,EAAMqZ,EAAaC,EAAkBC,EAAW5U,EAAU6U,EAAkBC,EAAmBC,EAAcC,EAAqBC,GAA6B,oBAC1LluI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2tI,YAAcA,EACnB3tI,KAAK4tI,iBAAmBA,EACxB5tI,KAAK6tI,UAAYA,EACjB7tI,KAAKi5H,SAAWA,EAChBj5H,KAAK8tI,iBAAmBA,EACxB9tI,KAAK+tI,kBAAoBA,EACzB/tI,KAAKguI,aAAeA,EACpBhuI,KAAKiuI,oBAAsBA,EAC3BjuI,KAAKkuI,4BAA8BA,CACrC,CAcC,OAdA,mCAeD,WACE,IAAI1xG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2tI,aAEfnxG,EAAK7nB,KAAK3U,KAAK4tI,kBAEfpxG,EAAK7nB,KAAK3U,KAAK6tI,WAEfrxG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK8tI,kBAEftxG,EAAK7nB,KAAK3U,KAAK+tI,mBAEfvxG,EAAK7nB,KAAK3U,KAAKguI,cAEfxxG,EAAK7nB,KAAK3U,KAAKiuI,qBAEfzxG,EAAK7nB,KAAK3U,KAAKkuI,6BAER1xG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIswD,EAA0Bi3D,EAAWvzH,EAVrCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KACNioH,EAAKjoH,KACGioH,EAAKjoH,KACJioH,EAAKjoH,KACVioH,EAAKjoH,KACEioH,EAAKjoH,KACGioH,EAAKjoH,KAEzC,KAAC,EA5B0B,GAsDzBuwD,GAAwB,WAC1B,WAAYg3D,EAAWvzH,EAAM0zH,EAAMqZ,EAAaC,EAAkBC,EAAW5U,EAAUxC,EAAQ0X,EAAqBC,EAAqBC,GAAoB,oBAC3JruI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2tI,YAAcA,EACnB3tI,KAAK4tI,iBAAmBA,EACxB5tI,KAAK6tI,UAAYA,EACjB7tI,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,EACdz2H,KAAKmuI,oBAAsBA,EAC3BnuI,KAAKouI,oBAAsBA,EAC3BpuI,KAAKquI,mBAAqBA,CAC5B,CAaC,OAbA,mCAcD,WACE,IAAI7xG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2tI,aAEfnxG,EAAK7nB,KAAK3U,KAAK4tI,kBAEfpxG,EAAK7nB,KAAK3U,KAAK6tI,WAEfrxG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAKmuI,qBAEf3xG,EAAK7nB,KAAK3U,KAAKouI,qBAEf5xG,EAAK7nB,KAAK3U,KAAKquI,oBAER7xG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIuwD,EAAyBg3D,EAAWvzH,EATpCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACQioH,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KAEhC,KAAC,EA1ByB,GAkDxBwwD,GAAkB,WACpB,WAAY+2D,EAAWvzH,EAAM0zH,EAAMqZ,EAAaC,EAAkBC,EAAW5U,EAAUxC,EAAQ0X,EAAqBC,EAAqBC,EAAoBzF,EAAa0F,EAAuBC,EAAaC,GAAgB,oBAC5NxuI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2tI,YAAcA,EACnB3tI,KAAK4tI,iBAAmBA,EACxB5tI,KAAK6tI,UAAYA,EACjB7tI,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,EACdz2H,KAAKmuI,oBAAsBA,EAC3BnuI,KAAKouI,oBAAsBA,EAC3BpuI,KAAKquI,mBAAqBA,EAC1BruI,KAAK4oI,YAAcA,EACnB5oI,KAAKsuI,sBAAwBA,EAC7BtuI,KAAKuuI,YAAcA,EACnBvuI,KAAKwuI,eAAiBA,CACxB,CAiBC,OAjBA,mCAkBD,WACE,IAAIhyG,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2tI,aAEfnxG,EAAK7nB,KAAK3U,KAAK4tI,kBAEfpxG,EAAK7nB,KAAK3U,KAAK6tI,WAEfrxG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAKmuI,qBAEf3xG,EAAK7nB,KAAK3U,KAAKouI,qBAEf5xG,EAAK7nB,KAAK3U,KAAKquI,oBAEf7xG,EAAK7nB,KAAK3U,KAAK4oI,aAEfpsG,EAAK7nB,KAAK3U,KAAKsuI,uBAEf9xG,EAAK7nB,KAAK3U,KAAKuuI,aAEf/xG,EAAK7nB,KAAK3U,KAAKwuI,gBAERhyG,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAIwwD,EAAmB+2D,EAAWvzH,EAb9Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACQioH,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KACZioH,EAAKjoH,KACKioH,EAAKjoH,KACfioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EAlCmB,GAkElBywD,GAAO,WACT,WAAY82D,EAAWvzH,EAAM6tI,EAAKC,GAAK,oBACrC1uI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyuI,IAAMA,EACXzuI,KAAK0uI,IAAMA,CACb,CAMC,OANA,mCAOD,WACE,IAAIlyG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKyuI,KAEfjyG,EAAK7nB,KAAK3U,KAAK0uI,KAERlyG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIywD,EAAQ82D,EAAWvzH,EAFpBi0H,EAAKjoH,KACLioH,EAAKjoH,KAEjB,KAAC,EAZQ,GAsBP0wD,GAAgB,WAClB,WAAY62D,EAAWvzH,EAAM+9H,EAAYC,EAAgBC,GAAe,oBACtE7+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2+H,WAAaA,EAClB3+H,KAAK4+H,eAAiBA,EACtB5+H,KAAK6+H,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAIriG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK2+H,YAEfniG,EAAK7nB,KAAK3U,KAAK4+H,gBAEfpiG,EAAK7nB,KAAK3U,KAAK6+H,eAERriG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI0wD,EAAiB62D,EAAWvzH,EAHtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KAE3B,KAAC,EAdiB,GA0BhB2wD,GAAkB,WACpB,WAAY42D,EAAWvzH,EAAMoqI,EAAgB2D,EAAwBC,EAAUhG,EAAaiG,GAAmB,oBAC7G7uI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgrI,eAAiBA,EACtBhrI,KAAK2uI,uBAAyBA,EAC9B3uI,KAAK4uI,SAAWA,EAChB5uI,KAAK4oI,YAAcA,EACnB5oI,KAAK6uI,kBAAoBA,CAC3B,CASC,OATA,mCAUD,WACE,IAAIryG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKgrI,gBAEfxuG,EAAK7nB,KAAK3U,KAAK2uI,wBAEfnyG,EAAK7nB,KAAK3U,KAAK4uI,UAEfpyG,EAAK7nB,KAAK3U,KAAK4oI,aAEfpsG,EAAK7nB,KAAK3U,KAAK6uI,mBAERryG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI2wD,EAAmB42D,EAAWvzH,EALpBi0H,EAAKjoH,KACGioH,EAAKjoH,KACnBioH,EAAKjoH,KACFioH,EAAKjoH,KACCioH,EAAKjoH,KAE/B,KAAC,EAlBmB,GAkClB4wD,GAA2B,WAC7B,WAAY22D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBa,GAAM,oBACzH/1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK+1H,KAAOA,CACd,CAYC,OAZA,mCAaD,WACE,IAAIv5F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK+1H,MAERv5F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI4wD,EAA4B22D,EAAWvzH,EARnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EAxB4B,GA8C3B6wD,GAAiB,WACnB,WAAY02D,EAAWvzH,EAAMoqI,EAAgB8D,GAAmB,oBAC9D9uI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgrI,eAAiBA,EACtBhrI,KAAK8uI,kBAAoBA,CAC3B,CAMC,OANA,mCAOD,WACE,IAAItyG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKgrI,gBAEfxuG,EAAK7nB,KAAK3U,KAAK8uI,mBAERtyG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI6wD,EAAkB02D,EAAWvzH,EAFnBi0H,EAAKjoH,KACFioH,EAAKjoH,KAE/B,KAAC,EAZkB,GAsBjB8wD,GAAO,WACT,WAAYy2D,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIn3D,EAAQy2D,EAAWvzH,EAChC,KAAC,EARQ,GAcP+8D,GAAoB,WACtB,WAAYw2D,EAAWvzH,EAAM80H,GAAO,oBAClC11H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK01H,MAAQA,CACf,CAKC,OALA,mCAMD,WACE,IAAIl5F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK01H,OAERl5F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI+wD,EAAqBw2D,EAAWvzH,EAD/Bi0H,EAAKjoH,KAEnB,KAAC,EAVqB,GAkBpBgxD,GAAgB,WAClB,WAAYu2D,EAAWvzH,EAAMihI,EAAWC,EAAWiN,EAAUC,EAAWC,EAAkBC,EAAeC,EAAe7Q,GAAO,oBAC7Ht+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6hI,UAAYA,EACjB7hI,KAAK8hI,UAAYA,EACjB9hI,KAAK+uI,SAAWA,EAChB/uI,KAAKgvI,UAAYA,EACjBhvI,KAAKivI,iBAAmBA,EACxBjvI,KAAKkvI,cAAgBA,EACrBlvI,KAAKmvI,cAAgBA,EACrBnvI,KAAKs+H,MAAQA,CACf,CAYC,OAZA,mCAaD,WACE,IAAI9hG,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAK6hI,WAEfrlG,EAAK7nB,KAAK3U,KAAK8hI,WAEftlG,EAAK7nB,KAAK3U,KAAK+uI,UAEfvyG,EAAK7nB,KAAK3U,KAAKgvI,WAEfxyG,EAAK7nB,KAAK3U,KAAKivI,kBAEfzyG,EAAK7nB,KAAK3U,KAAKkvI,eAEf1yG,EAAK7nB,KAAK3U,KAAKmvI,eAEf3yG,EAAK7nB,KAAK3U,KAAKs+H,OAER9hG,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIgxD,EAAiBu2D,EAAWvzH,EARvBi0H,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACbioH,EAAKjoH,KAEnB,KAAC,EAxBiB,GA8ChBixD,GAAa,WACf,WAAYs2D,EAAWvzH,EAAMwuI,EAAeC,GAAe,oBACzDrvI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKovI,cAAgBA,EACrBpvI,KAAKqvI,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI7yG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKovI,eAEf5yG,EAAK7nB,KAAK3U,KAAKqvI,eAER7yG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIixD,EAAcs2D,EAAWvzH,EAFhBi0H,EAAKjoH,KACLioH,EAAKjoH,KAE3B,KAAC,EAZc,GAsBbkxD,GAAW,WACb,WAAYq2D,EAAWvzH,EAAM0zH,EAAMC,EAAaiD,GAAU,oBACxDx3H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw3H,SAAWA,CAClB,CAOC,OAPA,mCAQD,WACE,IAAIh7F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw3H,UAERh7F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIkxD,EAAYq2D,EAAWvzH,EAHvBi0H,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KAEtB,KAAC,EAdY,GA0BXmxD,GAAqC,WACvC,WAAYo2D,EAAWvzH,EAAM0uI,EAAyBC,GAAoB,oBACxEvvI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKsvI,wBAA0BA,EAC/BtvI,KAAKuvI,mBAAqBA,CAC5B,CAMC,OANA,mCAOD,WACE,IAAI/yG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKsvI,yBAEf9yG,EAAK7nB,KAAK3U,KAAKuvI,oBAER/yG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAImxD,EAAsCo2D,EAAWvzH,EAF9Bi0H,EAAKjoH,KACVioH,EAAKjoH,KAEhC,KAAC,EAZsC,GAsBrCoxD,GAAsB,WACxB,WAAYm2D,EAAWvzH,EAAM0zH,EAAMC,EAAaib,EAAUC,EAAUjY,GAAU,oBAC5Ex3H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKwvI,SAAWA,EAChBxvI,KAAKyvI,SAAWA,EAChBzvI,KAAKw3H,SAAWA,CAClB,CASC,OATA,mCAUD,WACE,IAAIh7F,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKwvI,UAEfhzG,EAAK7nB,KAAK3U,KAAKyvI,UAEfjzG,EAAK7nB,KAAK3U,KAAKw3H,UAERh7F,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIoxD,EAAuBm2D,EAAWvzH,EALlCi0H,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAEtB,KAAC,EAlBuB,GAkCtBqxD,GAAyB,WAC3B,WAAYk2D,EAAWvzH,EAAM0zH,EAAMC,EAAamb,GAAsB,oBACpE1vI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK0vI,qBAAuBA,CAC9B,CAOC,OAPA,mCAQD,WACE,IAAIlzG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK0vI,sBAERlzG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIqxD,EAA0Bk2D,EAAWvzH,EAHrCi0H,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KAElC,KAAC,EAd0B,GA0BzBsxD,GAAqB,WACvB,WAAYi2D,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI32D,EAAsBi2D,EAAWvzH,EAC9C,KAAC,EARsB,GAcrBu9D,GAAmC,WACrC,WAAYg2D,EAAWvzH,EAAM0zH,EAAMC,EAAaob,EAAiBC,GAAqB,oBACpF5vI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK2vI,gBAAkBA,EACvB3vI,KAAK4vI,oBAAsBA,CAC7B,CAQC,OARA,mCASD,WACE,IAAIpzG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK2vI,iBAEfnzG,EAAK7nB,KAAK3U,KAAK4vI,qBAERpzG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIuxD,EAAoCg2D,EAAWvzH,EAJ/Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACDioH,EAAKjoH,KAEjC,KAAC,EAhBoC,GA8BnCwxD,GAAgB,WAClB,WAAY+1D,EAAWvzH,EAAM4uI,EAAUK,EAAgBC,EAAcxb,EAAMC,EAAaiD,EAAUuY,GAAU,oBAC1G/vI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKwvI,SAAWA,EAChBxvI,KAAK6vI,eAAiBA,EACtB7vI,KAAK8vI,aAAeA,EACpB9vI,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw3H,SAAWA,EAChBx3H,KAAK+vI,SAAWA,CAClB,CAWC,OAXA,mCAYD,WACE,IAAIvzG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKwvI,UAEfhzG,EAAK7nB,KAAK3U,KAAK6vI,gBAEfrzG,EAAK7nB,KAAK3U,KAAK8vI,cAEftzG,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw3H,UAEfh7F,EAAK7nB,KAAK3U,KAAK+vI,UAERvzG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIwxD,EAAiB+1D,EAAWvzH,EAPxBi0H,EAAKjoH,KACCioH,EAAKjoH,KACPioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KAEtB,KAAC,EAtBiB,GA0ChByxD,GAAmB,WACrB,WAAY81D,EAAWvzH,EAAMovI,EAAgBC,EAAc1b,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgwI,eAAiBA,EACtBhwI,KAAKiwI,aAAeA,EACpBjwI,KAAKu0H,YAAcA,CACrB,CAOC,OAPA,mCAQD,WACE,IAAI/3F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKgwI,gBAEfxzG,EAAK7nB,KAAK3U,KAAKiwI,cAEfzzG,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIyxD,EAAoB81D,EAAWvzH,EAHrBi0H,EAAKjoH,KACPioH,EAAKjoH,KACNioH,EAAKjoH,KAEzB,KAAC,EAdoB,GA0BnB0xD,GAAwB,WAC1B,WAAY61D,EAAWvzH,EAAMsvI,EAAaC,EAAmBC,EAAgBC,EAAyBC,GAAiB,oBACrHtwI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKkwI,YAAcA,EACnBlwI,KAAKmwI,kBAAoBA,EACzBnwI,KAAKowI,eAAiBA,EACtBpwI,KAAKqwI,wBAA0BA,EAC/BrwI,KAAKswI,gBAAkBA,CACzB,CASC,OATA,mCAUD,WACE,IAAI9zG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKkwI,aAEf1zG,EAAK7nB,KAAK3U,KAAKmwI,mBAEf3zG,EAAK7nB,KAAK3U,KAAKowI,gBAEf5zG,EAAK7nB,KAAK3U,KAAKqwI,yBAEf7zG,EAAK7nB,KAAK3U,KAAKswI,iBAER9zG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI0xD,EAAyB61D,EAAWvzH,EAL7Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACRioH,EAAKjoH,KACIioH,EAAKjoH,KACbioH,EAAKjoH,KAE7B,KAAC,EAlByB,GAkCxB2xD,GAA2B,WAC7B,WAAY41D,EAAWvzH,EAAM4uI,EAAUK,EAAgBC,EAAcxb,EAAMC,EAAaiD,EAAUuY,EAAUQ,EAAiBC,GAAc,oBACzIxwI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKwvI,SAAWA,EAChBxvI,KAAK6vI,eAAiBA,EACtB7vI,KAAK8vI,aAAeA,EACpB9vI,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw3H,SAAWA,EAChBx3H,KAAK+vI,SAAWA,EAChB/vI,KAAKuwI,gBAAkBA,EACvBvwI,KAAKwwI,aAAeA,CACtB,CAaC,OAbA,mCAcD,WACE,IAAIh0G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKwvI,UAEfhzG,EAAK7nB,KAAK3U,KAAK6vI,gBAEfrzG,EAAK7nB,KAAK3U,KAAK8vI,cAEftzG,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw3H,UAEfh7F,EAAK7nB,KAAK3U,KAAK+vI,UAEfvzG,EAAK7nB,KAAK3U,KAAKuwI,iBAEf/zG,EAAK7nB,KAAK3U,KAAKwwI,cAERh0G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2xD,EAA4B41D,EAAWvzH,EATnCi0H,EAAKjoH,KACCioH,EAAKjoH,KACPioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KAE1B,KAAC,EA1B4B,GAkD3B4xD,GAAe,WACjB,WAAY21D,EAAWvzH,EAAM6vI,GAAW,oBACtCzwI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKywI,UAAYA,CACnB,CAKC,OALA,mCAMD,WACE,IAAIj0G,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKywI,WAERj0G,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI4xD,EAAgB21D,EAAWvzH,EADtBi0H,EAAKjoH,KAEvB,KAAC,EAVgB,GAkBf6xD,GAAkB,WACpB,WAAY01D,EAAWvzH,EAAM0zH,EAAMC,EAAaib,EAAUkB,EAASX,EAAUvY,GAAU,oBACrFx3H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKwvI,SAAWA,EAChBxvI,KAAK0wI,QAAUA,EACf1wI,KAAK+vI,SAAWA,EAChB/vI,KAAKw3H,SAAWA,CAClB,CAUC,OAVA,mCAWD,WACE,IAAIh7F,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKwvI,UAEfhzG,EAAK7nB,KAAK3U,KAAK0wI,SAEfl0G,EAAK7nB,KAAK3U,KAAK+vI,UAEfvzG,EAAK7nB,KAAK3U,KAAKw3H,UAERh7F,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI6xD,EAAmB01D,EAAWvzH,EAN9Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KAEtB,KAAC,EApBmB,GAsClB8xD,GAAqB,WACvB,WAAYy1D,EAAWvzH,EAAM0zH,EAAMC,EAAaoc,EAAkBC,GAAkB,oBAClF5wI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK2wI,iBAAmBA,EACxB3wI,KAAK4wI,iBAAmBA,CAC1B,CAQC,OARA,mCASD,WACE,IAAIp0G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK2wI,kBAEfn0G,EAAK7nB,KAAK3U,KAAK4wI,kBAERp0G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI8xD,EAAsBy1D,EAAWvzH,EAJjCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KAE9B,KAAC,EAhBsB,GA8BrB+xD,GAA0B,WAC5B,WAAYw1D,EAAWvzH,EAAMiwI,EAAeC,EAAeR,GAAiB,oBAC1EtwI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6wI,cAAgBA,EACrB7wI,KAAK8wI,cAAgBA,EACrB9wI,KAAKswI,gBAAkBA,CACzB,CAOC,OAPA,mCAQD,WACE,IAAI9zG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK6wI,eAEfr0G,EAAK7nB,KAAK3U,KAAK8wI,eAEft0G,EAAK7nB,KAAK3U,KAAKswI,iBAER9zG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+xD,EAA2Bw1D,EAAWvzH,EAH7Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KAE7B,KAAC,EAd2B,GA0B1BgyD,GAAkC,WACpC,WAAYu1D,EAAWvzH,EAAMiwI,EAAeC,EAAeR,EAAiBS,EAAkBC,GAAkB,oBAC9GhxI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6wI,cAAgBA,EACrB7wI,KAAK8wI,cAAgBA,EACrB9wI,KAAKswI,gBAAkBA,EACvBtwI,KAAK+wI,iBAAmBA,EACxB/wI,KAAKgxI,iBAAmBA,CAC1B,CASC,OATA,mCAUD,WACE,IAAIx0G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAK6wI,eAEfr0G,EAAK7nB,KAAK3U,KAAK8wI,eAEft0G,EAAK7nB,KAAK3U,KAAKswI,iBAEf9zG,EAAK7nB,KAAK3U,KAAK+wI,kBAEfv0G,EAAK7nB,KAAK3U,KAAKgxI,kBAERx0G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIgyD,EAAmCu1D,EAAWvzH,EALrCi0H,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KAE9B,KAAC,EAlBmC,GAkClCiyD,GAA6B,WAC/B,WAAYs1D,EAAWvzH,EAAM0zH,EAAMC,EAAaib,EAAUkB,EAASX,EAAUvY,EAAUgZ,GAAc,oBACnGxwI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKwvI,SAAWA,EAChBxvI,KAAK0wI,QAAUA,EACf1wI,KAAK+vI,SAAWA,EAChB/vI,KAAKw3H,SAAWA,EAChBx3H,KAAKwwI,aAAeA,CACtB,CAWC,OAXA,mCAYD,WACE,IAAIh0G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKwvI,UAEfhzG,EAAK7nB,KAAK3U,KAAK0wI,SAEfl0G,EAAK7nB,KAAK3U,KAAK+vI,UAEfvzG,EAAK7nB,KAAK3U,KAAKw3H,UAEfh7F,EAAK7nB,KAAK3U,KAAKwwI,cAERh0G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIiyD,EAA8Bs1D,EAAWvzH,EAPzCi0H,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KAE1B,KAAC,EAtB8B,GA0C7BkyD,GAAqB,WACvB,WAAYq1D,EAAWvzH,EAAM0zH,EAAMC,EAAa4T,EAAaqH,GAAU,oBACrExvI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKooI,WAAaD,EAClBnoI,KAAKwvI,SAAWA,CAClB,CAQC,OARA,mCASD,WACE,IAAIhzG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKooI,YAEf5rG,EAAK7nB,KAAK3U,KAAKwvI,UAERhzG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIkyD,EAAsBq1D,EAAWvzH,EAJjCi0H,EAAKjoH,KACEioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KAEtB,KAAC,EAhBsB,GA8BrBmyD,GAAuB,WACzB,WAAYo1D,EAAWvzH,EAAM0zH,EAAMC,EAAa0c,EAAkBC,EAAkBC,GAAY,oBAC9FnxI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKixI,iBAAmBA,EACxBjxI,KAAKkxI,iBAAmBA,EACxBlxI,KAAKmxI,WAAaA,CACpB,CASC,OATA,mCAUD,WACE,IAAI30G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKixI,kBAEfz0G,EAAK7nB,KAAK3U,KAAKkxI,kBAEf10G,EAAK7nB,KAAK3U,KAAKmxI,YAER30G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAImyD,EAAwBo1D,EAAWvzH,EALnCi0H,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KACXioH,EAAKjoH,KAExB,KAAC,EAlBwB,GAkCvBoyD,GAA0B,WAC5B,WAAYm1D,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI71D,EAA2Bm1D,EAAWvzH,EACnD,KAAC,EAR2B,GAc1Bq+D,GAAkB,WACpB,WAAYk1D,EAAWvzH,EAAMwwI,EAAgBC,GAAe,oBAC1DrxI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKoxI,eAAiBA,EACtBpxI,KAAKqxI,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI70G,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKoxI,gBAEf50G,EAAK7nB,KAAK3U,KAAKqxI,eAER70G,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIqyD,EAAmBk1D,EAAWvzH,EAFpBi0H,EAAKjoH,KACNioH,EAAKjoH,KAE3B,KAAC,EAZmB,GAsBlBsyD,GAAqB,WACvB,WAAYi1D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKmc,EAAiBC,EAAe7c,GAAgB,oBACxK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAKsxI,gBAAkBA,EACvBtxI,KAAKuxI,cAAgBA,EACrBvxI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKsxI,iBAEf90G,EAAK7nB,KAAK3U,KAAKuxI,eAEf/0G,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIsyD,EAAsBi1D,EAAWvzH,EAX7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACOioH,EAAKjoH,KACPioH,EAAKjoH,KACJioH,EAAKjoH,KAE5B,KAAC,EA9BsB,GA0DrBuyD,GAAyB,WAC3B,WAAYg1D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgB4c,EAAiBC,GAAe,oBACnMvxI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKsxI,gBAAkBA,EACvBtxI,KAAKuxI,cAAgBA,CACvB,CAgBC,OAhBA,mCAiBD,WACE,IAAI/0G,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKsxI,iBAEf90G,EAAK7nB,KAAK3U,KAAKuxI,eAER/0G,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIuyD,EAA0Bg1D,EAAWvzH,EAZjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KAE3B,KAAC,EAhC0B,GA8DzBwyD,GAAgB,WAClB,WAAY+0D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwyD,EAAiB+0D,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BiB,GAkDhByyD,GAAoB,WACtB,WAAY80D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIyyD,EAAqB80D,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpB0yD,GAAS,WACX,WAAY60D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0yD,EAAU60D,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDT2yD,GAAqB,WACvB,WAAY40D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2yD,EAAsB40D,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BsB,GAkDrB4yD,GAAa,WACf,WAAY20D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4yD,EAAc20D,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDb6yD,GAAS,WACX,WAAY00D,EAAWvzH,EAAM0zH,EAAMC,EAAasM,EAAiBC,EAAkBC,EAAeC,EAAcC,EAAkBuQ,EAAWC,EAAaC,EAAWC,GAAe,oBAClL3xI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK6gI,gBAAkBA,EACvB7gI,KAAK8gI,iBAAmBA,EACxB9gI,KAAK+gI,cAAgBA,EACrB/gI,KAAKghI,aAAeA,EACpBhhI,KAAKihI,iBAAmBA,EACxBjhI,KAAKwxI,UAAYA,EACjBxxI,KAAKyxI,YAAcA,EACnBzxI,KAAK0xI,UAAYA,EACjB1xI,KAAK2xI,cAAgBA,CACvB,CAeC,OAfA,mCAgBD,WACE,IAAIn1G,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK6gI,iBAEfrkG,EAAK7nB,KAAK3U,KAAK8gI,kBAEftkG,EAAK7nB,KAAK3U,KAAK+gI,eAEfvkG,EAAK7nB,KAAK3U,KAAKghI,cAEfxkG,EAAK7nB,KAAK3U,KAAKihI,kBAEfzkG,EAAK7nB,KAAK3U,KAAKwxI,WAEfh1G,EAAK7nB,KAAK3U,KAAKyxI,aAEfj1G,EAAK7nB,KAAK3U,KAAK0xI,WAEfl1G,EAAK7nB,KAAK3U,KAAK2xI,eAERn1G,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI6yD,EAAU00D,EAAWvzH,EAXrBi0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACZioH,EAAKjoH,KACHioH,EAAKjoH,KACPioH,EAAKjoH,KACDioH,EAAKjoH,KAE3B,KAAC,EA9BU,GA0DT8yD,GAAqB,WACvB,WAAYy0D,EAAWvzH,EAAMw3H,EAAaC,EAAaiL,EAAe3H,EAAUsE,GAAO,oBACrFjgI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKsjI,cAAgBA,EACrBtjI,KAAK27H,SAAWA,EAChB37H,KAAKigI,MAAQA,CACf,CASC,OATA,mCAUD,WACE,IAAIzjG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKsjI,eAEf9mG,EAAK7nB,KAAK3U,KAAK27H,UAEfn/F,EAAK7nB,KAAK3U,KAAKigI,OAERzjG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI8yD,EAAsBy0D,EAAWvzH,EAL1Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACRioH,EAAKjoH,KAEnB,KAAC,EAlBsB,GAkCrB+yD,GAAe,WACjB,WAAYw0D,EAAWvzH,EAAMgxI,GAAU,oBACrC5xI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK4xI,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIp1G,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK4xI,UAERp1G,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI+yD,EAAgBw0D,EAAWvzH,EADvBi0H,EAAKjoH,KAEtB,KAAC,EAVgB,GAkBfgzD,GAAkB,WACpB,WAAYu0D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgzD,EAAmBu0D,EAAWvzH,EAT1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BmB,GAkDlBizD,GAAsB,WACxB,WAAYs0D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIizD,EAAuBs0D,EAAWvzH,EAV9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BuB,GAsDtBkzD,GAAY,WACd,WAAYq0D,EAAWvzH,EAAM6gI,EAAYC,GAAU,oBACjD1hI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyhI,WAAaA,EAClBzhI,KAAK0hI,SAAWA,CAClB,CAMC,OANA,mCAOD,WACE,IAAIllG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKyhI,YAEfjlG,EAAK7nB,KAAK3U,KAAK0hI,UAERllG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIkzD,EAAaq0D,EAAWvzH,EAFlBi0H,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EAZa,GAsBZmzD,GAAS,WACX,WAAYo0D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,GAAY,oBAClFx0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,CACpB,CASC,OATA,mCAUD,WACE,IAAIh4F,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAERh4F,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAImzD,EAAUo0D,EAAWvzH,EALjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KAExB,KAAC,EAlBU,GAkCTozD,GAAmB,WACrB,WAAYm0D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIozD,EAAoBm0D,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBoB,GA8BnBqzD,GAAkB,WACpB,WAAYk0D,EAAWvzH,EAAMoqI,GAAgB,oBAC3ChrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgrI,eAAiBA,CACxB,CAKC,OALA,mCAMD,WACE,IAAIxuG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKgrI,gBAERxuG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIqzD,EAAmBk0D,EAAWvzH,EADpBi0H,EAAKjoH,KAE5B,KAAC,EAVmB,GAkBlBszD,GAAY,WACd,WAAYi0D,EAAWvzH,EAAM0zH,EAAMC,EAAasM,EAAiBC,EAAkBC,EAAeC,EAAcC,EAAkB4Q,EAAiBC,EAAmBC,EAAoBC,GAAsB,oBAC9MhyI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK6gI,gBAAkBA,EACvB7gI,KAAK8gI,iBAAmBA,EACxB9gI,KAAK+gI,cAAgBA,EACrB/gI,KAAKghI,aAAeA,EACpBhhI,KAAKihI,iBAAmBA,EACxBjhI,KAAK6xI,gBAAkBA,EACvB7xI,KAAK8xI,kBAAoBA,EACzB9xI,KAAK+xI,mBAAqBA,EAC1B/xI,KAAKgyI,qBAAuBA,CAC9B,CAeC,OAfA,mCAgBD,WACE,IAAIx1G,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK6gI,iBAEfrkG,EAAK7nB,KAAK3U,KAAK8gI,kBAEftkG,EAAK7nB,KAAK3U,KAAK+gI,eAEfvkG,EAAK7nB,KAAK3U,KAAKghI,cAEfxkG,EAAK7nB,KAAK3U,KAAKihI,kBAEfzkG,EAAK7nB,KAAK3U,KAAK6xI,iBAEfr1G,EAAK7nB,KAAK3U,KAAK8xI,mBAEft1G,EAAK7nB,KAAK3U,KAAK+xI,oBAEfv1G,EAAK7nB,KAAK3U,KAAKgyI,sBAERx1G,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIszD,EAAai0D,EAAWvzH,EAXxBi0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KACHioH,EAAKjoH,KAElC,KAAC,EA9Ba,GA0DZuzD,GAAW,WACb,WAAYg0D,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYM,EAAUJ,GAAgB,oBAC5G10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK80H,SAAWA,EAChB90H,KAAK00H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAIl4F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK80H,UAEft4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIuzD,EAAYg0D,EAAWvzH,EAPnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EAtBY,GA0CXwzD,GAAc,WAChB,WAAY+zD,EAAWvzH,EAAMqxI,GAAY,oBACvCjyI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiyI,WAAaA,CACpB,CAKC,OALA,mCAMD,WACE,IAAIz1G,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKiyI,YAERz1G,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIwzD,EAAe+zD,EAAWvzH,EADpBi0H,EAAKjoH,KAExB,KAAC,EAVe,GAkBdyzD,GAAgB,WAClB,WAAY8zD,EAAWvzH,EAAMqxI,EAAYrD,EAAUxU,GAAe,oBAChEp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiyI,WAAaA,EAClBjyI,KAAK4uI,SAAWA,EAChB5uI,KAAKo6H,cAAgBA,CACvB,CAOC,OAPA,mCAQD,WACE,IAAI59F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKiyI,YAEfz1G,EAAK7nB,KAAK3U,KAAK4uI,UAEfpyG,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIyzD,EAAiB8zD,EAAWvzH,EAHtBi0H,EAAKjoH,KACPioH,EAAKjoH,KACAioH,EAAKjoH,KAE3B,KAAC,EAdiB,GA0BhB0zD,GAAgB,WAClB,WAAY6zD,EAAWvzH,EAAMqxI,EAAYrD,EAAUxU,EAAeL,GAAc,oBAC9E/5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiyI,WAAaA,EAClBjyI,KAAK4uI,SAAWA,EAChB5uI,KAAKo6H,cAAgBA,EACrBp6H,KAAK+5H,aAAeA,CACtB,CAQC,OARA,mCASD,WACE,IAAIv9F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKiyI,YAEfz1G,EAAK7nB,KAAK3U,KAAK4uI,UAEfpyG,EAAK7nB,KAAK3U,KAAKo6H,eAEf59F,EAAK7nB,KAAK3U,KAAK+5H,cAERv9F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI0zD,EAAiB6zD,EAAWvzH,EAJtBi0H,EAAKjoH,KACPioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE1B,KAAC,EAhBiB,GA8BhB2zD,GAAyB,WAC3B,WAAY4zD,EAAWvzH,EAAMqxI,EAAYzB,EAAcrb,GAAK,oBAC1Dn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiyI,WAAaA,EAClBjyI,KAAKwwI,aAAeA,EACpBxwI,KAAKm1H,IAAMA,CACb,CAOC,OAPA,mCAQD,WACE,IAAI34F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKiyI,YAEfz1G,EAAK7nB,KAAK3U,KAAKwwI,cAEfh0G,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI2zD,EAA0B4zD,EAAWvzH,EAH/Bi0H,EAAKjoH,KACHioH,EAAKjoH,KACdioH,EAAKjoH,KAEjB,KAAC,EAd0B,GA0BzB4zD,GAAY,WACd,WAAY2zD,EAAWvzH,EAAMy+H,GAAU,oBACrCr/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq/H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI7iG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKq/H,UAER7iG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI4zD,EAAa2zD,EAAWvzH,EADpBi0H,EAAKjoH,KAEtB,KAAC,EAVa,GAkBZ6zD,GAAiB,WACnB,WAAY0zD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6zD,EAAkB0zD,EAAWvzH,EATzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BkB,GAkDjB8zD,GAAsB,WACxB,WAAYyzD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8zD,EAAuByzD,EAAWvzH,EAT9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BuB,GAkDtB+zD,GAAe,WACjB,WAAYwzD,EAAWvzH,EAAM6zH,EAAgBH,EAAMC,EAAa2d,EAAOC,GAAW,oBAChFnyI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKy0H,eAAiBA,EACtBz0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKkyI,MAAQA,EACblyI,KAAKmyI,UAAYA,CACnB,CASC,OATA,mCAUD,WACE,IAAI31G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKkyI,OAEf11G,EAAK7nB,KAAK3U,KAAKmyI,WAER31G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI+zD,EAAgBwzD,EAAWvzH,EALjBi0H,EAAKjoH,KACfioH,EAAKjoH,KACEioH,EAAKjoH,KACXioH,EAAKjoH,KACDioH,EAAKjoH,KAEvB,KAAC,EAlBgB,GAkCfg0D,GAA2B,WAC7B,WAAYuzD,EAAWvzH,EAAM0zH,EAAMC,EAAa6d,EAAsBC,GAAsB,oBAC1FryI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKoyI,qBAAuBA,EAC5BpyI,KAAKqyI,qBAAuBA,CAC9B,CAQC,OARA,mCASD,WACE,IAAI71G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKoyI,sBAEf51G,EAAK7nB,KAAK3U,KAAKqyI,sBAER71G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIg0D,EAA4BuzD,EAAWvzH,EAJvCi0H,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACLioH,EAAKjoH,KAElC,KAAC,EAhB4B,GA8B3Bi0D,GAAwB,WAC1B,WAAYszD,EAAWvzH,EAAM0xI,EAAsBC,GAAuB,oBACxEvyI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKsyI,qBAAuBA,EAC5BtyI,KAAKuyI,sBAAwBA,CAC/B,CAMC,OANA,mCAOD,WACE,IAAI/1G,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKsyI,sBAEf91G,EAAK7nB,KAAK3U,KAAKuyI,uBAER/1G,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIi0D,EAAyBszD,EAAWvzH,EAFpBi0H,EAAKjoH,KACJioH,EAAKjoH,KAEnC,KAAC,EAZyB,GAsBxBk0D,GAAe,WACjB,WAAYqzD,EAAWvzH,EAAMomI,EAAWC,EAASuL,EAAa5J,GAAa,oBACzE5oI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgnI,UAAYA,EACjBhnI,KAAKinI,QAAUA,EACfjnI,KAAKwyI,YAAcA,EACnBxyI,KAAK4oI,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAIpsG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKgnI,WAEfxqG,EAAK7nB,KAAK3U,KAAKinI,SAEfzqG,EAAK7nB,KAAK3U,KAAKwyI,aAEfh2G,EAAK7nB,KAAK3U,KAAK4oI,aAERpsG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIk0D,EAAgBqzD,EAAWvzH,EAJtBi0H,EAAKjoH,KACPioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KAEzB,KAAC,EAhBgB,GA8Bfm0D,GAAqB,WACvB,WAAYozD,EAAWvzH,EAAMq1H,EAAUmE,GAAe,oBACpDp6H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi2H,SAAWA,EAChBj2H,KAAKo6H,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI59F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi2H,UAEfz5F,EAAK7nB,KAAK3U,KAAKo6H,eAER59F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIm0D,EAAsBozD,EAAWvzH,EAF7Bi0H,EAAKjoH,KACAioH,EAAKjoH,KAE3B,KAAC,EAZsB,GAsBrBo0D,GAAS,WACX,WAAYmzD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo0D,EAAUmzD,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDTq0D,GAAa,WACf,WAAYkzD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq0D,EAAckzD,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDbs0D,GAAe,WACjB,WAAYizD,EAAWvzH,EAAM6xI,EAAYC,EAAmBC,EAAOC,EAAcC,EAAkBC,EAAmBC,EAA0BC,GAAc,oBAC5JhzI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyyI,WAAaA,EAClBzyI,KAAK0yI,kBAAoBA,EACzB1yI,KAAK2yI,MAAQA,EACb3yI,KAAK4yI,aAAeA,EACpB5yI,KAAK6yI,iBAAmBA,EACxB7yI,KAAK8yI,kBAAoBA,EACzB9yI,KAAK+yI,yBAA2BA,EAChC/yI,KAAKgzI,aAAeA,CACtB,CAYC,OAZA,mCAaD,WACE,IAAIx2G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKyyI,YAEfj2G,EAAK7nB,KAAK3U,KAAK0yI,mBAEfl2G,EAAK7nB,KAAK3U,KAAK2yI,OAEfn2G,EAAK7nB,KAAK3U,KAAK4yI,cAEfp2G,EAAK7nB,KAAK3U,KAAK6yI,kBAEfr2G,EAAK7nB,KAAK3U,KAAK8yI,mBAEft2G,EAAK7nB,KAAK3U,KAAK+yI,0BAEfv2G,EAAK7nB,KAAK3U,KAAKgzI,cAERx2G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIs0D,EAAgBizD,EAAWvzH,EARrBi0H,EAAKjoH,KACEioH,EAAKjoH,KACjBioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACEioH,EAAKjoH,KACjBioH,EAAKjoH,KAE1B,KAAC,EAxBgB,GA8Cfu0D,GAA0B,WAC5B,WAAYgzD,EAAWvzH,EAAMw3H,EAAaC,EAAaY,GAAU,oBAC/Dj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,CAClB,CAOC,OAPA,mCAQD,WACE,IAAIz8F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIu0D,EAA2BgzD,EAAWvzH,EAH/Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KAEtB,KAAC,EAd2B,GA0B1Bw0D,GAAO,WACT,WAAY+yD,EAAWvzH,EAAMumI,GAAU,oBACrCnnI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKmnI,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI3qG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKmnI,UAER3qG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIw0D,EAAQ+yD,EAAWvzH,EADfi0H,EAAKjoH,KAEtB,KAAC,EAVQ,GAkBPy0D,GAAS,WACX,WAAY8yD,EAAWvzH,EAAM+hI,EAAcsQ,GAAgB,oBACzDjzI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2iI,aAAeA,EACpB3iI,KAAKizI,eAAiBA,CACxB,CAMC,OANA,mCAOD,WACE,IAAIz2G,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK2iI,cAEfnmG,EAAK7nB,KAAK3U,KAAKizI,gBAERz2G,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIy0D,EAAU8yD,EAAWvzH,EAFbi0H,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAZU,GAsBT00D,GAAqB,WACvB,WAAY6yD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAgBxe,GAAgB,oBAClI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAKkzI,eAAiBA,EACtBlzI,KAAK00H,eAAiBA,CACxB,CAYC,OAZA,mCAaD,WACE,IAAIl4F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKkzI,gBAEf12G,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI00D,EAAsB6yD,EAAWvzH,EAR7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE5B,KAAC,EAxBsB,GA8CrB20D,GAA8B,WAChC,WAAY4yD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAamR,EAAekB,EAAeuM,EAAYC,EAAgB9M,GAAkB,oBAClJtmI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK0lI,cAAgBA,EACrB1lI,KAAK4mI,cAAgBA,EACrB5mI,KAAKmzI,WAAaA,EAClBnzI,KAAKozI,eAAiBA,EACtBpzI,KAAKsmI,iBAAmBA,CAC1B,CAaC,OAbA,mCAcD,WACE,IAAI9pG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK4mI,eAEfpqG,EAAK7nB,KAAK3U,KAAKmzI,YAEf32G,EAAK7nB,KAAK3U,KAAKozI,gBAEf52G,EAAK7nB,KAAK3U,KAAKsmI,kBAER9pG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI20D,EAA+B4yD,EAAWvzH,EATtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACDioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EA1B+B,GAkD9B40D,GAAS,WACX,WAAY2yD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAAiB,oBAC3I50H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK00H,eAAiBA,EACtB10H,KAAK20H,OAASA,EACd30H,KAAK40H,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAIp4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK20H,QAEfn4F,EAAK7nB,KAAK3U,KAAK40H,iBAERp4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI40D,EAAU2yD,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACbioH,EAAKjoH,KACIioH,EAAKjoH,KAE7B,KAAC,EA1BU,GAkDT60D,GAAS,WACX,WAAY0yD,EAAWvzH,EAAM6zH,EAAgB4e,EAAYC,EAAWC,EAAaC,EAAcC,EAAcvB,EAAOC,GAAW,oBAC7HnyI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKy0H,eAAiBA,EACtBz0H,KAAKqzI,WAAaA,EAClBrzI,KAAKszI,UAAYA,EACjBtzI,KAAKuzI,YAAcA,EACnBvzI,KAAKwzI,aAAeA,EACpBxzI,KAAKyzI,aAAeA,EACpBzzI,KAAKkyI,MAAQA,EACblyI,KAAKmyI,UAAYA,CACnB,CAYC,OAZA,mCAaD,WACE,IAAI31G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKqzI,YAEf72G,EAAK7nB,KAAK3U,KAAKszI,WAEf92G,EAAK7nB,KAAK3U,KAAKuzI,aAEf/2G,EAAK7nB,KAAK3U,KAAKwzI,cAEfh3G,EAAK7nB,KAAK3U,KAAKyzI,cAEfj3G,EAAK7nB,KAAK3U,KAAKkyI,OAEf11G,EAAK7nB,KAAK3U,KAAKmyI,WAER31G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI60D,EAAU0yD,EAAWvzH,EARXi0H,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACZioH,EAAKjoH,KACDioH,EAAKjoH,KAEvB,KAAC,EAxBU,GA8CT80D,GAAwB,WAC1B,WAAYyyD,EAAWvzH,EAAM8yI,EAAWC,EAAiBzB,GAAO,oBAC9DlyI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK0zI,UAAYA,EACjB1zI,KAAK2zI,gBAAkBA,EACvB3zI,KAAKkyI,MAAQA,CACf,CAOC,OAPA,mCAQD,WACE,IAAI11G,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK0zI,WAEfl3G,EAAK7nB,KAAK3U,KAAK2zI,iBAEfn3G,EAAK7nB,KAAK3U,KAAKkyI,OAER11G,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI80D,EAAyByyD,EAAWvzH,EAH/Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACfioH,EAAKjoH,KAEnB,KAAC,EAdyB,GA0BxB+0D,GAA0B,WAC5B,WAAYwyD,EAAWvzH,EAAM0zH,EAAMC,EAAaqf,EAAeC,EAAgBC,EAAS5S,GAAO,oBAC7FlhI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK4zI,cAAgBA,EACrB5zI,KAAK6zI,eAAiBA,EACtB7zI,KAAK8zI,QAAUA,EACf9zI,KAAKkhI,MAAQA,CACf,CAUC,OAVA,mCAWD,WACE,IAAI1kG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK4zI,eAEfp3G,EAAK7nB,KAAK3U,KAAK6zI,gBAEfr3G,EAAK7nB,KAAK3U,KAAK8zI,SAEft3G,EAAK7nB,KAAK3U,KAAKkhI,OAER1kG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI+0D,EAA2BwyD,EAAWvzH,EANtCi0H,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KACZioH,EAAKjoH,KACPioH,EAAKjoH,KAEnB,KAAC,EApB2B,GAsC1Bg1D,GAAmB,WACrB,WAAYuyD,EAAWvzH,EAAM0zH,EAAMC,GAAa,oBAC9Cv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI/3F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIg1D,EAAoBuyD,EAAWvzH,EAF/Bi0H,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAZoB,GAsBnBi1D,GAAyB,WAC3B,WAAYsyD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,GAAM,oBACpDzjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAIjnG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAERjnG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIi1D,EAA0BsyD,EAAWvzH,EAHrCi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KAElB,KAAC,EAd0B,GA0BzBk1D,GAAO,WACT,WAAYqyD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,EAAgBmS,GAAkB,oBAC1J7mI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,EACtB10H,KAAK6mI,iBAAmBA,CAC1B,CAcC,OAdA,mCAeD,WACE,IAAIrqG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK6mI,kBAERrqG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIk1D,EAAQqyD,EAAWvzH,EAVfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EA5BQ,GAsDPm1D,GAAW,WACb,WAAYoyD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIm1D,EAAYoyD,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXo1D,GAAc,WAChB,WAAYmyD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo1D,EAAemyD,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdq1D,GAAkB,WACpB,WAAYkyD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq1D,EAAmBkyD,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBs1D,GAAc,WAChB,WAAYiyD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIs1D,EAAeiyD,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdu1D,GAAkB,WACpB,WAAYgyD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIu1D,EAAmBgyD,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBw1D,GAAe,WACjB,WAAY+xD,EAAWvzH,EAAMq6H,EAASC,EAASC,EAAMC,EAAkBC,EAAWuC,EAAOmW,EAAQC,EAAkBC,GAAO,oBACxHj0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi7H,QAAUA,EACfj7H,KAAKk7H,QAAUA,EACfl7H,KAAKm7H,KAAOA,EACZn7H,KAAKo7H,iBAAmBA,EACxBp7H,KAAKq7H,UAAYA,EACjBr7H,KAAK49H,MAAQA,EACb59H,KAAK+zI,OAASA,EACd/zI,KAAKg0I,iBAAmBA,EACxBh0I,KAAKi0I,MAAQA,CACf,CAaC,OAbA,mCAcD,WACE,IAAIz3G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKi7H,SAEfz+F,EAAK7nB,KAAK3U,KAAKk7H,SAEf1+F,EAAK7nB,KAAK3U,KAAKm7H,MAEf3+F,EAAK7nB,KAAK3U,KAAKo7H,kBAEf5+F,EAAK7nB,KAAK3U,KAAKq7H,WAEf7+F,EAAK7nB,KAAK3U,KAAK49H,OAEfphG,EAAK7nB,KAAK3U,KAAK+zI,QAEfv3G,EAAK7nB,KAAK3U,KAAKg0I,kBAEfx3G,EAAK7nB,KAAK3U,KAAKi0I,OAERz3G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIw1D,EAAgB+xD,EAAWvzH,EATxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACOioH,EAAKjoH,KACZioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KACKioH,EAAKjoH,KAChBioH,EAAKjoH,KAEnB,KAAC,EA1BgB,GAkDfy1D,GAAY,WACd,WAAY8xD,EAAWvzH,EAAMk5H,GAAU,oBACrC95H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK85H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIt9F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK85H,UAERt9F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIy1D,EAAa8xD,EAAWvzH,EADpBi0H,EAAKjoH,KAEtB,KAAC,EAVa,GAkBZ01D,GAAY,WACd,WAAY6xD,EAAWvzH,EAAMszI,EAASC,EAASC,GAAW,oBACxDp0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk0I,QAAUA,EACfl0I,KAAKm0I,QAAUA,EACfn0I,KAAKo0I,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAI53G,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKk0I,SAEf13G,EAAK7nB,KAAK3U,KAAKm0I,SAEf33G,EAAK7nB,KAAK3U,KAAKo0I,WAER53G,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI01D,EAAa6xD,EAAWvzH,EAHrBi0H,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KAEvB,KAAC,EAda,GA0BZ21D,GAAe,WACjB,WAAY4xD,EAAWvzH,EAAMszI,EAASC,GAAS,oBAC7Cn0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk0I,QAAUA,EACfl0I,KAAKm0I,QAAUA,CACjB,CAMC,OANA,mCAOD,WACE,IAAI33G,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKk0I,SAEf13G,EAAK7nB,KAAK3U,KAAKm0I,SAER33G,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI21D,EAAgB4xD,EAAWvzH,EAFxBi0H,EAAKjoH,KACLioH,EAAKjoH,KAErB,KAAC,EAZgB,GAsBf41D,GAAQ,WACV,WAAY2xD,EAAWvzH,EAAMq4H,GAAU,oBACrCj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAIz8F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI41D,EAAS2xD,EAAWvzH,EADhBi0H,EAAKjoH,KAEtB,KAAC,EAVS,GAkBR61D,GAAQ,WACV,WAAY0xD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI61D,EAAS0xD,EAAWvzH,EAThBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BS,GAkDR81D,GAAoB,WACtB,WAAYyxD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI81D,EAAqByxD,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpB+1D,GAAY,WACd,WAAYwxD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI+1D,EAAawxD,EAAWvzH,EAVpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Ba,GAsDZg2D,GAAQ,WACV,WAAYuxD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIjyD,EAASuxD,EAAWvzH,EACjC,KAAC,EARS,GAcRiiE,GAAe,WACjB,WAAYsxD,EAAWvzH,EAAMqxI,EAAYoC,GAAgB,oBACvDr0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiyI,WAAaA,EAClBjyI,KAAKq0I,eAAiBA,CACxB,CAMC,OANA,mCAOD,WACE,IAAI73G,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKiyI,YAEfz1G,EAAK7nB,KAAK3U,KAAKq0I,gBAER73G,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIi2D,EAAgBsxD,EAAWvzH,EAFrBi0H,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EAZgB,GAsBfk2D,GAAiB,WACnB,WAAYqxD,EAAWvzH,EAAM+hI,EAAc2R,EAAiBC,GAAiB,oBAC3Ev0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2iI,aAAeA,EACpB3iI,KAAKs0I,gBAAkBA,EACvBt0I,KAAKu0I,gBAAkBA,CACzB,CAOC,OAPA,mCAQD,WACE,IAAI/3G,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK2iI,cAEfnmG,EAAK7nB,KAAK3U,KAAKs0I,iBAEf93G,EAAK7nB,KAAK3U,KAAKu0I,iBAER/3G,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIk2D,EAAkBqxD,EAAWvzH,EAHrBi0H,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAE7B,KAAC,EAdkB,GA0BjBm2D,GAAW,WACb,WAAYoxD,EAAWvzH,EAAM4zI,GAAS,oBACpCx0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw0I,QAAUA,CACjB,CAKC,OALA,mCAMD,WACE,IAAIh4G,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKw0I,SAERh4G,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIm2D,EAAYoxD,EAAWvzH,EADpBi0H,EAAKjoH,KAErB,KAAC,EAVY,GAkBXo2D,GAA4B,WAC9B,WAAYmxD,EAAWvzH,EAAMs8H,EAAaC,EAAelE,EAAUwb,GAAmB,oBACpFz0I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKk9H,YAAcA,EACnBl9H,KAAKm9H,cAAgBA,EACrBn9H,KAAKi5H,SAAWA,EAChBj5H,KAAKy0I,kBAAoBA,CAC3B,CAQC,OARA,mCASD,WACE,IAAIj4G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKk9H,aAEf1gG,EAAK7nB,KAAK3U,KAAKm9H,eAEf3gG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy0I,mBAERj4G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIo2D,EAA6BmxD,EAAWvzH,EAJjCi0H,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACIioH,EAAKjoH,KAE/B,KAAC,EAhB6B,GA8B5Bq2D,GAAmB,WACrB,WAAYkxD,EAAWvzH,EAAMo9H,EAAa0W,EAAQC,EAAOC,GAAS,oBAChE50I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg+H,YAAcA,EACnBh+H,KAAK00I,OAASA,EACd10I,KAAK20I,MAAQA,EACb30I,KAAK40I,QAAUA,CACjB,CAQC,OARA,mCASD,WACE,IAAIp4G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKg+H,aAEfxhG,EAAK7nB,KAAK3U,KAAK00I,QAEfl4G,EAAK7nB,KAAK3U,KAAK20I,OAEfn4G,EAAK7nB,KAAK3U,KAAK40I,SAERp4G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIq2D,EAAoBkxD,EAAWvzH,EAJxBi0H,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KAErB,KAAC,EAhBoB,GA8BnBs2D,GAAW,WACb,WAAYixD,EAAWvzH,EAAMgrI,GAAQ,oBACnC5rI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK4rI,OAASA,CAChB,CAKC,OALA,mCAMD,WACE,IAAIpvG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK4rI,QAERpvG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIs2D,EAAYixD,EAAWvzH,EADrBi0H,EAAKjoH,KAEpB,KAAC,EAVY,GAkBXu2D,GAAO,WACT,WAAYgxD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,GAAgB,oBACnHl1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI14F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAER14F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIu2D,EAAQgxD,EAAWvzH,EAPfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBQ,GA0CPw2D,GAAqB,WACvB,WAAY+wD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,GAAgB,oBACnHl1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI14F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAER14F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIw2D,EAAsB+wD,EAAWvzH,EAP7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBsB,GA0CrBy2D,GAAgB,WAClB,WAAY8wD,EAAWvzH,EAAM40H,EAASjB,EAAakB,EAAoBof,EAAkBC,EAAcC,EAAWC,EAAMC,EAAQC,EAAYC,GAAS,oBACnJn1I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw1H,QAAUA,EACfx1H,KAAKu0H,YAAcA,EACnBv0H,KAAKy1H,mBAAqBA,EAC1Bz1H,KAAK60I,iBAAmBA,EACxB70I,KAAK80I,aAAeA,EACpB90I,KAAK+0I,UAAYA,EACjB/0I,KAAKg1I,KAAOA,EACZh1I,KAAKi1I,OAASA,EACdj1I,KAAKk1I,WAAaA,EAClBl1I,KAAKm1I,QAAUA,CACjB,CAcC,OAdA,mCAeD,WACE,IAAI34G,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKy1H,oBAEfj5F,EAAK7nB,KAAK3U,KAAK60I,kBAEfr4G,EAAK7nB,KAAK3U,KAAK80I,cAEft4G,EAAK7nB,KAAK3U,KAAK+0I,WAEfv4G,EAAK7nB,KAAK3U,KAAKg1I,MAEfx4G,EAAK7nB,KAAK3U,KAAKi1I,QAEfz4G,EAAK7nB,KAAK3U,KAAKk1I,YAEf14G,EAAK7nB,KAAK3U,KAAKm1I,SAER34G,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIy2D,EAAiB8wD,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACRioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KAErB,KAAC,EA5BiB,GAsDhB02D,GAAmB,WACrB,WAAY6wD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI02D,EAAoB6wD,EAAWvzH,EAD/Bi0H,EAAKjoH,KAElB,KAAC,EAVoB,GAkBnB22D,GAAsB,WACxB,WAAY4wD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI22D,EAAuB4wD,EAAWvzH,EADlCi0H,EAAKjoH,KAElB,KAAC,EAVuB,GAkBtB42D,GAAiB,WACnB,WAAY2wD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI42D,EAAkB2wD,EAAWvzH,EAD7Bi0H,EAAKjoH,KAElB,KAAC,EAVkB,GAkBjB62D,GAAuB,WACzB,WAAY0wD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIpxD,EAAwB0wD,EAAWvzH,EAChD,KAAC,EARwB,GAcvB8iE,GAAwB,WAC1B,WAAYywD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI82D,EAAyBywD,EAAWvzH,EAJhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhByB,GA8BxB+2D,GAAqB,WACvB,WAAYwwD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI+2D,EAAsBwwD,EAAWvzH,EADjCi0H,EAAKjoH,KAElB,KAAC,EAVsB,GAkBrBg3D,GAAmB,WACrB,WAAYuwD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIjxD,EAAoBuwD,EAAWvzH,EAC5C,KAAC,EARoB,GAcnBijE,GAA8B,WAChC,WAAYswD,EAAWvzH,EAAM0zH,EAAMC,EAAa6gB,EAAexd,GAAY,oBACzE53H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1I,cAAgBA,EACrBp1I,KAAK43H,WAAaA,CACpB,CAQC,OARA,mCASD,WACE,IAAIp7F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1I,eAEf54G,EAAK7nB,KAAK3U,KAAK43H,YAERp7F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIi3D,EAA+BswD,EAAWvzH,EAJ1Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACRioH,EAAKjoH,KAExB,KAAC,EAhB+B,GA8B9Bk3D,GAA6B,WAC/B,WAAYqwD,EAAWvzH,EAAM0zH,EAAMC,EAAa6gB,EAAexd,EAAYyd,EAASC,EAAaC,EAAcC,GAAa,oBAC1Hx1I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1I,cAAgBA,EACrBp1I,KAAK43H,WAAaA,EAClB53H,KAAKq1I,QAAUA,EACfr1I,KAAKs1I,YAAcA,EACnBt1I,KAAKu1I,aAAeA,EACpBv1I,KAAKw1I,YAAcA,CACrB,CAYC,OAZA,mCAaD,WACE,IAAIh5G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1I,eAEf54G,EAAK7nB,KAAK3U,KAAK43H,YAEfp7F,EAAK7nB,KAAK3U,KAAKq1I,SAEf74G,EAAK7nB,KAAK3U,KAAKs1I,aAEf94G,EAAK7nB,KAAK3U,KAAKu1I,cAEf/4G,EAAK7nB,KAAK3U,KAAKw1I,aAERh5G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIk3D,EAA8BqwD,EAAWvzH,EARzCi0H,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KAEzB,KAAC,EAxB8B,GA8C7Bm3D,GAAoB,WACtB,WAAYowD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIm3D,EAAqBowD,EAAWvzH,EADhCi0H,EAAKjoH,KAElB,KAAC,EAVqB,GAkBpBo3D,GAA8B,WAChC,WAAYmwD,EAAWvzH,EAAM60I,GAAQ,oBACnCz1I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKy1I,OAASA,CAChB,CAKC,OALA,mCAMD,WACE,IAAIj5G,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKy1I,QAERj5G,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIo3D,EAA+BmwD,EAAWvzH,EADxCi0H,EAAKjoH,KAEpB,KAAC,EAV+B,GAkB9Bq3D,GAAY,WACd,WAAYkwD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBF,GAAgB,oBACnI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAK00H,eAAiBA,CACxB,CAYC,OAZA,mCAaD,WACE,IAAIl4F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIq3D,EAAakwD,EAAWvzH,EARpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAxBa,GA8CZs3D,GAAgB,WAClB,WAAYiwD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiBsT,EAAaxT,GAAgB,oBAC3K10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkoI,YAAcA,EACnBloI,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkoI,aAEf1rG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIs3D,EAAiBiwD,EAAWvzH,EAVxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BiB,GAsDhBu3D,GAAU,WACZ,WAAYgwD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,GAAiB,oBACnH50H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,CACzB,CAWC,OAXA,mCAYD,WACE,IAAIp4F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAERp4F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIu3D,EAAWgwD,EAAWvzH,EAPlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KAE7B,KAAC,EAtBW,GA0CVw3D,GAAU,WACZ,WAAY+vD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,GAAgB,oBACnHl1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI14F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAER14F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIw3D,EAAW+vD,EAAWvzH,EAPlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBW,GA0CVy3D,GAAyB,WAC3B,WAAY8vD,EAAWvzH,EAAM0zH,EAAMC,EAAaob,GAAiB,oBAC/D3vI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK2vI,gBAAkBA,CACzB,CAOC,OAPA,mCAQD,WACE,IAAInzG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK2vI,iBAERnzG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIy3D,EAA0B8vD,EAAWvzH,EAHrCi0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KAE7B,KAAC,EAd0B,GA0BzB03D,GAAwB,WAC1B,WAAY6vD,EAAWvzH,EAAM0zH,EAAMC,EAAaob,GAAiB,oBAC/D3vI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK2vI,gBAAkBA,CACzB,CAOC,OAPA,mCAQD,WACE,IAAInzG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK2vI,iBAERnzG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI03D,EAAyB6vD,EAAWvzH,EAHpCi0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KAE7B,KAAC,EAdyB,GA0BxB23D,GAAa,WACf,WAAY4vD,EAAWvzH,EAAMw3H,EAAaC,GAAa,oBACrDr4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI77F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAER77F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI23D,EAAc4vD,EAAWvzH,EAFlBi0H,EAAKjoH,KACLioH,EAAKjoH,KAEzB,KAAC,EAZc,GAsBb43D,GAAoB,WACtB,WAAY2vD,EAAWvzH,EAAM0zH,EAAMC,EAAa4T,EAAauN,GAAmB,oBAC9E11I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKooI,WAAaD,EAClBnoI,KAAK01I,kBAAoBA,CAC3B,CAQC,OARA,mCASD,WACE,IAAIl5G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKooI,YAEf5rG,EAAK7nB,KAAK3U,KAAK01I,mBAERl5G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI43D,EAAqB2vD,EAAWvzH,EAJhCi0H,EAAKjoH,KACEioH,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KAE/B,KAAC,EAhBqB,GA8BpB63D,GAAU,WACZ,WAAY0vD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAY6I,EAAUiE,EAAOC,EAAwBC,GAAgB,oBAC3IxhI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKq9H,SAAWA,EAChBr9H,KAAKshI,MAAQA,EACbthI,KAAKuhI,uBAAyBA,EAC9BvhI,KAAKwhI,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIhlG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKshI,OAEf9kG,EAAK7nB,KAAK3U,KAAKuhI,wBAEf/kG,EAAK7nB,KAAK3U,KAAKwhI,gBAERhlG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI63D,EAAW0vD,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACRioH,EAAKjoH,KACYioH,EAAKjoH,KACbioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDV83D,GAAiB,WACnB,WAAYyvD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAY6I,EAAUiE,EAAOC,EAAwBC,GAAgB,oBAC3IxhI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKq9H,SAAWA,EAChBr9H,KAAKshI,MAAQA,EACbthI,KAAKuhI,uBAAyBA,EAC9BvhI,KAAKwhI,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIhlG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKshI,OAEf9kG,EAAK7nB,KAAK3U,KAAKuhI,wBAEf/kG,EAAK7nB,KAAK3U,KAAKwhI,gBAERhlG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI83D,EAAkByvD,EAAWvzH,EATzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACRioH,EAAKjoH,KACYioH,EAAKjoH,KACbioH,EAAKjoH,KAE5B,KAAC,EA1BkB,GAkDjB+3D,GAAe,WACjB,WAAYwvD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAAiB,oBAC3I50H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK00H,eAAiBA,EACtB10H,KAAK20H,OAASA,EACd30H,KAAK40H,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAIp4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK20H,QAEfn4F,EAAK7nB,KAAK3U,KAAK40H,iBAERp4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+3D,EAAgBwvD,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KACbioH,EAAKjoH,KACIioH,EAAKjoH,KAE7B,KAAC,EA1BgB,GAkDfg4D,GAAe,WACjB,WAAYuvD,EAAWvzH,EAAM0zH,EAAMC,EAAawN,EAAeC,EAAe2T,EAAeC,EAASC,GAAS,oBAC7G71I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK+hI,cAAgBA,EACrB/hI,KAAKgiI,cAAgBA,EACrBhiI,KAAK21I,cAAgBA,EACrB31I,KAAK41I,QAAUA,EACf51I,KAAK61I,QAAUA,CACjB,CAWC,OAXA,mCAYD,WACE,IAAIr5G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK+hI,eAEfvlG,EAAK7nB,KAAK3U,KAAKgiI,eAEfxlG,EAAK7nB,KAAK3U,KAAK21I,eAEfn5G,EAAK7nB,KAAK3U,KAAK41I,SAEfp5G,EAAK7nB,KAAK3U,KAAK61I,SAERr5G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIg4D,EAAgBuvD,EAAWvzH,EAP3Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACXioH,EAAKjoH,KACLioH,EAAKjoH,KAErB,KAAC,EAtBgB,GA0Cfi4D,GAAoB,WACtB,WAAYsvD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIi4D,EAAqBsvD,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBk4D,GAAW,WACb,WAAYqvD,EAAWvzH,EAAM0zH,EAAMC,GAAa,oBAC9Cv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI/3F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIk4D,EAAYqvD,EAAWvzH,EAFvBi0H,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAZY,GAsBXm4D,GAAsB,WACxB,WAAYovD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI9vD,EAAuBovD,EAAWvzH,EAC/C,KAAC,EARuB,GActBokE,GAAuB,WACzB,WAAYmvD,EAAWvzH,EAAM0zH,EAAMC,EAAauhB,EAAiBC,EAAiBtS,EAAMuS,GAAe,oBACrGh2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK81I,gBAAkBA,EACvB91I,KAAK+1I,gBAAkBA,EACvB/1I,KAAKyjI,KAAOA,EACZzjI,KAAKg2I,cAAgBA,CACvB,CAUC,OAVA,mCAWD,WACE,IAAIx5G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK81I,iBAEft5G,EAAK7nB,KAAK3U,KAAK+1I,iBAEfv5G,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAKg2I,eAERx5G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIo4D,EAAwBmvD,EAAWvzH,EANnCi0H,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KAChBioH,EAAKjoH,KACIioH,EAAKjoH,KAE3B,KAAC,EApBwB,GAsCvBq4D,GAAqB,WACvB,WAAYkvD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIq4D,EAAsBkvD,EAAWvzH,EAJ7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBsB,GA8BrBs4D,GAAiC,WACnC,WAAYivD,EAAWvzH,EAAM0zH,EAAMC,EAAa0hB,EAAmBC,EAAmB/E,GAAY,oBAChGnxI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi2I,kBAAoBA,EACzBj2I,KAAKk2I,kBAAoBA,EACzBl2I,KAAKmxI,WAAaA,CACpB,CASC,OATA,mCAUD,WACE,IAAI30G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi2I,mBAEfz5G,EAAK7nB,KAAK3U,KAAKk2I,mBAEf15G,EAAK7nB,KAAK3U,KAAKmxI,YAER30G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIs4D,EAAkCivD,EAAWvzH,EAL7Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACCioH,EAAKjoH,KACLioH,EAAKjoH,KACZioH,EAAKjoH,KAExB,KAAC,EAlBkC,GAkCjCu4D,GAA0B,WAC5B,WAAYgvD,EAAWvzH,EAAM0zH,EAAMC,EAAa4hB,EAAmBC,GAAsB,oBACvFp2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKm2I,kBAAoBA,EACzBn2I,KAAKo2I,qBAAuBA,CAC9B,CAQC,OARA,mCASD,WACE,IAAI55G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKm2I,mBAEf35G,EAAK7nB,KAAK3U,KAAKo2I,sBAER55G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIu4D,EAA2BgvD,EAAWvzH,EAJtCi0H,EAAKjoH,KACEioH,EAAKjoH,KACCioH,EAAKjoH,KACFioH,EAAKjoH,KAElC,KAAC,EAhB2B,GA8B1Bw4D,GAAsB,WACxB,WAAY+uD,EAAWvzH,EAAM0zH,EAAM6hB,EAAmB1S,GAAM,oBAC1DzjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKm2I,kBAAoBA,EACzBn2I,KAAKyjI,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAIjnG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKm2I,mBAEf35G,EAAK7nB,KAAK3U,KAAKyjI,MAERjnG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIw4D,EAAuB+uD,EAAWvzH,EAHlCi0H,EAAKjoH,KACQioH,EAAKjoH,KAClBioH,EAAKjoH,KAElB,KAAC,EAduB,GA0BtBy4D,GAAoB,WACtB,WAAY8uD,EAAWvzH,EAAM0zH,EAAMC,EAAasY,EAAYpJ,GAAM,oBAChEzjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK6sI,WAAaA,EAClB7sI,KAAKyjI,KAAOA,CACd,CAQC,OARA,mCASD,WACE,IAAIjnG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK6sI,YAEfrwG,EAAK7nB,KAAK3U,KAAKyjI,MAERjnG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIy4D,EAAqB8uD,EAAWvzH,EAJhCi0H,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KAElB,KAAC,EAhBqB,GA8BpB04D,GAAyB,WAC3B,WAAY6uD,EAAWvzH,EAAM0zH,EAAMC,EAAamL,EAAW2W,GAAmB,oBAC5Er2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK0/H,UAAYA,EACjB1/H,KAAKq2I,kBAAoBA,CAC3B,CAQC,OARA,mCASD,WACE,IAAI75G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK0/H,WAEfljG,EAAK7nB,KAAK3U,KAAKq2I,mBAER75G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI04D,EAA0B6uD,EAAWvzH,EAJrCi0H,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACGioH,EAAKjoH,KAE/B,KAAC,EAhB0B,GA8BzB24D,GAAc,WAChB,WAAY4uD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaoL,GAAe,oBACrF3/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK2/H,cAAgBA,CACvB,CASC,OATA,mCAUD,WACE,IAAInjG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK2/H,eAERnjG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI24D,EAAe4uD,EAAWvzH,EALtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EAlBe,GAkCd44D,GAAwB,WAC1B,WAAY2uD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI44D,EAAyB2uD,EAAWvzH,EAJhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhByB,GA8BxB64D,GAAsB,WACxB,WAAY0uD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaqL,EAAc0W,EAAkBzW,GAAsB,oBAC5H7/H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK4/H,aAAeA,EACpB5/H,KAAKs2I,iBAAmBA,EACxBt2I,KAAK6/H,qBAAuBA,CAC9B,CAWC,OAXA,mCAYD,WACE,IAAIrjG,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK4/H,cAEfpjG,EAAK7nB,KAAK3U,KAAKs2I,kBAEf95G,EAAK7nB,KAAK3U,KAAK6/H,sBAERrjG,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI64D,EAAuB0uD,EAAWvzH,EAP9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACDioH,EAAKjoH,KACDioH,EAAKjoH,KAElC,KAAC,EAtBuB,GA0CtB84D,GAAsB,WACxB,WAAYyuD,EAAWvzH,EAAM0zH,EAAMC,EAAagiB,EAAc9S,GAAM,oBAClEzjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKu2I,aAAeA,EACpBv2I,KAAKyjI,KAAOA,CACd,CAQC,OARA,mCASD,WACE,IAAIjnG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKu2I,cAEf/5G,EAAK7nB,KAAK3U,KAAKyjI,MAERjnG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI84D,EAAuByuD,EAAWvzH,EAJlCi0H,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACbioH,EAAKjoH,KAElB,KAAC,EAhBuB,GA8BtB+4D,GAAqB,WACvB,WAAYwuD,EAAWvzH,EAAM0zH,EAAMC,EAAaiiB,EAAgBC,EAAetF,EAAYuF,EAAcC,EAAaC,GAAoB,oBACxI52I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw2I,eAAiBA,EACtBx2I,KAAKy2I,cAAgBA,EACrBz2I,KAAKmxI,WAAaA,EAClBnxI,KAAK02I,aAAeA,EACpB12I,KAAK22I,YAAcA,EACnB32I,KAAK42I,mBAAqBA,CAC5B,CAYC,OAZA,mCAaD,WACE,IAAIp6G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw2I,gBAEfh6G,EAAK7nB,KAAK3U,KAAKy2I,eAEfj6G,EAAK7nB,KAAK3U,KAAKmxI,YAEf30G,EAAK7nB,KAAK3U,KAAK02I,cAEfl6G,EAAK7nB,KAAK3U,KAAK22I,aAEfn6G,EAAK7nB,KAAK3U,KAAK42I,oBAERp6G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI+4D,EAAsBwuD,EAAWvzH,EARjCi0H,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACEioH,EAAKjoH,KAEhC,KAAC,EAxBsB,GA8CrBg5D,GAAmB,WACrB,WAAYuuD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIg5D,EAAoBuuD,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBoB,GA8BnBi5D,GAA6B,WAC/B,WAAYsuD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIi5D,EAA8BsuD,EAAWvzH,EAJrCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhB8B,GA8B7Bk5D,GAAmB,WACrB,WAAYquD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIk5D,EAAoBquD,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnBm5D,GAA+B,WACjC,WAAYouD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIm5D,EAAgCouD,EAAWvzH,EATvCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BgC,GAkD/Bo5D,GAAmC,WACrC,WAAYmuD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIo5D,EAAoCmuD,EAAWvzH,EAV3Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoC,GAsDnCq5D,GAAuB,WACzB,WAAYkuD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq5D,EAAwBkuD,EAAWvzH,EAV/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BwB,GAsDvBs5D,GAAQ,WACV,WAAYiuD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgB2hB,EAAW1hB,GAAK,oBACnIn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK62I,UAAYA,EACjB72I,KAAKm1H,IAAMA,CACb,CAaC,OAbA,mCAcD,WACE,IAAI34F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK62I,WAEfr6G,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIs5D,EAASiuD,EAAWvzH,EAThBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACVioH,EAAKjoH,KACXioH,EAAKjoH,KAEjB,KAAC,EA1BS,GAkDRu5D,GAAO,WACT,WAAYguD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIu5D,EAAQguD,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPw5D,GAAW,WACb,WAAY+tD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIw5D,EAAY+tD,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXy5D,GAAe,WACjB,WAAY8tD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,EAAMqT,EAAWC,GAAS,oBACxE/2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAK82I,UAAYA,EACjB92I,KAAK+2I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIv6G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAK82I,WAEft6G,EAAK7nB,KAAK3U,KAAK+2I,SAERv6G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIy5D,EAAgB8tD,EAAWvzH,EAL3Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACAioH,EAAKjoH,KACPioH,EAAKjoH,KAErB,KAAC,EAlBgB,GAkCf05D,GAAgB,WAClB,WAAY6tD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,EAAMuT,EAAYD,GAAS,oBACzE/2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAKg3I,WAAaA,EAClBh3I,KAAK+2I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIv6G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAKg3I,YAEfx6G,EAAK7nB,KAAK3U,KAAK+2I,SAERv6G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI05D,EAAiB6tD,EAAWvzH,EAL5Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACCioH,EAAKjoH,KACRioH,EAAKjoH,KAErB,KAAC,EAlBiB,GAkChB25D,GAAiB,WACnB,WAAY4tD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,EAAMwT,EAAaF,GAAS,oBAC1E/2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAKi3I,YAAcA,EACnBj3I,KAAK+2I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIv6G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAKi3I,aAEfz6G,EAAK7nB,KAAK3U,KAAK+2I,SAERv6G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI25D,EAAkB4tD,EAAWvzH,EAL7Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACEioH,EAAKjoH,KACTioH,EAAKjoH,KAErB,KAAC,EAlBkB,GAkCjB45D,GAAc,WAChB,WAAY2tD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI45D,EAAe2tD,EAAWvzH,EAJtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBe,GA8Bd65D,GAAe,WACjB,WAAY0tD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,EAAMyT,EAAWH,GAAS,oBACxE/2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAKk3I,UAAYA,EACjBl3I,KAAK+2I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIv6G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAKk3I,WAEf16G,EAAK7nB,KAAK3U,KAAK+2I,SAERv6G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI65D,EAAgB0tD,EAAWvzH,EAL3Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACAioH,EAAKjoH,KACPioH,EAAKjoH,KAErB,KAAC,EAlBgB,GAkCf85D,GAAiB,WACnB,WAAYytD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,EAAM0T,EAAaJ,GAAS,oBAC1E/2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAKm3I,YAAcA,EACnBn3I,KAAK+2I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIv6G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAKm3I,aAEf36G,EAAK7nB,KAAK3U,KAAK+2I,SAERv6G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI85D,EAAkBytD,EAAWvzH,EAL7Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACEioH,EAAKjoH,KACTioH,EAAKjoH,KAErB,KAAC,EAlBkB,GAkCjB+5D,GAAiB,WACnB,WAAYwtD,EAAWvzH,EAAM0zH,EAAMC,EAAakP,EAAM2T,EAAaL,GAAS,oBAC1E/2I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAKo3I,YAAcA,EACnBp3I,KAAK+2I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIv6G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAKo3I,aAEf56G,EAAK7nB,KAAK3U,KAAK+2I,SAERv6G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI+5D,EAAkBwtD,EAAWvzH,EAL7Bi0H,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACEioH,EAAKjoH,KACTioH,EAAKjoH,KAErB,KAAC,EAlBkB,GAkCjBg6D,GAAU,WACZ,WAAYutD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIg6D,EAAWutD,EAAWvzH,EATlBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BW,GAkDVi6D,GAAc,WAChB,WAAYstD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIi6D,EAAestD,EAAWvzH,EAVtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Be,GAsDdk6D,GAAO,WACT,WAAYqtD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIk6D,EAAQqtD,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPm6D,GAAa,WACf,WAAYotD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIm6D,EAAcotD,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDbo6D,GAAiB,WACnB,WAAYmtD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIo6D,EAAkBmtD,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjBq6D,GAAW,WACb,WAAYktD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq6D,EAAYktD,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXs6D,GAAgC,WAClC,WAAYitD,EAAWvzH,EAAMo5H,EAAQC,EAAmBC,EAAWC,EAAaC,EAAeC,EAAoBC,EAAOC,EAAU8c,GAAa,oBAC/Ir3I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg6H,OAASA,EACdh6H,KAAKi6H,kBAAoBA,EACzBj6H,KAAKk6H,UAAYA,EACjBl6H,KAAKm6H,YAAcA,EACnBn6H,KAAKo6H,cAAgBA,EACrBp6H,KAAKq6H,mBAAqBA,EAC1Br6H,KAAKs6H,MAAQA,EACbt6H,KAAKu6H,SAAWA,EAChBv6H,KAAKq3I,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI76G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKg6H,QAEfx9F,EAAK7nB,KAAK3U,KAAKi6H,mBAEfz9F,EAAK7nB,KAAK3U,KAAKk6H,WAEf19F,EAAK7nB,KAAK3U,KAAKm6H,aAEf39F,EAAK7nB,KAAK3U,KAAKo6H,eAEf59F,EAAK7nB,KAAK3U,KAAKq6H,oBAEf79F,EAAK7nB,KAAK3U,KAAKs6H,OAEf99F,EAAK7nB,KAAK3U,KAAKu6H,UAEf/9F,EAAK7nB,KAAK3U,KAAKq3I,aAER76G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIs6D,EAAiCitD,EAAWvzH,EAT1Ci0H,EAAKjoH,KACMioH,EAAKjoH,KACbioH,EAAKjoH,KACHioH,EAAKjoH,KACHioH,EAAKjoH,KACAioH,EAAKjoH,KAClBioH,EAAKjoH,KACFioH,EAAKjoH,KACFioH,EAAKjoH,KAEzB,KAAC,EA1BiC,GAkDhCu6D,GAAkC,WACpC,WAAYgtD,EAAWvzH,EAAM45H,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,EAAeS,EAAiBC,EAAiBC,EAAQC,EAAQT,EAAU8c,GAAa,oBACvLr3I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw6H,QAAUA,EACfx6H,KAAKy6H,QAAUA,EACfz6H,KAAKi6H,kBAAoBA,EACzBj6H,KAAK06H,YAAcA,EACnB16H,KAAK26H,QAAUA,EACf36H,KAAK46H,QAAUA,EACf56H,KAAKo6H,cAAgBA,EACrBp6H,KAAK66H,gBAAkBA,EACvB76H,KAAK86H,gBAAkBA,EACvB96H,KAAK+6H,OAASA,EACd/6H,KAAKg7H,OAASA,EACdh7H,KAAKu6H,SAAWA,EAChBv6H,KAAKq3I,YAAcA,CACrB,CAiBC,OAjBA,mCAkBD,WACE,IAAI76G,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKw6H,SAEfh+F,EAAK7nB,KAAK3U,KAAKy6H,SAEfj+F,EAAK7nB,KAAK3U,KAAKi6H,mBAEfz9F,EAAK7nB,KAAK3U,KAAK06H,aAEfl+F,EAAK7nB,KAAK3U,KAAK26H,SAEfn+F,EAAK7nB,KAAK3U,KAAK46H,SAEfp+F,EAAK7nB,KAAK3U,KAAKo6H,eAEf59F,EAAK7nB,KAAK3U,KAAK66H,iBAEfr+F,EAAK7nB,KAAK3U,KAAK86H,iBAEft+F,EAAK7nB,KAAK3U,KAAK+6H,QAEfv+F,EAAK7nB,KAAK3U,KAAKg7H,QAEfx+F,EAAK7nB,KAAK3U,KAAKu6H,UAEf/9F,EAAK7nB,KAAK3U,KAAKq3I,aAER76G,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAIu6D,EAAmCgtD,EAAWvzH,EAb3Ci0H,EAAKjoH,KACLioH,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KACTioH,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACdioH,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KACFioH,EAAKjoH,KAEzB,KAAC,EAlCmC,GAkElCw6D,GAA4B,WAC9B,WAAY+sD,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU8D,EAAMC,EAAMa,EAAeyZ,EAAmBC,GAAmB,oBAChIv3I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK+8H,KAAOA,EACZ/8H,KAAKg9H,KAAOA,EACZh9H,KAAK69H,cAAgBA,EACrB79H,KAAKs3I,kBAAoBA,EACzBt3I,KAAKu3I,kBAAoBA,CAC3B,CAYC,OAZA,mCAaD,WACE,IAAI/6G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+8H,MAEfvgG,EAAK7nB,KAAK3U,KAAKg9H,MAEfxgG,EAAK7nB,KAAK3U,KAAK69H,eAEfrhG,EAAK7nB,KAAK3U,KAAKs3I,mBAEf96G,EAAK7nB,KAAK3U,KAAKu3I,mBAER/6G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIw6D,EAA6B+sD,EAAWvzH,EARjCi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACTioH,EAAKjoH,KACLioH,EAAKjoH,KACIioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KAE/B,KAAC,EAxB6B,GA8C5By6D,GAAsB,WACxB,WAAY8sD,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU8D,EAAMC,GAAM,oBAC3Eh9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK+8H,KAAOA,EACZ/8H,KAAKg9H,KAAOA,CACd,CASC,OATA,mCAUD,WACE,IAAIxgG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+8H,MAEfvgG,EAAK7nB,KAAK3U,KAAKg9H,MAERxgG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIy6D,EAAuB8sD,EAAWvzH,EAL3Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACTioH,EAAKjoH,KACLioH,EAAKjoH,KAElB,KAAC,EAlBuB,GAkCtB06D,GAAqB,WACvB,WAAY6sD,EAAWvzH,EAAMq4H,EAAUuC,EAASC,EAASsY,GAAQ,oBAC/D/zI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKw7H,QAAUA,EACfx7H,KAAKy7H,QAAUA,EACfz7H,KAAK+zI,OAASA,CAChB,CAQC,OARA,mCASD,WACE,IAAIv3G,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKw7H,SAEfh/F,EAAK7nB,KAAK3U,KAAKy7H,SAEfj/F,EAAK7nB,KAAK3U,KAAK+zI,QAERv3G,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI06D,EAAsB6sD,EAAWvzH,EAJ7Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KAEpB,KAAC,EAhBsB,GA8BrB26D,GAA4B,WAC9B,WAAY4sD,EAAWvzH,EAAM+hI,EAAc6U,EAAIC,EAAIC,EAAIC,EAAIC,EAAQC,GAAQ,oBACzE73I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2iI,aAAeA,EACpB3iI,KAAKw3I,GAAKA,EACVx3I,KAAKy3I,GAAKA,EACVz3I,KAAK03I,GAAKA,EACV13I,KAAK23I,GAAKA,EACV33I,KAAK43I,OAASA,EACd53I,KAAK63I,OAASA,CAChB,CAWC,OAXA,mCAYD,WACE,IAAIr7G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAK2iI,cAEfnmG,EAAK7nB,KAAK3U,KAAKw3I,IAEfh7G,EAAK7nB,KAAK3U,KAAKy3I,IAEfj7G,EAAK7nB,KAAK3U,KAAK03I,IAEfl7G,EAAK7nB,KAAK3U,KAAK23I,IAEfn7G,EAAK7nB,KAAK3U,KAAK43I,QAEfp7G,EAAK7nB,KAAK3U,KAAK63I,QAERr7G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI26D,EAA6B4sD,EAAWvzH,EAPhCi0H,EAAKjoH,KACfioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KAEpB,KAAC,EAtB6B,GA0C5B46D,GAAoB,WACtB,WAAY2sD,EAAWvzH,EAAMk3I,EAAgBC,EAAcC,EAAkBC,EAAgBhf,EAAUif,EAAUC,EAAaC,GAAa,oBACzIp4I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK83I,eAAiBA,EACtB93I,KAAK+3I,aAAeA,EACpB/3I,KAAKg4I,iBAAmBA,EACxBh4I,KAAKi4I,eAAiBA,EACtBj4I,KAAKi5H,SAAWA,EAChBj5H,KAAKk4I,SAAWA,EAChBl4I,KAAKm4I,YAAcA,EACnBn4I,KAAKo4I,YAAcA,CACrB,CAYC,OAZA,mCAaD,WACE,IAAI57G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAK83I,gBAEft7G,EAAK7nB,KAAK3U,KAAK+3I,cAEfv7G,EAAK7nB,KAAK3U,KAAKg4I,kBAEfx7G,EAAK7nB,KAAK3U,KAAKi4I,gBAEfz7G,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKk4I,UAEf17G,EAAK7nB,KAAK3U,KAAKm4I,aAEf37G,EAAK7nB,KAAK3U,KAAKo4I,aAER57G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI46D,EAAqB2sD,EAAWvzH,EARtBi0H,EAAKjoH,KACPioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACXioH,EAAKjoH,KACLioH,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAEzB,KAAC,EAxBqB,GA8CpB66D,GAAY,WACd,WAAY0sD,EAAWvzH,EAAMy3I,EAAgBC,EAAqBC,EAAcC,EAAeC,GAAgB,oBAC7Gz4I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq4I,eAAiBA,EACtBr4I,KAAKs4I,oBAAsBA,EAC3Bt4I,KAAKu4I,aAAeA,EACpBv4I,KAAKw4I,cAAgBA,EACrBx4I,KAAKy4I,eAAiBA,CACxB,CASC,OATA,mCAUD,WACE,IAAIj8G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKq4I,gBAEf77G,EAAK7nB,KAAK3U,KAAKs4I,qBAEf97G,EAAK7nB,KAAK3U,KAAKu4I,cAEf/7G,EAAK7nB,KAAK3U,KAAKw4I,eAEfh8G,EAAK7nB,KAAK3U,KAAKy4I,gBAERj8G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI66D,EAAa0sD,EAAWvzH,EALdi0H,EAAKjoH,KACAioH,EAAKjoH,KACZioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KAE5B,KAAC,EAlBa,GAkCZ86D,GAAW,WACb,WAAYysD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBR,EAAgBgkB,GAAiB,oBACpJ14I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK00H,eAAiBA,EACtB10H,KAAK04I,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAIl8G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK04I,iBAERl8G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI86D,EAAYysD,EAAWvzH,EATnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KAE7B,KAAC,EA1BY,GAkDX+6D,GAAoB,WACtB,WAAYwsD,EAAWvzH,EAAM0zH,EAAMC,EAAaiY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,EAAMkV,EAAUhM,GAAQ,oBACjJ3sI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKwsI,UAAYA,EACjBxsI,KAAKysI,QAAUA,EACfzsI,KAAK0sI,mBAAqBA,EAC1B1sI,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAKyjI,KAAOA,EACZzjI,KAAK24I,SAAWA,EAChB34I,KAAK2sI,OAASA,CAChB,CAcC,OAdA,mCAeD,WACE,IAAInwG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAKysI,SAEfjwG,EAAK7nB,KAAK3U,KAAK0sI,oBAEflwG,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAK24I,UAEfn8G,EAAK7nB,KAAK3U,KAAK2sI,QAERnwG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI+6D,EAAqBwsD,EAAWvzH,EAVhCi0H,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KACMioH,EAAKjoH,KACbioH,EAAKjoH,KACMioH,EAAKjoH,KACtBioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EA5BqB,GAsDpBg7D,GAA6B,WAC/B,WAAYusD,EAAWvzH,EAAMg4I,EAAuBC,EAAYC,EAAYC,EAAgBC,EAAoBC,GAAU,oBACxHj5I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK44I,sBAAwBA,EAC7B54I,KAAK64I,WAAaA,EAClB74I,KAAK84I,WAAaA,EAClB94I,KAAK+4I,eAAiBA,EACtB/4I,KAAKg5I,mBAAqBA,EAC1Bh5I,KAAKi5I,SAAWA,CAClB,CAUC,OAVA,mCAWD,WACE,IAAIz8G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAK44I,uBAEfp8G,EAAK7nB,KAAK3U,KAAK64I,YAEfr8G,EAAK7nB,KAAK3U,KAAK84I,YAEft8G,EAAK7nB,KAAK3U,KAAK+4I,gBAEfv8G,EAAK7nB,KAAK3U,KAAKg5I,oBAEfx8G,EAAK7nB,KAAK3U,KAAKi5I,UAERz8G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIg7D,EAA8BusD,EAAWvzH,EANxBi0H,EAAKjoH,KAChBioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACDioH,EAAKjoH,KACfioH,EAAKjoH,KAEtB,KAAC,EApB8B,GAsC7Bi7D,GAAoC,WACtC,WAAYssD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa2kB,EAAgBC,GAAiC,oBACvHn5I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKk5I,eAAiBA,EACtBl5I,KAAKm5I,gCAAkCA,CACzC,CAUC,OAVA,mCAWD,WACE,IAAI38G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKk5I,gBAEf18G,EAAK7nB,KAAK3U,KAAKm5I,iCAER38G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIi7D,EAAqCssD,EAAWvzH,EAN5Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACYioH,EAAKjoH,KAE7C,KAAC,EApBqC,GAsCpCk7D,GAAiB,WACnB,WAAYqsD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK0jB,EAAYvH,EAAiB8H,EAAkBC,EAAW3kB,EAAgBokB,GAAY,oBAC9M94I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK64I,WAAaA,EAClB74I,KAAKsxI,gBAAkBA,EACvBtxI,KAAKo5I,iBAAmBA,EACxBp5I,KAAKq5I,UAAYA,EACjBr5I,KAAK00H,eAAiBA,EACtB10H,KAAK84I,WAAaA,CACpB,CAkBC,OAlBA,mCAmBD,WACE,IAAIt8G,EAAO,GA6BX,OA5BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK64I,YAEfr8G,EAAK7nB,KAAK3U,KAAKsxI,iBAEf90G,EAAK7nB,KAAK3U,KAAKo5I,kBAEf58G,EAAK7nB,KAAK3U,KAAKq5I,WAEf78G,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK84I,YAERt8G,CACT,IAAC,uBAjDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAeV,OAAO,IAAIk7D,EAAkBqsD,EAAWvzH,EAdzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACEioH,EAAKjoH,KACAioH,EAAKjoH,KACJioH,EAAKjoH,KACZioH,EAAKjoH,KACAioH,EAAKjoH,KACTioH,EAAKjoH,KAExB,KAAC,EApCkB,GAsEjBm7D,GAAqB,WACvB,WAAYosD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgB4c,EAAiB8H,EAAkBC,EAAWP,EAAYQ,EAAkBC,GAAmB,oBAClQv5I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKsxI,gBAAkBA,EACvBtxI,KAAKo5I,iBAAmBA,EACxBp5I,KAAKq5I,UAAYA,EACjBr5I,KAAK84I,WAAaA,EAClB94I,KAAKs5I,iBAAmBA,EACxBt5I,KAAKu5I,kBAAoBA,CAC3B,CAoBC,OApBA,mCAqBD,WACE,IAAI/8G,EAAO,GAiCX,OAhCAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKsxI,iBAEf90G,EAAK7nB,KAAK3U,KAAKo5I,kBAEf58G,EAAK7nB,KAAK3U,KAAKq5I,WAEf78G,EAAK7nB,KAAK3U,KAAK84I,YAEft8G,EAAK7nB,KAAK3U,KAAKs5I,kBAEf98G,EAAK7nB,KAAK3U,KAAKu5I,mBAER/8G,CACT,IAAC,uBAvDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAiBV,OAAO,IAAIm7D,EAAsBosD,EAAWvzH,EAhB7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACZioH,EAAKjoH,KACJioH,EAAKjoH,KACCioH,EAAKjoH,KACJioH,EAAKjoH,KAE/B,KAAC,EAxCsB,GA8ErBo7D,GAAqB,WACvB,WAAYmsD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK0jB,GAAY,oBACpI74I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK64I,WAAaA,CACpB,CAaC,OAbA,mCAcD,WACE,IAAIr8G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK64I,YAERr8G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo7D,EAAsBmsD,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACEioH,EAAKjoH,KAExB,KAAC,EA1BsB,GAkDrBq7D,GAAyB,WAC3B,WAAYksD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIq7D,EAA0BksD,EAAWvzH,EATjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1B0B,GAkDzBs7D,GAAkB,WACpB,WAAYisD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK0jB,EAAYW,EAAYC,EAAWC,EAAgCC,EAA8BC,EAAiCC,EAA+BC,EAAwBC,EAAsBrlB,GAAgB,oBACvV10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK64I,WAAaA,EAClB74I,KAAKw5I,WAAaA,EAClBx5I,KAAKy5I,UAAYA,EACjBz5I,KAAK05I,+BAAiCA,EACtC15I,KAAK25I,6BAA+BA,EACpC35I,KAAK45I,gCAAkCA,EACvC55I,KAAK65I,8BAAgCA,EACrC75I,KAAK85I,uBAAyBA,EAC9B95I,KAAK+5I,qBAAuBA,EAC5B/5I,KAAK00H,eAAiBA,CACxB,CAsBC,OAtBA,mCAuBD,WACE,IAAIl4F,EAAO,GAqCX,OApCAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK64I,YAEfr8G,EAAK7nB,KAAK3U,KAAKw5I,YAEfh9G,EAAK7nB,KAAK3U,KAAKy5I,WAEfj9G,EAAK7nB,KAAK3U,KAAK05I,gCAEfl9G,EAAK7nB,KAAK3U,KAAK25I,8BAEfn9G,EAAK7nB,KAAK3U,KAAK45I,iCAEfp9G,EAAK7nB,KAAK3U,KAAK65I,+BAEfr9G,EAAK7nB,KAAK3U,KAAK85I,wBAEft9G,EAAK7nB,KAAK3U,KAAK+5I,sBAEfv9G,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA7DD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAmBV,OAAO,IAAIs7D,EAAmBisD,EAAWvzH,EAlB1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACEioH,EAAKjoH,KACLioH,EAAKjoH,KACNioH,EAAKjoH,KACgBioH,EAAKjoH,KACPioH,EAAKjoH,KACFioH,EAAKjoH,KACPioH,EAAKjoH,KACZioH,EAAKjoH,KACPioH,EAAKjoH,KACXioH,EAAKjoH,KAE5B,KAAC,EA5CmB,GAsFlBu7D,GAAsB,WACxB,WAAYgsD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgB8kB,EAAYC,EAAWC,EAAgCC,EAA8BC,EAAiCC,EAA+BC,EAAwBC,EAAsBT,EAAkBC,GAAmB,oBAC3Yv5I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKw5I,WAAaA,EAClBx5I,KAAKy5I,UAAYA,EACjBz5I,KAAK05I,+BAAiCA,EACtC15I,KAAK25I,6BAA+BA,EACpC35I,KAAK45I,gCAAkCA,EACvC55I,KAAK65I,8BAAgCA,EACrC75I,KAAK85I,uBAAyBA,EAC9B95I,KAAK+5I,qBAAuBA,EAC5B/5I,KAAKs5I,iBAAmBA,EACxBt5I,KAAKu5I,kBAAoBA,CAC3B,CAwBC,OAxBA,mCAyBD,WACE,IAAI/8G,EAAO,GAyCX,OAxCAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKw5I,YAEfh9G,EAAK7nB,KAAK3U,KAAKy5I,WAEfj9G,EAAK7nB,KAAK3U,KAAK05I,gCAEfl9G,EAAK7nB,KAAK3U,KAAK25I,8BAEfn9G,EAAK7nB,KAAK3U,KAAK45I,iCAEfp9G,EAAK7nB,KAAK3U,KAAK65I,+BAEfr9G,EAAK7nB,KAAK3U,KAAK85I,wBAEft9G,EAAK7nB,KAAK3U,KAAK+5I,sBAEfv9G,EAAK7nB,KAAK3U,KAAKs5I,kBAEf98G,EAAK7nB,KAAK3U,KAAKu5I,mBAER/8G,CACT,IAAC,uBAnED,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAqBV,OAAO,IAAIu7D,EAAuBgsD,EAAWvzH,EApB9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACgBioH,EAAKjoH,KACPioH,EAAKjoH,KACFioH,EAAKjoH,KACPioH,EAAKjoH,KACZioH,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KAE/B,KAAC,EAhDuB,GA8FtBw7D,GAAgB,WAClB,WAAY+rD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaylB,EAAgBC,GAAgB,oBACtGj6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKg6I,eAAiBA,EACtBh6I,KAAKi6I,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAIz9G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKg6I,gBAEfx9G,EAAK7nB,KAAK3U,KAAKi6I,gBAERz9G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIw7D,EAAiB+rD,EAAWvzH,EANxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAE5B,KAAC,EApBiB,GAsChBy7D,GAAa,WACf,WAAY8rD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,GAAoB,oBAC1Gl6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,CAC5B,CAUC,OAVA,mCAWD,WACE,IAAI19G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAER19G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIy7D,EAAc8rD,EAAWvzH,EANrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KAEhC,KAAC,EApBc,GAsCb07D,GAAoB,WACtB,WAAY6rD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBC,EAAeC,GAAY,oBACrIp6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAKm6I,cAAgBA,EACrBn6I,KAAKo6I,WAAaA,CACpB,CAYC,OAZA,mCAaD,WACE,IAAI59G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAKm6I,eAEf39G,EAAK7nB,KAAK3U,KAAKo6I,YAER59G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI07D,EAAqB6rD,EAAWvzH,EAR5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACVioH,EAAKjoH,KACRioH,EAAKjoH,KAExB,KAAC,EAxBqB,GA8CpB27D,GAAsB,WACxB,WAAY4rD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBG,GAAiB,oBAC3Hr6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAKq6I,gBAAkBA,CACzB,CAWC,OAXA,mCAYD,WACE,IAAI79G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAKq6I,iBAER79G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI27D,EAAuB4rD,EAAWvzH,EAP9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KAE7B,KAAC,EAtBuB,GA0CtB47D,GAAoB,WACtB,WAAY2rD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBI,GAAe,oBACzHt6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAKs6I,cAAgBA,CACvB,CAWC,OAXA,mCAYD,WACE,IAAI99G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAKs6I,eAER99G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI47D,EAAqB2rD,EAAWvzH,EAP5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACVioH,EAAKjoH,KAE3B,KAAC,EAtBqB,GA0CpB67D,GAA4B,WAC9B,WAAY0rD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBI,EAAeC,GAAQ,oBACjIv6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAKs6I,cAAgBA,EACrBt6I,KAAKu6I,OAASA,CAChB,CAYC,OAZA,mCAaD,WACE,IAAI/9G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAKs6I,eAEf99G,EAAK7nB,KAAK3U,KAAKu6I,QAER/9G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI67D,EAA6B0rD,EAAWvzH,EARpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACVioH,EAAKjoH,KACZioH,EAAKjoH,KAEpB,KAAC,EAxB6B,GA8C5B87D,GAAsB,WACxB,WAAYyrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBM,EAAiBC,GAAmB,oBAC9Iz6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAKw6I,gBAAkBA,EACvBx6I,KAAKy6I,kBAAoBA,CAC3B,CAYC,OAZA,mCAaD,WACE,IAAIj+G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAKw6I,iBAEfh+G,EAAK7nB,KAAK3U,KAAKy6I,mBAERj+G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI87D,EAAuByrD,EAAWvzH,EAR9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KAE/B,KAAC,EAxBuB,GA8CtB+7D,GAAsB,WACxB,WAAYwrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBQ,GAAiB,oBAC3H16I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAK06I,gBAAkBA,CACzB,CAWC,OAXA,mCAYD,WACE,IAAIl+G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAK06I,iBAERl+G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI+7D,EAAuBwrD,EAAWvzH,EAP9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KAE7B,KAAC,EAtBuB,GA0CtBg8D,GAAuB,WACzB,WAAYurD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBC,EAAoBS,GAAkB,oBAC5H36I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk6I,mBAAqBA,EAC1Bl6I,KAAK26I,iBAAmBA,CAC1B,CAWC,OAXA,mCAYD,WACE,IAAIn+G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk6I,oBAEf19G,EAAK7nB,KAAK3U,KAAK26I,kBAERn+G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIg8D,EAAwBurD,EAAWvzH,EAP/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KAE9B,KAAC,EAtBwB,GA0CvBi8D,GAAgB,WAClB,WAAYsrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,GAAgB,oBACtFj6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,CACxB,CASC,OATA,mCAUD,WACE,IAAIz9G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAERz9G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIi8D,EAAiBsrD,EAAWvzH,EALxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EAlBiB,GAkChBk8D,GAAwB,WAC1B,WAAYqrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgB/hB,GAAkB,oBACxGl4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKk4H,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAI17F,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKk4H,kBAER17F,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIk8D,EAAyBqrD,EAAWvzH,EANhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EApByB,GAsCxBm8D,GAA8B,WAChC,WAAYorD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBW,GAAwB,oBAC9G56I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAK46I,uBAAyBA,CAChC,CAUC,OAVA,mCAWD,WACE,IAAIp+G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAK46I,wBAERp+G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIm8D,EAA+BorD,EAAWvzH,EANtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACGioH,EAAKjoH,KAEpC,KAAC,EApB+B,GAsC9Bo8D,GAA0B,WAC5B,WAAYmrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBY,EAAQC,GAAoB,oBAClH96I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAK66I,OAASA,EACd76I,KAAK86I,mBAAqBA,CAC5B,CAWC,OAXA,mCAYD,WACE,IAAIt+G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAK66I,QAEfr+G,EAAK7nB,KAAK3U,KAAK86I,oBAERt+G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIo8D,EAA2BmrD,EAAWvzH,EAPlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACbioH,EAAKjoH,KACOioH,EAAKjoH,KAEhC,KAAC,EAtB2B,GA0C1Bq8D,GAAwB,WAC1B,WAAYkrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgB7U,GAAkB,oBACxGplI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKolI,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAI5oG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKolI,kBAER5oG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIq8D,EAAyBkrD,EAAWvzH,EANhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EApByB,GAsCxBs8D,GAAuB,WACzB,WAAYirD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBc,GAAiB,oBACvG/6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAK+6I,gBAAkBA,CACzB,CAUC,OAVA,mCAWD,WACE,IAAIv+G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAK+6I,iBAERv+G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIs8D,EAAwBirD,EAAWvzH,EAN/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACJioH,EAAKjoH,KAE7B,KAAC,EApBwB,GAsCvBu8D,GAAwB,WAC1B,WAAYgrD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBhJ,GAAkB,oBACxGjxI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKixI,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAIz0G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKixI,kBAERz0G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIu8D,EAAyBgrD,EAAWvzH,EANhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EApByB,GAsCxBw8D,GAAc,WAChB,WAAY+qD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIw8D,EAAe+qD,EAAWvzH,EAJtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBe,GA8Bdy8D,GAAsB,WACxB,WAAY8qD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaymB,EAAoBC,EAAiBC,GAAgB,oBAC3Hl7I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKg7I,mBAAqBA,EAC1Bh7I,KAAKi7I,gBAAkBA,EACvBj7I,KAAKk7I,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI1+G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKg7I,oBAEfx+G,EAAK7nB,KAAK3U,KAAKi7I,iBAEfz+G,EAAK7nB,KAAK3U,KAAKk7I,gBAER1+G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIy8D,EAAuB8qD,EAAWvzH,EAP9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBuB,GA0CtB08D,GAA0B,WAC5B,WAAY6qD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaymB,EAAoBC,EAAiBC,EAAgBC,EAAoBC,EAAmBC,EAAuBC,GAAwB,oBACjNt7I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKg7I,mBAAqBA,EAC1Bh7I,KAAKi7I,gBAAkBA,EACvBj7I,KAAKk7I,eAAiBA,EACtBl7I,KAAKm7I,mBAAqBA,EAC1Bn7I,KAAKo7I,kBAAoBA,EACzBp7I,KAAKq7I,sBAAwBA,EAC7Br7I,KAAKs7I,uBAAyBA,CAChC,CAeC,OAfA,mCAgBD,WACE,IAAI9+G,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKg7I,oBAEfx+G,EAAK7nB,KAAK3U,KAAKi7I,iBAEfz+G,EAAK7nB,KAAK3U,KAAKk7I,gBAEf1+G,EAAK7nB,KAAK3U,KAAKm7I,oBAEf3+G,EAAK7nB,KAAK3U,KAAKo7I,mBAEf5+G,EAAK7nB,KAAK3U,KAAKq7I,uBAEf7+G,EAAK7nB,KAAK3U,KAAKs7I,wBAER9+G,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI08D,EAA2B6qD,EAAWvzH,EAXlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KAEpC,KAAC,EA9B2B,GA0D1B28D,GAA2B,WAC7B,WAAY4qD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAagnB,EAAcL,GAAgB,oBACpGl7I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKu7I,aAAeA,EACpBv7I,KAAKk7I,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAI1+G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKu7I,cAEf/+G,EAAK7nB,KAAK3U,KAAKk7I,gBAER1+G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI28D,EAA4B4qD,EAAWvzH,EANnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EApB4B,GAsC3B48D,GAAmB,WACrB,WAAY2qD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAagnB,EAAcC,EAAaC,GAAkB,oBACnHz7I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKu7I,aAAeA,EACpBv7I,KAAKw7I,YAAcA,EACnBx7I,KAAKy7I,iBAAmBA,CAC1B,CAWC,OAXA,mCAYD,WACE,IAAIj/G,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKu7I,cAEf/+G,EAAK7nB,KAAK3U,KAAKw7I,aAEfh/G,EAAK7nB,KAAK3U,KAAKy7I,kBAERj/G,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI48D,EAAoB2qD,EAAWvzH,EAP3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KAE9B,KAAC,EAtBoB,GA0CnB68D,GAAgC,WAClC,WAAY0qD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0mB,EAAiBS,GAA2B,oBAClH17I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi7I,gBAAkBA,EACvBj7I,KAAK07I,0BAA4BA,CACnC,CAUC,OAVA,mCAWD,WACE,IAAIl/G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi7I,iBAEfz+G,EAAK7nB,KAAK3U,KAAK07I,2BAERl/G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI68D,EAAiC0qD,EAAWvzH,EANxCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACKioH,EAAKjoH,KAEvC,KAAC,EApBiC,GAsChC88D,GAA8B,WAChC,WAAYyqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaonB,EAA0BC,EAA6BC,EAAkBC,EAAsBC,EAAiBC,GAA2B,oBACjNh8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK27I,yBAA2BA,EAChC37I,KAAK47I,4BAA8BA,EACnC57I,KAAK67I,iBAAmBA,EACxB77I,KAAK87I,qBAAuBA,EAC5B97I,KAAK+7I,gBAAkBA,EACvB/7I,KAAKg8I,0BAA4BA,CACnC,CAcC,OAdA,mCAeD,WACE,IAAIx/G,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK27I,0BAEfn/G,EAAK7nB,KAAK3U,KAAK47I,6BAEfp/G,EAAK7nB,KAAK3U,KAAK67I,kBAEfr/G,EAAK7nB,KAAK3U,KAAK87I,sBAEft/G,EAAK7nB,KAAK3U,KAAK+7I,iBAEfv/G,EAAK7nB,KAAK3U,KAAKg8I,2BAERx/G,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI88D,EAA+ByqD,EAAWvzH,EAVtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACQioH,EAAKjoH,KACFioH,EAAKjoH,KAChBioH,EAAKjoH,KACDioH,EAAKjoH,KACVioH,EAAKjoH,KACKioH,EAAKjoH,KAEvC,KAAC,EA5B+B,GAsD9B+8D,GAA8B,WAChC,WAAYwqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaonB,EAA0BC,EAA6BC,EAAkBC,EAAsBC,EAAiBC,EAA2BC,GAAsB,oBACvOj8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK27I,yBAA2BA,EAChC37I,KAAK47I,4BAA8BA,EACnC57I,KAAK67I,iBAAmBA,EACxB77I,KAAK87I,qBAAuBA,EAC5B97I,KAAK+7I,gBAAkBA,EACvB/7I,KAAKg8I,0BAA4BA,EACjCh8I,KAAKi8I,qBAAuBA,CAC9B,CAeC,OAfA,mCAgBD,WACE,IAAIz/G,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK27I,0BAEfn/G,EAAK7nB,KAAK3U,KAAK47I,6BAEfp/G,EAAK7nB,KAAK3U,KAAK67I,kBAEfr/G,EAAK7nB,KAAK3U,KAAK87I,sBAEft/G,EAAK7nB,KAAK3U,KAAK+7I,iBAEfv/G,EAAK7nB,KAAK3U,KAAKg8I,2BAEfx/G,EAAK7nB,KAAK3U,KAAKi8I,sBAERz/G,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI+8D,EAA+BwqD,EAAWvzH,EAXtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACQioH,EAAKjoH,KACFioH,EAAKjoH,KAChBioH,EAAKjoH,KACDioH,EAAKjoH,KACVioH,EAAKjoH,KACKioH,EAAKjoH,KACVioH,EAAKjoH,KAElC,KAAC,EA9B+B,GA0D9Bg9D,GAAmC,WACrC,WAAYuqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaymB,EAAoBC,EAAiBC,EAAgBgB,EAAmBC,GAAgB,oBAC9Jn8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKg7I,mBAAqBA,EAC1Bh7I,KAAKi7I,gBAAkBA,EACvBj7I,KAAKk7I,eAAiBA,EACtBl7I,KAAKk8I,kBAAoBA,EACzBl8I,KAAKm8I,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAI3/G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKg7I,oBAEfx+G,EAAK7nB,KAAK3U,KAAKi7I,iBAEfz+G,EAAK7nB,KAAK3U,KAAKk7I,gBAEf1+G,EAAK7nB,KAAK3U,KAAKk8I,mBAEf1/G,EAAK7nB,KAAK3U,KAAKm8I,gBAER3/G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIg9D,EAAoCuqD,EAAWvzH,EAT3Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACEioH,EAAKjoH,KACRioH,EAAKjoH,KACNioH,EAAKjoH,KACFioH,EAAKjoH,KACRioH,EAAKjoH,KAE5B,KAAC,EA1BoC,GAkDnCi9D,GAAiC,WACnC,WAAYsqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa6nB,EAAiBC,GAAmB,oBAC1Gr8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo8I,gBAAkBA,EACvBp8I,KAAKq8I,kBAAoBA,CAC3B,CAUC,OAVA,mCAWD,WACE,IAAI7/G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo8I,iBAEf5/G,EAAK7nB,KAAK3U,KAAKq8I,mBAER7/G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIi9D,EAAkCsqD,EAAWvzH,EANzCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACHioH,EAAKjoH,KAE/B,KAAC,EApBkC,GAsCjCk9D,GAAwB,WAC1B,WAAYqqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa+nB,EAAyBC,GAAkB,oBACjHv8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKs8I,wBAA0BA,EAC/Bt8I,KAAKu8I,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAI//G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKs8I,yBAEf9/G,EAAK7nB,KAAK3U,KAAKu8I,kBAER//G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIk9D,EAAyBqqD,EAAWvzH,EANhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACOioH,EAAKjoH,KACZioH,EAAKjoH,KAE9B,KAAC,EApByB,GAsCxBm9D,GAAkB,WACpB,WAAYoqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaioB,EAAeD,GAAkB,oBACvGv8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw8I,cAAgBA,EACrBx8I,KAAKu8I,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAI//G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw8I,eAEfhgH,EAAK7nB,KAAK3U,KAAKu8I,kBAER//G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIm9D,EAAmBoqD,EAAWvzH,EAN1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACFioH,EAAKjoH,KAE9B,KAAC,EApBmB,GAsClBo9D,GAAc,WAChB,WAAYmqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAakoB,EAAiBC,GAAoB,oBAC3G18I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKy8I,gBAAkBA,EACvBz8I,KAAK08I,mBAAqBA,CAC5B,CAUC,OAVA,mCAWD,WACE,IAAIlgH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKy8I,iBAEfjgH,EAAK7nB,KAAK3U,KAAK08I,oBAERlgH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIo9D,EAAemqD,EAAWvzH,EANtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KAEhC,KAAC,EApBe,GAsCdq9D,GAAgB,WAClB,WAAYkqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIq9D,EAAiBkqD,EAAWvzH,EAJxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBiB,GA8BhBs9D,GAAa,WACf,WAAYiqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIs9D,EAAciqD,EAAWvzH,EAJrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBc,GA8Bbu9D,GAAqB,WACvB,WAAYgqD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgBD,GAAgB,oBACtGh6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAKg6I,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAIx9G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAKg6I,gBAERx9G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIu9D,EAAsBgqD,EAAWvzH,EAN7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAE5B,KAAC,EApBsB,GAsCrBw9D,GAAyB,WAC3B,WAAY+pD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgB0C,GAA4B,oBAClH38I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAK28I,2BAA6BA,CACpC,CAUC,OAVA,mCAWD,WACE,IAAIngH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAK28I,4BAERngH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIw9D,EAA0B+pD,EAAWvzH,EANjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACOioH,EAAKjoH,KAExC,KAAC,EApB0B,GAsCzBy9D,GAAuB,WACzB,WAAY8pD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaqoB,EAAqBC,GAAkB,oBAC7G78I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK48I,oBAAsBA,EAC3B58I,KAAK68I,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAIrgH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK48I,qBAEfpgH,EAAK7nB,KAAK3U,KAAK68I,kBAERrgH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIy9D,EAAwB8pD,EAAWvzH,EAN/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACGioH,EAAKjoH,KACRioH,EAAKjoH,KAE9B,KAAC,EApBwB,GAsCvB09D,GAAmB,WACrB,WAAY6pD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0lB,EAAgB6C,GAAc,oBACpG98I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi6I,eAAiBA,EACtBj6I,KAAK88I,aAAeA,CACtB,CAUC,OAVA,mCAWD,WACE,IAAItgH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi6I,gBAEfz9G,EAAK7nB,KAAK3U,KAAK88I,cAERtgH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI09D,EAAoB6pD,EAAWvzH,EAN3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACPioH,EAAKjoH,KAE1B,KAAC,EApBoB,GAsCnB29D,GAAkB,WACpB,WAAY4pD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAawoB,EAAwBC,GAAwB,oBACtHh9I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK+8I,uBAAyBA,EAC9B/8I,KAAKg9I,uBAAyBA,CAChC,CAUC,OAVA,mCAWD,WACE,IAAIxgH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK+8I,wBAEfvgH,EAAK7nB,KAAK3U,KAAKg9I,wBAERxgH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI29D,EAAmB4pD,EAAWvzH,EAN1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACMioH,EAAKjoH,KACLioH,EAAKjoH,KAEpC,KAAC,EApBmB,GAsClB49D,GAAyB,WAC3B,WAAY2pD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0oB,EAAwBC,GAAqB,oBACnHl9I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi9I,uBAAyBA,EAC9Bj9I,KAAKk9I,oBAAsBA,CAC7B,CAUC,OAVA,mCAWD,WACE,IAAI1gH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi9I,wBAEfzgH,EAAK7nB,KAAK3U,KAAKk9I,qBAER1gH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI49D,EAA0B2pD,EAAWvzH,EANjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACMioH,EAAKjoH,KACRioH,EAAKjoH,KAEjC,KAAC,EApB0B,GAsCzB69D,GAAwB,WAC1B,WAAY0pD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0mB,EAAiBC,EAAgBiC,EAAsBC,EAAkBC,GAAc,oBAC7Jr9I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi7I,gBAAkBA,EACvBj7I,KAAKk7I,eAAiBA,EACtBl7I,KAAKm9I,qBAAuBA,EAC5Bn9I,KAAKo9I,iBAAmBA,EACxBp9I,KAAKq9I,aAAeA,CACtB,CAaC,OAbA,mCAcD,WACE,IAAI7gH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi7I,iBAEfz+G,EAAK7nB,KAAK3U,KAAKk7I,gBAEf1+G,EAAK7nB,KAAK3U,KAAKm9I,sBAEf3gH,EAAK7nB,KAAK3U,KAAKo9I,kBAEf5gH,EAAK7nB,KAAK3U,KAAKq9I,cAER7gH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI69D,EAAyB0pD,EAAWvzH,EAThCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACCioH,EAAKjoH,KACTioH,EAAKjoH,KACTioH,EAAKjoH,KAE1B,KAAC,EA1ByB,GAkDxB89D,GAAW,WACb,WAAYypD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaylB,EAAgBC,GAAgB,oBACtGj6I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKg6I,eAAiBA,EACtBh6I,KAAKi6I,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAIz9G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKg6I,gBAEfx9G,EAAK7nB,KAAK3U,KAAKi6I,gBAERz9G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI89D,EAAYypD,EAAWvzH,EANnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAE5B,KAAC,EApBY,GAsCX+9D,GAAe,WACjB,WAAYwpD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa+oB,EAA4BC,GAAiB,oBACnHv9I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKs9I,2BAA6BA,EAClCt9I,KAAKu9I,gBAAkBA,CACzB,CAUC,OAVA,mCAWD,WACE,IAAI/gH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKs9I,4BAEf9gH,EAAK7nB,KAAK3U,KAAKu9I,iBAER/gH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI+9D,EAAgBwpD,EAAWvzH,EANvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACUioH,EAAKjoH,KAChBioH,EAAKjoH,KAE7B,KAAC,EApBgB,GAsCfg+D,GAAqB,WACvB,WAAYupD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa0mB,EAAiBuC,GAAuB,oBAC9Gx9I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKi7I,gBAAkBA,EACvBj7I,KAAKw9I,sBAAwBA,CAC/B,CAUC,OAVA,mCAWD,WACE,IAAIhhH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKi7I,iBAEfz+G,EAAK7nB,KAAK3U,KAAKw9I,uBAERhhH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIg+D,EAAsBupD,EAAWvzH,EAN7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACCioH,EAAKjoH,KAEnC,KAAC,EApBsB,GAsCrBi+D,GAAkC,WACpC,WAAYspD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa6nB,EAAiBC,GAAmB,oBAC1Gr8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo8I,gBAAkBA,EACvBp8I,KAAKq8I,kBAAoBA,CAC3B,CAUC,OAVA,mCAWD,WACE,IAAI7/G,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo8I,iBAEf5/G,EAAK7nB,KAAK3U,KAAKq8I,mBAER7/G,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIi+D,EAAmCspD,EAAWvzH,EAN1Ci0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACHioH,EAAKjoH,KAE/B,KAAC,EApBmC,GAsClCk+D,GAAc,WAChB,WAAYqpD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaimB,EAAiBiD,EAAgBC,EAASC,EAAcC,GAAyB,oBACvJ59I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw6I,gBAAkBA,EACvBx6I,KAAKy9I,eAAiBA,EACtBz9I,KAAK09I,QAAUA,EACf19I,KAAK29I,aAAeA,EACpB39I,KAAK49I,wBAA0BA,CACjC,CAaC,OAbA,mCAcD,WACE,IAAIphH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw6I,iBAEfh+G,EAAK7nB,KAAK3U,KAAKy9I,gBAEfjhH,EAAK7nB,KAAK3U,KAAK09I,SAEflhH,EAAK7nB,KAAK3U,KAAK29I,cAEfnhH,EAAK7nB,KAAK3U,KAAK49I,yBAERphH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIk+D,EAAeqpD,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACZioH,EAAKjoH,KACAioH,EAAKjoH,KACMioH,EAAKjoH,KAErC,KAAC,EA1Be,GAkDdm+D,GAAuB,WACzB,WAAYopD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaspB,EAAgBC,GAAkB,oBACxG99I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK69I,eAAiBA,EACtB79I,KAAK89I,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAIthH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK69I,gBAEfrhH,EAAK7nB,KAAK3U,KAAK89I,kBAERthH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIm+D,EAAwBopD,EAAWvzH,EAN/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EApBwB,GAsCvBo+D,GAAmB,WACrB,WAAYmpD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaioB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,GAA4B,oBACxLh+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw8I,cAAgBA,EACrBx8I,KAAKg9I,uBAAyBA,EAC9Bh9I,KAAKg7I,mBAAqBA,EAC1Bh7I,KAAK+9I,0BAA4BA,EACjC/9I,KAAKg+I,2BAA6BA,CACpC,CAaC,OAbA,mCAcD,WACE,IAAIxhH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw8I,eAEfhgH,EAAK7nB,KAAK3U,KAAKg9I,wBAEfxgH,EAAK7nB,KAAK3U,KAAKg7I,oBAEfx+G,EAAK7nB,KAAK3U,KAAK+9I,2BAEfvhH,EAAK7nB,KAAK3U,KAAKg+I,4BAERxhH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIo+D,EAAoBmpD,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACIioH,EAAKjoH,KACTioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KAExC,KAAC,EA1BoB,GAkDnBq+D,GAA2B,WAC7B,WAAYkpD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaioB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,EAA4BC,GAAgB,oBACxMj+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw8I,cAAgBA,EACrBx8I,KAAKg9I,uBAAyBA,EAC9Bh9I,KAAKg7I,mBAAqBA,EAC1Bh7I,KAAK+9I,0BAA4BA,EACjC/9I,KAAKg+I,2BAA6BA,EAClCh+I,KAAKi+I,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIzhH,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw8I,eAEfhgH,EAAK7nB,KAAK3U,KAAKg9I,wBAEfxgH,EAAK7nB,KAAK3U,KAAKg7I,oBAEfx+G,EAAK7nB,KAAK3U,KAAK+9I,2BAEfvhH,EAAK7nB,KAAK3U,KAAKg+I,4BAEfxhH,EAAK7nB,KAAK3U,KAAKi+I,gBAERzhH,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIq+D,EAA4BkpD,EAAWvzH,EAVnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACIioH,EAAKjoH,KACTioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACjBioH,EAAKjoH,KAE5B,KAAC,EA5B4B,GAsD3Bs+D,GAA2B,WAC7B,WAAYipD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaioB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,EAA4BC,EAAgBC,GAAuB,oBAC/Nl+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw8I,cAAgBA,EACrBx8I,KAAKg9I,uBAAyBA,EAC9Bh9I,KAAKg7I,mBAAqBA,EAC1Bh7I,KAAK+9I,0BAA4BA,EACjC/9I,KAAKg+I,2BAA6BA,EAClCh+I,KAAKi+I,eAAiBA,EACtBj+I,KAAKk+I,sBAAwBA,CAC/B,CAeC,OAfA,mCAgBD,WACE,IAAI1hH,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw8I,eAEfhgH,EAAK7nB,KAAK3U,KAAKg9I,wBAEfxgH,EAAK7nB,KAAK3U,KAAKg7I,oBAEfx+G,EAAK7nB,KAAK3U,KAAK+9I,2BAEfvhH,EAAK7nB,KAAK3U,KAAKg+I,4BAEfxhH,EAAK7nB,KAAK3U,KAAKi+I,gBAEfzhH,EAAK7nB,KAAK3U,KAAKk+I,uBAER1hH,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIs+D,EAA4BipD,EAAWvzH,EAXnCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACIioH,EAAKjoH,KACTioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACjBioH,EAAKjoH,KACEioH,EAAKjoH,KAEnC,KAAC,EA9B4B,GA0D3Bu+D,GAAkB,WACpB,WAAYgpD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAa+nB,EAAyB6B,GAAuB,oBACtHn+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKs8I,wBAA0BA,EAC/Bt8I,KAAKm+I,sBAAwBA,CAC/B,CAUC,OAVA,mCAWD,WACE,IAAI3hH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKs8I,yBAEf9/G,EAAK7nB,KAAK3U,KAAKm+I,uBAER3hH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIu+D,EAAmBgpD,EAAWvzH,EAN1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACOioH,EAAKjoH,KACPioH,EAAKjoH,KAEnC,KAAC,EApBmB,GAsClBw+D,GAAe,WACjB,WAAY+oD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIw+D,EAAgB+oD,EAAWvzH,EAJvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBgB,GA8Bfy+D,GAAsC,WACxC,WAAY8oD,EAAWvzH,EAAMk/H,EAAYhK,EAAWiK,EAAaqe,GAAa,oBAC5Ep+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK8/H,WAAaA,EAClB9/H,KAAK81H,UAAYA,EACjB91H,KAAK+/H,YAAcA,EACnB//H,KAAKo+I,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI5hH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAK8/H,YAEftjG,EAAK7nB,KAAK3U,KAAK81H,WAEft5F,EAAK7nB,KAAK3U,KAAK+/H,aAEfvjG,EAAK7nB,KAAK3U,KAAKo+I,aAER5hH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIy+D,EAAuC8oD,EAAWvzH,EAJ5Ci0H,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KAEzB,KAAC,EAhBuC,GA8BtC0+D,GAAiB,WACnB,WAAY6oD,EAAWvzH,EAAMy9I,EAAgBC,EAA0BC,EAAoBC,GAAO,oBAChGx+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq+I,eAAiBA,EACtBr+I,KAAKs+I,yBAA2BA,EAChCt+I,KAAKu+I,mBAAqBA,EAC1Bv+I,KAAKw+I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIhiH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKq+I,gBAEf7hH,EAAK7nB,KAAK3U,KAAKs+I,0BAEf9hH,EAAK7nB,KAAK3U,KAAKu+I,oBAEf/hH,EAAK7nB,KAAK3U,KAAKw+I,OAERhiH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI0+D,EAAkB6oD,EAAWvzH,EAJnBi0H,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KAClBioH,EAAKjoH,KAEnB,KAAC,EAhBkB,GA8BjB2+D,GAAwB,WAC1B,WAAY4oD,EAAWvzH,EAAMqpI,EAAmBC,GAAa,oBAC3DlqI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiqI,kBAAoBA,EACzBjqI,KAAKkqI,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI1tG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKiqI,mBAEfztG,EAAK7nB,KAAK3U,KAAKkqI,aAER1tG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI2+D,EAAyB4oD,EAAWvzH,EAFvBi0H,EAAKjoH,KACXioH,EAAKjoH,KAEzB,KAAC,EAZyB,GAsBxB4+D,GAAqB,WACvB,WAAY2oD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIrpD,EAAsB2oD,EAAWvzH,EAC9C,KAAC,EARsB,GAcrB6qE,GAAoB,WACtB,WAAY0oD,EAAWvzH,EAAM69I,EAAeC,GAAsB,oBAChE1+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKy+I,cAAgBA,EACrBz+I,KAAK0+I,qBAAuBA,CAC9B,CAMC,OANA,mCAOD,WACE,IAAIliH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKy+I,eAEfjiH,EAAK7nB,KAAK3U,KAAK0+I,sBAERliH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI6+D,EAAqB0oD,EAAWvzH,EAFvBi0H,EAAKjoH,KACEioH,EAAKjoH,KAElC,KAAC,EAZqB,GAsBpB8+D,GAAW,WACb,WAAYyoD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,GAAiB,oBACnH50H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,CACzB,CAWC,OAXA,mCAYD,WACE,IAAIp4F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAERp4F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI8+D,EAAYyoD,EAAWvzH,EAPnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KAE7B,KAAC,EAtBY,GA0CX++D,GAA+B,WACjC,WAAYwoD,EAAWvzH,EAAM0zH,EAAMC,EAAa+T,EAAwBpQ,GAAkB,oBACxFl4H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKsoI,uBAAyBA,EAC9BtoI,KAAKk4H,iBAAmBA,CAC1B,CAQC,OARA,mCASD,WACE,IAAI17F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKsoI,wBAEf9rG,EAAK7nB,KAAK3U,KAAKk4H,kBAER17F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI++D,EAAgCwoD,EAAWvzH,EAJ3Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACMioH,EAAKjoH,KACXioH,EAAKjoH,KAE9B,KAAC,EAhBgC,GA8B/Bg/D,GAAiC,WACnC,WAAYuoD,EAAWvzH,EAAM0zH,EAAMC,EAAaumB,EAAoBxS,GAAwB,oBAC1FtoI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK86I,mBAAqBA,EAC1B96I,KAAKsoI,uBAAyBA,CAChC,CAQC,OARA,mCASD,WACE,IAAI9rG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK86I,oBAEft+G,EAAK7nB,KAAK3U,KAAKsoI,wBAER9rG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIg/D,EAAkCuoD,EAAWvzH,EAJ7Ci0H,EAAKjoH,KACEioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KAEpC,KAAC,EAhBkC,GA8BjCi/D,GAA4B,WAC9B,WAAYsoD,EAAWvzH,EAAM0zH,EAAMC,GAAa,oBAC9Cv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI/3F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIi/D,EAA6BsoD,EAAWvzH,EAFxCi0H,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAZ6B,GAsB5Bk/D,GAAe,WACjB,WAAYqoD,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,EAAuB8W,EAAcC,EAAeC,EAAeC,EAAgBC,EAAiBC,EAAeC,EAAiBC,EAAYC,EAAYC,EAAaC,EAAaC,EAAcC,EAAeC,EAAgBC,GAAY,oBAC5Rz/I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAK2+I,aAAeA,EACpB3+I,KAAK4+I,cAAgBA,EACrB5+I,KAAK6+I,cAAgBA,EACrB7+I,KAAK8+I,eAAiBA,EACtB9+I,KAAK++I,gBAAkBA,EACvB/+I,KAAKg/I,cAAgBA,EACrBh/I,KAAKi/I,gBAAkBA,EACvBj/I,KAAKk/I,WAAaA,EAClBl/I,KAAKm/I,WAAaA,EAClBn/I,KAAKo/I,YAAcA,EACnBp/I,KAAKq/I,YAAcA,EACnBr/I,KAAKs/I,aAAeA,EACpBt/I,KAAKu/I,cAAgBA,EACrBv/I,KAAKw/I,eAAiBA,EACtBx/I,KAAKy/I,WAAaA,CACpB,CAsBC,OAtBA,mCAuBD,WACE,IAAIjjH,EAAO,GAqCX,OApCAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAK2+I,cAEfniH,EAAK7nB,KAAK3U,KAAK4+I,eAEfpiH,EAAK7nB,KAAK3U,KAAK6+I,eAEfriH,EAAK7nB,KAAK3U,KAAK8+I,gBAEftiH,EAAK7nB,KAAK3U,KAAK++I,iBAEfviH,EAAK7nB,KAAK3U,KAAKg/I,eAEfxiH,EAAK7nB,KAAK3U,KAAKi/I,iBAEfziH,EAAK7nB,KAAK3U,KAAKk/I,YAEf1iH,EAAK7nB,KAAK3U,KAAKm/I,YAEf3iH,EAAK7nB,KAAK3U,KAAKo/I,aAEf5iH,EAAK7nB,KAAK3U,KAAKq/I,aAEf7iH,EAAK7nB,KAAK3U,KAAKs/I,cAEf9iH,EAAK7nB,KAAK3U,KAAKu/I,eAEf/iH,EAAK7nB,KAAK3U,KAAKw/I,gBAEfhjH,EAAK7nB,KAAK3U,KAAKy/I,YAERjjH,CACT,IAAC,uBA7DD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAmBV,OAAO,IAAIk/D,EAAgBqoD,EAAWvzH,EAlB3Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KACdioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KAExB,KAAC,EA5CgB,GAsFfm/D,GAAoB,WACtB,WAAYooD,EAAWvzH,EAAM2nI,EAAWtP,EAAUlD,EAAM2pB,GAAO,oBAC7D1/I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,EAChBj5H,KAAK+1H,KAAOA,EACZ/1H,KAAK0/I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIljH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+1H,MAEfv5F,EAAK7nB,KAAK3U,KAAK0/I,OAERljH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIm/D,EAAqBooD,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KAEnB,KAAC,EAhBqB,GA8BpBo/D,GAA2B,WAC7B,WAAYmoD,EAAWvzH,EAAM2nI,EAAWtP,EAAUlD,EAAM2pB,EAAOjX,GAAc,oBAC3EzoI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,EAChBj5H,KAAK+1H,KAAOA,EACZ/1H,KAAK0/I,MAAQA,EACb1/I,KAAKyoI,aAAeA,CACtB,CASC,OATA,mCAUD,WACE,IAAIjsG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+1H,MAEfv5F,EAAK7nB,KAAK3U,KAAK0/I,OAEfljH,EAAK7nB,KAAK3U,KAAKyoI,cAERjsG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIo/D,EAA4BmoD,EAAWvzH,EALlCi0H,EAAKjoH,KACNioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KACEioH,EAAKjoH,KAE1B,KAAC,EAlB4B,GAkC3Bq/D,GAAoB,WACtB,WAAYkoD,EAAWvzH,EAAMq4H,EAAU8a,EAAQ4L,GAAc,oBAC3D3/I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAK+zI,OAASA,EACd/zI,KAAK2/I,aAAeA,CACtB,CAOC,OAPA,mCAQD,WACE,IAAInjH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+zI,QAEfv3G,EAAK7nB,KAAK3U,KAAK2/I,cAERnjH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIq/D,EAAqBkoD,EAAWvzH,EAH5Bi0H,EAAKjoH,KACPioH,EAAKjoH,KACCioH,EAAKjoH,KAE1B,KAAC,EAdqB,GA0BpBs/D,GAAwB,WAC1B,WAAYioD,EAAWvzH,EAAMq4H,EAAU8a,EAAQtd,GAAQ,oBACrDz2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAK+zI,OAASA,EACd/zI,KAAKy2H,OAASA,CAChB,CAOC,OAPA,mCAQD,WACE,IAAIj6F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+zI,QAEfv3G,EAAK7nB,KAAK3U,KAAKy2H,QAERj6F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIs/D,EAAyBioD,EAAWvzH,EAHhCi0H,EAAKjoH,KACPioH,EAAKjoH,KACLioH,EAAKjoH,KAEpB,KAAC,EAdyB,GA0BxBu/D,GAAO,WACT,WAAYgoD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIu/D,EAAQgoD,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPw/D,GAAW,WACb,WAAY+nD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIw/D,EAAY+nD,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXy/D,GAAO,WACT,WAAY8nD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,GAAa,oBACtEv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAQC,OARA,mCASD,WACE,IAAI/3F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIy/D,EAAQ8nD,EAAWvzH,EAJfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAhBQ,GA8BP0/D,GAA6B,WAC/B,WAAY6nD,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU8D,EAAMC,EAAM4iB,GAAgB,oBAC3F5/I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK+8H,KAAOA,EACZ/8H,KAAKg9H,KAAOA,EACZh9H,KAAK4/I,eAAiBA,CACxB,CAUC,OAVA,mCAWD,WACE,IAAIpjH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK+8H,MAEfvgG,EAAK7nB,KAAK3U,KAAKg9H,MAEfxgG,EAAK7nB,KAAK3U,KAAK4/I,gBAERpjH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI0/D,EAA8B6nD,EAAWvzH,EANlCi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACTioH,EAAKjoH,KACLioH,EAAKjoH,KACKioH,EAAKjoH,KAE5B,KAAC,EApB8B,GAsC7B2/D,GAAS,WACX,WAAY4nD,EAAWvzH,EAAM6gI,EAAYC,EAAUme,EAAQvrB,GAAM,oBAC/Dt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKyhI,WAAaA,EAClBzhI,KAAK0hI,SAAWA,EAChB1hI,KAAK6/I,OAASA,EACd7/I,KAAKs0H,KAAOA,CACd,CAQC,OARA,mCASD,WACE,IAAI93F,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKyhI,YAEfjlG,EAAK7nB,KAAK3U,KAAK0hI,UAEfllG,EAAK7nB,KAAK3U,KAAK6/I,QAEfrjH,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI2/D,EAAU4nD,EAAWvzH,EAJfi0H,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KAElB,KAAC,EAhBU,GA8BT4/D,GAAmB,WACrB,WAAY2nD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4/D,EAAoB2nD,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnB6/D,GAAuB,WACzB,WAAY0nD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI6/D,EAAwB0nD,EAAWvzH,EAV/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BwB,GAsDvB8/D,GAAiB,WACnB,WAAYynD,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,GAAuB,oBACpE7nI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,CAC/B,CAOC,OAPA,mCAQD,WACE,IAAIrrG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAERrrG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI8/D,EAAkBynD,EAAWvzH,EAH7Bi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KAEnC,KAAC,EAdkB,GA0BjB+/D,GAAY,WACd,WAAYwnD,EAAWvzH,EAAMsrI,EAASC,EAAoBC,GAAsB,oBAC9EpsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKksI,QAAUA,EACflsI,KAAKmsI,mBAAqBA,EAC1BnsI,KAAKosI,qBAAuBA,CAC9B,CAOC,OAPA,mCAQD,WACE,IAAI5vG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKksI,SAEf1vG,EAAK7nB,KAAK3U,KAAKmsI,oBAEf3vG,EAAK7nB,KAAK3U,KAAKosI,sBAER5vG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+/D,EAAawnD,EAAWvzH,EAHrBi0H,EAAKjoH,KACMioH,EAAKjoH,KACHioH,EAAKjoH,KAElC,KAAC,EAda,GA0BZggE,GAAoB,WACtB,WAAYunD,EAAWvzH,EAAMk/I,EAAaC,EAAcC,GAAY,oBAClEhgJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK8/I,YAAcA,EACnB9/I,KAAK+/I,aAAeA,EACpB//I,KAAKggJ,WAAaA,CACpB,CAOC,OAPA,mCAQD,WACE,IAAIxjH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK8/I,aAEftjH,EAAK7nB,KAAK3U,KAAK+/I,cAEfvjH,EAAK7nB,KAAK3U,KAAKggJ,YAERxjH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIggE,EAAqBunD,EAAWvzH,EAHzBi0H,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KAExB,KAAC,EAdqB,GA0BpBigE,GAAiC,WACnC,WAAYsnD,EAAWvzH,EAAMq/I,EAA2BC,EAAyBC,EAAoBC,EAAmBC,EAAmBC,GAAsC,oBAC/KtgJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKigJ,0BAA4BA,EACjCjgJ,KAAKkgJ,wBAA0BA,EAC/BlgJ,KAAKmgJ,mBAAqBA,EAC1BngJ,KAAKogJ,kBAAoBA,EACzBpgJ,KAAKqgJ,kBAAoBA,EACzBrgJ,KAAKsgJ,qCAAuCA,CAC9C,CAUC,OAVA,mCAWD,WACE,IAAI9jH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKigJ,2BAEfzjH,EAAK7nB,KAAK3U,KAAKkgJ,yBAEf1jH,EAAK7nB,KAAK3U,KAAKmgJ,oBAEf3jH,EAAK7nB,KAAK3U,KAAKogJ,mBAEf5jH,EAAK7nB,KAAK3U,KAAKqgJ,mBAEf7jH,EAAK7nB,KAAK3U,KAAKsgJ,sCAER9jH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIigE,EAAkCsnD,EAAWvzH,EANxBi0H,EAAKjoH,KACPioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACcioH,EAAKjoH,KAElD,KAAC,EApBkC,GAsCjCkgE,GAAiB,WACnB,WAAYqnD,EAAWvzH,EAAMipI,EAAW0W,GAAe,oBACrDvgJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6pI,UAAYA,EACjB7pI,KAAKugJ,cAAgBA,CACvB,CAMC,OANA,mCAOD,WACE,IAAI/jH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK6pI,WAEfrtG,EAAK7nB,KAAK3U,KAAKugJ,eAER/jH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIkgE,EAAkBqnD,EAAWvzH,EAFxBi0H,EAAKjoH,KACDioH,EAAKjoH,KAE3B,KAAC,EAZkB,GAsBjBmgE,GAA2B,WAC7B,WAAYonD,EAAWvzH,EAAMipI,EAAW0W,EAAeC,EAAuBC,GAAmB,oBAC/FzgJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6pI,UAAYA,EACjB7pI,KAAKugJ,cAAgBA,EACrBvgJ,KAAKwgJ,sBAAwBA,EAC7BxgJ,KAAKygJ,kBAAoBA,CAC3B,CAQC,OARA,mCASD,WACE,IAAIjkH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAK6pI,WAEfrtG,EAAK7nB,KAAK3U,KAAKugJ,eAEf/jH,EAAK7nB,KAAK3U,KAAKwgJ,uBAEfhkH,EAAK7nB,KAAK3U,KAAKygJ,mBAERjkH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAImgE,EAA4BonD,EAAWvzH,EAJlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACGioH,EAAKjoH,KACTioH,EAAKjoH,KAE/B,KAAC,EAhB4B,GA8B3BogE,GAAiB,WACnB,WAAYmnD,EAAWvzH,EAAM8/I,EAAYH,EAAeC,GAAuB,oBAC7ExgJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK0gJ,WAAaA,EAClB1gJ,KAAKugJ,cAAgBA,EACrBvgJ,KAAKwgJ,sBAAwBA,CAC/B,CAOC,OAPA,mCAQD,WACE,IAAIhkH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK0gJ,YAEflkH,EAAK7nB,KAAK3U,KAAKugJ,eAEf/jH,EAAK7nB,KAAK3U,KAAKwgJ,uBAERhkH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIogE,EAAkBmnD,EAAWvzH,EAHvBi0H,EAAKjoH,KACFioH,EAAKjoH,KACGioH,EAAKjoH,KAEnC,KAAC,EAdkB,GA0BjBqgE,GAAS,WACX,WAAYknD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqgE,EAAUknD,EAAWvzH,EATjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BU,GAkDTsgE,GAAa,WACf,WAAYinD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIsgE,EAAcinD,EAAWvzH,EAVrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Bc,GAsDbugE,GAAgB,WAClB,WAAYgnD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIugE,EAAiBgnD,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BiB,GAkDhBwgE,GAAoB,WACtB,WAAY+mD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIwgE,EAAqB+mD,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpBygE,GAAc,WAChB,WAAY8mD,EAAWvzH,EAAM+/I,EAAsBrsB,EAAMC,EAAaqsB,EAAqBC,GAA8B,oBACvH7gJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2gJ,qBAAuBA,EAC5B3gJ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK4gJ,oBAAsBA,EAC3B5gJ,KAAK6gJ,6BAA+BA,CACtC,CASC,OATA,mCAUD,WACE,IAAIrkH,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAK2gJ,sBAEfnkH,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK4gJ,qBAEfpkH,EAAK7nB,KAAK3U,KAAK6gJ,8BAERrkH,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIygE,EAAe8mD,EAAWvzH,EALVi0H,EAAKjoH,KACrBioH,EAAKjoH,KACEioH,EAAKjoH,KACGioH,EAAKjoH,KACIioH,EAAKjoH,KAE1C,KAAC,EAlBe,GAkCd0gE,GAAa,WACf,WAAY6mD,EAAWvzH,EAAMy9I,EAAgBC,EAA0BC,EAAoBC,GAAO,oBAChGx+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq+I,eAAiBA,EACtBr+I,KAAKs+I,yBAA2BA,EAChCt+I,KAAKu+I,mBAAqBA,EAC1Bv+I,KAAKw+I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIhiH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKq+I,gBAEf7hH,EAAK7nB,KAAK3U,KAAKs+I,0BAEf9hH,EAAK7nB,KAAK3U,KAAKu+I,oBAEf/hH,EAAK7nB,KAAK3U,KAAKw+I,OAERhiH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI0gE,EAAc6mD,EAAWvzH,EAJfi0H,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KAClBioH,EAAKjoH,KAEnB,KAAC,EAhBc,GA8Bb2gE,GAAsB,WACxB,WAAY4mD,EAAWvzH,EAAMy9I,EAAgBC,EAA0BC,EAAoBC,GAAO,oBAChGx+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq+I,eAAiBA,EACtBr+I,KAAKs+I,yBAA2BA,EAChCt+I,KAAKu+I,mBAAqBA,EAC1Bv+I,KAAKw+I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIhiH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKq+I,gBAEf7hH,EAAK7nB,KAAK3U,KAAKs+I,0BAEf9hH,EAAK7nB,KAAK3U,KAAKu+I,oBAEf/hH,EAAK7nB,KAAK3U,KAAKw+I,OAERhiH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI2gE,EAAuB4mD,EAAWvzH,EAJxBi0H,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KAClBioH,EAAKjoH,KAEnB,KAAC,EAhBuB,GA8BtB4gE,GAAyB,WAC3B,WAAY2mD,EAAWvzH,EAAMkgJ,GAAc,oBACzC9gJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK8gJ,aAAeA,CACtB,CAKC,OALA,mCAMD,WACE,IAAItkH,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK8gJ,cAERtkH,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI4gE,EAA0B2mD,EAAWvzH,EAD7Bi0H,EAAKjoH,KAE1B,KAAC,EAV0B,GAkBzB6gE,GAAiB,WACnB,WAAY0mD,EAAWvzH,EAAM0zH,EAAMC,GAAa,oBAC9Cv0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,CACrB,CAMC,OANA,mCAOD,WACE,IAAI/3F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAER/3F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI6gE,EAAkB0mD,EAAWvzH,EAF7Bi0H,EAAKjoH,KACEioH,EAAKjoH,KAEzB,KAAC,EAZkB,GAsBjB8gE,GAAyB,WAC3B,WAAYymD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaqL,EAAcmhB,EAAoBC,EAAsBC,EAAaC,EAAaC,EAAehQ,EAAYiQ,GAAa,oBAChMphJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK4/H,aAAeA,EACpB5/H,KAAK+gJ,mBAAqBA,EAC1B/gJ,KAAKghJ,qBAAuBA,EAC5BhhJ,KAAKihJ,YAAcA,EACnBjhJ,KAAKkhJ,YAAcA,EACnBlhJ,KAAKmhJ,cAAgBA,EACrBnhJ,KAAKmxI,WAAaA,EAClBnxI,KAAKohJ,YAAcA,CACrB,CAgBC,OAhBA,mCAiBD,WACE,IAAI5kH,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK4/H,cAEfpjG,EAAK7nB,KAAK3U,KAAK+gJ,oBAEfvkH,EAAK7nB,KAAK3U,KAAKghJ,sBAEfxkH,EAAK7nB,KAAK3U,KAAKihJ,aAEfzkH,EAAK7nB,KAAK3U,KAAKkhJ,aAEf1kH,EAAK7nB,KAAK3U,KAAKmhJ,eAEf3kH,EAAK7nB,KAAK3U,KAAKmxI,YAEf30G,EAAK7nB,KAAK3U,KAAKohJ,aAER5kH,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI8gE,EAA0BymD,EAAWvzH,EAZjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACJioH,EAAKjoH,KACCioH,EAAKjoH,KACHioH,EAAKjoH,KACdioH,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KACRioH,EAAKjoH,KACJioH,EAAKjoH,KAEzB,KAAC,EAhC0B,GA8DzB+gE,GAAO,WACT,WAAYwmD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,EAAiB+jB,EAAaC,EAAcC,EAAcC,EAAiBC,GAAa,oBACrNzhJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,EACvBt9H,KAAKqhJ,YAAcA,EACnBrhJ,KAAKshJ,aAAeA,EACpBthJ,KAAKuhJ,aAAeA,EACpBvhJ,KAAKwhJ,gBAAkBA,EACvBxhJ,KAAKyhJ,YAAcA,CACrB,CAkBC,OAlBA,mCAmBD,WACE,IAAIjlH,EAAO,GA6BX,OA5BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAEf9gG,EAAK7nB,KAAK3U,KAAKqhJ,aAEf7kH,EAAK7nB,KAAK3U,KAAKshJ,cAEf9kH,EAAK7nB,KAAK3U,KAAKuhJ,cAEf/kH,EAAK7nB,KAAK3U,KAAKwhJ,iBAEfhlH,EAAK7nB,KAAK3U,KAAKyhJ,aAERjlH,CACT,IAAC,uBAjDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAeV,OAAO,IAAI+gE,EAAQwmD,EAAWvzH,EAdfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACFioH,EAAKjoH,KACTioH,EAAKjoH,KAEzB,KAAC,EApCQ,GAsEPghE,GAAO,WACT,WAAYumD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIghE,EAAQumD,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPihE,GAAoB,WACtB,WAAYsmD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIihE,EAAqBsmD,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBkhE,GAAmB,WACrB,WAAYqmD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIkhE,EAAoBqmD,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnBmhE,GAAW,WACb,WAAYomD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAImhE,EAAYomD,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXohE,GAA8B,WAChC,WAAYmmD,EAAWvzH,EAAM0zH,EAAMotB,EAAWC,EAAWC,GAAW,oBAClE5hJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK0hJ,UAAYA,EACjB1hJ,KAAK2hJ,UAAYA,EACjB3hJ,KAAK4hJ,UAAYA,CACnB,CAQC,OARA,mCASD,WACE,IAAIplH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK0hJ,WAEfllH,EAAK7nB,KAAK3U,KAAK2hJ,WAEfnlH,EAAK7nB,KAAK3U,KAAK4hJ,WAERplH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIohE,EAA+BmmD,EAAWvzH,EAJ1Ci0H,EAAKjoH,KACAioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAEvB,KAAC,EAhB+B,GA8B9BqhE,GAAc,WAChB,WAAYkmD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqhE,EAAekmD,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdshE,GAAkB,WACpB,WAAYimD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIshE,EAAmBimD,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBuhE,GAAa,WACf,WAAYgmD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI1mD,EAAcgmD,EAAWvzH,EACtC,KAAC,EARc,GAcbwtE,GAAQ,WACV,WAAY+lD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,EAAiB5I,EAAgBmtB,GAAuB,oBACrL7hJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,EACvBt9H,KAAK00H,eAAiBA,EACtB10H,KAAK6hJ,sBAAwBA,CAC/B,CAeC,OAfA,mCAgBD,WACE,IAAIrlH,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAEf9gG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK6hJ,uBAERrlH,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIwhE,EAAS+lD,EAAWvzH,EAXhBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACEioH,EAAKjoH,KAEnC,KAAC,EA9BS,GA0DRyhE,GAAc,WAChB,WAAY8lD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIyhE,EAAe8lD,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDd0hE,GAAkB,WACpB,WAAY6lD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI0hE,EAAmB6lD,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlB2hE,GAAY,WACd,WAAY4lD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgB2I,GAAU,oBAC7Kr9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKq9H,SAAWA,CAClB,CAeC,OAfA,mCAgBD,WACE,IAAI7gG,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKq9H,UAER7gG,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAI2hE,EAAa4lD,EAAWvzH,EAXpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACXioH,EAAKjoH,KAEtB,KAAC,EA9Ba,GA0DZ4hE,GAAiB,WACnB,WAAY2lD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,GAAU,oBAC7Hr9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,CAClB,CAYC,OAZA,mCAaD,WACE,IAAI7gG,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAER7gG,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI4hE,EAAkB2lD,EAAWvzH,EARzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KAEtB,KAAC,EAxBkB,GA8CjB6hE,GAAqB,WACvB,WAAY0lD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6hE,EAAsB0lD,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1BsB,GAkDrB8hE,GAA0B,WAC5B,WAAYylD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAUC,GAAiB,oBAC9It9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAKs9H,gBAAkBA,CACzB,CAaC,OAbA,mCAcD,WACE,IAAI9gG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAKs9H,iBAER9gG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8hE,EAA2BylD,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KAE7B,KAAC,EA1B2B,GAkD1B+hE,GAA8B,WAChC,WAAYwlD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAAa,oBACnJv1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI/4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAER/4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+hE,EAA+BwlD,EAAWvzH,EATtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KAEzB,KAAC,EA1B+B,GAkD9BgiE,GAAc,WAChB,WAAYulD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBmI,EAAU3I,GAAgB,oBAC7I10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKq9H,SAAWA,EAChBr9H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKq9H,UAEf7gG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgiE,EAAeulD,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACXioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdiiE,GAAkB,WACpB,WAAYslD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgB2I,GAAU,oBAC7Kr9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKq9H,SAAWA,CAClB,CAeC,OAfA,mCAgBD,WACE,IAAI7gG,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKq9H,UAER7gG,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIiiE,EAAmBslD,EAAWvzH,EAX1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACXioH,EAAKjoH,KAEtB,KAAC,EA9BmB,GA0DlBkiE,GAAS,WACX,WAAYqlD,EAAWvzH,EAAMq4H,EAAUxC,GAAQ,oBAC7Cz2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,CAChB,CAMC,OANA,mCAOD,WACE,IAAIj6F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAERj6F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIkiE,EAAUqlD,EAAWvzH,EAFjBi0H,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EAZU,GAsBTmiE,GAAmB,WACrB,WAAYolD,EAAWvzH,EAAMq4H,EAAUxC,GAAQ,oBAC7Cz2H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAKy2H,OAASA,CAChB,CAMC,OANA,mCAOD,WACE,IAAIj6F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKy2H,QAERj6F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAImiE,EAAoBolD,EAAWvzH,EAF3Bi0H,EAAKjoH,KACPioH,EAAKjoH,KAEpB,KAAC,EAZoB,GAsBnBoiE,GAAgB,WAClB,WAAYmlD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIoiE,EAAiBmlD,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BiB,GAkDhBqiE,GAAoB,WACtB,WAAYklD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqiE,EAAqBklD,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpBsiE,GAAQ,WACV,WAAYilD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIsiE,EAASilD,EAAWvzH,EAThBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BS,GAkDRuiE,GAAc,WAChB,WAAYglD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK2sB,EAAgBC,EAAgBC,EAAaC,EAAavtB,GAAgB,oBAClM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK8hJ,eAAiBA,EACtB9hJ,KAAK+hJ,eAAiBA,EACtB/hJ,KAAKgiJ,YAAcA,EACnBhiJ,KAAKiiJ,YAAcA,EACnBjiJ,KAAK00H,eAAiBA,CACxB,CAiBC,OAjBA,mCAkBD,WACE,IAAIl4F,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK8hJ,gBAEftlH,EAAK7nB,KAAK3U,KAAK+hJ,gBAEfvlH,EAAK7nB,KAAK3U,KAAKgiJ,aAEfxlH,EAAK7nB,KAAK3U,KAAKiiJ,aAEfzlH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAIuiE,EAAeglD,EAAWvzH,EAbtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EAlCe,GAkEdwiE,GAAkB,WACpB,WAAY+kD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIwiE,EAAmB+kD,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlByiE,GAAY,WACd,WAAY8kD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIyiE,EAAa8kD,EAAWvzH,EAVpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Ba,GAsDZ0iE,GAAmB,WACrB,WAAY6kD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeC,GAAmB,oBAClKpiJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAKoiJ,kBAAoBA,CAC3B,CAcC,OAdA,mCAeD,WACE,IAAI5lH,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAKoiJ,mBAER5lH,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI0iE,EAAoB6kD,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KAE/B,KAAC,EA5BoB,GAsDnB2iE,GAAqB,WACvB,WAAY4kD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,GAAe,oBAC/IniJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,CACvB,CAaC,OAbA,mCAcD,WACE,IAAI3lH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAER3lH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2iE,EAAsB4kD,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EA1BsB,GAkDrB4iE,GAA0B,WAC5B,WAAY2kD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB2tB,EAAsBC,EAAUC,EAAYC,GAAiB,oBAC/JxiJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK00H,eAAiBA,EACtB10H,KAAKqiJ,qBAAuBA,EAC5BriJ,KAAKsiJ,SAAWA,EAChBtiJ,KAAKuiJ,WAAaA,EAClBviJ,KAAKwiJ,gBAAkBA,CACzB,CAcC,OAdA,mCAeD,WACE,IAAIhmH,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKqiJ,sBAEf7lH,EAAK7nB,KAAK3U,KAAKsiJ,UAEf9lH,EAAK7nB,KAAK3U,KAAKuiJ,YAEf/lH,EAAK7nB,KAAK3U,KAAKwiJ,iBAERhmH,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4iE,EAA2B2kD,EAAWvzH,EAVlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACCioH,EAAKjoH,KACjBioH,EAAKjoH,KACHioH,EAAKjoH,KACAioH,EAAKjoH,KAE7B,KAAC,EA5B2B,GAsD1B6iE,GAAuB,WACzB,WAAY0kD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgB2mB,GAAkB,oBACrI77I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK67I,iBAAmBA,CAC1B,CAYC,OAZA,mCAaD,WACE,IAAIr/G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK67I,kBAERr/G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI6iE,EAAwB0kD,EAAWvzH,EAR/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EAxBwB,GA8CvB8iE,GAAgC,WAClC,WAAYykD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI8iE,EAAiCykD,EAAWvzH,EAD5Ci0H,EAAKjoH,KAElB,KAAC,EAViC,GAkBhC+iE,GAAwB,WAC1B,WAAYwkD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiB/tB,GAAgB,oBACnM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAKoiJ,kBAAoBA,EACzBpiJ,KAAKyiJ,gBAAkBA,EACvBziJ,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAKoiJ,mBAEf5lH,EAAK7nB,KAAK3U,KAAKyiJ,iBAEfjmH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI+iE,EAAyBwkD,EAAWvzH,EAZhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAhCyB,GA8DxBgjE,GAA4B,WAC9B,WAAYukD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgB2mB,EAAkB9lB,GAAM,oBAC3I/1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK67I,iBAAmBA,EACxB77I,KAAK+1H,KAAOA,CACd,CAaC,OAbA,mCAcD,WACE,IAAIv5F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK67I,kBAEfr/G,EAAK7nB,KAAK3U,KAAK+1H,MAERv5F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgjE,EAA6BukD,EAAWvzH,EATpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACjBioH,EAAKjoH,KAElB,KAAC,EA1B6B,GAkD5BijE,GAAwB,WAC1B,WAAYskD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBR,EAAgBqB,GAAM,oBACzI/1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK00H,eAAiBA,EACtB10H,KAAK+1H,KAAOA,CACd,CAaC,OAbA,mCAcD,WACE,IAAIv5F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK+1H,MAERv5F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIijE,EAAyBskD,EAAWvzH,EAThCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EA1ByB,GAkDxBkjE,GAA+B,WACjC,WAAYqkD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBR,EAAgBqB,GAAM,oBACzI/1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK00H,eAAiBA,EACtB10H,KAAK+1H,KAAOA,CACd,CAaC,OAbA,mCAcD,WACE,IAAIv5F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK+1H,MAERv5F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIkjE,EAAgCqkD,EAAWvzH,EATvCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACfioH,EAAKjoH,KAElB,KAAC,EA1BgC,GAkD/BmjE,GAA0B,WAC5B,WAAYokD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeztB,GAAgB,oBAC/J10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAImjE,EAA2BokD,EAAWvzH,EAVlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KAE5B,KAAC,EA5B2B,GAsD1BojE,GAAiB,WACnB,WAAYmkD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,GAAgB,oBACnHl1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI14F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAER14F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIojE,EAAkBmkD,EAAWvzH,EAPzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBkB,GA0CjBqjE,GAAyB,WAC3B,WAAYkkD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiB/tB,GAAgB,oBACnM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAKoiJ,kBAAoBA,EACzBpiJ,KAAKyiJ,gBAAkBA,EACvBziJ,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAKoiJ,mBAEf5lH,EAAK7nB,KAAK3U,KAAKyiJ,iBAEfjmH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIqjE,EAA0BkkD,EAAWvzH,EAZjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAhC0B,GA8DzBsjE,GAAiB,WACnB,WAAYikD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIsjE,EAAkBikD,EAAWvzH,EAD7Bi0H,EAAKjoH,KAElB,KAAC,EAVkB,GAkBjBujE,GAAqB,WACvB,WAAYgkD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgBguB,EAAYC,EAAcC,EAAaptB,EAASqtB,GAAwB,oBAC1K7iJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK00H,eAAiBA,EACtB10H,KAAK0iJ,WAAaA,EAClB1iJ,KAAK2iJ,aAAeA,EACpB3iJ,KAAK4iJ,YAAcA,EACnB5iJ,KAAKw1H,QAAUA,EACfx1H,KAAK6iJ,uBAAyBA,CAChC,CAeC,OAfA,mCAgBD,WACE,IAAIrmH,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0iJ,YAEflmH,EAAK7nB,KAAK3U,KAAK2iJ,cAEfnmH,EAAK7nB,KAAK3U,KAAK4iJ,aAEfpmH,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAK6iJ,wBAERrmH,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIujE,EAAsBgkD,EAAWvzH,EAX7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACTioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACTioH,EAAKjoH,KACUioH,EAAKjoH,KAEpC,KAAC,EA9BsB,GA0DrBwjE,GAA8B,WAChC,WAAY+jD,EAAWvzH,EAAM0zH,EAAMqY,EAAQmW,GAAW,oBACpD9iJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK2sI,OAASA,EACd3sI,KAAK8iJ,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAItmH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK2sI,QAEfnwG,EAAK7nB,KAAK3U,KAAK8iJ,WAERtmH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIwjE,EAA+B+jD,EAAWvzH,EAH1Ci0H,EAAKjoH,KACHioH,EAAKjoH,KACFioH,EAAKjoH,KAEvB,KAAC,EAd+B,GA0B9ByjE,GAAsB,WACxB,WAAY8jD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgBguB,EAAYC,EAAcC,EAAaptB,GAAS,oBAClJx1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAK00H,eAAiBA,EACtB10H,KAAK0iJ,WAAaA,EAClB1iJ,KAAK2iJ,aAAeA,EACpB3iJ,KAAK4iJ,YAAcA,EACnB5iJ,KAAKw1H,QAAUA,CACjB,CAcC,OAdA,mCAeD,WACE,IAAIh5F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0iJ,YAEflmH,EAAK7nB,KAAK3U,KAAK2iJ,cAEfnmH,EAAK7nB,KAAK3U,KAAK4iJ,aAEfpmH,EAAK7nB,KAAK3U,KAAKw1H,SAERh5F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIyjE,EAAuB8jD,EAAWvzH,EAV9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACTioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACTioH,EAAKjoH,KAErB,KAAC,EA5BuB,GAsDtB0jE,GAA4B,WAC9B,WAAY6jD,EAAWvzH,EAAM0zH,EAAMyuB,EAAcC,EAAcC,EAAcC,EAAeC,EAAeC,GAAe,oBACxHpjJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK+iJ,aAAeA,EACpB/iJ,KAAKgjJ,aAAeA,EACpBhjJ,KAAKijJ,aAAeA,EACpBjjJ,KAAKkjJ,cAAgBA,EACrBljJ,KAAKmjJ,cAAgBA,EACrBnjJ,KAAKojJ,cAAgBA,CACvB,CAWC,OAXA,mCAYD,WACE,IAAI5mH,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK+iJ,cAEfvmH,EAAK7nB,KAAK3U,KAAKgjJ,cAEfxmH,EAAK7nB,KAAK3U,KAAKijJ,cAEfzmH,EAAK7nB,KAAK3U,KAAKkjJ,eAEf1mH,EAAK7nB,KAAK3U,KAAKmjJ,eAEf3mH,EAAK7nB,KAAK3U,KAAKojJ,eAER5mH,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI0jE,EAA6B6jD,EAAWvzH,EAPxCi0H,EAAKjoH,KACGioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE3B,KAAC,EAtB6B,GA0C5B2jE,GAAyB,WAC3B,WAAY4jD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI2jE,EAA0B4jD,EAAWvzH,EADrCi0H,EAAKjoH,KAElB,KAAC,EAV0B,GAkBzB4jE,GAA4B,WAC9B,WAAY2jD,EAAWvzH,EAAM0zH,EAAM+uB,EAAcC,EAAcC,GAAc,oBAC3EvjJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKqjJ,aAAeA,EACpBrjJ,KAAKsjJ,aAAeA,EACpBtjJ,KAAKujJ,aAAeA,CACtB,CAQC,OARA,mCASD,WACE,IAAI/mH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKqjJ,cAEf7mH,EAAK7nB,KAAK3U,KAAKsjJ,cAEf9mH,EAAK7nB,KAAK3U,KAAKujJ,cAER/mH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI4jE,EAA6B2jD,EAAWvzH,EAJxCi0H,EAAKjoH,KACGioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAE1B,KAAC,EAhB6B,GA8B5B6jE,GAAmC,WACrC,WAAY0jD,EAAWvzH,EAAM0zH,EAAMkvB,EAAeC,EAAeC,EAAeC,EAA0BC,EAA0BC,GAA0B,oBAC5J7jJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKwjJ,cAAgBA,EACrBxjJ,KAAKyjJ,cAAgBA,EACrBzjJ,KAAK0jJ,cAAgBA,EACrB1jJ,KAAK2jJ,yBAA2BA,EAChC3jJ,KAAK4jJ,yBAA2BA,EAChC5jJ,KAAK6jJ,yBAA2BA,CAClC,CAWC,OAXA,mCAYD,WACE,IAAIrnH,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKwjJ,eAEfhnH,EAAK7nB,KAAK3U,KAAKyjJ,eAEfjnH,EAAK7nB,KAAK3U,KAAK0jJ,eAEflnH,EAAK7nB,KAAK3U,KAAK2jJ,0BAEfnnH,EAAK7nB,KAAK3U,KAAK4jJ,0BAEfpnH,EAAK7nB,KAAK3U,KAAK6jJ,0BAERrnH,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI6jE,EAAoC0jD,EAAWvzH,EAP/Ci0H,EAAKjoH,KACIioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACMioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAEtC,KAAC,EAtBoC,GA0CnC8jE,GAA6C,WAC/C,WAAYyjD,EAAWvzH,EAAM0zH,EAAMkvB,EAAeC,EAAeC,EAAeC,EAA0BC,EAA0BC,EAA0BC,GAAY,oBACxK9jJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKwjJ,cAAgBA,EACrBxjJ,KAAKyjJ,cAAgBA,EACrBzjJ,KAAK0jJ,cAAgBA,EACrB1jJ,KAAK2jJ,yBAA2BA,EAChC3jJ,KAAK4jJ,yBAA2BA,EAChC5jJ,KAAK6jJ,yBAA2BA,EAChC7jJ,KAAK8jJ,WAAaA,CACpB,CAYC,OAZA,mCAaD,WACE,IAAItnH,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKwjJ,eAEfhnH,EAAK7nB,KAAK3U,KAAKyjJ,eAEfjnH,EAAK7nB,KAAK3U,KAAK0jJ,eAEflnH,EAAK7nB,KAAK3U,KAAK2jJ,0BAEfnnH,EAAK7nB,KAAK3U,KAAK4jJ,0BAEfpnH,EAAK7nB,KAAK3U,KAAK6jJ,0BAEfrnH,EAAK7nB,KAAK3U,KAAK8jJ,YAERtnH,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI8jE,EAA8CyjD,EAAWvzH,EARzDi0H,EAAKjoH,KACIioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACMioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACnBioH,EAAKjoH,KAExB,KAAC,EAxB8C,GA8C7C+jE,GAA4B,WAC9B,WAAYwjD,EAAWvzH,EAAM0zH,EAAMyvB,EAAQC,EAAQC,EAAQC,EAASC,EAASC,GAAS,oBACpFpkJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK+jJ,OAASA,EACd/jJ,KAAKgkJ,OAASA,EACdhkJ,KAAKikJ,OAASA,EACdjkJ,KAAKkkJ,QAAUA,EACflkJ,KAAKmkJ,QAAUA,EACfnkJ,KAAKokJ,QAAUA,CACjB,CAWC,OAXA,mCAYD,WACE,IAAI5nH,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK+jJ,QAEfvnH,EAAK7nB,KAAK3U,KAAKgkJ,QAEfxnH,EAAK7nB,KAAK3U,KAAKikJ,QAEfznH,EAAK7nB,KAAK3U,KAAKkkJ,SAEf1nH,EAAK7nB,KAAK3U,KAAKmkJ,SAEf3nH,EAAK7nB,KAAK3U,KAAKokJ,SAER5nH,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAI+jE,EAA6BwjD,EAAWvzH,EAPxCi0H,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KAErB,KAAC,EAtB6B,GA0C5BgkE,GAAmC,WACrC,WAAYujD,EAAWvzH,EAAM0zH,EAAMyvB,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAASC,GAAe,oBACnGrkJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK+jJ,OAASA,EACd/jJ,KAAKgkJ,OAASA,EACdhkJ,KAAKikJ,OAASA,EACdjkJ,KAAKkkJ,QAAUA,EACflkJ,KAAKmkJ,QAAUA,EACfnkJ,KAAKokJ,QAAUA,EACfpkJ,KAAKqkJ,cAAgBA,CACvB,CAYC,OAZA,mCAaD,WACE,IAAI7nH,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK+jJ,QAEfvnH,EAAK7nB,KAAK3U,KAAKgkJ,QAEfxnH,EAAK7nB,KAAK3U,KAAKikJ,QAEfznH,EAAK7nB,KAAK3U,KAAKkkJ,SAEf1nH,EAAK7nB,KAAK3U,KAAKmkJ,SAEf3nH,EAAK7nB,KAAK3U,KAAKokJ,SAEf5nH,EAAK7nB,KAAK3U,KAAKqkJ,eAER7nH,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIgkE,EAAoCujD,EAAWvzH,EAR/Ci0H,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KAE3B,KAAC,EAxBoC,GA8CnCikE,GAAuB,WACzB,WAAYsjD,EAAWvzH,EAAM0zH,GAAM,oBACjCt0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAI93F,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIikE,EAAwBsjD,EAAWvzH,EADnCi0H,EAAKjoH,KAElB,KAAC,EAVwB,GAkBvBkkE,GAA4B,WAC9B,WAAYqjD,EAAWvzH,EAAM0zH,EAAMgwB,EAAgBC,EAASC,GAAS,oBACnExkJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKskJ,eAAiBA,EACtBtkJ,KAAKukJ,QAAUA,EACfvkJ,KAAKwkJ,QAAUA,CACjB,CAQC,OARA,mCASD,WACE,IAAIhoH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKskJ,gBAEf9nH,EAAK7nB,KAAK3U,KAAKukJ,SAEf/nH,EAAK7nB,KAAK3U,KAAKwkJ,SAERhoH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIkkE,EAA6BqjD,EAAWvzH,EAJxCi0H,EAAKjoH,KACKioH,EAAKjoH,KACZioH,EAAKjoH,KACLioH,EAAKjoH,KAErB,KAAC,EAhB6B,GA8B5BmkE,GAAmB,WACrB,WAAYojD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,GAAgB,oBACnHl1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,CACxB,CAWC,OAXA,mCAYD,WACE,IAAI14F,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAER14F,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAImkE,EAAoBojD,EAAWvzH,EAP3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAtBoB,GA0CnBokE,GAAyB,WAC3B,WAAYmjD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiB/tB,GAAgB,oBACnM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAKoiJ,kBAAoBA,EACzBpiJ,KAAKyiJ,gBAAkBA,EACvBziJ,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAKoiJ,mBAEf5lH,EAAK7nB,KAAK3U,KAAKyiJ,iBAEfjmH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAIokE,EAA0BmjD,EAAWvzH,EAZjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAhC0B,GA8DzBqkE,GAAwB,WAC1B,WAAYkjD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeC,GAAmB,oBAClKpiJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAKoiJ,kBAAoBA,CAC3B,CAcC,OAdA,mCAeD,WACE,IAAI5lH,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAKoiJ,mBAER5lH,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqkE,EAAyBkjD,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KAE/B,KAAC,EA5ByB,GAsDxBskE,GAA4B,WAC9B,WAAYijD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgB2mB,EAAkBG,GAA2B,oBAChKh8I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK67I,iBAAmBA,EACxB77I,KAAKg8I,0BAA4BA,CACnC,CAaC,OAbA,mCAcD,WACE,IAAIx/G,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK67I,kBAEfr/G,EAAK7nB,KAAK3U,KAAKg8I,2BAERx/G,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIskE,EAA6BijD,EAAWvzH,EATpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACIioH,EAAKjoH,KAEvC,KAAC,EA1B6B,GAkD5BukE,GAA0B,WAC5B,WAAYgjD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,GAAe,oBAC/IniJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,CACvB,CAaC,OAbA,mCAcD,WACE,IAAI3lH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAER3lH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIukE,EAA2BgjD,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EA1B2B,GAkD1BwkE,GAAqB,WACvB,WAAY+iD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,GAAe,oBAC/IniJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,CACvB,CAaC,OAbA,mCAcD,WACE,IAAI3lH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAER3lH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwkE,EAAsB+iD,EAAWvzH,EAT7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KAE3B,KAAC,EA1BsB,GAkDrBykE,GAAwB,WAC1B,WAAY8iD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYiwB,EAAYC,EAAoBC,GAAU,oBAC5H3kJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKykJ,WAAaA,EAClBzkJ,KAAK0kJ,mBAAqBA,EAC1B1kJ,KAAK2kJ,SAAWA,CAClB,CAYC,OAZA,mCAaD,WACE,IAAInoH,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKykJ,YAEfjoH,EAAK7nB,KAAK3U,KAAK0kJ,oBAEfloH,EAAK7nB,KAAK3U,KAAK2kJ,UAERnoH,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIykE,EAAyB8iD,EAAWvzH,EARhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACGioH,EAAKjoH,KACfioH,EAAKjoH,KAEtB,KAAC,EAxByB,GA8CxB0kE,GAA0B,WAC5B,WAAY6iD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiB/tB,GAAgB,oBACnM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAKoiJ,kBAAoBA,EACzBpiJ,KAAKyiJ,gBAAkBA,EACvBziJ,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAKoiJ,mBAEf5lH,EAAK7nB,KAAK3U,KAAKyiJ,iBAEfjmH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI0kE,EAA2B6iD,EAAWvzH,EAZlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACNioH,EAAKjoH,KAE5B,KAAC,EAhC2B,GA8D1B2kE,GAA8B,WAChC,WAAY4iD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgB2mB,GAAkB,oBACrI77I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK67I,iBAAmBA,CAC1B,CAYC,OAZA,mCAaD,WACE,IAAIr/G,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK67I,kBAERr/G,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI2kE,EAA+B4iD,EAAWvzH,EARtCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EAxB+B,GA8C9B4kE,GAA0B,WAC5B,WAAY2iD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBR,EAAgBgK,GAAW,oBAC9I1+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK00H,eAAiBA,EACtB10H,KAAK0+H,UAAYA,CACnB,CAaC,OAbA,mCAcD,WACE,IAAIliG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0+H,WAERliG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4kE,EAA2B2iD,EAAWvzH,EATlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACVioH,EAAKjoH,KAEvB,KAAC,EA1B2B,GAkD1B6kE,GAAiC,WACnC,WAAY0iD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBR,EAAgBgK,GAAW,oBAC9I1+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAK00H,eAAiBA,EACtB10H,KAAK0+H,UAAYA,CACnB,CAaC,OAbA,mCAcD,WACE,IAAIliG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK0+H,WAERliG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6kE,EAAkC0iD,EAAWvzH,EATzCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACLioH,EAAKjoH,KACVioH,EAAKjoH,KAEvB,KAAC,EA1BkC,GAkDjC8kE,GAA4B,WAC9B,WAAYyiD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBgtB,EAAaC,EAAeztB,GAAgB,oBAC/J10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKkiJ,YAAcA,EACnBliJ,KAAKmiJ,cAAgBA,EACrBniJ,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKkiJ,aAEf1lH,EAAK7nB,KAAK3U,KAAKmiJ,eAEf3lH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI8kE,EAA6ByiD,EAAWvzH,EAVpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KAE5B,KAAC,EA5B6B,GAsD5B+kE,GAAa,WACf,WAAYwiD,EAAWvzH,EAAMy9I,EAAgBC,EAA0BC,EAAoBC,GAAO,oBAChGx+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq+I,eAAiBA,EACtBr+I,KAAKs+I,yBAA2BA,EAChCt+I,KAAKu+I,mBAAqBA,EAC1Bv+I,KAAKw+I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIhiH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKq+I,gBAEf7hH,EAAK7nB,KAAK3U,KAAKs+I,0BAEf9hH,EAAK7nB,KAAK3U,KAAKu+I,oBAEf/hH,EAAK7nB,KAAK3U,KAAKw+I,OAERhiH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI+kE,EAAcwiD,EAAWvzH,EAJfi0H,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KAClBioH,EAAKjoH,KAEnB,KAAC,EAhBc,GA8BbglE,GAAa,WACf,WAAYuiD,EAAWvzH,EAAMgkJ,EAAMnP,EAAQnhB,GAAM,oBAC/Ct0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK4kJ,KAAOA,EACZ5kJ,KAAKy1I,OAASA,EACdz1I,KAAKs0H,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI93F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK4kJ,MAEfpoH,EAAK7nB,KAAK3U,KAAKy1I,QAEfj5G,EAAK7nB,KAAK3U,KAAKs0H,MAER93F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIglE,EAAcuiD,EAAWvzH,EAHzBi0H,EAAKjoH,KACHioH,EAAKjoH,KACPioH,EAAKjoH,KAElB,KAAC,EAdc,GA0BbilE,GAAuB,WACzB,WAAYsiD,EAAWvzH,EAAMy9I,EAAgBC,EAA0BC,EAAoBC,GAAO,oBAChGx+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq+I,eAAiBA,EACtBr+I,KAAKs+I,yBAA2BA,EAChCt+I,KAAKu+I,mBAAqBA,EAC1Bv+I,KAAKw+I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIhiH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKq+I,gBAEf7hH,EAAK7nB,KAAK3U,KAAKs+I,0BAEf9hH,EAAK7nB,KAAK3U,KAAKu+I,oBAEf/hH,EAAK7nB,KAAK3U,KAAKw+I,OAERhiH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIilE,EAAwBsiD,EAAWvzH,EAJzBi0H,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KAClBioH,EAAKjoH,KAEnB,KAAC,EAhBwB,GA8BvBklE,GAAsB,WACxB,WAAYqiD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBsM,EAAOC,EAAWC,EAAc1M,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkhI,MAAQA,EACblhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAeC,OAfA,mCAgBD,WACE,IAAIl4F,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkhI,OAEf1kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIklE,EAAuBqiD,EAAWvzH,EAX9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACfioH,EAAKjoH,KACDioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EA9BuB,GA0DtBmlE,GAA0B,WAC5B,WAAYoiD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,EAAcF,EAAWC,EAAc1M,GAAgB,oBACrM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,EACpBrhI,KAAKmhI,UAAYA,EACjBnhI,KAAKohI,aAAeA,EACpBphI,KAAK00H,eAAiBA,CACxB,CAgBC,OAhBA,mCAiBD,WACE,IAAIl4F,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAEf7kG,EAAK7nB,KAAK3U,KAAKmhI,WAEf3kG,EAAK7nB,KAAK3U,KAAKohI,cAEf5kG,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAImlE,EAA2BoiD,EAAWvzH,EAZlCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KAE5B,KAAC,EAhC2B,GA8D1BolE,GAAU,WACZ,WAAYmiD,EAAWvzH,EAAMomI,EAAWC,EAAS4d,GAAY,oBAC3D7kJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKgnI,UAAYA,EACjBhnI,KAAKinI,QAAUA,EACfjnI,KAAK6kJ,WAAaA,CACpB,CAOC,OAPA,mCAQD,WACE,IAAIroH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKgnI,WAEfxqG,EAAK7nB,KAAK3U,KAAKinI,SAEfzqG,EAAK7nB,KAAK3U,KAAK6kJ,YAERroH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIolE,EAAWmiD,EAAWvzH,EAHjBi0H,EAAKjoH,KACPioH,EAAKjoH,KACFioH,EAAKjoH,KAExB,KAAC,EAdW,GA0BVqlE,GAAU,WACZ,WAAYkiD,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAI5iD,EAAWkiD,EAAWvzH,EACnC,KAAC,EARW,GAcVsxE,GAAe,WACjB,WAAYiiD,EAAWvzH,EAAMsrI,EAASC,EAAoBC,GAAsB,oBAC9EpsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKksI,QAAUA,EACflsI,KAAKmsI,mBAAqBA,EAC1BnsI,KAAKosI,qBAAuBA,CAC9B,CAOC,OAPA,mCAQD,WACE,IAAI5vG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKksI,SAEf1vG,EAAK7nB,KAAK3U,KAAKmsI,oBAEf3vG,EAAK7nB,KAAK3U,KAAKosI,sBAER5vG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIslE,EAAgBiiD,EAAWvzH,EAHxBi0H,EAAKjoH,KACMioH,EAAKjoH,KACHioH,EAAKjoH,KAElC,KAAC,EAdgB,GA0BfulE,GAA6B,WAC/B,WAAYgiD,EAAWvzH,EAAM2nI,EAAWtP,EAAU4Q,EAAWC,EAAYC,EAAU+a,GAAkB,oBACnG9kJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,EAChBj5H,KAAK6pI,UAAYA,EACjB7pI,KAAK8pI,WAAaA,EAClB9pI,KAAK+pI,SAAWA,EAChB/pI,KAAK8kJ,iBAAmBA,CAC1B,CAUC,OAVA,mCAWD,WACE,IAAItoH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK6pI,WAEfrtG,EAAK7nB,KAAK3U,KAAK8pI,YAEfttG,EAAK7nB,KAAK3U,KAAK+pI,UAEfvtG,EAAK7nB,KAAK3U,KAAK8kJ,kBAERtoH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIulE,EAA8BgiD,EAAWvzH,EANpCi0H,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KACGioH,EAAKjoH,KAE9B,KAAC,EApB8B,GAsC7BwlE,GAAiB,WACnB,WAAY+hD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIwlE,EAAkB+hD,EAAWvzH,EATzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BkB,GAkDjBylE,GAA2B,WAC7B,WAAY8hD,EAAWvzH,EAAMmkJ,EAAY9rB,EAAUuP,EAAmB7K,GAAO,oBAC3E39H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+kJ,WAAaA,EAClB/kJ,KAAKi5H,SAAWA,EAChBj5H,KAAKwoI,kBAAoBA,EACzBxoI,KAAK29H,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAInhG,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAK+kJ,YAEfvoH,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKwoI,mBAEfhsG,EAAK7nB,KAAK3U,KAAK29H,OAERnhG,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAIylE,EAA4B8hD,EAAWvzH,EAJjCi0H,EAAKjoH,KACPioH,EAAKjoH,KACIioH,EAAKjoH,KACjBioH,EAAKjoH,KAEnB,KAAC,EAhB4B,GA8B3B0lE,GAAsB,WACxB,WAAY6hD,EAAWvzH,EAAMmkJ,EAAY9rB,EAAU+rB,GAAc,oBAC/DhlJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+kJ,WAAaA,EAClB/kJ,KAAKi5H,SAAWA,EAChBj5H,KAAKglJ,aAAeA,CACtB,CAOC,OAPA,mCAQD,WACE,IAAIxoH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK+kJ,YAEfvoH,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKglJ,cAERxoH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI0lE,EAAuB6hD,EAAWvzH,EAH5Bi0H,EAAKjoH,KACPioH,EAAKjoH,KACDioH,EAAKjoH,KAE1B,KAAC,EAduB,GA0BtB2lE,GAA2B,WAC7B,WAAY4hD,EAAWvzH,EAAM0zH,EAAM2wB,EAAuBC,EAAuBC,GAAoB,oBACnGnlJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKilJ,sBAAwBA,EAC7BjlJ,KAAKklJ,sBAAwBA,EAC7BllJ,KAAKmlJ,mBAAqBA,CAC5B,CAQC,OARA,mCASD,WACE,IAAI3oH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKilJ,uBAEfzoH,EAAK7nB,KAAK3U,KAAKklJ,uBAEf1oH,EAAK7nB,KAAK3U,KAAKmlJ,oBAER3oH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI2lE,EAA4B4hD,EAAWvzH,EAJvCi0H,EAAKjoH,KACYioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KAEhC,KAAC,EAhB4B,GA8B3B4lE,GAAe,WACjB,WAAY2hD,EAAWvzH,EAAM0zH,EAAM8wB,EAAM3P,GAAQ,oBAC/Cz1I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKolJ,KAAOA,EACZplJ,KAAKy1I,OAASA,CAChB,CAOC,OAPA,mCAQD,WACE,IAAIj5G,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKolJ,MAEf5oH,EAAK7nB,KAAK3U,KAAKy1I,QAERj5G,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI4lE,EAAgB2hD,EAAWvzH,EAH3Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KAEpB,KAAC,EAdgB,GA0Bf6lE,GAAuB,WACzB,WAAY0hD,EAAWvzH,EAAMykJ,EAA2BC,EAAyBC,EAAoBC,GAAmB,oBACtHxlJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKqlJ,0BAA4BA,EACjCrlJ,KAAKslJ,wBAA0BA,EAC/BtlJ,KAAKulJ,mBAAqBA,EAC1BvlJ,KAAKwlJ,kBAAoBA,CAC3B,CAQC,OARA,mCASD,WACE,IAAIhpH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKqlJ,2BAEf7oH,EAAK7nB,KAAK3U,KAAKslJ,yBAEf9oH,EAAK7nB,KAAK3U,KAAKulJ,oBAEf/oH,EAAK7nB,KAAK3U,KAAKwlJ,mBAERhpH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI6lE,EAAwB0hD,EAAWvzH,EAJdi0H,EAAKjoH,KACPioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KAE/B,KAAC,EAhBwB,GA8BvB8lE,GAAyB,WAC3B,WAAYyhD,EAAWvzH,EAAM6kJ,EAAiBC,GAAkB,oBAC9D1lJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKylJ,gBAAkBA,EACvBzlJ,KAAK0lJ,iBAAmBA,CAC1B,CAMC,OANA,mCAOD,WACE,IAAIlpH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKylJ,iBAEfjpH,EAAK7nB,KAAK3U,KAAK0lJ,kBAERlpH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI8lE,EAA0ByhD,EAAWvzH,EAF1Bi0H,EAAKjoH,KACJioH,EAAKjoH,KAE9B,KAAC,EAZ0B,GAsBzB+lE,GAAwB,WAC1B,WAAYwhD,EAAWvzH,EAAM+kJ,EAAeC,EAAcC,EAAeN,EAAoBF,EAA2BS,EAAkBC,EAAgBC,EAAmBC,GAAmB,oBAC9LjmJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2lJ,cAAgBA,EACrB3lJ,KAAK4lJ,aAAeA,EACpB5lJ,KAAK6lJ,cAAgBA,EACrB7lJ,KAAKulJ,mBAAqBA,EAC1BvlJ,KAAKqlJ,0BAA4BA,EACjCrlJ,KAAK8lJ,iBAAmBA,EACxB9lJ,KAAK+lJ,eAAiBA,EACtB/lJ,KAAKgmJ,kBAAoBA,EACzBhmJ,KAAKimJ,kBAAoBA,CAC3B,CAaC,OAbA,mCAcD,WACE,IAAIzpH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAK2lJ,eAEfnpH,EAAK7nB,KAAK3U,KAAK4lJ,cAEfppH,EAAK7nB,KAAK3U,KAAK6lJ,eAEfrpH,EAAK7nB,KAAK3U,KAAKulJ,oBAEf/oH,EAAK7nB,KAAK3U,KAAKqlJ,2BAEf7oH,EAAK7nB,KAAK3U,KAAK8lJ,kBAEftpH,EAAK7nB,KAAK3U,KAAK+lJ,gBAEfvpH,EAAK7nB,KAAK3U,KAAKgmJ,mBAEfxpH,EAAK7nB,KAAK3U,KAAKimJ,mBAERzpH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI+lE,EAAyBwhD,EAAWvzH,EAT3Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACAioH,EAAKjoH,KACEioH,EAAKjoH,KACdioH,EAAKjoH,KACPioH,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAE/B,KAAC,EA1ByB,GAkDxBgmE,GAAsB,WACxB,WAAYuhD,EAAWvzH,EAAM+kJ,EAAeC,GAAc,oBACxD5lJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2lJ,cAAgBA,EACrB3lJ,KAAK4lJ,aAAeA,CACtB,CAMC,OANA,mCAOD,WACE,IAAIppH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK2lJ,eAEfnpH,EAAK7nB,KAAK3U,KAAK4lJ,cAERppH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIgmE,EAAuBuhD,EAAWvzH,EAFzBi0H,EAAKjoH,KACNioH,EAAKjoH,KAE1B,KAAC,EAZuB,GAsBtBimE,GAA2B,WAC7B,WAAYshD,EAAWvzH,EAAMslJ,GAAU,oBACrClmJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKkmJ,SAAWA,CAClB,CAKC,OALA,mCAMD,WACE,IAAI1pH,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKkmJ,UAER1pH,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIimE,EAA4BshD,EAAWvzH,EADnCi0H,EAAKjoH,KAEtB,KAAC,EAV4B,GAkB3BkmE,GAAiB,WACnB,WAAYqhD,EAAWvzH,EAAMq6H,EAASC,EAASC,EAAMC,EAAkBC,GAAW,oBAChFr7H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi7H,QAAUA,EACfj7H,KAAKk7H,QAAUA,EACfl7H,KAAKm7H,KAAOA,EACZn7H,KAAKo7H,iBAAmBA,EACxBp7H,KAAKq7H,UAAYA,CACnB,CASC,OATA,mCAUD,WACE,IAAI7+F,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKi7H,SAEfz+F,EAAK7nB,KAAK3U,KAAKk7H,SAEf1+F,EAAK7nB,KAAK3U,KAAKm7H,MAEf3+F,EAAK7nB,KAAK3U,KAAKo7H,kBAEf5+F,EAAK7nB,KAAK3U,KAAKq7H,WAER7+F,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIkmE,EAAkBqhD,EAAWvzH,EAL1Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACOioH,EAAKjoH,KACZioH,EAAKjoH,KAEvB,KAAC,EAlBkB,GAkCjBmmE,GAAiB,WACnB,WAAYohD,EAAWvzH,EAAM2nI,EAAWtP,GAAU,oBAChDj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKuoI,UAAYA,EACjBvoI,KAAKi5H,SAAWA,CAClB,CAMC,OANA,mCAOD,WACE,IAAIz8F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKuoI,WAEf/rG,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAImmE,EAAkBohD,EAAWvzH,EAFxBi0H,EAAKjoH,KACNioH,EAAKjoH,KAEtB,KAAC,EAZkB,GAsBjBomE,GAAiB,WACnB,WAAYmhD,EAAWvzH,EAAMipI,EAAWpT,EAAQ0vB,EAAarc,EAAYC,GAAU,oBACjF/pI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6pI,UAAYA,EACjB7pI,KAAKy2H,OAASA,EACdz2H,KAAKmmJ,YAAcA,EACnBnmJ,KAAK8pI,WAAaA,EAClB9pI,KAAK+pI,SAAWA,CAClB,CASC,OATA,mCAUD,WACE,IAAIvtG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAK6pI,WAEfrtG,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAKmmJ,aAEf3pH,EAAK7nB,KAAK3U,KAAK8pI,YAEfttG,EAAK7nB,KAAK3U,KAAK+pI,UAERvtG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIomE,EAAkBmhD,EAAWvzH,EALxBi0H,EAAKjoH,KACRioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EAlBkB,GAkCjBqmE,GAA0B,WAC5B,WAAYkhD,EAAWvzH,EAAMipI,EAAWpT,EAAQ0vB,EAAarc,EAAYC,EAAUqB,GAAc,oBAC/FprI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6pI,UAAYA,EACjB7pI,KAAKy2H,OAASA,EACdz2H,KAAKmmJ,YAAcA,EACnBnmJ,KAAK8pI,WAAaA,EAClB9pI,KAAK+pI,SAAWA,EAChB/pI,KAAKorI,aAAeA,CACtB,CAUC,OAVA,mCAWD,WACE,IAAI5uG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAK6pI,WAEfrtG,EAAK7nB,KAAK3U,KAAKy2H,QAEfj6F,EAAK7nB,KAAK3U,KAAKmmJ,aAEf3pH,EAAK7nB,KAAK3U,KAAK8pI,YAEfttG,EAAK7nB,KAAK3U,KAAK+pI,UAEfvtG,EAAK7nB,KAAK3U,KAAKorI,cAER5uG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIqmE,EAA2BkhD,EAAWvzH,EANjCi0H,EAAKjoH,KACRioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACDioH,EAAKjoH,KAE1B,KAAC,EApB2B,GAsC1BsmE,GAAe,WACjB,WAAYihD,EAAWvzH,EAAMmkJ,EAAY9rB,GAAU,oBACjDj5H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+kJ,WAAaA,EAClB/kJ,KAAKi5H,SAAWA,CAClB,CAMC,OANA,mCAOD,WACE,IAAIz8F,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK+kJ,YAEfvoH,EAAK7nB,KAAK3U,KAAKi5H,UAERz8F,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIsmE,EAAgBihD,EAAWvzH,EAFrBi0H,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EAZgB,GAsBfumE,GAAkB,WACpB,WAAYghD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIumE,EAAmBghD,EAAWvzH,EAT1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BmB,GAkDlBwmE,GAAsB,WACxB,WAAY+gD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIwmE,EAAuB+gD,EAAWvzH,EAV9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BuB,GAsDtBymE,GAAS,WACX,WAAY8gD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,GAAY,oBAClFx0H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,CACpB,CASC,OATA,mCAUD,WACE,IAAIh4F,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAERh4F,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIymE,EAAU8gD,EAAWvzH,EALjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KAExB,KAAC,EAlBU,GAkCT0mE,GAAyB,WAC3B,WAAY6gD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0mE,EAA0B6gD,EAAWvzH,EATjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1B0B,GAkDzB2mE,GAA6B,WAC/B,WAAY4gD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2mE,EAA8B4gD,EAAWvzH,EAVrCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B8B,GAsD7B4mE,GAAmB,WACrB,WAAY2gD,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU0E,EAAOyoB,EAAahtB,EAAc+R,EAAiBC,EAAcC,EAAkBgb,EAAeC,EAAUhb,GAAa,oBACxLtrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK29H,MAAQA,EACb39H,KAAKomJ,YAAcA,EACnBpmJ,KAAKo5H,aAAeA,EACpBp5H,KAAKmrI,gBAAkBA,EACvBnrI,KAAKorI,aAAeA,EACpBprI,KAAKqrI,iBAAmBA,EACxBrrI,KAAKqmJ,cAAgBA,EACrBrmJ,KAAKsmJ,SAAWA,EAChBtmJ,KAAKsrI,YAAcA,CACrB,CAgBC,OAhBA,mCAiBD,WACE,IAAI9uG,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK29H,OAEfnhG,EAAK7nB,KAAK3U,KAAKomJ,aAEf5pH,EAAK7nB,KAAK3U,KAAKo5H,cAEf58F,EAAK7nB,KAAK3U,KAAKmrI,iBAEf3uG,EAAK7nB,KAAK3U,KAAKorI,cAEf5uG,EAAK7nB,KAAK3U,KAAKqrI,kBAEf7uG,EAAK7nB,KAAK3U,KAAKqmJ,eAEf7pH,EAAK7nB,KAAK3U,KAAKsmJ,UAEf9pH,EAAK7nB,KAAK3U,KAAKsrI,aAER9uG,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI4mE,EAAoB2gD,EAAWvzH,EAZxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACCioH,EAAKjoH,KACJioH,EAAKjoH,KACFioH,EAAKjoH,KACRioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KAEzB,KAAC,EAhCoB,GA8DnB6mE,GAAQ,WACV,WAAY0gD,EAAWvzH,EAAM0zH,EAAMiyB,EAAMC,GAAS,oBAChDxmJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKumJ,KAAOA,EACZvmJ,KAAKwmJ,QAAUA,CACjB,CAOC,OAPA,mCAQD,WACE,IAAIhqH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKumJ,MAEf/pH,EAAK7nB,KAAK3U,KAAKwmJ,SAERhqH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI6mE,EAAS0gD,EAAWvzH,EAHpBi0H,EAAKjoH,KACLioH,EAAKjoH,KACFioH,EAAKjoH,KAErB,KAAC,EAdS,GA0BR8mE,GAAc,WAChB,WAAYygD,EAAWvzH,EAAMg3H,EAAYtD,EAAMC,EAAakP,EAAMkO,GAAe,oBAC/E3xI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK43H,WAAaA,EAClB53H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKyjI,KAAOA,EACZzjI,KAAK2xI,cAAgBA,CACvB,CASC,OATA,mCAUD,WACE,IAAIn1G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAK43H,YAEfp7F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKyjI,MAEfjnG,EAAK7nB,KAAK3U,KAAK2xI,eAERn1G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAI8mE,EAAeygD,EAAWvzH,EALpBi0H,EAAKjoH,KACXioH,EAAKjoH,KACEioH,EAAKjoH,KACZioH,EAAKjoH,KACIioH,EAAKjoH,KAE3B,KAAC,EAlBe,GAkCd+mE,GAAW,WACb,WAAYwgD,EAAWvzH,EAAM6lJ,EAAUC,GAAW,oBAChD1mJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKymJ,SAAWA,EAChBzmJ,KAAK0mJ,UAAYA,CACnB,CAMC,OANA,mCAOD,WACE,IAAIlqH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKymJ,UAEfjqH,EAAK7nB,KAAK3U,KAAK0mJ,WAERlqH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI+mE,EAAYwgD,EAAWvzH,EAFnBi0H,EAAKjoH,KACJioH,EAAKjoH,KAEvB,KAAC,EAZY,GAsBXgnE,GAAO,WACT,WAAYugD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgnE,EAAQugD,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPinE,GAAW,WACb,WAAYsgD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIinE,EAAYsgD,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXknE,GAAO,WACT,WAAYqgD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBD,EAAQgyB,EAAYC,EAAa7W,EAAU8W,EAAUnyB,GAAgB,oBACxL10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAK20H,OAASA,EACd30H,KAAK2mJ,WAAaA,EAClB3mJ,KAAK4mJ,YAAcA,EACnB5mJ,KAAK+vI,SAAWA,EAChB/vI,KAAK6mJ,SAAWA,EAChB7mJ,KAAK00H,eAAiBA,CACxB,CAiBC,OAjBA,mCAkBD,WACE,IAAIl4F,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAK20H,QAEfn4F,EAAK7nB,KAAK3U,KAAK2mJ,YAEfnqH,EAAK7nB,KAAK3U,KAAK4mJ,aAEfpqH,EAAK7nB,KAAK3U,KAAK+vI,UAEfvzG,EAAK7nB,KAAK3U,KAAK6mJ,UAEfrqH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAIknE,EAAQqgD,EAAWvzH,EAbfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACdioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KACCioH,EAAKjoH,KAE5B,KAAC,EAlCQ,GAkEPmnE,GAAW,WACb,WAAYogD,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,EAAuBoF,EAAc6Z,EAAkBjI,EAAeC,EAAgBiI,EAAYC,EAAaC,EAAWC,EAAYC,EAAWC,EAAYC,EAAYnI,EAAYoI,EAAgBjI,EAAaC,EAAciI,EAAe9H,GAAY,oBACxSz/I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAKitI,aAAeA,EACpBjtI,KAAK8mJ,iBAAmBA,EACxB9mJ,KAAK6+I,cAAgBA,EACrB7+I,KAAK8+I,eAAiBA,EACtB9+I,KAAK+mJ,WAAaA,EAClB/mJ,KAAKgnJ,YAAcA,EACnBhnJ,KAAKinJ,UAAYA,EACjBjnJ,KAAKknJ,WAAaA,EAClBlnJ,KAAKmnJ,UAAYA,EACjBnnJ,KAAKonJ,WAAaA,EAClBpnJ,KAAKqnJ,WAAaA,EAClBrnJ,KAAKk/I,WAAaA,EAClBl/I,KAAKsnJ,eAAiBA,EACtBtnJ,KAAKq/I,YAAcA,EACnBr/I,KAAKs/I,aAAeA,EACpBt/I,KAAKunJ,cAAgBA,EACrBvnJ,KAAKy/I,WAAaA,CACpB,CAwBC,OAxBA,mCAyBD,WACE,IAAIjjH,EAAO,GAyCX,OAxCAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAKitI,cAEfzwG,EAAK7nB,KAAK3U,KAAK8mJ,kBAEftqH,EAAK7nB,KAAK3U,KAAK6+I,eAEfriH,EAAK7nB,KAAK3U,KAAK8+I,gBAEftiH,EAAK7nB,KAAK3U,KAAK+mJ,YAEfvqH,EAAK7nB,KAAK3U,KAAKgnJ,aAEfxqH,EAAK7nB,KAAK3U,KAAKinJ,WAEfzqH,EAAK7nB,KAAK3U,KAAKknJ,YAEf1qH,EAAK7nB,KAAK3U,KAAKmnJ,WAEf3qH,EAAK7nB,KAAK3U,KAAKonJ,YAEf5qH,EAAK7nB,KAAK3U,KAAKqnJ,YAEf7qH,EAAK7nB,KAAK3U,KAAKk/I,YAEf1iH,EAAK7nB,KAAK3U,KAAKsnJ,gBAEf9qH,EAAK7nB,KAAK3U,KAAKq/I,aAEf7iH,EAAK7nB,KAAK3U,KAAKs/I,cAEf9iH,EAAK7nB,KAAK3U,KAAKunJ,eAEf/qH,EAAK7nB,KAAK3U,KAAKy/I,YAERjjH,CACT,IAAC,uBAnED,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAqBV,OAAO,IAAImnE,EAAYogD,EAAWvzH,EApBvBi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KACdioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KAExB,KAAC,EAhDY,GA8FXonE,GAAoB,WACtB,WAAYmgD,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,EAAuBoF,EAAc6Z,EAAkBjI,EAAeC,EAAgBiI,EAAYC,EAAaC,EAAWC,EAAYC,EAAWC,EAAYC,EAAYnI,EAAYoI,EAAgBjI,EAAaC,EAAciI,EAAe9H,EAAY+H,GAAY,oBACpTxnJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAKitI,aAAeA,EACpBjtI,KAAK8mJ,iBAAmBA,EACxB9mJ,KAAK6+I,cAAgBA,EACrB7+I,KAAK8+I,eAAiBA,EACtB9+I,KAAK+mJ,WAAaA,EAClB/mJ,KAAKgnJ,YAAcA,EACnBhnJ,KAAKinJ,UAAYA,EACjBjnJ,KAAKknJ,WAAaA,EAClBlnJ,KAAKmnJ,UAAYA,EACjBnnJ,KAAKonJ,WAAaA,EAClBpnJ,KAAKqnJ,WAAaA,EAClBrnJ,KAAKk/I,WAAaA,EAClBl/I,KAAKsnJ,eAAiBA,EACtBtnJ,KAAKq/I,YAAcA,EACnBr/I,KAAKs/I,aAAeA,EACpBt/I,KAAKunJ,cAAgBA,EACrBvnJ,KAAKy/I,WAAaA,EAClBz/I,KAAKwnJ,WAAaA,CACpB,CAyBC,OAzBA,mCA0BD,WACE,IAAIhrH,EAAO,GA2CX,OA1CAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAKitI,cAEfzwG,EAAK7nB,KAAK3U,KAAK8mJ,kBAEftqH,EAAK7nB,KAAK3U,KAAK6+I,eAEfriH,EAAK7nB,KAAK3U,KAAK8+I,gBAEftiH,EAAK7nB,KAAK3U,KAAK+mJ,YAEfvqH,EAAK7nB,KAAK3U,KAAKgnJ,aAEfxqH,EAAK7nB,KAAK3U,KAAKinJ,WAEfzqH,EAAK7nB,KAAK3U,KAAKknJ,YAEf1qH,EAAK7nB,KAAK3U,KAAKmnJ,WAEf3qH,EAAK7nB,KAAK3U,KAAKonJ,YAEf5qH,EAAK7nB,KAAK3U,KAAKqnJ,YAEf7qH,EAAK7nB,KAAK3U,KAAKk/I,YAEf1iH,EAAK7nB,KAAK3U,KAAKsnJ,gBAEf9qH,EAAK7nB,KAAK3U,KAAKq/I,aAEf7iH,EAAK7nB,KAAK3U,KAAKs/I,cAEf9iH,EAAK7nB,KAAK3U,KAAKunJ,eAEf/qH,EAAK7nB,KAAK3U,KAAKy/I,YAEfjjH,EAAK7nB,KAAK3U,KAAKwnJ,YAERhrH,CACT,IAAC,uBAtED,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAsBV,OAAO,IAAIonE,EAAqBmgD,EAAWvzH,EArBhCi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KACdioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACLioH,EAAKjoH,KAExB,KAAC,EAlDqB,GAkGpBqnE,GAAW,WACb,WAAYkgD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiBsT,EAAaxT,EAAgBiyB,GAAY,oBACvL3mJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkoI,YAAcA,EACnBloI,KAAK00H,eAAiBA,EACtB10H,KAAK2mJ,WAAaA,CACpB,CAeC,OAfA,mCAgBD,WACE,IAAInqH,EAAO,GAuBX,OAtBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkoI,aAEf1rG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAK2mJ,YAERnqH,CACT,IAAC,uBAxCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAYV,OAAO,IAAIqnE,EAAYkgD,EAAWvzH,EAXnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KACFioH,EAAKjoH,KACTioH,EAAKjoH,KAExB,KAAC,EA9BY,GA0DXsnE,GAAiB,WACnB,WAAYigD,EAAWvzH,EAAM40H,EAASjB,EAAakB,EAAoBgyB,EAAkBC,EAAkBC,EAAaC,EAAyBC,EAAgBC,GAAc,oBAC7K9nJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKw1H,QAAUA,EACfx1H,KAAKu0H,YAAcA,EACnBv0H,KAAKy1H,mBAAqBA,EAC1Bz1H,KAAKynJ,iBAAmBA,EACxBznJ,KAAK0nJ,iBAAmBA,EACxB1nJ,KAAK2nJ,YAAcA,EACnB3nJ,KAAK4nJ,wBAA0BA,EAC/B5nJ,KAAK6nJ,eAAiBA,EACtB7nJ,KAAK8nJ,aAAeA,CACtB,CAaC,OAbA,mCAcD,WACE,IAAItrH,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKy1H,oBAEfj5F,EAAK7nB,KAAK3U,KAAKynJ,kBAEfjrH,EAAK7nB,KAAK3U,KAAK0nJ,kBAEflrH,EAAK7nB,KAAK3U,KAAK2nJ,aAEfnrH,EAAK7nB,KAAK3U,KAAK4nJ,yBAEfprH,EAAK7nB,KAAK3U,KAAK6nJ,gBAEfrrH,EAAK7nB,KAAK3U,KAAK8nJ,cAERtrH,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIsnE,EAAkBigD,EAAWvzH,EAT1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACLioH,EAAKjoH,KACVioH,EAAKjoH,KACOioH,EAAKjoH,KACdioH,EAAKjoH,KACPioH,EAAKjoH,KAE1B,KAAC,EA1BkB,GAkDjBunE,GAAS,WACX,WAAYggD,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK0jB,EAAYnkB,EAAgB4c,EAAiB8H,EAAkB2O,EAAcC,EAAWC,EAAqBC,EAAeC,GAAoB,oBACxQnoJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK64I,WAAaA,EAClB74I,KAAK00H,eAAiBA,EACtB10H,KAAKsxI,gBAAkBA,EACvBtxI,KAAKo5I,iBAAmBA,EACxBp5I,KAAK+nJ,aAAeA,EACpB/nJ,KAAKgoJ,UAAYA,EACjBhoJ,KAAKioJ,oBAAsBA,EAC3BjoJ,KAAKkoJ,cAAgBA,EACrBloJ,KAAKmoJ,mBAAqBA,CAC5B,CAqBC,OArBA,mCAsBD,WACE,IAAI3rH,EAAO,GAmCX,OAlCAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK64I,YAEfr8G,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKsxI,iBAEf90G,EAAK7nB,KAAK3U,KAAKo5I,kBAEf58G,EAAK7nB,KAAK3U,KAAK+nJ,cAEfvrH,EAAK7nB,KAAK3U,KAAKgoJ,WAEfxrH,EAAK7nB,KAAK3U,KAAKioJ,qBAEfzrH,EAAK7nB,KAAK3U,KAAKkoJ,eAEf1rH,EAAK7nB,KAAK3U,KAAKmoJ,oBAER3rH,CACT,IAAC,uBA1DD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAkBV,OAAO,IAAIunE,EAAUggD,EAAWvzH,EAjBjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KACRioH,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KACAioH,EAAKjoH,KAEhC,KAAC,EA1CU,GAkFTwnE,GAAe,WACjB,WAAY+/C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK0jB,EAAYnkB,GAAgB,oBACpJ10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK64I,WAAaA,EAClB74I,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK64I,YAEfr8G,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIwnE,EAAgB+/C,EAAWvzH,EAVvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EA5BgB,GAsDfynE,GAAmB,WACrB,WAAY8/C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIynE,EAAoB8/C,EAAWvzH,EAV3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BoB,GAsDnB0nE,GAAgB,WAClB,WAAY6/C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAK0jB,EAAYnkB,GAAgB,oBACpJ10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK64I,WAAaA,EAClB74I,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK64I,YAEfr8G,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI0nE,EAAiB6/C,EAAWvzH,EAVxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACEioH,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EA5BiB,GAsDhB2nE,GAAoB,WACtB,WAAY4/C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI2nE,EAAqB4/C,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpB4nE,GAAa,WACf,WAAY2/C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgB4c,EAAiB8H,EAAkBgP,GAAgB,oBACtNpoJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKsxI,gBAAkBA,EACvBtxI,KAAKo5I,iBAAmBA,EACxBp5I,KAAKooJ,eAAiBA,CACxB,CAiBC,OAjBA,mCAkBD,WACE,IAAI5rH,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKsxI,iBAEf90G,EAAK7nB,KAAK3U,KAAKo5I,kBAEf58G,EAAK7nB,KAAK3U,KAAKooJ,gBAER5rH,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAI4nE,EAAc2/C,EAAWvzH,EAbrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACJioH,EAAKjoH,KACJioH,EAAKjoH,KACPioH,EAAKjoH,KAE5B,KAAC,EAlCc,GAkEb6nE,GAAqB,WACvB,WAAY0/C,EAAWvzH,EAAMo9H,GAAa,oBACxCh+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg+H,YAAcA,CACrB,CAKC,OALA,mCAMD,WACE,IAAIxhG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKg+H,aAERxhG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI6nE,EAAsB0/C,EAAWvzH,EAD1Bi0H,EAAKjoH,KAEzB,KAAC,EAVsB,GAkBrB8nE,GAAkB,WACpB,WAAYy/C,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIngD,EAAmBy/C,EAAWvzH,EAC3C,KAAC,EARmB,GAclB+zE,GAAc,WAChB,WAAYw/C,EAAWvzH,EAAMynJ,EAASjU,EAAWkU,GAAM,oBACrDtoJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKqoJ,QAAUA,EACfroJ,KAAKo0I,UAAYA,EACjBp0I,KAAKsoJ,KAAOA,CACd,CAOC,OAPA,mCAQD,WACE,IAAI9rH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKqoJ,SAEf7rH,EAAK7nB,KAAK3U,KAAKo0I,WAEf53G,EAAK7nB,KAAK3U,KAAKsoJ,MAER9rH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+nE,EAAew/C,EAAWvzH,EAHvBi0H,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KAElB,KAAC,EAde,GA0BdgoE,GAAwB,WAC1B,WAAYu/C,EAAWvzH,EAAMynJ,EAASjU,EAAWkU,EAAMC,EAAQC,GAAc,oBAC3ExoJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKqoJ,QAAUA,EACfroJ,KAAKo0I,UAAYA,EACjBp0I,KAAKsoJ,KAAOA,EACZtoJ,KAAKuoJ,OAASA,EACdvoJ,KAAKwoJ,aAAeA,CACtB,CASC,OATA,mCAUD,WACE,IAAIhsH,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKqoJ,SAEf7rH,EAAK7nB,KAAK3U,KAAKo0I,WAEf53G,EAAK7nB,KAAK3U,KAAKsoJ,MAEf9rH,EAAK7nB,KAAK3U,KAAKuoJ,QAEf/rH,EAAK7nB,KAAK3U,KAAKwoJ,cAERhsH,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIgoE,EAAyBu/C,EAAWvzH,EALjCi0H,EAAKjoH,KACHioH,EAAKjoH,KACVioH,EAAKjoH,KACHioH,EAAKjoH,KACCioH,EAAKjoH,KAE1B,KAAC,EAlByB,GAkCxBioE,GAAY,WACd,WAAYs/C,EAAWvzH,EAAM0zH,EAAMm0B,EAAyBC,EAAWC,EAAe1lB,GAAmB,oBACvGjjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKyoJ,wBAA0BA,EAC/BzoJ,KAAK0oJ,UAAYA,EACjB1oJ,KAAK2oJ,cAAgBA,EACrB3oJ,KAAKijI,kBAAoBA,CAC3B,CASC,OATA,mCAUD,WACE,IAAIzmG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKyoJ,yBAEfjsH,EAAK7nB,KAAK3U,KAAK0oJ,WAEflsH,EAAK7nB,KAAK3U,KAAK2oJ,eAEfnsH,EAAK7nB,KAAK3U,KAAKijI,mBAERzmG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIioE,EAAas/C,EAAWvzH,EALxBi0H,EAAKjoH,KACcioH,EAAKjoH,KACnBioH,EAAKjoH,KACDioH,EAAKjoH,KACDioH,EAAKjoH,KAE/B,KAAC,EAlBa,GAkCZkoE,GAAqB,WACvB,WAAYq/C,EAAWvzH,EAAM0zH,EAAMs0B,EAAYC,EAAWC,EAAaC,EAAYC,GAAU,oBAC3FhpJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4oJ,WAAaA,EAClB5oJ,KAAK6oJ,UAAYA,EACjB7oJ,KAAK8oJ,YAAcA,EACnB9oJ,KAAK+oJ,WAAaA,EAClB/oJ,KAAKgpJ,SAAWA,CAClB,CAUC,OAVA,mCAWD,WACE,IAAIxsH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4oJ,YAEfpsH,EAAK7nB,KAAK3U,KAAK6oJ,WAEfrsH,EAAK7nB,KAAK3U,KAAK8oJ,aAEftsH,EAAK7nB,KAAK3U,KAAK+oJ,YAEfvsH,EAAK7nB,KAAK3U,KAAKgpJ,UAERxsH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIkoE,EAAsBq/C,EAAWvzH,EANjCi0H,EAAKjoH,KACCioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EApBsB,GAsCrBmoE,GAA0B,WAC5B,WAAYo/C,EAAWvzH,EAAMqoJ,EAAQC,GAAkB,oBACrDlpJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKipJ,OAASA,EACdjpJ,KAAKkpJ,iBAAmBA,CAC1B,CAMC,OANA,mCAOD,WACE,IAAI1sH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKipJ,QAEfzsH,EAAK7nB,KAAK3U,KAAKkpJ,kBAER1sH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAImoE,EAA2Bo/C,EAAWvzH,EAFpCi0H,EAAKjoH,KACKioH,EAAKjoH,KAE9B,KAAC,EAZ2B,GAsB1BooE,GAAqB,WACvB,WAAYm/C,EAAWvzH,EAAMuoJ,EAAYC,EAAWC,EAAgBC,EAAeC,EAAaC,EAAeC,GAAY,oBACzHzpJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKmpJ,WAAaA,EAClBnpJ,KAAKopJ,UAAYA,EACjBppJ,KAAKqpJ,eAAiBA,EACtBrpJ,KAAKspJ,cAAgBA,EACrBtpJ,KAAKupJ,YAAcA,EACnBvpJ,KAAKwpJ,cAAgBA,EACrBxpJ,KAAKypJ,WAAaA,CACpB,CAWC,OAXA,mCAYD,WACE,IAAIjtH,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKmpJ,YAEf3sH,EAAK7nB,KAAK3U,KAAKopJ,WAEf5sH,EAAK7nB,KAAK3U,KAAKqpJ,gBAEf7sH,EAAK7nB,KAAK3U,KAAKspJ,eAEf9sH,EAAK7nB,KAAK3U,KAAKupJ,aAEf/sH,EAAK7nB,KAAK3U,KAAKwpJ,eAEfhtH,EAAK7nB,KAAK3U,KAAKypJ,YAERjtH,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIooE,EAAsBm/C,EAAWvzH,EAP3Bi0H,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACHioH,EAAKjoH,KACRioH,EAAKjoH,KAExB,KAAC,EAtBsB,GA0CrBqoE,GAAoB,WACtB,WAAYk/C,EAAWvzH,EAAMmrI,GAAM,oBACjC/rI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+rI,KAAOA,CACd,CAKC,OALA,mCAMD,WACE,IAAIvvG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK+rI,MAERvvG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIqoE,EAAqBk/C,EAAWvzH,EADhCi0H,EAAKjoH,KAElB,KAAC,EAVqB,GAkBpBsoE,GAA6B,WAC/B,WAAYi/C,EAAWvzH,EAAMmrI,EAAM5Q,EAAME,GAAW,oBAClDr7H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+rI,KAAOA,EACZ/rI,KAAKm7H,KAAOA,EACZn7H,KAAKq7H,UAAYA,CACnB,CAOC,OAPA,mCAQD,WACE,IAAI7+F,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK+rI,MAEfvvG,EAAK7nB,KAAK3U,KAAKm7H,MAEf3+F,EAAK7nB,KAAK3U,KAAKq7H,WAER7+F,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIsoE,EAA8Bi/C,EAAWvzH,EAHzCi0H,EAAKjoH,KACLioH,EAAKjoH,KACAioH,EAAKjoH,KAEvB,KAAC,EAd8B,GA0B7BuoE,GAAa,WACf,WAAYg/C,EAAWvzH,EAAMmrI,EAAM2d,EAAUle,GAAU,oBACrDxrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+rI,KAAOA,EACZ/rI,KAAK0pJ,SAAWA,EAChB1pJ,KAAKwrI,SAAWA,CAClB,CAOC,OAPA,mCAQD,WACE,IAAIhvG,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAK+rI,MAEfvvG,EAAK7nB,KAAK3U,KAAK0pJ,UAEfltH,EAAK7nB,KAAK3U,KAAKwrI,UAERhvG,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAIuoE,EAAcg/C,EAAWvzH,EAHzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACLioH,EAAKjoH,KAEtB,KAAC,EAdc,GA0BbwoE,GAAgB,WAClB,WAAY++C,EAAWvzH,EAAMo9H,GAAa,oBACxCh+H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg+H,YAAcA,CACrB,CAKC,OALA,mCAMD,WACE,IAAIxhG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAKg+H,aAERxhG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIwoE,EAAiB++C,EAAWvzH,EADrBi0H,EAAKjoH,KAEzB,KAAC,EAViB,GAkBhByoE,GAAoB,WACtB,WAAY8+C,EAAWvzH,EAAM+oJ,GAAe,oBAC1C3pJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2pJ,cAAgBA,CACvB,CAKC,OALA,mCAMD,WACE,IAAIntH,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK2pJ,eAERntH,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIyoE,EAAqB8+C,EAAWvzH,EADvBi0H,EAAKjoH,KAE3B,KAAC,EAVqB,GAkBpB0oE,GAAa,WACf,WAAY6+C,EAAWvzH,EAAM4rI,EAAWC,GAAS,oBAC/CzsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKwsI,UAAYA,EACjBxsI,KAAKysI,QAAUA,CACjB,CAMC,OANA,mCAOD,WACE,IAAIjwG,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAKysI,SAERjwG,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAI0oE,EAAc6+C,EAAWvzH,EAFpBi0H,EAAKjoH,KACPioH,EAAKjoH,KAErB,KAAC,EAZc,GAsBb2oE,GAAa,WACf,WAAY4+C,EAAWvzH,EAAM0zH,EAAMC,EAAaiY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,GAAM,oBAC/HzjI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKwsI,UAAYA,EACjBxsI,KAAKysI,QAAUA,EACfzsI,KAAK0sI,mBAAqBA,EAC1B1sI,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAKyjI,KAAOA,CACd,CAYC,OAZA,mCAaD,WACE,IAAIjnG,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAKysI,SAEfjwG,EAAK7nB,KAAK3U,KAAK0sI,oBAEflwG,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAKyjI,MAERjnG,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI2oE,EAAc4+C,EAAWvzH,EARzBi0H,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KACMioH,EAAKjoH,KACbioH,EAAKjoH,KACMioH,EAAKjoH,KACtBioH,EAAKjoH,KAElB,KAAC,EAxBc,GA8Cb4oE,GAAkB,WACpB,WAAY2+C,EAAWvzH,EAAMisI,GAAY,oBACvC7sI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6sI,WAAaA,CACpB,CAKC,OALA,mCAMD,WACE,IAAIrwG,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK6sI,YAERrwG,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI4oE,EAAmB2+C,EAAWvzH,EADxBi0H,EAAKjoH,KAExB,KAAC,EAVmB,GAkBlB6oE,GAAgC,WAClC,WAAY0+C,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIp/C,EAAiC0+C,EAAWvzH,EACzD,KAAC,EARiC,GAchC80E,GAAyB,WAC3B,WAAYy+C,EAAWvzH,EAAMy9I,EAAgBC,EAA0BC,EAAoBC,GAAO,oBAChGx+I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKq+I,eAAiBA,EACtBr+I,KAAKs+I,yBAA2BA,EAChCt+I,KAAKu+I,mBAAqBA,EAC1Bv+I,KAAKw+I,MAAQA,CACf,CAQC,OARA,mCASD,WACE,IAAIhiH,EAAO,GASX,OARAA,EAAK7nB,KAAK3U,KAAKq+I,gBAEf7hH,EAAK7nB,KAAK3U,KAAKs+I,0BAEf9hH,EAAK7nB,KAAK3U,KAAKu+I,oBAEf/hH,EAAK7nB,KAAK3U,KAAKw+I,OAERhiH,CACT,IAAC,uBAnBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAKV,OAAO,IAAI8oE,EAA0By+C,EAAWvzH,EAJ3Bi0H,EAAKjoH,KACKioH,EAAKjoH,KACXioH,EAAKjoH,KAClBioH,EAAKjoH,KAEnB,KAAC,EAhB0B,GA8BzB+oE,GAAkB,WACpB,WAAYw+C,EAAWvzH,EAAMq4H,EAAU2wB,EAAaC,GAAa,oBAC/D7pJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKi5H,SAAWA,EAChBj5H,KAAK4pJ,YAAcA,EACnB5pJ,KAAK6pJ,YAAcA,CACrB,CAOC,OAPA,mCAQD,WACE,IAAIrtH,EAAO,GAOX,OANAA,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK4pJ,aAEfptH,EAAK7nB,KAAK3U,KAAK6pJ,aAERrtH,CACT,IAAC,uBAhBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAIV,OAAO,IAAI+oE,EAAmBw+C,EAAWvzH,EAH1Bi0H,EAAKjoH,KACFioH,EAAKjoH,KACLioH,EAAKjoH,KAEzB,KAAC,EAdmB,GA0BlBgpE,GAAc,WAChB,WAAYu+C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIgpE,EAAeu+C,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Be,GAkDdipE,GAAkB,WACpB,WAAYs+C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIipE,EAAmBs+C,EAAWvzH,EAV1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BmB,GAsDlBkpE,GAA2B,WAC7B,WAAYq+C,EAAWvzH,EAAM+9H,EAAYC,EAAgBC,EAAeirB,EAAaC,EAAWC,EAAkBC,EAAgBC,GAAqB,oBACrJlqJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2+H,WAAaA,EAClB3+H,KAAK4+H,eAAiBA,EACtB5+H,KAAK6+H,cAAgBA,EACrB7+H,KAAK8pJ,YAAcA,EACnB9pJ,KAAK+pJ,UAAYA,EACjB/pJ,KAAKgqJ,iBAAmBA,EACxBhqJ,KAAKiqJ,eAAiBA,EACtBjqJ,KAAKkqJ,oBAAsBA,CAC7B,CAYC,OAZA,mCAaD,WACE,IAAI1tH,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAK2+H,YAEfniG,EAAK7nB,KAAK3U,KAAK4+H,gBAEfpiG,EAAK7nB,KAAK3U,KAAK6+H,eAEfriG,EAAK7nB,KAAK3U,KAAK8pJ,aAEfttH,EAAK7nB,KAAK3U,KAAK+pJ,WAEfvtH,EAAK7nB,KAAK3U,KAAKgqJ,kBAEfxtH,EAAK7nB,KAAK3U,KAAKiqJ,gBAEfztH,EAAK7nB,KAAK3U,KAAKkqJ,qBAER1tH,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAIkpE,EAA4Bq+C,EAAWvzH,EARjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KACPioH,EAAKjoH,KACEioH,EAAKjoH,KACPioH,EAAKjoH,KACAioH,EAAKjoH,KAEjC,KAAC,EAxB4B,GA8C3BmpE,GAAmB,WACrB,WAAYo+C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImpE,EAAoBo+C,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnBopE,GAAuB,WACzB,WAAYm+C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIopE,EAAwBm+C,EAAWvzH,EAV/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BwB,GAsDvBqpE,GAAsB,WACxB,WAAYk+C,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAUkxB,EAAYC,EAASptB,EAAMqtB,GAAY,oBACtGrqJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAKmqJ,WAAaA,EAClBnqJ,KAAKoqJ,QAAUA,EACfpqJ,KAAKg9H,KAAOA,EACZh9H,KAAKqqJ,WAAaA,CACpB,CAWC,OAXA,mCAYD,WACE,IAAI7tH,EAAO,GAeX,OAdAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAKmqJ,YAEf3tH,EAAK7nB,KAAK3U,KAAKoqJ,SAEf5tH,EAAK7nB,KAAK3U,KAAKg9H,MAEfxgG,EAAK7nB,KAAK3U,KAAKqqJ,YAER7tH,CACT,IAAC,uBA5BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAQV,OAAO,IAAIqpE,EAAuBk+C,EAAWvzH,EAP3Bi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACHioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACCioH,EAAKjoH,KAExB,KAAC,EAtBuB,GA0CtBspE,GAAsB,WACxB,WAAYi+C,EAAWvzH,EAAMo9H,EAAassB,EAAS5V,EAAQ7I,EAAY+I,GAAS,oBAC9E50I,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg+H,YAAcA,EACnBh+H,KAAKsqJ,QAAUA,EACftqJ,KAAK00I,OAASA,EACd10I,KAAK6rI,WAAaA,EAClB7rI,KAAK40I,QAAUA,CACjB,CASC,OATA,mCAUD,WACE,IAAIp4G,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKg+H,aAEfxhG,EAAK7nB,KAAK3U,KAAKsqJ,SAEf9tH,EAAK7nB,KAAK3U,KAAK00I,QAEfl4G,EAAK7nB,KAAK3U,KAAK6rI,YAEfrvG,EAAK7nB,KAAK3U,KAAK40I,SAERp4G,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIspE,EAAuBi+C,EAAWvzH,EAL3Bi0H,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KAErB,KAAC,EAlBuB,GAkCtBupE,GAA+B,WACjC,WAAYg+C,EAAWvzH,EAAMo9H,EAAassB,EAAS5V,EAAQ7I,EAAY+I,EAAS2V,GAAO,oBACrFvqJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKg+H,YAAcA,EACnBh+H,KAAKsqJ,QAAUA,EACftqJ,KAAK00I,OAASA,EACd10I,KAAK6rI,WAAaA,EAClB7rI,KAAK40I,QAAUA,EACf50I,KAAKuqJ,MAAQA,CACf,CAUC,OAVA,mCAWD,WACE,IAAI/tH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKg+H,aAEfxhG,EAAK7nB,KAAK3U,KAAKsqJ,SAEf9tH,EAAK7nB,KAAK3U,KAAK00I,QAEfl4G,EAAK7nB,KAAK3U,KAAK6rI,YAEfrvG,EAAK7nB,KAAK3U,KAAK40I,SAEfp4G,EAAK7nB,KAAK3U,KAAKuqJ,OAER/tH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIupE,EAAgCg+C,EAAWvzH,EANpCi0H,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACRioH,EAAKjoH,KACPioH,EAAKjoH,KAEnB,KAAC,EApBgC,GAsC/BwpE,GAAe,WACjB,WAAY+9C,EAAWvzH,EAAMqxI,EAAYuY,EAAOC,EAAOC,EAAgBte,GAAsB,oBAC3FpsI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKiyI,WAAaA,EAClBjyI,KAAKwqJ,MAAQA,EACbxqJ,KAAKyqJ,MAAQA,EACbzqJ,KAAK0qJ,eAAiBA,EACtB1qJ,KAAKosI,qBAAuBA,CAC9B,CASC,OATA,mCAUD,WACE,IAAI5vG,EAAO,GAWX,OAVAA,EAAK7nB,KAAK3U,KAAKiyI,YAEfz1G,EAAK7nB,KAAK3U,KAAKwqJ,OAEfhuH,EAAK7nB,KAAK3U,KAAKyqJ,OAEfjuH,EAAK7nB,KAAK3U,KAAK0qJ,gBAEfluH,EAAK7nB,KAAK3U,KAAKosI,sBAER5vG,CACT,IAAC,uBAtBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAMV,OAAO,IAAIwpE,EAAgB+9C,EAAWvzH,EALrBi0H,EAAKjoH,KACVioH,EAAKjoH,KACLioH,EAAKjoH,KACIioH,EAAKjoH,KACCioH,EAAKjoH,KAElC,KAAC,EAlBgB,GAkCfypE,GAAa,WACf,WAAY89C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIypE,EAAc89C,EAAWvzH,EATrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1Bc,GAkDb0pE,GAAiB,WACnB,WAAY69C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI0pE,EAAkB69C,EAAWvzH,EAVzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BkB,GAsDjB2pE,GAAa,WACf,WAAY49C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,GAAiB,oBAC7Gr1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,CACzB,CAUC,OAVA,mCAWD,WACE,IAAI74F,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAER74F,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAI2pE,EAAc49C,EAAWvzH,EANrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KAE7B,KAAC,EApBc,GAsCb4pE,GAAc,WAChB,WAAY29C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiBsT,GAAa,oBAC3JloI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKkoI,YAAcA,CACrB,CAaC,OAbA,mCAcD,WACE,IAAI1rG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKkoI,aAER1rG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI4pE,EAAe29C,EAAWvzH,EATtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACTioH,EAAKjoH,KAEzB,KAAC,EA1Be,GAkDd6pE,GAAc,WAChB,WAAY09C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,GAAK,oBACtIn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI6pE,EAAe09C,EAAWvzH,EARtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KAEjB,KAAC,EAxBe,GA8Cd8pE,GAAe,WACjB,WAAYy9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBZ,EAAgBG,EAAiByM,GAAc,oBAC5JrhI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKy0H,eAAiBA,EACtBz0H,KAAK40H,gBAAkBA,EACvB50H,KAAKqhI,aAAeA,CACtB,CAaC,OAbA,mCAcD,WACE,IAAI7kG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAK40H,iBAEfp4F,EAAK7nB,KAAK3U,KAAKqhI,cAER7kG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8pE,EAAgBy9C,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KAE1B,KAAC,EA1BgB,GAkDf+pE,GAAmB,WACrB,WAAYw9C,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU0E,EAAOyoB,EAAahtB,EAAc+R,EAAiBC,EAAc0B,EAAYxB,GAAa,oBACzJtrI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK29H,MAAQA,EACb39H,KAAKomJ,YAAcA,EACnBpmJ,KAAKo5H,aAAeA,EACpBp5H,KAAKmrI,gBAAkBA,EACvBnrI,KAAKorI,aAAeA,EACpBprI,KAAK8sI,WAAaA,EAClB9sI,KAAKsrI,YAAcA,CACrB,CAcC,OAdA,mCAeD,WACE,IAAI9uG,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK29H,OAEfnhG,EAAK7nB,KAAK3U,KAAKomJ,aAEf5pH,EAAK7nB,KAAK3U,KAAKo5H,cAEf58F,EAAK7nB,KAAK3U,KAAKmrI,iBAEf3uG,EAAK7nB,KAAK3U,KAAKorI,cAEf5uG,EAAK7nB,KAAK3U,KAAK8sI,YAEftwG,EAAK7nB,KAAK3U,KAAKsrI,aAER9uG,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI+pE,EAAoBw9C,EAAWvzH,EAVxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACCioH,EAAKjoH,KACJioH,EAAKjoH,KACFioH,EAAKjoH,KACRioH,EAAKjoH,KACPioH,EAAKjoH,KACJioH,EAAKjoH,KAEzB,KAAC,EA5BoB,GAsDnBgqE,GAAiB,WACnB,WAAYu9C,EAAWvzH,EAAM+pJ,GAAO,oBAClC3qJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK2qJ,MAAQA,CACf,CAKC,OALA,mCAMD,WACE,IAAInuH,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK2qJ,OAERnuH,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIgqE,EAAkBu9C,EAAWvzH,EAD5Bi0H,EAAKjoH,KAEnB,KAAC,EAVkB,GAkBjBiqE,GAAwB,WAC1B,WAAYs9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIiqE,EAAyBs9C,EAAWvzH,EAThCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1ByB,GAkDxBkqE,GAA4B,WAC9B,WAAYq9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIkqE,EAA6Bq9C,EAAWvzH,EAVpCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5B6B,GAsD5BmqE,GAAmB,WACrB,WAAYo9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImqE,EAAoBo9C,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnBoqE,GAAuB,WACzB,WAAYm9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIoqE,EAAwBm9C,EAAWvzH,EAV/Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BwB,GAsDvBqqE,GAAQ,WACV,WAAYk9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIqqE,EAASk9C,EAAWvzH,EAThBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BS,GAkDRsqE,GAAY,WACd,WAAYi9C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIsqE,EAAai9C,EAAWvzH,EAVpBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5Ba,GAsDZuqE,GAAS,WACX,WAAYg9C,EAAWvzH,EAAMgoI,EAAagiB,GAAW,oBACnD5qJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK4oI,YAAcA,EACnB5oI,KAAK4qJ,UAAYA,CACnB,CAMC,OANA,mCAOD,WACE,IAAIpuH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK4oI,aAEfpsG,EAAK7nB,KAAK3U,KAAK4qJ,WAERpuH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIuqE,EAAUg9C,EAAWvzH,EAFdi0H,EAAKjoH,KACPioH,EAAKjoH,KAEvB,KAAC,EAZU,GAsBTwqE,GAAS,WACX,WAAY+8C,EAAWvzH,GAAM,oBAC3BZ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,CACd,CAIC,OAJA,mCAKD,WAEE,MADW,EAEb,IAAC,uBAPD,SAAgBuzH,EAAWvzH,EAAMi0H,GAE/B,OAAO,IAAIz9C,EAAU+8C,EAAWvzH,EAClC,KAAC,EARU,GAcTy2E,GAAa,WACf,WAAY88C,EAAWvzH,EAAMiqJ,GAAY,oBACvC7qJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK6qJ,WAAaA,CACpB,CAKC,OALA,mCAMD,WACE,IAAIruH,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK6qJ,YAERruH,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAIyqE,EAAc88C,EAAWvzH,EADnBi0H,EAAKjoH,KAExB,KAAC,EAVc,GAkBb0qE,GAAc,WAChB,WAAY68C,EAAWvzH,EAAMkqJ,GAAgB,oBAC3C9qJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK8qJ,eAAiBA,CACxB,CAKC,OALA,mCAMD,WACE,IAAItuH,EAAO,GAGX,OAFAA,EAAK7nB,KAAK3U,KAAK8qJ,gBAERtuH,CACT,IAAC,uBAVD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAEV,OAAO,IAAI0qE,EAAe68C,EAAWvzH,EADhBi0H,EAAKjoH,KAE5B,KAAC,EAVe,GAkBd2qE,GAAkB,WACpB,WAAY48C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI2qE,EAAmB48C,EAAWvzH,EAT1Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BmB,GAkDlB4qE,GAAsB,WACxB,WAAY28C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI4qE,EAAuB28C,EAAWvzH,EAV9Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BuB,GAsDtB6qE,GAAoB,WACtB,WAAY08C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI6qE,EAAqB08C,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpB8qE,GAAwB,WAC1B,WAAYy8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAI8qE,EAAyBy8C,EAAWvzH,EAVhCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5ByB,GAsDxB+qE,GAAiB,WACnB,WAAYw8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,GAAK,oBACxHn1H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,CACb,CAYC,OAZA,mCAaD,WACE,IAAI34F,EAAO,GAiBX,OAhBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAER34F,CACT,IAAC,uBA/BD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EASV,OAAO,IAAI+qE,EAAkBw8C,EAAWvzH,EARzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KAEjB,KAAC,EAxBkB,GA8CjBgrE,GAA0B,WAC5B,WAAYu8C,EAAWvzH,EAAMmqJ,EAAkBC,GAAiB,oBAC9DhrJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAK+qJ,iBAAmBA,EACxB/qJ,KAAKgrJ,gBAAkBA,CACzB,CAMC,OANA,mCAOD,WACE,IAAIxuH,EAAO,GAKX,OAJAA,EAAK7nB,KAAK3U,KAAK+qJ,kBAEfvuH,EAAK7nB,KAAK3U,KAAKgrJ,iBAERxuH,CACT,IAAC,uBAbD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAGV,OAAO,IAAIgrE,EAA2Bu8C,EAAWvzH,EAF1Bi0H,EAAKjoH,KACNioH,EAAKjoH,KAE7B,KAAC,EAZ2B,GAsB1BirE,GAAiB,WACnB,WAAYs8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIirE,EAAkBs8C,EAAWvzH,EATzBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BkB,GAkDjBkrE,GAAO,WACT,WAAYq8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIkrE,EAAQq8C,EAAWvzH,EATfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BQ,GAkDPmrE,GAAoB,WACtB,WAAYo8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImrE,EAAqBo8C,EAAWvzH,EAT5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BqB,GAkDpBorE,GAAmB,WACrB,WAAYm8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIorE,EAAoBm8C,EAAWvzH,EAT3Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BoB,GAkDnBqrE,GAAW,WACb,WAAYk8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIqrE,EAAYk8C,EAAWvzH,EAVnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BY,GAsDXsrE,GAAgB,WAClB,WAAYi8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKT,GAAgB,oBACxI10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAIsrE,EAAiBi8C,EAAWvzH,EATxBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACMioH,EAAKjoH,KAE5B,KAAC,EA1BiB,GAkDhBurE,GAAoB,WACtB,WAAYg8C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,GAAgB,oBACnK10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,CACxB,CAcC,OAdA,mCAeD,WACE,IAAIl4F,EAAO,GAqBX,OApBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBArCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAWV,OAAO,IAAIurE,EAAqBg8C,EAAWvzH,EAV5Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAE5B,KAAC,EA5BqB,GAsDpBwrE,GAAS,WACX,WAAY+7C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAc/Q,EAAgBu2B,EAAkBC,GAA6B,oBACpNlrJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAKwlI,cAAgBA,EACrBxlI,KAAKylI,aAAeA,EACpBzlI,KAAK00H,eAAiBA,EACtB10H,KAAKirJ,iBAAmBA,EACxBjrJ,KAAKkrJ,4BAA8BA,CACrC,CAiBC,OAjBA,mCAkBD,WACE,IAAI1uH,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKwlI,eAEfhpG,EAAK7nB,KAAK3U,KAAKylI,cAEfjpG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKirJ,kBAEfzuH,EAAK7nB,KAAK3U,KAAKkrJ,6BAER1uH,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAIwrE,EAAU+7C,EAAWvzH,EAbjBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACKioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACHioH,EAAKjoH,KACMioH,EAAKjoH,KAEzC,KAAC,EAlCU,GAkETyrE,GAAyB,WAC3B,WAAY87C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaqR,EAAaC,EAAiBG,EAAkBmlB,EAAkBC,EAAoBC,EAAqBC,EAAoBC,EAAqBjlB,EAAkBJ,EAAcK,EAAsBC,GAAsB,oBACtSxmI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK4lI,YAAcA,EACnB5lI,KAAK6lI,gBAAkBA,EACvB7lI,KAAKgmI,iBAAmBA,EACxBhmI,KAAKmrJ,iBAAmBA,EACxBnrJ,KAAKorJ,mBAAqBA,EAC1BprJ,KAAKqrJ,oBAAsBA,EAC3BrrJ,KAAKsrJ,mBAAqBA,EAC1BtrJ,KAAKurJ,oBAAsBA,EAC3BvrJ,KAAKsmI,iBAAmBA,EACxBtmI,KAAKkmI,aAAeA,EACpBlmI,KAAKumI,qBAAuBA,EAC5BvmI,KAAKwmI,qBAAuBA,CAC9B,CAoBC,OApBA,mCAqBD,WACE,IAAIhqG,EAAO,GAiCX,OAhCAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK4lI,aAEfppG,EAAK7nB,KAAK3U,KAAK6lI,iBAEfrpG,EAAK7nB,KAAK3U,KAAKgmI,kBAEfxpG,EAAK7nB,KAAK3U,KAAKmrJ,kBAEf3uH,EAAK7nB,KAAK3U,KAAKorJ,oBAEf5uH,EAAK7nB,KAAK3U,KAAKqrJ,qBAEf7uH,EAAK7nB,KAAK3U,KAAKsrJ,oBAEf9uH,EAAK7nB,KAAK3U,KAAKurJ,qBAEf/uH,EAAK7nB,KAAK3U,KAAKsmI,kBAEf9pG,EAAK7nB,KAAK3U,KAAKkmI,cAEf1pG,EAAK7nB,KAAK3U,KAAKumI,sBAEf/pG,EAAK7nB,KAAK3U,KAAKwmI,sBAERhqG,CACT,IAAC,uBAvDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAiBV,OAAO,IAAIyrE,EAA0B87C,EAAWvzH,EAhBjCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACLioH,EAAKjoH,KACDioH,EAAKjoH,KACJioH,EAAKjoH,KACLioH,EAAKjoH,KACHioH,EAAKjoH,KACJioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACRioH,EAAKjoH,KACTioH,EAAKjoH,KACGioH,EAAKjoH,KACLioH,EAAKjoH,KAElC,KAAC,EAxC0B,GA8EzB0rE,GAAwB,WAC1B,WAAY67C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAamR,EAAekB,EAAeuM,EAAYC,EAAgB9M,GAAkB,oBAClJtmI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAK0lI,cAAgBA,EACrB1lI,KAAK4mI,cAAgBA,EACrB5mI,KAAKmzI,WAAaA,EAClBnzI,KAAKozI,eAAiBA,EACtBpzI,KAAKsmI,iBAAmBA,CAC1B,CAaC,OAbA,mCAcD,WACE,IAAI9pG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK4mI,eAEfpqG,EAAK7nB,KAAK3U,KAAKmzI,YAEf32G,EAAK7nB,KAAK3U,KAAKozI,gBAEf52G,EAAK7nB,KAAK3U,KAAKsmI,kBAER9pG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI0rE,EAAyB67C,EAAWvzH,EAThCi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACDioH,EAAKjoH,KACHioH,EAAKjoH,KAE9B,KAAC,EA1ByB,GAkDxB2rE,GAAqB,WACvB,WAAY47C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYS,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAc/Q,EAAgBu2B,EAAkBC,GAA6B,oBACpNlrJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKi1H,gBAAkBA,EACvBj1H,KAAKk1H,eAAiBA,EACtBl1H,KAAKm1H,IAAMA,EACXn1H,KAAKwlI,cAAgBA,EACrBxlI,KAAKylI,aAAeA,EACpBzlI,KAAK00H,eAAiBA,EACtB10H,KAAKirJ,iBAAmBA,EACxBjrJ,KAAKkrJ,4BAA8BA,CACrC,CAiBC,OAjBA,mCAkBD,WACE,IAAI1uH,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKi1H,iBAEfz4F,EAAK7nB,KAAK3U,KAAKk1H,gBAEf14F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKwlI,eAEfhpG,EAAK7nB,KAAK3U,KAAKylI,cAEfjpG,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKirJ,kBAEfzuH,EAAK7nB,KAAK3U,KAAKkrJ,6BAER1uH,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAI2rE,EAAsB47C,EAAWvzH,EAb7Bi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACAioH,EAAKjoH,KACNioH,EAAKjoH,KAChBioH,EAAKjoH,KACKioH,EAAKjoH,KACNioH,EAAKjoH,KACHioH,EAAKjoH,KACHioH,EAAKjoH,KACMioH,EAAKjoH,KAEzC,KAAC,EAlCsB,GAkErB4rE,GAAc,WAChB,WAAY27C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAK0R,EAAkBnB,EAAeoB,EAA0BC,GAAU,oBAC3M/mI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAK6mI,iBAAmBA,EACxB7mI,KAAK0lI,cAAgBA,EACrB1lI,KAAK8mI,yBAA2BA,EAChC9mI,KAAK+mI,SAAWA,CAClB,CAgBC,OAhBA,mCAiBD,WACE,IAAIvqG,EAAO,GAyBX,OAxBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAK6mI,kBAEfrqG,EAAK7nB,KAAK3U,KAAK0lI,eAEflpG,EAAK7nB,KAAK3U,KAAK8mI,0BAEftqG,EAAK7nB,KAAK3U,KAAK+mI,UAERvqG,CACT,IAAC,uBA3CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAaV,OAAO,IAAI4rE,EAAe27C,EAAWvzH,EAZtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACQioH,EAAKjoH,KACRioH,EAAKjoH,KACMioH,EAAKjoH,KACrBioH,EAAKjoH,KAEtB,KAAC,EAhCe,GA8Dd6rE,GAAa,WACf,WAAY07C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaa,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAab,EAAgBu2B,EAAkBnkB,EAA0BokB,GAA6B,oBAC5OlrJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKo1H,qBAAuBA,EAC5Bp1H,KAAKq1H,gBAAkBA,EACvBr1H,KAAKs1H,mBAAqBA,EAC1Bt1H,KAAKm1H,IAAMA,EACXn1H,KAAKu1H,YAAcA,EACnBv1H,KAAK00H,eAAiBA,EACtB10H,KAAKirJ,iBAAmBA,EACxBjrJ,KAAK8mI,yBAA2BA,EAChC9mI,KAAKkrJ,4BAA8BA,CACrC,CAiBC,OAjBA,mCAkBD,WACE,IAAI1uH,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKo1H,sBAEf54F,EAAK7nB,KAAK3U,KAAKq1H,iBAEf74F,EAAK7nB,KAAK3U,KAAKs1H,oBAEf94F,EAAK7nB,KAAK3U,KAAKm1H,KAEf34F,EAAK7nB,KAAK3U,KAAKu1H,aAEf/4F,EAAK7nB,KAAK3U,KAAK00H,gBAEfl4F,EAAK7nB,KAAK3U,KAAKirJ,kBAEfzuH,EAAK7nB,KAAK3U,KAAK8mI,0BAEftqG,EAAK7nB,KAAK3U,KAAKkrJ,6BAER1uH,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAI6rE,EAAc07C,EAAWvzH,EAbrBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACIioH,EAAKjoH,KACVioH,EAAKjoH,KACFioH,EAAKjoH,KACpBioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KACHioH,EAAKjoH,KACGioH,EAAKjoH,KACFioH,EAAKjoH,KAEzC,KAAC,EAlCc,GAkEb8rE,GAAe,WACjB,WAAYy7C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgB+2B,EAAcC,EAAgB/2B,GAAgB,oBAChJ10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAKwrJ,aAAeA,EACpBxrJ,KAAKyrJ,eAAiBA,EACtBzrJ,KAAK00H,eAAiBA,CACxB,CAaC,OAbA,mCAcD,WACE,IAAIl4F,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKwrJ,cAEfhvH,EAAK7nB,KAAK3U,KAAKyrJ,gBAEfjvH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAI8rE,EAAgBy7C,EAAWvzH,EATvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACHioH,EAAKjoH,KACLioH,EAAKjoH,KAE5B,KAAC,EA1BgB,GAkDf+rE,GAAc,WAChB,WAAYw7C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBue,EAAc0Y,EAAUl2B,EAASm2B,EAAUvE,EAAY5a,EAAWof,GAAY,oBAChL5rJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAKgzI,aAAeA,EACpBhzI,KAAK0rJ,SAAWA,EAChB1rJ,KAAKw1H,QAAUA,EACfx1H,KAAK2rJ,SAAWA,EAChB3rJ,KAAKonJ,WAAaA,EAClBpnJ,KAAKwsI,UAAYA,EACjBxsI,KAAK4rJ,WAAaA,CACpB,CAiBC,OAjBA,mCAkBD,WACE,IAAIpvH,EAAO,GA2BX,OA1BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKgzI,cAEfx2G,EAAK7nB,KAAK3U,KAAK0rJ,UAEflvH,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAK2rJ,UAEfnvH,EAAK7nB,KAAK3U,KAAKonJ,YAEf5qH,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAK4rJ,YAERpvH,CACT,IAAC,uBA9CD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAcV,OAAO,IAAI+rE,EAAew7C,EAAWvzH,EAbtBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KAExB,KAAC,EAlCe,GAkEdgsE,GAAW,WACb,WAAYu7C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBue,EAAc0Y,EAAUl2B,EAASm2B,EAAUvE,EAAY5a,EAAWof,EAAYl3B,GAAgB,oBAChM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAKgzI,aAAeA,EACpBhzI,KAAK0rJ,SAAWA,EAChB1rJ,KAAKw1H,QAAUA,EACfx1H,KAAK2rJ,SAAWA,EAChB3rJ,KAAKonJ,WAAaA,EAClBpnJ,KAAKwsI,UAAYA,EACjBxsI,KAAK4rJ,WAAaA,EAClB5rJ,KAAK00H,eAAiBA,CACxB,CAkBC,OAlBA,mCAmBD,WACE,IAAIl4F,EAAO,GA6BX,OA5BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKgzI,cAEfx2G,EAAK7nB,KAAK3U,KAAK0rJ,UAEflvH,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAK2rJ,UAEfnvH,EAAK7nB,KAAK3U,KAAKonJ,YAEf5qH,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAK4rJ,YAEfpvH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAjDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAeV,OAAO,IAAIgsE,EAAYu7C,EAAWvzH,EAdnBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EApCY,GAsEXisE,GAAe,WACjB,WAAYs7C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBue,EAAc0Y,EAAUl2B,EAASm2B,EAAUvE,EAAY5a,EAAWof,EAAYl3B,GAAgB,oBAChM10H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKy0H,eAAiBA,EACtBz0H,KAAKgzI,aAAeA,EACpBhzI,KAAK0rJ,SAAWA,EAChB1rJ,KAAKw1H,QAAUA,EACfx1H,KAAK2rJ,SAAWA,EAChB3rJ,KAAKonJ,WAAaA,EAClBpnJ,KAAKwsI,UAAYA,EACjBxsI,KAAK4rJ,WAAaA,EAClB5rJ,KAAK00H,eAAiBA,CACxB,CAkBC,OAlBA,mCAmBD,WACE,IAAIl4F,EAAO,GA6BX,OA5BAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKy0H,gBAEfj4F,EAAK7nB,KAAK3U,KAAKgzI,cAEfx2G,EAAK7nB,KAAK3U,KAAK0rJ,UAEflvH,EAAK7nB,KAAK3U,KAAKw1H,SAEfh5F,EAAK7nB,KAAK3U,KAAK2rJ,UAEfnvH,EAAK7nB,KAAK3U,KAAKonJ,YAEf5qH,EAAK7nB,KAAK3U,KAAKwsI,WAEfhwG,EAAK7nB,KAAK3U,KAAK4rJ,YAEfpvH,EAAK7nB,KAAK3U,KAAK00H,gBAERl4F,CACT,IAAC,uBAjDD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAeV,OAAO,IAAIisE,EAAgBs7C,EAAWvzH,EAdvBi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACDioH,EAAKjoH,KACPioH,EAAKjoH,KACTioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACHioH,EAAKjoH,KACNioH,EAAKjoH,KACJioH,EAAKjoH,KACDioH,EAAKjoH,KAE5B,KAAC,EApCgB,GAsEfksE,GAAW,WACb,WAAYq7C,EAAWvzH,EAAM0zH,EAAMsT,EAAYC,EAAuBgkB,EAAmBC,EAAOC,GAAQ,oBACtG/rJ,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKs0H,KAAOA,EACZt0H,KAAK4nI,WAAaA,EAClB5nI,KAAK6nI,sBAAwBA,EAC7B7nI,KAAK6rJ,kBAAoBA,EACzB7rJ,KAAK8rJ,MAAQA,EACb9rJ,KAAK+rJ,OAASA,CAChB,CAUC,OAVA,mCAWD,WACE,IAAIvvH,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAK4nI,YAEfprG,EAAK7nB,KAAK3U,KAAK6nI,uBAEfrrG,EAAK7nB,KAAK3U,KAAK6rJ,mBAEfrvH,EAAK7nB,KAAK3U,KAAK8rJ,OAEftvH,EAAK7nB,KAAK3U,KAAK+rJ,QAERvvH,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIksE,EAAYq7C,EAAWvzH,EANvBi0H,EAAKjoH,KACCioH,EAAKjoH,KACMioH,EAAKjoH,KACTioH,EAAKjoH,KACjBioH,EAAKjoH,KACJioH,EAAKjoH,KAEpB,KAAC,EApBY,GAsCXmsE,GAAmB,WACrB,WAAYo7C,EAAWvzH,EAAMw3H,EAAaC,EAAaY,EAAU0E,EAAOyoB,EAAahtB,EAAc+R,EAAiBC,EAAc0B,GAAY,oBAC5I9sI,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo4H,YAAcA,EACnBp4H,KAAKq4H,YAAcA,EACnBr4H,KAAKi5H,SAAWA,EAChBj5H,KAAK29H,MAAQA,EACb39H,KAAKomJ,YAAcA,EACnBpmJ,KAAKo5H,aAAeA,EACpBp5H,KAAKmrI,gBAAkBA,EACvBnrI,KAAKorI,aAAeA,EACpBprI,KAAK8sI,WAAaA,CACpB,CAaC,OAbA,mCAcD,WACE,IAAItwG,EAAO,GAmBX,OAlBAA,EAAK7nB,KAAK3U,KAAKo4H,aAEf57F,EAAK7nB,KAAK3U,KAAKq4H,aAEf77F,EAAK7nB,KAAK3U,KAAKi5H,UAEfz8F,EAAK7nB,KAAK3U,KAAK29H,OAEfnhG,EAAK7nB,KAAK3U,KAAKomJ,aAEf5pH,EAAK7nB,KAAK3U,KAAKo5H,cAEf58F,EAAK7nB,KAAK3U,KAAKmrI,iBAEf3uG,EAAK7nB,KAAK3U,KAAKorI,cAEf5uG,EAAK7nB,KAAK3U,KAAK8sI,YAERtwG,CACT,IAAC,uBAlCD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAUV,OAAO,IAAImsE,EAAoBo7C,EAAWvzH,EATxBi0H,EAAKjoH,KACLioH,EAAKjoH,KACRioH,EAAKjoH,KACRioH,EAAKjoH,KACCioH,EAAKjoH,KACJioH,EAAKjoH,KACFioH,EAAKjoH,KACRioH,EAAKjoH,KACPioH,EAAKjoH,KAExB,KAAC,EA1BoB,GAkDnBosE,GAAO,WACT,WAAYm7C,EAAWvzH,EAAMwzH,EAAUC,EAAcC,EAAMC,EAAaC,EAAY6I,GAAU,oBAC5Fr9H,KAAKm0H,UAAYA,EACjBn0H,KAAKY,KAAOA,EACZZ,KAAKo0H,SAAWA,EAChBp0H,KAAKq0H,aAAeA,EACpBr0H,KAAKs0H,KAAOA,EACZt0H,KAAKu0H,YAAcA,EACnBv0H,KAAKw0H,WAAaA,EAClBx0H,KAAKq9H,SAAWA,CAClB,CAUC,OAVA,mCAWD,WACE,IAAI7gG,EAAO,GAaX,OAZAA,EAAK7nB,KAAK3U,KAAKo0H,UAEf53F,EAAK7nB,KAAK3U,KAAKq0H,cAEf73F,EAAK7nB,KAAK3U,KAAKs0H,MAEf93F,EAAK7nB,KAAK3U,KAAKu0H,aAEf/3F,EAAK7nB,KAAK3U,KAAKw0H,YAEfh4F,EAAK7nB,KAAK3U,KAAKq9H,UAER7gG,CACT,IAAC,uBAzBD,SAAgB23F,EAAWvzH,EAAMi0H,GAC/B,IAAIjoH,EAAM,EAOV,OAAO,IAAIosE,EAAQm7C,EAAWvzH,EANfi0H,EAAKjoH,KACDioH,EAAKjoH,KACbioH,EAAKjoH,KACEioH,EAAKjoH,KACNioH,EAAKjoH,KACPioH,EAAKjoH,KAEtB,KAAC,EApBQ,GAwCPo/I,GAAe,CACjB,UAAW,aACX,WAAY,UACZ,WAAY,cACZ,WAAY,oBACZ,WAAY,WACZ,WAAY,gBACZ,SAAU,gBACV,SAAU,YACV,SAAU,UACV,SAAU,UACV,UAAW,oBACX,UAAW,oBACX,UAAW,uBACX,UAAW,uBACX,UAAW,0BACX,UAAW,iBACX,UAAW,WACX,UAAW,iBACX,UAAW,wBACX,UAAW,UACX,UAAW,mBACX,UAAW,4BACX,UAAW,gBACX,UAAW,wBACX,UAAW,kBACX,UAAW,2BACX,UAAW,yBACX,UAAW,UACX,UAAW,cACX,UAAW,uBACX,UAAW,sBACX,UAAW,UACX,UAAW,UACX,UAAW,YACX,UAAW,YACX,UAAW,+BACX,UAAW,aACX,UAAW,wBACX,UAAW,oBACX,UAAW,oBACX,UAAW,iBACX,WAAY,yBACZ,WAAY,kBACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,YACZ,WAAY,0BACZ,WAAY,uBACZ,WAAY,qBACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,kBACZ,WAAY,mBACZ,WAAY,6BACZ,WAAY,mBACZ,WAAY,eACZ,WAAY,UACZ,WAAY,sBACZ,WAAY,iBACZ,WAAY,4BACZ,WAAY,kBACZ,WAAY,UACZ,WAAY,uBACZ,WAAY,wBACZ,WAAY,yBACZ,WAAY,cACZ,WAAY,iBACZ,WAAY,UACZ,WAAY,0BACZ,WAAY,oBACZ,WAAY,gBACZ,WAAY,iBACZ,WAAY,eACZ,WAAY,kBACZ,WAAY,aACZ,WAAY,eACZ,WAAY,kCACZ,WAAY,qBACZ,WAAY,kBACZ,WAAY,uBACZ,WAAY,UACZ,WAAY,qBACZ,WAAY,oBACZ,WAAY,YACZ,WAAY,sBACZ,WAAY,YACZ,WAAY,yBACZ,WAAY,UACZ,WAAY,gBACZ,WAAY,sBACZ,WAAY,6BACZ,WAAY,sBACZ,WAAY,yBACZ,WAAY,WACZ,WAAY,oBACZ,WAAY,uBACZ,WAAY,sBACZ,WAAY,WACZ,WAAY,6BACZ,WAAY,sBACZ,WAAY,gBACZ,WAAY,aACZ,WAAY,YACZ,WAAY,+BACZ,WAAY,mBACZ,WAAY,SACZ,WAAY,iBACZ,WAAY,uBACZ,WAAY,iBACZ,WAAY,yBACZ,WAAY,sBACZ,WAAY,iBACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,iBACZ,WAAY,kBACZ,WAAY,uBACZ,WAAY,YACZ,WAAY,uBACZ,WAAY,yBACZ,WAAY,YACZ,WAAY,iBACZ,WAAY,aACZ,WAAY,YACZ,WAAY,YACZ,WAAY,qBACZ,WAAY,gBACZ,WAAY,uBACZ,WAAY,iBACZ,WAAY,WACZ,WAAY,kBACZ,WAAY,mBACZ,WAAY,iBACZ,WAAY,iBACZ,WAAY,cACZ,WAAY,sBACZ,WAAY,WAIVC,GAAc,CAChB,WAAY,mBACZ,WAAY,WACZ,WAAY,eACZ,WAAY,cACZ,WAAY,kBACZ,UAAW,aACX,WAAY,kBACZ,WAAY,2BACZ,WAAY,kBACZ,WAAY,iBACZ,UAAW,oBACX,WAAY,wBACZ,WAAY,qBACZ,WAAY,0BACZ,WAAY,8BACZ,WAAY,WACZ,WAAY,eACZ,UAAW,eACX,UAAW,2BACX,WAAY,kCACZ,WAAY,wBACZ,WAAY,kCACZ,WAAY,2BACZ,WAAY,mCACZ,SAAU,yBACV,WAAY,gCACZ,WAAY,oBACZ,WAAY,gBACZ,UAAW,wBACX,UAAW,iBACX,UAAW,kBACX,UAAW,cACX,WAAY,0BACZ,WAAY,+BACZ,WAAY,6BACZ,WAAY,kCACZ,WAAY,WACZ,WAAY,gCACZ,UAAW,0BACX,WAAY,8BACZ,WAAY,oBACZ,WAAY,sBACZ,WAAY,sBACZ,WAAY,kBACZ,WAAY,2BACZ,WAAY,oBACZ,UAAW,6BACX,UAAW,UACX,WAAY,sBACZ,UAAW,cACX,WAAY,aACZ,WAAY,iBACZ,UAAW,iBACX,WAAY,WACZ,SAAU,YACV,UAAW,gBACX,WAAY,2BACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,mBACZ,WAAY,2BACZ,WAAY,2BACZ,WAAY,2BACZ,WAAY,kCACZ,WAAY,kBACZ,WAAY,oBACZ,WAAY,iBACZ,WAAY,oBACZ,UAAW,YACX,UAAW,gBACX,WAAY,cACZ,WAAY,qBACZ,WAAY,yBACZ,SAAU,6BACV,WAAY,0BACZ,WAAY,8BACZ,WAAY,yBACZ,WAAY,oBACZ,WAAY,oBACZ,WAAY,YACZ,WAAY,gBACZ,WAAY,sBACZ,UAAW,yBACX,UAAW,6BACX,WAAY,yBACZ,WAAY,6BACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,uBACZ,WAAY,2BACZ,WAAY,oBACZ,UAAW,wBACX,WAAY,0BACZ,WAAY,0BACZ,SAAU,qCACV,WAAY,uCACZ,WAAY,iDACZ,WAAY,uCACZ,WAAY,iDACZ,WAAY,0BACZ,WAAY,aACZ,WAAY,iBACZ,WAAY,aACZ,WAAY,iBACZ,WAAY,YACZ,WAAY,4BACZ,WAAY,sBACZ,WAAY,0BACZ,WAAY,kBACZ,WAAY,sBACZ,UAAW,oBACX,UAAW,6BACX,WAAY,iBACZ,UAAW,UACX,WAAY,cACZ,UAAW,eACX,WAAY,mBACZ,WAAY,yBACZ,UAAW,YACX,UAAW,wBACX,UAAW,gBACX,WAAY,6BACZ,UAAW,iCACX,WAAY,qBACZ,WAAY,6BACZ,WAAY,oBACZ,SAAU,6BACV,WAAY,2BACZ,WAAY,yBACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,eACZ,WAAY,mBACZ,WAAY,WACZ,UAAW,sBACX,WAAY,6BACZ,WAAY,wBACZ,SAAU,iCACV,WAAY,6BACZ,WAAY,+BACZ,UAAW,8BACX,WAAY,gBACZ,WAAY,mCACZ,WAAY,uCACZ,WAAY,kCACZ,WAAY,sCACZ,UAAW,iCACX,WAAY,qCACZ,WAAY,0BACZ,WAAY,8BACZ,WAAY,aACZ,WAAY,0BACZ,WAAY,aACZ,SAAU,gBACV,UAAW,oBACX,WAAY,yBACZ,WAAY,mCACZ,WAAY,gBACZ,UAAW,oBACX,WAAY,kBACZ,WAAY,sBACZ,WAAY,yBACZ,WAAY,+BACZ,WAAY,cACZ,WAAY,kBACZ,UAAW,eACX,WAAY,cACZ,WAAY,kBACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,oBACZ,WAAY,cACZ,UAAW,0BACX,WAAY,iBACZ,WAAY,qBACZ,WAAY,WACZ,WAAY,uBACZ,WAAY,yBACZ,WAAY,oBACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,8BACZ,WAAY,2BACZ,WAAY,wBACZ,WAAY,YACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,wBACZ,WAAY,uBACZ,WAAY,iBACZ,WAAY,wBACZ,WAAY,0BACZ,SAAU,eACV,WAAY,uBACZ,WAAY,2BACZ,WAAY,wBACZ,WAAY,gCACZ,WAAY,oCACZ,UAAW,yBACX,WAAY,gCACZ,WAAY,oCACZ,WAAY,yBACZ,WAAY,6BACZ,WAAY,6BACZ,WAAY,iCACZ,WAAY,sBACZ,WAAY,wBACZ,WAAY,yBACZ,UAAW,qCACX,WAAY,uBACZ,UAAW,UACX,WAAY,0BACZ,WAAY,yBACZ,WAAY,sBACZ,UAAW,eACX,WAAY,cACZ,UAAW,gCACX,WAAY,mCACZ,UAAW,iBACX,UAAW,qBACX,WAAY,iBACZ,WAAY,qBACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,UACZ,UAAW,eACX,WAAY,cACZ,WAAY,uBACZ,UAAW,2BACX,UAAW,+BACX,WAAY,mCACZ,WAAY,+BACZ,WAAY,mCACZ,UAAW,uBACX,WAAY,2BACZ,UAAW,mBACX,WAAY,uBACZ,WAAY,yBACZ,UAAW,6BACX,WAAY,aACZ,WAAY,qBACZ,WAAY,yBACZ,WAAY,sBACZ,WAAY,0BACZ,WAAY,qBACZ,UAAW,iBACX,WAAY,uBACZ,WAAY,aACZ,WAAY,uBACZ,WAAY,4BACZ,WAAY,gCACZ,WAAY,YACZ,UAAW,gBACX,WAAY,uBACZ,WAAY,2BACZ,UAAW,gBACX,WAAY,oBACZ,WAAY,WACZ,UAAW,eACX,WAAY,eACZ,UAAW,wBACX,WAAY,yBACZ,WAAY,uBACZ,WAAY,mCACZ,WAAY,4BACZ,WAAY,qCACZ,WAAY,iCACZ,WAAY,mCACZ,WAAY,+BACZ,UAAW,uBACX,WAAY,8BACZ,WAAY,UACZ,WAAY,2BACZ,WAAY,eACZ,UAAW,oBACX,WAAY,iBACZ,UAAW,iBACX,WAAY,0BACZ,SAAU,cACV,WAAY,kBACZ,WAAY,gCACZ,WAAY,SACZ,UAAW,aACX,UAAW,cACX,WAAY,kBACZ,WAAY,oBACZ,WAAY,4BACZ,WAAY,+BACZ,UAAW,mBACX,UAAW,2BACX,UAAW,wBACX,UAAW,YACX,WAAY,gBACZ,WAAY,6BACZ,WAAY,iCACZ,WAAY,kCACZ,WAAY,oBACZ,WAAY,wBACZ,WAAY,iBACZ,WAAY,qBACZ,UAAW,oBACX,WAAY,wBACZ,WAAY,eACZ,WAAY,mBACZ,WAAY,sBACZ,WAAY,0BACZ,UAAW,iBACX,WAAY,qBACZ,UAAW,uBACX,WAAY,2BACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,yBACZ,WAAY,6BACZ,UAAW,aACX,WAAY,iBACZ,UAAW,uBACX,WAAY,2BACZ,WAAY,eACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,2BACZ,UAAW,uBACX,WAAY,oCACZ,WAAY,iCACZ,WAAY,uCACZ,WAAY,kBACZ,WAAY,UACZ,UAAW,cACX,UAAW,mBACX,WAAY,WACZ,UAAW,oBACX,WAAY,mBACZ,WAAY,uBACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,sBACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,sBACZ,UAAW,0BACX,WAAY,mCACZ,WAAY,uBACZ,WAAY,+BACZ,WAAY,iBACZ,WAAY,qBACZ,WAAY,uBACZ,WAAY,eACZ,WAAY,yBACZ,WAAY,8BACZ,WAAY,iBACZ,WAAY,qBACZ,UAAW,sBACX,WAAY,mBACZ,UAAW,uBACX,WAAY,aACZ,SAAU,UACV,WAAY,cACZ,WAAY,wBACZ,WAAY,sBACZ,WAAY,2BACZ,UAAW,kBACX,WAAY,sBACZ,WAAY,gCACZ,WAAY,iBACZ,UAAW,wBACX,WAAY,4BACZ,WAAY,4BACZ,WAAY,2BACZ,WAAY,qBACZ,WAAY,UACZ,WAAY,mBACZ,UAAW,qBACX,WAAY,8BACZ,WAAY,oBACZ,WAAY,UACZ,WAAY,uBACZ,WAAY,mBACZ,WAAY,gBACZ,WAAY,cACZ,WAAY,wCACZ,UAAW,yBACX,WAAY,4BACZ,UAAW,wBACX,WAAY,sCACZ,UAAW,mBACX,WAAY,sBACZ,WAAY,2BACZ,WAAY,8BACZ,WAAY,kBACZ,WAAY,qBACZ,UAAW,wBACX,WAAY,6BACZ,WAAY,qCACZ,UAAW,gCACX,WAAY,wBACZ,UAAW,0BACX,WAAY,6BACZ,WAAY,qBACZ,UAAW,wBACX,WAAY,4BACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,YACZ,WAAY,wBACZ,WAAY,gBACZ,WAAY,YACZ,WAAY,wBACZ,WAAY,kBACZ,WAAY,qBACZ,UAAW,yBACX,WAAY,eACZ,WAAY,YACZ,UAAW,sBACX,WAAY,qBACZ,WAAY,eACZ,WAAY,cACZ,UAAW,iBACX,WAAY,mBACZ,WAAY,mBACZ,WAAY,4BACZ,WAAY,eACZ,WAAY,oBACZ,WAAY,yBACZ,WAAY,kBACZ,WAAY,8BACZ,UAAW,2BACX,WAAY,kBACZ,UAAW,wBACX,WAAY,YACZ,WAAY,gBACZ,WAAY,kBACZ,WAAY,6BACZ,WAAY,UACZ,WAAY,YACZ,WAAY,wBACZ,WAAY,iCACZ,WAAY,YACZ,WAAY,YACZ,UAAW,2BACX,WAAY,6BACZ,WAAY,sBACZ,WAAY,4BACZ,WAAY,UACZ,WAAY,cACZ,UAAW,iBACX,UAAW,qBACX,WAAY,iBACZ,WAAY,qBACZ,UAAW,kBACX,WAAY,eACZ,UAAW,eACX,WAAY,kBACZ,UAAW,WACX,WAAY,WACZ,WAAY,uBACZ,WAAY,eACZ,WAAY,WACZ,WAAY,kBACZ,WAAY,oBACZ,WAAY,cACZ,WAAY,+BACZ,WAAY,sBACZ,WAAY,cACZ,WAAY,UACZ,WAAY,wBACZ,WAAY,mBACZ,UAAW,sBACX,WAAY,yBACZ,WAAY,oBACZ,WAAY,0BACZ,WAAY,2BACZ,WAAY,wBACZ,UAAW,sBACX,WAAY,iCACZ,WAAY,gCACZ,WAAY,uBACZ,WAAY,iCACZ,WAAY,eACZ,UAAW,mBACX,WAAY,aACZ,WAAY,aACZ,UAAW,4BACX,WAAY,2BACZ,WAAY,gBACZ,WAAY,uBACZ,UAAW,aACX,UAAW,oBACX,WAAY,kBACZ,WAAY,kBACZ,WAAY,uBACZ,WAAY,cACZ,UAAW,yBACX,UAAW,0BACX,WAAY,wBACZ,UAAW,oCACX,WAAY,6BACZ,WAAY,yBACZ,WAAY,uBACZ,UAAW,4BACX,WAAY,iBACZ,WAAY,2BACZ,UAAW,yBACX,WAAY,yBACZ,UAAW,wBACX,WAAY,sBACZ,WAAY,gCACZ,UAAW,sBACX,WAAY,kCACZ,UAAW,sCACX,WAAY,0BACZ,WAAY,WACZ,SAAU,UACV,WAAY,cACZ,WAAY,kBACZ,WAAY,mBACZ,UAAW,oBACX,WAAY,iBACZ,WAAY,kBACZ,WAAY,oBACZ,UAAW,oBACX,WAAY,aACZ,WAAY,iBACZ,WAAY,UACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,cACZ,WAAY,mCACZ,UAAW,qCACX,WAAY,+BACZ,WAAY,yBACZ,WAAY,wBACZ,WAAY,+BACZ,WAAY,uBACZ,WAAY,eACZ,WAAY,cACZ,WAAY,uBACZ,WAAY,gCACZ,WAAY,uCACZ,UAAW,oBACX,WAAY,wBACZ,WAAY,wBACZ,UAAW,4BACX,WAAY,qBACZ,WAAY,yBACZ,UAAW,mBACX,WAAY,gBACZ,WAAY,uBACZ,WAAY,yBACZ,WAAY,uBACZ,WAAY,+BACZ,WAAY,yBACZ,WAAY,yBACZ,UAAW,0BACX,WAAY,mBACZ,WAAY,2BACZ,UAAW,iCACX,WAAY,6BACZ,UAAW,2BACX,WAAY,0BACZ,WAAY,2BACZ,UAAW,iBACX,WAAY,yBACZ,WAAY,6BACZ,WAAY,8BACZ,WAAY,sBACZ,WAAY,mCACZ,WAAY,iCACZ,UAAW,iCACX,WAAY,sCACZ,WAAY,oCACZ,UAAW,2BACX,WAAY,qBACZ,WAAY,iBACZ,WAAY,mBACZ,UAAW,gBACX,WAAY,wBACZ,WAAY,4BACZ,UAAW,0BACX,UAAW,sBACX,WAAY,qBACZ,UAAW,4BACX,UAAW,2BACX,WAAY,cACZ,WAAY,kBACZ,UAAW,wBACX,WAAY,qCACZ,WAAY,iBACZ,UAAW,0BACX,WAAY,sBACZ,WAAY,8BACZ,WAAY,8BACZ,WAAY,qBACZ,UAAW,kBACX,UAAW,yCACX,WAAY,oBACZ,WAAY,2BACZ,WAAY,wBACZ,WAAY,uBACZ,WAAY,cACZ,WAAY,kCACZ,WAAY,oCACZ,WAAY,+BACZ,WAAY,kBACZ,WAAY,uBACZ,WAAY,8BACZ,WAAY,uBACZ,WAAY,2BACZ,WAAY,UACZ,WAAY,cACZ,WAAY,UACZ,WAAY,gCACZ,UAAW,YACX,WAAY,sBACZ,WAAY,0BACZ,WAAY,oBACZ,WAAY,eACZ,WAAY,uBACZ,WAAY,oCACZ,WAAY,oBACZ,WAAY,8BACZ,WAAY,oBACZ,WAAY,YACZ,WAAY,gBACZ,WAAY,mBACZ,WAAY,uBACZ,UAAW,iBACX,WAAY,gBACZ,WAAY,yBACZ,WAAY,4BACZ,WAAY,oBACZ,WAAY,4BACZ,WAAY,UACZ,WAAY,UACZ,WAAY,uBACZ,WAAY,sBACZ,WAAY,cACZ,WAAY,iCACZ,WAAY,iBACZ,WAAY,qBACZ,UAAW,gBACX,WAAY,WACZ,WAAY,iBACZ,WAAY,qBACZ,WAAY,eACZ,WAAY,oBACZ,UAAW,wBACX,WAAY,6BACZ,WAAY,iCACZ,UAAW,iBACX,WAAY,qBACZ,UAAW,YACX,WAAY,sBACZ,WAAY,mBACZ,WAAY,uBACZ,UAAW,WACX,WAAY,iBACZ,WAAY,qBACZ,UAAW,eACX,UAAW,sBACX,WAAY,wBACZ,WAAY,6BACZ,WAAY,0BACZ,WAAY,mCACZ,WAAY,2BACZ,WAAY,+BACZ,UAAW,2BACX,WAAY,kCACZ,WAAY,6BACZ,WAAY,oBACZ,WAAY,4BACZ,WAAY,oBACZ,UAAW,wBACX,WAAY,iCACZ,WAAY,yBACZ,WAAY,+BACZ,UAAW,4BACX,WAAY,+BACZ,WAAY,sCACZ,WAAY,gDACZ,WAAY,+BACZ,WAAY,sCACZ,WAAY,0BACZ,WAAY,+BACZ,UAAW,sBACX,WAAY,4BACZ,WAAY,2BACZ,UAAW,+BACX,WAAY,6BACZ,WAAY,wBACZ,WAAY,2BACZ,WAAY,6BACZ,WAAY,iCACZ,WAAY,6BACZ,WAAY,oCACZ,UAAW,+BACX,WAAY,gBACZ,WAAY,gBACZ,WAAY,0BACZ,UAAW,yBACX,WAAY,6BACZ,WAAY,aACZ,WAAY,aACZ,UAAW,kBACX,WAAY,gCACZ,WAAY,oBACZ,WAAY,8BACZ,WAAY,yBACZ,WAAY,8BACZ,WAAY,kBACZ,WAAY,0BACZ,WAAY,4BACZ,WAAY,2BACZ,UAAW,yBACX,WAAY,8BACZ,UAAW,oBACX,WAAY,oBACZ,WAAY,oBACZ,WAAY,6BACZ,UAAW,kBACX,WAAY,qBACZ,WAAY,yBACZ,WAAY,YACZ,UAAW,4BACX,WAAY,gCACZ,WAAY,sBACZ,UAAW,WACX,WAAY,iBACZ,UAAW,cACX,UAAW,UACX,QAAS,cACT,WAAY,UACZ,WAAY,cACZ,WAAY,uBACZ,WAAY,cACZ,UAAW,oBACX,WAAY,YACZ,WAAY,kBACZ,WAAY,sBACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,gBACZ,WAAY,wBACZ,UAAW,qBACX,WAAY,iBACZ,WAAY,2BACZ,WAAY,eACZ,WAAY,wBACZ,WAAY,6BACZ,WAAY,wBACZ,UAAW,uBACX,WAAY,gCACZ,WAAY,gBACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,gBACZ,WAAY,gBACZ,UAAW,qBACX,WAAY,mCACZ,WAAY,4BACZ,WAAY,qBACZ,WAAY,iBACZ,WAAY,qBACZ,WAAY,8BACZ,WAAY,sBACZ,WAAY,0BACZ,WAAY,yBACZ,WAAY,yBACZ,WAAY,kCACZ,WAAY,kBACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,gBACZ,WAAY,iBACZ,WAAY,iBACZ,WAAY,kBACZ,UAAW,sBACX,UAAW,oBACX,UAAW,2BACX,WAAY,+BACZ,WAAY,sBACZ,WAAY,0BACZ,WAAY,WACZ,UAAW,eACX,WAAY,YACZ,WAAY,YACZ,WAAY,gBACZ,WAAY,iBACZ,WAAY,qBACZ,WAAY,yBACZ,WAAY,uBACZ,WAAY,2BACZ,WAAY,oBACZ,UAAW,6BACX,UAAW,oBACX,WAAY,UACZ,WAAY,uBACZ,WAAY,sBACZ,WAAY,cACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,YACZ,UAAW,4BACX,UAAW,2BACX,UAAW,wBACX,WAAY,iBACZ,WAAY,gBACZ,WAAY,kBACZ,WAAY,iBACZ,WAAY,cACZ,WAAY,kBACZ,WAAY,cACZ,WAAY,sBACZ,WAAY,WAIVC,GAAa,CACfC,WAAY,CACVrqI,KAAM4/B,GACN0qG,SAAU,iBACVC,QAAS,iBACThqJ,IAAK,YAEPiqJ,QAAS,CACPxqI,KAAM8/B,GACNwqG,SAAU,oBACVC,QAAS,kBACThqJ,IAAK,YAEPkqJ,MAAO,CACLzqI,KAAM+/B,GACNuqG,SAAU,6BACVC,QAAS,iBACThqJ,IAAK,YAEPmqJ,UAAW,CACT1qI,KAAM6/B,GACNyqG,SAAU,mBACVC,QAAS,iBACThqJ,IAAK,eAEPzB,KAAM,CACJkhB,KAAMggC,GACNsqG,SAAU,eACVC,QAAS,iBACThqJ,IAAK,YAGL+lI,GAAU,WACZ,WAAYqkB,GAAK,oBACfzsJ,KAAKysJ,IAAMA,CACb,CAoFC,OApFA,uCACD,SAAW7rJ,GACT,OAAOqrJ,GAAYrrJ,EACrB,GAAC,+BACD,SAAkBN,EAASC,GAAuB,IAAnBmsJ,EAAY,UAAH,8CACtC,OAAOppJ,EAAQtD,KAAM,KAAI,oBAAE,iHAClBA,KAAKysJ,IAAIE,QAAQrsJ,EAASC,EAAImsJ,IAAU,+CAEnD,GAAC,6BACD,SAAgBpsJ,EAASssJ,GAA8B,IAAnBF,EAAY,UAAH,8CAC3C,OAAOppJ,EAAQtD,KAAM,KAAI,oBAAE,wFAClB,OADkB,SACZA,KAAK6sJ,YAAYvsJ,EAASssJ,EAAWF,EAAWR,GAAWK,OAAM,uFAElF,GAAC,+BACD,SAAkBjsJ,EAASssJ,GAA8B,IAAnBF,EAAY,UAAH,8CAC7C,OAAOppJ,EAAQtD,KAAM,KAAI,oBAAE,wFAClB,OADkB,SACZA,KAAK6sJ,YAAYvsJ,EAASssJ,EAAWF,EAAWR,GAAWtrJ,MAAK,uFAEjF,GAAC,oCACD,SAAuBN,EAASssJ,GAA8B,IAAnBF,EAAY,UAAH,8CAClD,OAAOppJ,EAAQtD,KAAM,KAAI,oBAAE,wFAClB,OADkB,SACZA,KAAK6sJ,YAAYvsJ,EAASssJ,EAAWF,EAAWR,GAAWM,WAAU,uFAEtF,GAAC,iCACD,SAAoBlsJ,EAASwsJ,GAC3B,OAAOxpJ,EAAQtD,KAAM,KAAI,oBAAE,oGACzB,OADyB,SACnBA,KAAK+sJ,mBAAmBzsJ,GAAQ,OACvB,OADuB,SACjBN,KAAKgtJ,qBAAqB1sJ,GAAQ,OACtC,OADXysB,EAAS,EAAH,cACW/sB,KAAKysJ,IAAIQ,mBAAmB3sJ,EAASugD,IAAW,OAGvE,OAHMqsG,EAAW,EAAH,KACRC,EAAYD,EAASz7I,IAAI,GACzB27I,EAAUhlB,EAAWilB,cAAcF,GAAU,UAC7CntJ,KAAKstJ,eAAehtJ,EAAS8sJ,EAASrgI,EAAQ+/H,GAAkB,QAClD,OAApB9sJ,KAAKutJ,eAAe,kBACbH,GAAO,gDAElB,GAAC,+BACD,SAAkB9sJ,EAASM,EAAM4sJ,GAC/B,OAAOlqJ,EAAQtD,KAAM,KAAI,oBAAE,sGAEX,OADVytJ,EAAQ,GAAE,SACMztJ,KAAKysJ,IAAIQ,mBAAmB3sJ,EAASM,GAAK,OAC9D,IADM8sJ,EAAQ,EAAH,KACFhtJ,EAAI,EAAGA,EAAIgtJ,EAAM7vI,OAAQnd,IAChC+sJ,EAAM94I,KAAK+4I,EAAMj8I,IAAI/Q,IAAI,GACtB8sJ,EAAO,yCACHC,GAAK,OACRl0I,EAAS,GACN7Y,EAAI,EAAC,YAAEA,EAAI+sJ,EAAMllJ,QAAM,iBAClB,OADkB,KAC9BgR,EAAM,UAAYvZ,KAAKysJ,IAAIE,QAAQrsJ,EAASmtJ,EAAM/sJ,IAAG,yBAA9CiU,KAAI,wBADqBjU,IAAG,gDAG9B6Y,GAAM,gDAEjB,GAAC,yBACD,SAAYjZ,EAASssJ,GAAwC,IAA7BF,EAAY,UAAH,8CAAUiB,EAAQ,uCACzD,OAAOrqJ,EAAQtD,KAAM,KAAI,oBAAE,kGACN,OADM,SACAA,KAAK4tJ,yBAAyBttJ,EAASssJ,EAAWe,GAAS,OAA9EE,EAAa,EAAH,KACVt0I,EAAS,GACN7Y,EAAI,EAAC,YAAEA,EAAImtJ,EAAWtlJ,QAAM,iBACvB,OADuB,KACnCgR,EAAM,SAAYvZ,KAAKysJ,IAAIE,QAAQrsJ,EAASutJ,EAAWntJ,GAAIgsJ,GAAU,wBAA9D/3I,KAAI,wBAD0BjU,IAAG,gDAGnC6Y,GAAM,gDAEjB,GAAC,uBACD,SAAUjZ,EAASysB,EAAQ+gI,GACzB,OAAOxqJ,EAAQtD,KAAM,KAAI,oBAAE,kGACR,OADQ,SACFA,KAAKysJ,IAAIQ,mBAAmB3sJ,EAASwtJ,EAAUhsI,MAAK,OAArEisI,EAAW,EAAH,KACLrtJ,EAAI,EAAC,YAAEA,EAAIqtJ,EAASlwI,QAAM,iBACrB,OADqB,SACf7d,KAAKysJ,IAAIE,QAAQrsJ,EAASytJ,EAASt8I,IAAI/Q,IAAI,GAAM,OAA7DstJ,EAAM,EAAH,KACThuJ,KAAKiuJ,UAAUlhI,EAAQ+gI,EAAWE,GAAK,OAFJttJ,IAAG,+DAK5C,GAAC,4BAgBD,SAAeJ,EAASgH,EAAM4mJ,EAAYpB,GACxC,OAAOxpJ,EAAQtD,KAAM,KAAI,oBAAE,wFACzB,OADyB,SACnBA,KAAKmuJ,YAAY7tJ,EAASgH,EAAM4mJ,EAAYhC,GAAWC,WAAYW,GAAkB,OAC3F,OAD2F,SACrF9sJ,KAAKmuJ,YAAY7tJ,EAASgH,EAAM4mJ,EAAYhC,GAAWI,QAASQ,GAAkB,+CAE5F,GAAC,yBACD,SAAYxsJ,EAASgH,EAAM4mJ,EAAYJ,EAAWhB,GAChD,OAAOxpJ,EAAQtD,KAAM,KAAI,oBAAE,0GACkB,QAC3B,IADVouJ,EAAWF,EAAW5mJ,EAAK6sH,YACX,iDAEhBtxH,EAAOirJ,EAAUzrJ,IACjBgsJ,EAAQ,GACL3tJ,EAAI,EAAC,YAAEA,EAAI0tJ,EAAS7lJ,QAAM,iBAEF,GADzB+lJ,EAAQF,EAAS1tJ,GACnB6tJ,EAAQvuJ,KAAKwuJ,QAAQF,IACrBxB,EAAmB,CAAF,gBACA,OADA,UACM9sJ,KAAKyuJ,kBAAkBnuJ,EAASiuJ,EAAMp6B,WAAU,QAAnE5nG,EAAa,EAAH,KAChBgiI,EAAQ7rJ,EAAeA,EAAe,CAAC,EAAG6pB,GAAagiI,GAAO,QAEhE,OAFgE,UAE1DvuJ,KAAKstJ,eAAehtJ,EAASiuJ,EAAOL,EAAYpB,GAAkB,QACxEuB,EAAM15I,KAAK45I,GAAO,QARiB7tJ,IAAG,uBAUxC4G,EAAKzE,GAAQwrJ,EAAM,gDAEvB,GAAC,qBACD,SAAQ9tJ,GAEN,MAAO,CACL4zH,UAAW5zH,EACXK,KAHeZ,KAAK0uJ,YAAYnuJ,GAIhC6tJ,SAAU,GAEd,GAAC,yBACD,SAAY7tJ,GACV,IAAMouJ,EAAS3uJ,KAAKo9B,MAAM78B,GAC1B,OAAOyrJ,GAAa2C,EACtB,GAAC,kCACD,SAAqBruJ,GACnB,OAAOgD,EAAQtD,KAAM,KAAI,oBAAE,8FAEzB,OADMkuJ,EAAa,CAAC,EAAC,SACfluJ,KAAK4uJ,UAAUtuJ,EAAS4tJ,EAAYhC,GAAWC,YAAW,OAChE,OADgE,SAC1DnsJ,KAAK4uJ,UAAUtuJ,EAAS4tJ,EAAYhC,GAAWI,SAAQ,gCACtD4B,GAAU,+CAErB,GAAC,uBACD,SAAUnhI,EAAQ+gI,EAAWE,GAC3B,IAAM5B,EAAW4B,EAAIF,EAAU1B,UAAU9pJ,MACnC+pJ,EAAU2B,EAAIF,EAAUzB,SAAS7uH,KAAI,SAACtjB,GAAC,OAAKA,EAAE5X,KAAK,SACjC,GAApByqB,EAAOq/H,GACTr/H,EAAOq/H,GAAYC,EAEnBt/H,EAAOq/H,GAAYr/H,EAAOq/H,GAAUhxI,OAAOixI,EAE/C,GAAC,wBACD,SAAW2B,EAAKF,EAAWe,GACzB,IAAMC,EAAUd,EAAIF,EAAU1B,UACzBtyI,MAAMi1I,QAAQD,GAGjBA,EAAQrnI,SAAQ,SAACunI,GAAG,OAAKH,EAAIl6I,KAAKq6I,EAAI1sJ,MAAM,IAF5CusJ,EAAIl6I,KAAKm6I,EAAQxsJ,MAGrB,GAAC,sCACD,SAAyBhC,EAASC,EAAIutJ,GACpC,OAAOxqJ,EAAQtD,KAAM,KAAI,oBAAE,oGACX,OADW,SACLA,KAAKysJ,IAAIQ,mBAAmB3sJ,EAASwtJ,EAAUhsI,MAAK,OAAlE4rI,EAAQ,EAAH,KACLmB,EAAM,GACHnuJ,EAAI,EAAC,YAAEA,EAAIgtJ,EAAM7vI,QAAM,iBAClB,OADkB,SACZ7d,KAAKysJ,IAAIE,QAAQrsJ,EAASotJ,EAAMj8I,IAAI/Q,IAAG,OAAnDstJ,EAAM,EAAH,KACS5lB,EAAW6mB,UAAU1uJ,EAAIytJ,EAAKF,IAE9C9tJ,KAAKkvJ,WAAWlB,EAAKF,EAAWe,GAAK,QAJPnuJ,IAAG,gDAM9BmuJ,GAAG,gDAEd,GAAC,0BACD,WACE7uJ,KAAKo9B,MAAQ,CAAC,CAChB,GAAC,gCACD,SAAmB98B,GACjB,OAAOgD,EAAQtD,KAAM,KAAI,oBAAE,0GACnBuZ,EAAS,CAAC,EACV62B,EAAW1uC,OAAO0B,KAAK4oJ,IAAcxuH,KAAI,SAACx5B,GAAC,OAAKmrJ,SAASnrJ,EAAE,IACxDtD,EAAI,EAAC,YAAEA,EAAI0vC,EAAS7nC,QAAM,iBAEnB,OADRumJ,EAAU1+G,EAAS1vC,GAAE,SACPV,KAAKysJ,IAAIQ,mBAAmB3sJ,EAASwuJ,GAAQ,OAEjE,IAFMpB,EAAQ,EAAH,KACL7vI,EAAO6vI,EAAM7vI,OACV4jB,EAAK,EAAGA,EAAK5jB,EAAM4jB,IAC1BloB,EAAOm0I,EAAMj8I,IAAIgwB,IAAOqtH,EAAQ,QALCpuJ,IAAG,uBAOxCV,KAAKo9B,MAAQ7jB,EAAO,gDAExB,IAAC,wBA1GD,SAAiBhZ,EAAIytJ,EAAKF,GACxB,IAAMsB,EAAepB,EAAIF,EAAUzB,SACnC,OAAIvyI,MAAMi1I,QAAQK,GACDA,EAAa5xH,KAAI,SAAC6xH,GAAI,OAAKA,EAAK/sJ,KAAK,IACtCgb,SAAS/c,GAElB6uJ,EAAa9sJ,QAAU/B,CAChC,GAAC,2BACD,SAAqBA,GACnB,MAAO,CACL4zH,UAAW5zH,EACXK,KAAM,aACNwtJ,SAAU,GAEd,KAAC,EAvFW,GAyLZl6B,GADkB,qBAAThrH,MAAwBA,KAAKomJ,oBACzB/qJ,IAEAm1C,IAef,IAAI61G,GAAO,WACT,aAAc,oBACZvvJ,KAAKiL,gBAAa,EAClBjL,KAAKwvJ,QAAK,EACVxvJ,KAAKyvJ,SAAW,GAChBzvJ,KAAK0vJ,oBAAqB,EAC1B1vJ,KAAK2vJ,WAAa,IAAIC,IACtB5vJ,KAAKusB,WAAa,IAAI67G,GAAWpoI,KACnC,CAqLC,OArLA,iCACD,SAAK6vJ,GACH,OAAOvsJ,EAAQtD,KAAM,KAAI,oBAAE,yGACrBk0H,GAAY,CAAF,eAUM,OATd47B,EAAoB,SAACpoJ,EAAMqoJ,GAC7B,OAAIroJ,EAAKsoJ,SAAS,SACZ,EAAKN,mBACA,EAAKD,SAAW/nJ,EAElBqoJ,EAAS,EAAKN,SAAW/nJ,EAE3BqoJ,EAASroJ,CAClB,EAAC,SACuBwsH,GAAW,CAAE+7B,cAAc,EAAMxoJ,WAAYooJ,GAA2BC,IAAoB,OAApH9vJ,KAAKiL,WAAa,EAAH,KACfjL,KAAKwvJ,GAAKxvJ,KAAKiL,WAAWsE,GAAG,sBAE7BzG,QAAQC,MAAM,iEAAiE,+CAGrF,GAAC,uBACD,SAAUT,EAAM4nJ,GAAU,WACpB3uJ,EAAImB,EAAe,CACrBytJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAqB,EACrBC,uBAAwB,EACxBC,qBAAsB,GACtBC,qBAAsB,KACrBN,GACCO,EAAc,EASlB,OARazwJ,KAAKiL,WAAWylJ,UAAUnvJ,GAAG,SAACovJ,EAASC,GAClD,IAAIC,EAAU71I,KAAKC,IAAI3S,EAAKyG,WAAa0hJ,EAAaG,GAClDn6G,EAAO,EAAKxrC,WAAW3F,OAAO6G,SAASwkJ,EAASA,EAAUC,GAC1D/rJ,EAAMyD,EAAK6D,SAASskJ,EAAaA,EAAcI,GAGnD,OAFAp6G,EAAK91B,IAAI9b,GACT4rJ,GAAeI,EACRA,CACT,GAEF,GAAC,yBACD,SAAYX,GACV,IAAI3uJ,EAAImB,EAAe,CACrBytJ,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAqB,EACrBC,uBAAwB,EACxBC,qBAAsB,GACtBC,qBAAsB,KACrBN,GAEH,OADalwJ,KAAKiL,WAAW6lJ,YAAYvvJ,EAE3C,GAAC,6BACD,SAAgBjB,GACdN,KAAKiL,WAAW8lJ,gBAAgBzwJ,GAChC,IAAIiZ,EAASvZ,KAAKwvJ,GAAGzlI,SAAS,eAE9B,OADA/pB,KAAKiL,WAAsB,UAAE,eACtBsO,CACT,GAAC,yBACD,SAAYjZ,EAAS0wJ,GACnB,OAAOhxJ,KAAKiL,WAAWgmJ,YAAY3wJ,EAAS0wJ,EAC9C,GAAC,qBACD,SAAQ1wJ,EAAS6zH,GAA4B,IAAjB+8B,EAAU,UAAH,8CAC7BC,EAAcnxJ,KAAKoxJ,eAAe9wJ,EAAS6zH,GAC3Ck9B,EAAWvrG,GAAgBqrG,EAAYvwJ,MAAMuwJ,GAIjD,OAHID,GACFlxJ,KAAKsxJ,YAAYhxJ,EAAS+wJ,GAErBA,CACT,GAAC,+BACD,SAAkB/wJ,GAChB,OAAON,KAAKiL,WAAWsmJ,kBAAkBjxJ,EAC3C,GAAC,uBACD,SAAUA,EAASkxJ,GAAY,WAC7B9vJ,OAAO0B,KAAKouJ,GAAY/pI,SAAQ,SAACgqI,GAC/B,IAAIC,EAAWF,EAAWC,GAC1B,GAAIC,QAAmC,IAAvBA,EAASv9B,UACvB,EAAKw9B,UAAUrxJ,EAASoxJ,GACxBF,EAAWC,GAAgB,CACzB7wJ,KAAM,EACN0B,MAAOovJ,EAASv9B,gBAEb,GAAIr6G,MAAMi1I,QAAQ2C,IAAaA,EAASnpJ,OAAS,EACtD,IAAK,IAAI7H,EAAI,EAAGA,EAAIgxJ,EAASnpJ,OAAQ7H,SACL,IAA1BgxJ,EAAShxJ,GAAGyzH,YACd,EAAKw9B,UAAUrxJ,EAASoxJ,EAAShxJ,IACjC8wJ,EAAWC,GAAc/wJ,GAAK,CAC5BE,KAAM,EACN0B,MAAOovJ,EAAShxJ,GAAGyzH,WAK7B,IACA,IAAIg9B,EAAc,CAChBlrG,GAAIurG,EAAWr9B,UACfvzH,KAAM4wJ,EAAW5wJ,KACjBmZ,UAAWy3I,EAAWI,UAExB5xJ,KAAK6xJ,iBAAiBvxJ,EAAS6wJ,EACjC,GAAC,yBACD,SAAY7wJ,EAAS0vC,GAAM,WACzBtuC,OAAO0B,KAAK4sC,GAAMvoB,SAAQ,SAACgqI,GACzB,IAAIC,EAAW1hH,EAAKyhH,GACpB,GAAIC,GAA8B,IAAlBA,EAAS9wJ,KACvBovC,EAAKyhH,GAAgB,EAAK9E,QAAQrsJ,EAASoxJ,EAASpvJ,OAAO,QACtD,GAAIwX,MAAMi1I,QAAQ2C,IAAaA,EAASnpJ,OAAS,GAA0B,IAArBmpJ,EAAS,GAAG9wJ,KACvE,IAAK,IAAIF,EAAI,EAAGA,EAAIgxJ,EAASnpJ,OAAQ7H,IACnCsvC,EAAKyhH,GAAc/wJ,GAAK,EAAKisJ,QAAQrsJ,EAASoxJ,EAAShxJ,GAAG4B,OAAO,EAGvE,GACF,GAAC,4BACD,SAAehC,EAAS6zH,GACtB,OAAOn0H,KAAKiL,WAAW0hJ,QAAQrsJ,EAAS6zH,EAC1C,GAAC,8BACD,SAAiB7zH,EAASgI,GACxB,OAAOtI,KAAKiL,WAAW0mJ,UAAUrxJ,EAASgI,EAAK29C,GAAI39C,EAAK1H,KAAM0H,EAAKyR,UACrE,GAAC,gCACD,SAAmBzZ,EAASM,GAC1B,OAAOZ,KAAKiL,WAAWgiJ,mBAAmB3sJ,EAASM,EACrD,GAAC,yBACD,SAAYN,GACV,OAAON,KAAKiL,WAAW6mJ,YAAYxxJ,EACrC,GAAC,uCACD,SAA0BA,EAASyxJ,GACE,IAA/BA,EAAqBxpJ,OAIzBvI,KAAKiL,WAAW+mJ,0BAA0B1xJ,EAASyxJ,GAHjDjpJ,QAAQqB,IAAI,mCAAD,OAAoC4nJ,EAAqBxpJ,QAIxE,GAAC,mCACD,SAAsBjI,GACpB,OAAON,KAAKiL,WAAWgnJ,sBAAsB3xJ,EAC/C,GAAC,4BACD,SAAesM,EAAKiR,GAClB,OAAO7d,KAAKkyJ,YAAYlyJ,KAAKiL,WAAWsC,QAASX,EAAKiR,EACxD,GAAC,2BACD,SAAcjR,EAAKiR,GACjB,OAAO7d,KAAKkyJ,YAAYlyJ,KAAKiL,WAAWnF,QAAS8G,EAAKiR,EACxD,GAAC,yBACD,SAAY/R,EAAM+B,EAAUskJ,GAC1B,OAAOrmJ,EAAKK,SAAS0B,EAAW,EAAGA,EAAW,EAAIskJ,GAAW1pJ,MAAM,EACrE,GAAC,wBACD,SAAWnI,GACTN,KAAK2vJ,WAAWyC,OAAO9xJ,GACvBN,KAAKiL,WAAWonJ,WAAW/xJ,EAC7B,GAAC,6BACD,SAAgBA,EAASgyJ,GACvBtyJ,KAAKiL,WAAWsnJ,gBAAgBjyJ,EAASgyJ,EAC3C,GAAC,sCACD,SAAyBhyJ,EAAS88B,EAAOk1H,GACvCtyJ,KAAKiL,WAAWunJ,yBAAyBlyJ,EAAS88B,EAAOk1H,EAC3D,GAAC,yBACD,SAAYhyJ,GACV,OAAON,KAAKiL,WAAWwnJ,YAAYnyJ,EACrC,GAAC,6BACD,SAAgBA,GACd,OAAON,KAAKiL,WAAWynJ,gBAAgBpyJ,EACzC,GAAC,yBACD,SAAYA,EAAS6zH,GACnB,OAAOn0H,KAAKiL,WAAW0nJ,YAAYryJ,EAAS6zH,EAC9C,GAAC,6CACD,SAAgC7zH,GAE9B,IADA,IAAMk9B,EAAM,IAAIoyH,IACPxuJ,EAAI,EAAGA,EAAIykD,GAAYt9C,OAAQnH,IAItC,IAHA,IAAMR,EAAOilD,GAAYzkD,GACnBssJ,EAAQ1tJ,KAAKitJ,mBAAmB3sJ,EAASM,GACzCid,EAAO6vI,EAAM7vI,OACV8jB,EAAI,EAAGA,EAAI9jB,EAAM8jB,IAAK,CAC7B,IAAMwyF,EAAYu5B,EAAMj8I,IAAIkwB,GAEtBixH,EADO5yJ,KAAK2sJ,QAAQrsJ,EAAS6zH,GACbC,SAAS9xH,MAC/Bk7B,EAAI7c,IAAIwzG,EAAWy+B,GACnBp1H,EAAI7c,IAAIiyI,EAAUz+B,EACpB,CAEFn0H,KAAK2vJ,WAAWhvI,IAAIrgB,EAASk9B,EAC/B,GAAC,yBACD,SAAY91B,GAAwB,IAAlBmrJ,EAAW,UAAH,8CACxB7yJ,KAAKyvJ,SAAW/nJ,EAChB1H,KAAK0vJ,mBAAqBmD,CAC5B,KAAC,EA7LQ,E","file":"static/js/31.04aa5270.chunk.js","sourcesContent":["export var NavigationModes;\r\n(function (NavigationModes) {\r\n    NavigationModes[NavigationModes[\"Orbit\"] = 0] = \"Orbit\";\r\n    NavigationModes[NavigationModes[\"FirstPerson\"] = 1] = \"FirstPerson\";\r\n    NavigationModes[NavigationModes[\"Plan\"] = 2] = \"Plan\";\r\n})(NavigationModes || (NavigationModes = {}));\r\nexport var CameraProjections;\r\n(function (CameraProjections) {\r\n    CameraProjections[CameraProjections[\"Perspective\"] = 0] = \"Perspective\";\r\n    CameraProjections[CameraProjections[\"Orthographic\"] = 1] = \"Orthographic\";\r\n})(CameraProjections || (CameraProjections = {}));\r\nexport class IfcComponent {\r\n    constructor(context) {\r\n        context.addComponent(this);\r\n    }\r\n    update(_delta) { }\r\n}\r\nexport var dimension;\r\n(function (dimension) {\r\n    dimension[\"x\"] = \"x\";\r\n    dimension[\"y\"] = \"y\";\r\n    dimension[\"z\"] = \"z\";\r\n})(dimension || (dimension = {}));\r\n//# sourceMappingURL=base-types.js.map","import { LineSegmentsGeometry } from 'three/examples/jsm/lines/LineSegmentsGeometry';\r\nimport { LineSegments2 } from 'three/examples/jsm/lines/LineSegments2';\r\nimport { LineMaterial } from 'three/examples/jsm/lines/LineMaterial';\r\nimport { BufferAttribute, BufferGeometry, DynamicDrawUsage, Line3, LineSegments, Matrix4, MeshBasicMaterial, Plane, Vector3 } from 'three';\r\nimport { IFCBEAM, IFCBUILDINGELEMENTPROXY, IFCCOLUMN, IFCDOOR, IFCFOOTING, IFCFURNISHINGELEMENT, IFCMEMBER, IFCPLATE, IFCPROXY, IFCROOF, IFCSLAB, IFCSTAIRFLIGHT, IFCWALL, IFCWALLSTANDARDCASE, IFCWINDOW } from 'web-ifc';\r\nexport class ClippingEdges {\r\n    constructor(clippingPlane) {\r\n        this.edges = {};\r\n        this.isVisible = true;\r\n        this.inverseMatrix = new Matrix4();\r\n        this.localPlane = new Plane();\r\n        this.tempLine = new Line3();\r\n        this.tempVector = new Vector3();\r\n        this.stylesInitialized = false;\r\n        this.clippingPlane = clippingPlane;\r\n    }\r\n    get visible() {\r\n        return this.isVisible;\r\n    }\r\n    set visible(visible) {\r\n        this.isVisible = visible;\r\n        const allEdges = Object.values(this.edges);\r\n        allEdges.forEach((edges) => {\r\n            edges.mesh.visible = visible;\r\n            if (visible)\r\n                ClippingEdges.context.getScene().add(edges.mesh);\r\n            else\r\n                edges.mesh.removeFromParent();\r\n        });\r\n        if (visible)\r\n            this.updateEdges();\r\n    }\r\n    // Initializes the helper geometry used to compute the vertices\r\n    static newGeneratorGeometry() {\r\n        // create line geometry with enough data to hold 100000 segments\r\n        const generatorGeometry = new BufferGeometry();\r\n        const linePosAttr = new BufferAttribute(new Float32Array(300000), 3, false);\r\n        linePosAttr.setUsage(DynamicDrawUsage);\r\n        generatorGeometry.setAttribute('position', linePosAttr);\r\n        return generatorGeometry;\r\n    }\r\n    dispose() {\r\n        Object.values(this.edges).forEach((edge) => {\r\n            if (edge.generatorGeometry.boundsTree)\r\n                edge.generatorGeometry.disposeBoundsTree();\r\n            edge.generatorGeometry.dispose();\r\n            if (edge.mesh.geometry.boundsTree)\r\n                edge.mesh.geometry.disposeBoundsTree();\r\n            edge.mesh.geometry.dispose();\r\n            edge.mesh.removeFromParent();\r\n            edge.mesh = null;\r\n        });\r\n        this.edges = null;\r\n        this.clippingPlane = null;\r\n    }\r\n    disposeStylesAndHelpers() {\r\n        if (ClippingEdges.basicEdges) {\r\n            ClippingEdges.basicEdges.removeFromParent();\r\n            ClippingEdges.basicEdges.geometry.dispose();\r\n            ClippingEdges.basicEdges = null;\r\n            ClippingEdges.basicEdges = new LineSegments();\r\n        }\r\n        ClippingEdges.context = null;\r\n        ClippingEdges.ifc = null;\r\n        ClippingEdges.edgesParent = undefined;\r\n        if (!ClippingEdges.styles)\r\n            return;\r\n        const styles = Object.values(ClippingEdges.styles);\r\n        styles.forEach((style) => {\r\n            style.ids.length = 0;\r\n            style.meshes.forEach((mesh) => {\r\n                mesh.removeFromParent();\r\n                mesh.geometry.dispose();\r\n                if (mesh.geometry.boundsTree)\r\n                    mesh.geometry.disposeBoundsTree();\r\n                if (Array.isArray(mesh.material))\r\n                    mesh.material.forEach((mat) => mat.dispose());\r\n                else\r\n                    mesh.material.dispose();\r\n            });\r\n            style.meshes.length = 0;\r\n            style.categories.length = 0;\r\n            style.material.dispose();\r\n        });\r\n        ClippingEdges.styles = null;\r\n        ClippingEdges.styles = {};\r\n    }\r\n    async updateEdges() {\r\n        if (ClippingEdges.createDefaultIfcStyles) {\r\n            await this.updateIfcStyles();\r\n        }\r\n        if (ClippingEdges.forceStyleUpdate) {\r\n            this.updateSubsetsTranformation();\r\n        }\r\n        Object.keys(ClippingEdges.styles).forEach((styleName) => {\r\n            try {\r\n                // this can trow error if there is an empty mesh, we still want to update other edges so we catch ere\r\n                this.drawEdges(styleName);\r\n            }\r\n            catch (e) {\r\n                console.error('error in drawing edges', e);\r\n            }\r\n        });\r\n    }\r\n    // Creates a new style that applies to all clipping edges for IFC models\r\n    static async newStyle(styleName, categories, material = ClippingEdges.defaultMaterial) {\r\n        const subsets = [];\r\n        const models = ClippingEdges.context.items.ifcModels;\r\n        for (let i = 0; i < models.length; i++) {\r\n            // eslint-disable-next-line no-await-in-loop\r\n            const subset = await ClippingEdges.newSubset(styleName, models[i], categories);\r\n            if (subset) {\r\n                subsets.push(subset);\r\n            }\r\n        }\r\n        material.clippingPlanes = ClippingEdges.context.getClippingPlanes();\r\n        ClippingEdges.styles[styleName] = {\r\n            ids: models.map((model) => model.modelID),\r\n            categories,\r\n            material,\r\n            meshes: subsets\r\n        };\r\n    }\r\n    // Creates a new style that applies to all clipping edges for generic models\r\n    static async newStyleFromMesh(styleName, meshes, material = ClippingEdges.defaultMaterial) {\r\n        const ids = meshes.map((mesh) => mesh.modelID);\r\n        meshes.forEach((mesh) => {\r\n            if (!mesh.geometry.boundsTree)\r\n                mesh.geometry.computeBoundsTree();\r\n        });\r\n        material.clippingPlanes = ClippingEdges.context.getClippingPlanes();\r\n        ClippingEdges.styles[styleName] = {\r\n            ids,\r\n            categories: [],\r\n            material,\r\n            meshes\r\n        };\r\n    }\r\n    async updateStylesIfcGeometry() {\r\n        const styleNames = Object.keys(ClippingEdges.styles);\r\n        for (let i = 0; i < styleNames.length; i++) {\r\n            const name = styleNames[i];\r\n            const style = ClippingEdges.styles[name];\r\n            const models = ClippingEdges.context.items.ifcModels;\r\n            style.meshes.length = 0;\r\n            for (let i = 0; i < models.length; i++) {\r\n                // eslint-disable-next-line no-await-in-loop\r\n                const subset = await ClippingEdges.newSubset(name, models[i], style.categories);\r\n                if (subset) {\r\n                    style.meshes.push(subset);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    updateSubsetsTranformation() {\r\n        const styleNames = Object.keys(ClippingEdges.styles);\r\n        for (let i = 0; i < styleNames.length; i++) {\r\n            const styleName = styleNames[i];\r\n            const style = ClippingEdges.styles[styleName];\r\n            style.meshes.forEach((mesh) => {\r\n                const model = ClippingEdges.context.items.ifcModels.find((model) => model.modelID === mesh.modelID);\r\n                if (model) {\r\n                    mesh.position.copy(model.position);\r\n                    mesh.rotation.copy(model.rotation);\r\n                    mesh.scale.copy(model.scale);\r\n                }\r\n            });\r\n        }\r\n        ClippingEdges.forceStyleUpdate = false;\r\n    }\r\n    async updateIfcStyles() {\r\n        if (!this.stylesInitialized) {\r\n            await this.createDefaultIfcStyles();\r\n        }\r\n        if (ClippingEdges.forceStyleUpdate) {\r\n            await this.updateStylesIfcGeometry();\r\n            ClippingEdges.forceStyleUpdate = false;\r\n        }\r\n    }\r\n    // Creates some basic styles so that users don't have to create it each time\r\n    async createDefaultIfcStyles() {\r\n        if (Object.keys(ClippingEdges.styles).length === 0) {\r\n            await ClippingEdges.newStyle('thick', [\r\n                IFCWALLSTANDARDCASE,\r\n                IFCWALL,\r\n                IFCSLAB,\r\n                IFCSTAIRFLIGHT,\r\n                IFCCOLUMN,\r\n                IFCBEAM,\r\n                IFCROOF,\r\n                IFCBUILDINGELEMENTPROXY,\r\n                IFCPROXY\r\n            ], new LineMaterial({ color: 0x000000, linewidth: 0.0015 }));\r\n            await ClippingEdges.newStyle('thin', [\r\n                IFCWINDOW,\r\n                IFCPLATE,\r\n                IFCMEMBER,\r\n                IFCDOOR,\r\n                IFCFURNISHINGELEMENT,\r\n                IFCPROXY,\r\n                IFCBUILDINGELEMENTPROXY,\r\n                IFCFOOTING\r\n            ], new LineMaterial({ color: 0x333333, linewidth: 0.001 }));\r\n            this.stylesInitialized = true;\r\n        }\r\n    }\r\n    // Creates a new subset. This allows to apply a style just to a specific set of items\r\n    static async newSubset(styleName, model, categories) {\r\n        const modelID = model.modelID;\r\n        const ids = await this.getItemIDs(modelID, categories);\r\n        // If no items were found, no geometry is created for this style\r\n        if (!ids.length)\r\n            return null;\r\n        const manager = this.ifc.loader.ifcManager;\r\n        let subset;\r\n        if (ids.length > 0) {\r\n            subset = manager.createSubset({\r\n                modelID,\r\n                ids,\r\n                customID: styleName,\r\n                material: ClippingEdges.invisibleMaterial,\r\n                removePrevious: true,\r\n                scene: ClippingEdges.context.getScene(),\r\n                applyBVH: true\r\n            });\r\n        }\r\n        else {\r\n            subset = manager.getSubset(modelID, ClippingEdges.invisibleMaterial, styleName);\r\n        }\r\n        subset.position.copy(model.position);\r\n        subset.rotation.copy(model.rotation);\r\n        subset.scale.copy(model.scale);\r\n        return subset;\r\n    }\r\n    static async getItemIDs(modelID, categories) {\r\n        const ids = [];\r\n        for (let j = 0; j < categories.length; j++) {\r\n            // eslint-disable-next-line no-await-in-loop\r\n            const found = await this.ifc.getAllItemsOfType(modelID, categories[j], false);\r\n            ids.push(...found);\r\n        }\r\n        const visibleItems = this.getVisibileItems(modelID);\r\n        return ids.filter((id) => visibleItems.has(id));\r\n    }\r\n    static getVisibileItems(modelID) {\r\n        const visibleItems = new Set();\r\n        const model = this.context.items.ifcModels.find((model) => model.modelID === modelID);\r\n        if (!model)\r\n            throw new Error('IFC model was not found for computing clipping edges.');\r\n        if (!model.geometry.index)\r\n            throw new Error('Indices were not found for clipping edges.');\r\n        const indices = new Set(model.geometry.index.array);\r\n        indices.forEach((index) => {\r\n            visibleItems.add(model.geometry.attributes.expressID.getX(index));\r\n        });\r\n        return visibleItems;\r\n    }\r\n    // Creates the geometry of the clipping edges\r\n    newThickEdges(styleName) {\r\n        const material = ClippingEdges.styles[styleName].material;\r\n        const thickLineGeometry = new LineSegmentsGeometry();\r\n        const thickEdges = new LineSegments2(thickLineGeometry, material);\r\n        thickEdges.material.polygonOffset = true;\r\n        thickEdges.material.polygonOffsetFactor = -2;\r\n        thickEdges.material.polygonOffsetUnits = 1;\r\n        thickEdges.renderOrder = 3;\r\n        return thickEdges;\r\n    }\r\n    // Source: https://gkjohnson.github.io/three-mesh-bvh/example/bundle/clippedEdges.html\r\n    drawEdges(styleName) {\r\n        const style = ClippingEdges.styles[styleName];\r\n        // if (!style.subsets.geometry.boundsTree) return;\r\n        if (!this.edges[styleName]) {\r\n            this.edges[styleName] = {\r\n                generatorGeometry: ClippingEdges.newGeneratorGeometry(),\r\n                mesh: this.newThickEdges(styleName)\r\n            };\r\n        }\r\n        const edges = this.edges[styleName];\r\n        let index = 0;\r\n        const posAttr = edges.generatorGeometry.attributes.position;\r\n        // @ts-ignore\r\n        posAttr.array.fill(0);\r\n        const notEmptyMeshes = style.meshes.filter((subset) => subset.geometry);\r\n        notEmptyMeshes.forEach((mesh) => {\r\n            if (!mesh.geometry.boundsTree) {\r\n                throw new Error('Boundstree not found for clipping edges subset.');\r\n            }\r\n            this.inverseMatrix.copy(mesh.matrixWorld).invert();\r\n            this.localPlane.copy(this.clippingPlane).applyMatrix4(this.inverseMatrix);\r\n            mesh.geometry.boundsTree.shapecast({\r\n                intersectsBounds: (box) => {\r\n                    return this.localPlane.intersectsBox(box);\r\n                },\r\n                // @ts-ignore\r\n                intersectsTriangle: (tri) => {\r\n                    // check each triangle edge to see if it intersects with the plane. If so then\r\n                    // add it to the list of segments.\r\n                    let count = 0;\r\n                    this.tempLine.start.copy(tri.a);\r\n                    this.tempLine.end.copy(tri.b);\r\n                    if (this.localPlane.intersectLine(this.tempLine, this.tempVector)) {\r\n                        const result = this.tempVector.applyMatrix4(mesh.matrixWorld);\r\n                        posAttr.setXYZ(index, result.x, result.y, result.z);\r\n                        count++;\r\n                        index++;\r\n                    }\r\n                    this.tempLine.start.copy(tri.b);\r\n                    this.tempLine.end.copy(tri.c);\r\n                    if (this.localPlane.intersectLine(this.tempLine, this.tempVector)) {\r\n                        const result = this.tempVector.applyMatrix4(mesh.matrixWorld);\r\n                        posAttr.setXYZ(index, result.x, result.y, result.z);\r\n                        count++;\r\n                        index++;\r\n                    }\r\n                    this.tempLine.start.copy(tri.c);\r\n                    this.tempLine.end.copy(tri.a);\r\n                    if (this.localPlane.intersectLine(this.tempLine, this.tempVector)) {\r\n                        const result = this.tempVector.applyMatrix4(mesh.matrixWorld);\r\n                        posAttr.setXYZ(index, result.x, result.y, result.z);\r\n                        count++;\r\n                        index++;\r\n                    }\r\n                    // If we only intersected with one or three sides then just remove it. This could be handled\r\n                    // more gracefully.\r\n                    if (count !== 2) {\r\n                        index -= count;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        // set the draw range to only the new segments and offset the lines so they don't intersect with the geometry\r\n        edges.mesh.geometry.setDrawRange(0, index);\r\n        edges.mesh.position.copy(this.clippingPlane.normal).multiplyScalar(0.0001);\r\n        posAttr.needsUpdate = true;\r\n        // Update the edges geometry only if there is no NaN in the output (which means there's been an error)\r\n        if (!Number.isNaN(edges.generatorGeometry.attributes.position.array[0])) {\r\n            ClippingEdges.basicEdges.geometry = edges.generatorGeometry;\r\n            edges.mesh.geometry.fromLineSegments(ClippingEdges.basicEdges);\r\n            const parent = ClippingEdges.edgesParent || ClippingEdges.context.getScene();\r\n            parent.add(edges.mesh);\r\n            ClippingEdges.context.renderer.postProduction.excludedItems.add(edges.mesh);\r\n        }\r\n    }\r\n}\r\nClippingEdges.styles = {};\r\nClippingEdges.forceStyleUpdate = false;\r\nClippingEdges.createDefaultIfcStyles = true;\r\nClippingEdges.edgesParent = null;\r\nClippingEdges.invisibleMaterial = new MeshBasicMaterial({ visible: false });\r\nClippingEdges.defaultMaterial = new LineMaterial({ color: 0x000000, linewidth: 0.001 });\r\n// Helpers\r\nClippingEdges.basicEdges = new LineSegments();\r\n//# sourceMappingURL=clipping-edges.js.map","import { CylinderGeometry, DoubleSide, Mesh, MeshBasicMaterial, Object3D, Plane, PlaneGeometry } from 'three';\r\nimport { TransformControls } from 'three/examples/jsm/controls/TransformControls';\r\nimport { IfcComponent } from '../../../base-types';\r\nimport { ClippingEdges } from './clipping-edges';\r\nexport class IfcPlane extends IfcComponent {\r\n    constructor(context, origin, normal, onStartDragging, onEndDragging, planeSize, edgesEnabled) {\r\n        super(context);\r\n        this.arrowBoundingBox = new Mesh();\r\n        this.isVisible = true;\r\n        this.enabled = true;\r\n        this.edgesActive = true;\r\n        // Wether this plane is a section or floor plan\r\n        this.isPlan = false;\r\n        this.removeFromScene = () => {\r\n            this.helper.removeFromParent();\r\n            this.arrowBoundingBox.removeFromParent();\r\n            this.arrowBoundingBox.geometry.dispose();\r\n            this.arrowBoundingBox = undefined;\r\n            this.planeMesh.geometry.dispose();\r\n            this.planeMesh.geometry = undefined;\r\n            this.controls.removeFromParent();\r\n            this.controls.dispose();\r\n            this.edges.dispose();\r\n            this.helper.removeFromParent();\r\n        };\r\n        this.planeSize = planeSize;\r\n        this.context = context;\r\n        this.plane = new Plane();\r\n        this.planeMesh = this.getPlaneMesh();\r\n        this.normal = normal;\r\n        this.origin = origin;\r\n        this.helper = this.createHelper();\r\n        this.controls = this.newTransformControls();\r\n        this.setupEvents(onStartDragging, onEndDragging);\r\n        this.plane.setFromNormalAndCoplanarPoint(normal, origin);\r\n        this.edges = new ClippingEdges(this.plane);\r\n        this.edgesActive = edgesEnabled;\r\n    }\r\n    get active() {\r\n        return this.enabled;\r\n    }\r\n    set active(state) {\r\n        this.enabled = state;\r\n        const planes = this.context.getClippingPlanes();\r\n        this.edges.visible = state;\r\n        if (state) {\r\n            planes.push(this.plane);\r\n        }\r\n        else {\r\n            const index = planes.indexOf(this.plane);\r\n            if (index >= 0)\r\n                planes.splice(index);\r\n        }\r\n    }\r\n    get visible() {\r\n        return this.isVisible;\r\n    }\r\n    set visible(state) {\r\n        this.isVisible = state;\r\n        this.controls.visible = state;\r\n        this.helper.visible = state;\r\n        this.edges.visible = state;\r\n    }\r\n    dispose() {\r\n        if (IfcPlane.planeMaterial) {\r\n            IfcPlane.planeMaterial.dispose();\r\n            IfcPlane.planeMaterial = null;\r\n            IfcPlane.planeMaterial = IfcPlane.getPlaneMaterial();\r\n        }\r\n        if (IfcPlane.hiddenMaterial) {\r\n            IfcPlane.hiddenMaterial.dispose();\r\n            IfcPlane.hiddenMaterial = null;\r\n            IfcPlane.hiddenMaterial = IfcPlane.getHiddenMaterial();\r\n        }\r\n        this.removeFromScene();\r\n        this.edges.disposeStylesAndHelpers();\r\n        this.edges = null;\r\n        this.context = null;\r\n    }\r\n    static getPlaneMaterial() {\r\n        return new MeshBasicMaterial({\r\n            color: 0xffff00,\r\n            side: DoubleSide,\r\n            transparent: true,\r\n            opacity: 0.2\r\n        });\r\n    }\r\n    static getHiddenMaterial() {\r\n        return new MeshBasicMaterial({ visible: false });\r\n    }\r\n    newTransformControls() {\r\n        const camera = this.context.getCamera();\r\n        const container = this.context.getDomElement();\r\n        const controls = new TransformControls(camera, container);\r\n        this.initializeControls(controls);\r\n        const scene = this.context.getScene();\r\n        scene.add(controls);\r\n        this.context.renderer.postProduction.excludedItems.add(controls);\r\n        return controls;\r\n    }\r\n    initializeControls(controls) {\r\n        controls.attach(this.helper);\r\n        controls.showX = false;\r\n        controls.showY = false;\r\n        controls.setSpace('local');\r\n        this.createArrowBoundingBox();\r\n        controls.children[0].children[0].add(this.arrowBoundingBox);\r\n    }\r\n    createArrowBoundingBox() {\r\n        this.arrowBoundingBox.geometry = new CylinderGeometry(0.18, 0.18, 1.2);\r\n        this.arrowBoundingBox.material = IfcPlane.hiddenMaterial;\r\n        this.arrowBoundingBox.rotateX(Math.PI / 2);\r\n        this.arrowBoundingBox.updateMatrix();\r\n        this.arrowBoundingBox.geometry.applyMatrix4(this.arrowBoundingBox.matrix);\r\n    }\r\n    setupEvents(onStart, onEnd) {\r\n        this.controls.addEventListener('change', () => {\r\n            if (!this.enabled)\r\n                return;\r\n            this.plane.setFromNormalAndCoplanarPoint(this.normal, this.helper.position);\r\n            if (this.edgesActive)\r\n                this.edges.updateEdges();\r\n        });\r\n        this.controls.addEventListener('dragging-changed', (event) => {\r\n            if (!this.enabled)\r\n                return;\r\n            this.isVisible = !event.value;\r\n            this.context.toggleCameraControls(this.isVisible);\r\n            if (event.value)\r\n                onStart();\r\n            else\r\n                onEnd();\r\n        });\r\n        this.context.ifcCamera.currentNavMode.onChangeProjection.on((camera) => {\r\n            this.controls.camera = camera;\r\n        });\r\n    }\r\n    createHelper() {\r\n        const helper = new Object3D();\r\n        helper.lookAt(this.normal);\r\n        helper.position.copy(this.origin);\r\n        const scene = this.context.getScene();\r\n        scene.add(helper);\r\n        helper.add(this.planeMesh);\r\n        this.context.renderer.postProduction.excludedItems.add(helper);\r\n        return helper;\r\n    }\r\n    getPlaneMesh() {\r\n        const planeGeom = new PlaneGeometry(this.planeSize, this.planeSize, 1);\r\n        return new Mesh(planeGeom, IfcPlane.planeMaterial);\r\n    }\r\n}\r\nIfcPlane.planeMaterial = IfcPlane.getPlaneMaterial();\r\nIfcPlane.hiddenMaterial = IfcPlane.getHiddenMaterial();\r\n//# sourceMappingURL=planes.js.map","import { Vector3, Matrix3 } from 'three';\r\nimport { IfcComponent } from '../../../base-types';\r\nimport { IfcPlane } from './planes';\r\nexport class IfcClipper extends IfcComponent {\r\n    constructor(context, ifc) {\r\n        super(context);\r\n        this.orthogonalY = true;\r\n        this.toleranceOrthogonalY = 0.7;\r\n        this.planeSize = 5;\r\n        this.createPlane = () => {\r\n            if (!this.enabled)\r\n                return;\r\n            const intersects = this.context.castRayIfc();\r\n            if (!intersects)\r\n                return;\r\n            this.createPlaneFromIntersection(intersects);\r\n            this.intersection = undefined;\r\n        };\r\n        this.createFromNormalAndCoplanarPoint = (normal, point, isPlan = false) => {\r\n            const plane = new IfcPlane(this.context, point, normal, this.activateDragging, this.deactivateDragging, this.planeSize, this.edgesEnabled);\r\n            plane.isPlan = isPlan;\r\n            this.planes.push(plane);\r\n            this.context.addClippingPlane(plane.plane);\r\n            this.updateMaterials();\r\n            return plane;\r\n        };\r\n        this.deletePlane = (plane) => {\r\n            let existingPlane = plane;\r\n            if (!existingPlane) {\r\n                if (!this.enabled)\r\n                    return;\r\n                existingPlane = this.pickPlane();\r\n            }\r\n            if (!existingPlane)\r\n                return;\r\n            const index = this.planes.indexOf(existingPlane);\r\n            if (index === -1)\r\n                return;\r\n            existingPlane.removeFromScene();\r\n            this.planes.splice(index, 1);\r\n            this.context.removeClippingPlane(existingPlane.plane);\r\n            this.updateMaterials();\r\n            this.context.renderer.postProduction.update();\r\n        };\r\n        this.deleteAllPlanes = () => {\r\n            while (this.planes.length > 0) {\r\n                this.deletePlane(this.planes[0]);\r\n            }\r\n        };\r\n        this.pickPlane = () => {\r\n            const planeMeshes = this.planes.map((p) => p.planeMesh);\r\n            const arrowMeshes = this.planes.map((p) => p.arrowBoundingBox);\r\n            const intersects = this.context.castRay([...planeMeshes, ...arrowMeshes]);\r\n            if (intersects.length > 0) {\r\n                return this.planes.find((p) => {\r\n                    if (p.planeMesh === intersects[0].object || p.arrowBoundingBox === intersects[0].object) {\r\n                        return p;\r\n                    }\r\n                    return null;\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        this.createPlaneFromIntersection = (intersection) => {\r\n            var _a;\r\n            const constant = intersection.point.distanceTo(new Vector3(0, 0, 0));\r\n            const normal = (_a = intersection.face) === null || _a === void 0 ? void 0 : _a.normal;\r\n            if (!constant || !normal)\r\n                return;\r\n            const normalMatrix = new Matrix3().getNormalMatrix(intersection.object.matrixWorld);\r\n            const worldNormal = normal.clone().applyMatrix3(normalMatrix).normalize();\r\n            this.normalizePlaneDirectionY(worldNormal);\r\n            const plane = this.newPlane(intersection, worldNormal.negate());\r\n            this.planes.push(plane);\r\n            this.context.addClippingPlane(plane.plane);\r\n            this.updateMaterials();\r\n        };\r\n        this.activateDragging = () => {\r\n            this.dragging = true;\r\n            this.context.renderer.postProduction.visible = false;\r\n        };\r\n        this.deactivateDragging = () => {\r\n            this.dragging = false;\r\n            this.context.renderer.postProduction.visible = true;\r\n        };\r\n        this.updateMaterials = () => {\r\n            // Apply clipping to all models\r\n            const planes = this.context.getClippingPlanes();\r\n            this.context.items.ifcModels.forEach((model) => {\r\n                if (Array.isArray(model.material)) {\r\n                    model.material.forEach((mat) => (mat.clippingPlanes = planes));\r\n                }\r\n                else {\r\n                    model.material.clippingPlanes = planes;\r\n                }\r\n            });\r\n            // Applying clipping to all subsets. then we can also filter and apply only to specified subsest as parameter\r\n            Object.values(this.ifc.loader.ifcManager.subsets.getAllSubsets()).forEach((subset) => {\r\n                const mesh = subset.mesh;\r\n                if (mesh.material)\r\n                    this.updateMaterial(mesh, planes);\r\n                if (mesh.userData.wireframe)\r\n                    this.updateMaterial(mesh.userData.wireframe, planes);\r\n            });\r\n        };\r\n        this.context = context;\r\n        this.ifc = ifc;\r\n        this.enabled = false;\r\n        this.edgesEnabled = true;\r\n        this.dragging = false;\r\n        this.planes = [];\r\n    }\r\n    get active() {\r\n        return this.enabled;\r\n    }\r\n    set active(state) {\r\n        this.enabled = state;\r\n        this.planes.forEach((plane) => {\r\n            if (!plane.isPlan) {\r\n                plane.visible = state;\r\n                plane.active = state;\r\n            }\r\n        });\r\n        this.updateMaterials();\r\n        this.context.renderer.postProduction.visible = true;\r\n    }\r\n    get edgesActive() {\r\n        return this.edgesEnabled;\r\n    }\r\n    set edgesActive(state) {\r\n        this.edgesEnabled = state;\r\n        this.planes.forEach((plane) => {\r\n            plane.edgesActive = state;\r\n        });\r\n    }\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n    dispose() {\r\n        this.planes.forEach((plane) => plane.dispose());\r\n        this.planes.length = 0;\r\n        this.context = null;\r\n        this.ifc = null;\r\n    }\r\n    normalizePlaneDirectionY(normal) {\r\n        if (this.orthogonalY) {\r\n            if (normal.y > this.toleranceOrthogonalY) {\r\n                normal.x = 0;\r\n                normal.y = 1;\r\n                normal.z = 0;\r\n            }\r\n            if (normal.y < -this.toleranceOrthogonalY) {\r\n                normal.x = 0;\r\n                normal.y = -1;\r\n                normal.z = 0;\r\n            }\r\n        }\r\n    }\r\n    newPlane(intersection, worldNormal) {\r\n        return new IfcPlane(this.context, intersection.point, worldNormal, this.activateDragging, this.deactivateDragging, this.planeSize, this.edgesEnabled);\r\n    }\r\n    updateMaterial(mesh, planes) {\r\n        if (!Array.isArray(mesh.material)) {\r\n            mesh.material.clippingPlanes = planes;\r\n            return;\r\n        }\r\n        mesh.material.forEach((m) => {\r\n            m.clippingPlanes = planes;\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=clipper.js.map","import * as THREE from 'three';\r\nexport function RightToLeftHand(vector) {\r\n    return new THREE.Vector3(vector.x, -vector.z, vector.y);\r\n}\r\nconst basesRegex = /^([+-][xyz])([+-][xyz])([+-][xyz])$/i;\r\nconst nameToIndex = { x: 0, y: 1, z: 2 };\r\nconst orderedVectors = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\r\nexport function stringToAxes(axesString) {\r\n    if (!basesRegex.test(axesString)) {\r\n        return null;\r\n    }\r\n    axesString = axesString.toLowerCase();\r\n    // @ts-ignore\r\n    return axesString\r\n        .match(basesRegex)\r\n        .splice(1, 3)\r\n        .map((str) => {\r\n        const negative = str[0] === '-';\r\n        const name = str[1];\r\n        return { negative, name };\r\n    });\r\n}\r\nexport function disposeMeshRecursively(mesh) {\r\n    mesh.removeFromParent();\r\n    if (mesh.geometry)\r\n        mesh.geometry.dispose();\r\n    if (mesh.material) {\r\n        if (Array.isArray(mesh.material))\r\n            mesh.material.forEach((mat) => mat.dispose());\r\n        else\r\n            mesh.material.dispose();\r\n    }\r\n    if (mesh.children && mesh.children.length) {\r\n        mesh.children.forEach((child) => disposeMeshRecursively(child));\r\n    }\r\n    mesh.children.length = 0;\r\n}\r\nexport function getBasisTransform(from, to, targetMatrix) {\r\n    if (!basesRegex.test(from)) {\r\n        return;\r\n    }\r\n    if (!basesRegex.test(to)) {\r\n        return;\r\n    }\r\n    const fromAxes = stringToAxes(from);\r\n    const toAxes = stringToAxes(to);\r\n    if (!fromAxes || !toAxes)\r\n        throw new Error();\r\n    for (let i = 0; i < 3; i++) {\r\n        const fromAxis = fromAxes[i];\r\n        const toAxis = toAxes[i];\r\n        // @ts-ignore\r\n        const fromIndex = nameToIndex[fromAxis.name];\r\n        const equalNegative = fromAxis.negative === toAxis.negative;\r\n        const vector = orderedVectors[fromIndex];\r\n        vector.set(0, 0, 0);\r\n        // @ts-ignore\r\n        vector[toAxis.name] = equalNegative ? 1 : -1;\r\n    }\r\n    targetMatrix.makeBasis(orderedVectors[0], orderedVectors[1], orderedVectors[2]);\r\n}\r\n//# sourceMappingURL=ThreeUtils.js.map","import { BackSide } from 'three';\r\nimport { disposeMeshRecursively } from '../../utils/ThreeUtils';\r\nexport class SectionFillManager {\r\n    constructor(IFC, context) {\r\n        this.IFC = IFC;\r\n        this.context = context;\r\n        this.existMessage = 'The specified fill already exists';\r\n        this.fills = {};\r\n    }\r\n    dispose() {\r\n        const fills = Object.values(this.fills);\r\n        fills.forEach((fill) => disposeMeshRecursively(fill));\r\n        this.fills = null;\r\n    }\r\n    create(name, modelID, ids, material) {\r\n        if (this.fills[name] !== undefined)\r\n            throw new Error(this.existMessage);\r\n        material.clippingPlanes = this.context.getClippingPlanes();\r\n        const model = this.context.items.ifcModels.find((model) => model.modelID === modelID);\r\n        if (!model)\r\n            throw new Error('The requested model to fill was not found.');\r\n        this.setupMaterial(material);\r\n        const subset = this.getSubset(modelID, ids, material, name);\r\n        if (!subset)\r\n            return null;\r\n        this.context.items.pickableIfcModels.push(subset);\r\n        subset.position.copy(model.position);\r\n        subset.rotation.copy(model.rotation);\r\n        this.context.getScene().add(subset);\r\n        this.fills[name] = subset;\r\n        // subset.renderOrder = 2;\r\n        return subset;\r\n    }\r\n    createFromMesh(name, mesh) {\r\n        if (this.fills[name] !== undefined)\r\n            throw new Error(this.existMessage);\r\n        const planes = this.context.getClippingPlanes();\r\n        if (Array.isArray(mesh.material)) {\r\n            mesh.material.forEach((material) => {\r\n                material.clippingPlanes = planes;\r\n            });\r\n        }\r\n        else {\r\n            mesh.material.clippingPlanes = planes;\r\n        }\r\n        this.fills[name] = mesh;\r\n    }\r\n    delete(name) {\r\n        const subset = this.fills[name];\r\n        delete this.fills[name];\r\n        this.context.scene.removeModel(subset);\r\n        subset.geometry.dispose();\r\n    }\r\n    setupMaterial(material) {\r\n        material.clippingPlanes = this.context.getClippingPlanes();\r\n        material.side = BackSide;\r\n        material.polygonOffset = true;\r\n        material.polygonOffsetFactor = -1;\r\n        material.polygonOffsetUnits = 1;\r\n    }\r\n    getSubset(modelID, ids, material, name) {\r\n        return this.IFC.loader.ifcManager.createSubset({\r\n            modelID,\r\n            ids,\r\n            scene: this.context.getScene(),\r\n            removePrevious: true,\r\n            material,\r\n            applyBVH: true,\r\n            customID: name\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=fills.js.map","import { IFCUNITASSIGNMENT } from 'web-ifc';\r\nexport var UnitType;\r\n(function (UnitType) {\r\n    UnitType[\"LENGTHUNIT\"] = \"LENGTHUNIT\";\r\n    UnitType[\"AREAUNIT\"] = \"AREAUNIT\";\r\n    UnitType[\"VOLUMEUNIT\"] = \"VOLUMEUNIT\";\r\n})(UnitType || (UnitType = {}));\r\nexport const UnitScale = {\r\n    MILLI: 0.001,\r\n    CENTI: 0.01,\r\n    DECI: 0.1,\r\n    NONE: 1,\r\n    DECA: 10,\r\n    HECTO: 100,\r\n    KILO: 1000\r\n};\r\nexport class IfcUnits {\r\n    constructor(ifc) {\r\n        this.allUnits = {};\r\n        this.ifc = ifc;\r\n    }\r\n    dispose() {\r\n        this.allUnits = null;\r\n        this.ifc = null;\r\n    }\r\n    async getUnits(modelID, type) {\r\n        if (!this.allUnits[modelID]) {\r\n            await this.getUnitsOfModel(modelID);\r\n        }\r\n        return this.allUnits[modelID][type];\r\n    }\r\n    async getUnitsOfModel(modelID) {\r\n        this.allUnits[modelID] = {};\r\n        const foundUnitsID = await this.ifc.getAllItemsOfType(modelID, IFCUNITASSIGNMENT, false);\r\n        const unitsID = foundUnitsID[0];\r\n        const unitReference = await this.ifc.getProperties(modelID, unitsID, false, true);\r\n        const units = unitReference.Units;\r\n        Object.values(UnitType).forEach((value) => {\r\n            const foundUnit = units.find((item) => item.UnitType && item.UnitType.value === value);\r\n            if (foundUnit) {\r\n                const prefix = foundUnit.Prefix;\r\n                let scale;\r\n                if (prefix === null || prefix === undefined)\r\n                    scale = UnitScale.NONE;\r\n                else\r\n                    scale = UnitScale[prefix.value];\r\n                this.allUnits[modelID][value] = scale;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=units.js.map","import { Mesh, Vector3 } from 'three';\r\nimport { IFCBUILDINGSTOREY, IFCBUILDING } from 'web-ifc';\r\nimport { CameraProjections, NavigationModes } from '../../../base-types';\r\nimport { UnitType } from '../../ifc/units';\r\nimport { disposeMeshRecursively } from '../../../utils/ThreeUtils';\r\nexport class PlanManager {\r\n    constructor(ifc, context, clipper) {\r\n        this.ifc = ifc;\r\n        this.context = context;\r\n        this.clipper = clipper;\r\n        this.planLists = {};\r\n        this.active = false;\r\n        this.defaultSectionOffset = 1.5;\r\n        this.defaultCameraOffset = 30;\r\n        this.storeys = [];\r\n        this.floorPlanViewCached = false;\r\n        this.previousCamera = new Vector3();\r\n        this.previousTarget = new Vector3();\r\n        this.previousProjection = CameraProjections.Perspective;\r\n        this.sectionFill = new Mesh();\r\n    }\r\n    dispose() {\r\n        disposeMeshRecursively(this.sectionFill);\r\n        this.sectionFill = null;\r\n        this.storeys = null;\r\n        this.planLists = null;\r\n    }\r\n    getAll(modelID) {\r\n        const currentPlans = this.planLists[modelID];\r\n        if (!currentPlans)\r\n            throw new Error(\"The requested model doesn't have floor plans generated\");\r\n        return Object.keys(currentPlans);\r\n    }\r\n    async create(config) {\r\n        const { modelID, name } = config;\r\n        const ortho = config.ortho || true;\r\n        if (this.planLists[modelID] === undefined)\r\n            this.planLists[modelID] = {};\r\n        const currentPlanlist = this.planLists[modelID];\r\n        const expressID = config.expressID;\r\n        if (currentPlanlist[expressID])\r\n            return;\r\n        currentPlanlist[expressID] = { modelID, name, ortho, expressID };\r\n        await this.createClippingPlane(config, currentPlanlist[expressID]);\r\n    }\r\n    async goTo(modelID, name, animate = false) {\r\n        var _a;\r\n        if (((_a = this.currentPlan) === null || _a === void 0 ? void 0 : _a.modelID) === modelID && this.currentPlan.name === name)\r\n            return;\r\n        this.storeCameraPosition();\r\n        this.hidePreviousClippingPlane();\r\n        this.getCurrentPlan(modelID, name);\r\n        this.activateCurrentPlan();\r\n        if (!this.active) {\r\n            await this.moveCameraTo2DPlanPosition(animate);\r\n            this.active = true;\r\n        }\r\n    }\r\n    async exitPlanView(animate = false) {\r\n        if (!this.active)\r\n            return;\r\n        this.active = false;\r\n        this.cacheFloorplanView();\r\n        this.context.ifcCamera.setNavigationMode(NavigationModes.Orbit);\r\n        this.context.ifcCamera.projection = this.previousProjection;\r\n        if (this.currentPlan && this.currentPlan.plane) {\r\n            this.currentPlan.plane.active = false;\r\n        }\r\n        this.currentPlan = undefined;\r\n        await this.context.ifcCamera.cameraControls.setLookAt(this.previousCamera.x, this.previousCamera.y, this.previousCamera.z, this.previousTarget.x, this.previousTarget.y, this.previousTarget.z, animate);\r\n    }\r\n    async computeAllPlanViews(modelID) {\r\n        var _a;\r\n        await this.getCurrentStoreys(modelID);\r\n        const unitsScale = await this.ifc.units.getUnits(modelID, UnitType.LENGTHUNIT);\r\n        const siteCoords = await this.getSiteCoords(modelID);\r\n        const transformHeight = await this.getTransformHeight(modelID);\r\n        const storeys = this.storeys[modelID];\r\n        for (let i = 0; i < storeys.length; i++) {\r\n            if (storeys[i]) {\r\n                const baseHeight = ((_a = storeys[i].Elevation) === null || _a === void 0 ? void 0 : _a.value) || 0;\r\n                const elevation = (baseHeight + siteCoords[2]) * unitsScale + transformHeight;\r\n                const expressID = storeys[i].expressID;\r\n                // eslint-disable-next-line no-await-in-loop\r\n                await this.create({\r\n                    modelID,\r\n                    name: this.getFloorplanName(storeys[i]),\r\n                    point: new Vector3(0, elevation + this.defaultSectionOffset, 0),\r\n                    normal: new Vector3(0, -1, 0),\r\n                    rotation: 0,\r\n                    ortho: true,\r\n                    expressID\r\n                });\r\n            }\r\n        }\r\n    }\r\n    storeCameraPosition() {\r\n        if (this.active) {\r\n            this.cacheFloorplanView();\r\n        }\r\n        else {\r\n            this.store3dCameraPosition();\r\n        }\r\n    }\r\n    async createClippingPlane(config, plan) {\r\n        if (config.normal && config.point) {\r\n            const { normal, point } = config;\r\n            const plane = this.clipper.createFromNormalAndCoplanarPoint(normal, point, true);\r\n            plane.visible = false;\r\n            plane.active = false;\r\n            plan.plane = plane;\r\n            await plane.edges.updateEdges();\r\n            plane.edges.visible = false;\r\n        }\r\n    }\r\n    async getTransformHeight(modelID) {\r\n        const transformMatrix = await this.ifc.loader.ifcManager.ifcAPI.GetCoordinationMatrix(modelID);\r\n        return transformMatrix[13];\r\n    }\r\n    async getCurrentStoreys(modelID) {\r\n        if (!this.storeys[modelID]) {\r\n            this.storeys[modelID] = await this.ifc.getAllItemsOfType(modelID, IFCBUILDINGSTOREY, true);\r\n        }\r\n    }\r\n    async getSiteCoords(modelID) {\r\n        const building = await this.getBuilding(modelID);\r\n        const sitePlace = building.ObjectPlacement.PlacementRelTo.RelativePlacement.Location;\r\n        return sitePlace.Coordinates.map((coord) => coord.value);\r\n    }\r\n    async getBuilding(modelID) {\r\n        const allBuildingsIDs = await this.ifc.getAllItemsOfType(modelID, IFCBUILDING, false);\r\n        const buildingID = allBuildingsIDs[0];\r\n        return this.ifc.getProperties(modelID, buildingID, false, true);\r\n    }\r\n    cacheFloorplanView() {\r\n        this.floorPlanViewCached = true;\r\n        this.context.ifcCamera.cameraControls.saveState();\r\n    }\r\n    async moveCameraTo2DPlanPosition(animate) {\r\n        if (this.floorPlanViewCached)\r\n            await this.context.ifcCamera.cameraControls.reset(animate);\r\n        else\r\n            await this.context.ifcCamera.cameraControls.setLookAt(0, 100, 0, 0, 0, 0, animate);\r\n    }\r\n    activateCurrentPlan() {\r\n        if (!this.currentPlan)\r\n            throw new Error('Current plan is not defined.');\r\n        if (this.currentPlan.plane)\r\n            this.currentPlan.plane.active = true;\r\n        this.context.ifcCamera.setNavigationMode(NavigationModes.Plan);\r\n        this.context.ifcCamera.projection = this.currentPlan.ortho\r\n            ? CameraProjections.Orthographic\r\n            : CameraProjections.Perspective;\r\n    }\r\n    store3dCameraPosition() {\r\n        this.context.getCamera().getWorldPosition(this.previousCamera);\r\n        this.context.ifcCamera.cameraControls.getTarget(this.previousTarget);\r\n        this.previousProjection = this.context.ifcCamera.projection;\r\n    }\r\n    getCurrentPlan(modelID, name) {\r\n        if (this.planLists[modelID] === undefined)\r\n            throw new Error('The specified plan is undefined!');\r\n        const currentPlanList = this.planLists[modelID];\r\n        if (currentPlanList[name] === undefined)\r\n            throw new Error('The specified plan is undefined!');\r\n        if (!currentPlanList[name])\r\n            throw new Error('The specified plan name does not exist!');\r\n        this.currentPlan = currentPlanList[name];\r\n    }\r\n    hidePreviousClippingPlane() {\r\n        var _a;\r\n        const plane = (_a = this.currentPlan) === null || _a === void 0 ? void 0 : _a.plane;\r\n        if (plane)\r\n            plane.active = false;\r\n    }\r\n    getFloorplanName(floorplan) {\r\n        var _a, _b, _c, _d;\r\n        if ((_b = (_a = floorplan === null || floorplan === void 0 ? void 0 : floorplan.Name) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.length) {\r\n            return floorplan.Name.value;\r\n        }\r\n        if ((_d = (_c = floorplan === null || floorplan === void 0 ? void 0 : floorplan.LongName) === null || _c === void 0 ? void 0 : _c.value) === null || _d === void 0 ? void 0 : _d.length) {\r\n            return floorplan.LongName.value;\r\n        }\r\n        return floorplan.GlobalId.value;\r\n    }\r\n}\r\n//# sourceMappingURL=plan-manager.js.map","import { GridHelper } from 'three';\r\nimport { IfcComponent } from '../../base-types';\r\nimport { disposeMeshRecursively } from '../../utils/ThreeUtils';\r\nexport class IfcGrid extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.context = context;\r\n    }\r\n    dispose() {\r\n        if (this.grid) {\r\n            disposeMeshRecursively(this.grid);\r\n        }\r\n        this.grid = null;\r\n    }\r\n    setGrid(size, divisions, colorCenterLine, colorGrid) {\r\n        if (this.grid) {\r\n            if (this.grid.parent)\r\n                this.grid.removeFromParent();\r\n            this.grid.geometry.dispose();\r\n        }\r\n        this.grid = new GridHelper(size, divisions, colorCenterLine, colorGrid);\r\n        this.grid.renderOrder = 0;\r\n        const scene = this.context.getScene();\r\n        scene.add(this.grid);\r\n        this.context.renderer.postProduction.excludedItems.add(this.grid);\r\n    }\r\n}\r\n//# sourceMappingURL=grid.js.map","import { AxesHelper } from 'three';\r\nimport { IfcComponent } from '../../base-types';\r\nimport { disposeMeshRecursively } from '../../utils/ThreeUtils';\r\nexport class IfcAxes extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.context = context;\r\n    }\r\n    dispose() {\r\n        if (this.axes) {\r\n            disposeMeshRecursively(this.axes);\r\n        }\r\n        this.axes = null;\r\n    }\r\n    setAxes(size) {\r\n        if (this.axes) {\r\n            if (this.axes.parent)\r\n                this.axes.removeFromParent();\r\n            this.axes.geometry.dispose();\r\n        }\r\n        this.axes = new AxesHelper(size);\r\n        this.axes.material.depthTest = false;\r\n        this.axes.renderOrder = 2;\r\n        const scene = this.context.getScene();\r\n        scene.add(this.axes);\r\n        this.context.renderer.postProduction.excludedItems.add(this.axes);\r\n    }\r\n}\r\n//# sourceMappingURL=axes.js.map","import { BoxGeometry, BufferGeometry, Group, Line, Mesh, Vector3 } from 'three';\r\nimport { CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\r\nimport { disposeMeshRecursively } from '../../../utils/ThreeUtils';\r\nimport { CameraProjections } from '../../../base-types';\r\nexport class IfcDimensionLine {\r\n    constructor(context, start, end, lineMaterial, endpointMaterial, endpointGeometry, className, endpointScale) {\r\n        // Elements\r\n        this.root = new Group();\r\n        this.endpointMeshes = [];\r\n        this.scale = new Vector3(1, 1, 1);\r\n        this.boundingSize = 0.05;\r\n        this.context = context;\r\n        this.labelClassName = className;\r\n        this.start = start;\r\n        this.end = end;\r\n        this.scale = endpointScale;\r\n        this.lineMaterial = lineMaterial;\r\n        this.endpointMaterial = endpointMaterial;\r\n        this.length = this.getLength();\r\n        this.center = this.getCenter();\r\n        this.axis = new BufferGeometry().setFromPoints([start, end]);\r\n        this.line = new Line(this.axis, this.lineMaterial);\r\n        this.root.add(this.line);\r\n        this.endpoint = endpointGeometry;\r\n        this.addEndpointMeshes();\r\n        this.textLabel = this.newText();\r\n        this.root.renderOrder = 2;\r\n        this.context.getScene().add(this.root);\r\n        this.context.ifcCamera.onChange.on(() => this.rescaleObjectsToCameraPosition());\r\n        this.rescaleObjectsToCameraPosition();\r\n    }\r\n    dispose() {\r\n        this.removeFromScene();\r\n        this.context = null;\r\n        disposeMeshRecursively(this.root);\r\n        this.root = null;\r\n        disposeMeshRecursively(this.line);\r\n        this.line = null;\r\n        this.endpointMeshes.forEach((mesh) => disposeMeshRecursively(mesh));\r\n        this.endpointMeshes.length = 0;\r\n        this.axis.dispose();\r\n        this.axis = null;\r\n        this.endpoint.dispose();\r\n        this.endpoint = null;\r\n        this.textLabel.removeFromParent();\r\n        this.textLabel.element.remove();\r\n        this.textLabel = null;\r\n        this.lineMaterial.dispose();\r\n        this.lineMaterial = null;\r\n        this.endpointMaterial.dispose();\r\n        this.endpointMaterial = null;\r\n        if (this.boundingMesh) {\r\n            disposeMeshRecursively(this.boundingMesh);\r\n            this.boundingMesh = null;\r\n        }\r\n    }\r\n    get boundingBox() {\r\n        return this.boundingMesh;\r\n    }\r\n    get text() {\r\n        return this.textLabel;\r\n    }\r\n    set dimensionColor(dimensionColor) {\r\n        this.endpointMaterial.color = dimensionColor;\r\n        this.lineMaterial.color = dimensionColor;\r\n    }\r\n    set visibility(visible) {\r\n        this.root.visible = visible;\r\n        this.textLabel.visible = visible;\r\n    }\r\n    set endpointGeometry(geometry) {\r\n        this.endpointMeshes.forEach((mesh) => this.root.remove(mesh));\r\n        this.endpointMeshes = [];\r\n        this.endpoint = geometry;\r\n        this.addEndpointMeshes();\r\n    }\r\n    set endpointScale(scale) {\r\n        this.scale = scale;\r\n        this.endpointMeshes.forEach((mesh) => mesh.scale.set(scale.x, scale.y, scale.z));\r\n    }\r\n    set endPoint(point) {\r\n        this.end = point;\r\n        if (!this.axis)\r\n            return;\r\n        const position = this.axis.attributes.position;\r\n        if (!position)\r\n            return;\r\n        position.setXYZ(1, point.x, point.y, point.z);\r\n        position.needsUpdate = true;\r\n        this.endpointMeshes[1].position.set(point.x, point.y, point.z);\r\n        this.endpointMeshes[1].lookAt(this.start);\r\n        this.endpointMeshes[0].lookAt(this.end);\r\n        this.length = this.getLength();\r\n        this.textLabel.element.textContent = this.getTextContent();\r\n        this.center = this.getCenter();\r\n        this.textLabel.position.set(this.center.x, this.center.y, this.center.z);\r\n        this.line.computeLineDistances();\r\n    }\r\n    removeFromScene() {\r\n        this.context.getScene().remove(this.root);\r\n        this.root.remove(this.textLabel);\r\n    }\r\n    createBoundingBox() {\r\n        this.boundingMesh = this.newBoundingBox();\r\n        this.setupBoundingBox(this.end);\r\n    }\r\n    rescaleObjectsToCameraPosition() {\r\n        this.endpointMeshes.forEach((mesh) => this.rescaleMesh(mesh, IfcDimensionLine.scaleFactor));\r\n        if (this.boundingMesh) {\r\n            this.rescaleMesh(this.boundingMesh, this.boundingSize, true, true, false);\r\n        }\r\n    }\r\n    rescaleMesh(mesh, scalefactor = 1, x = true, y = true, z = true) {\r\n        const camera = this.context.ifcCamera.activeCamera;\r\n        let scale = new Vector3().subVectors(mesh.position, camera.position).length();\r\n        if (this.context.ifcCamera.projection === CameraProjections.Orthographic) {\r\n            scale *= 0.1;\r\n        }\r\n        scale *= scalefactor;\r\n        const scaleX = x ? scale : 1;\r\n        const scaleY = y ? scale : 1;\r\n        const scaleZ = z ? scale : 1;\r\n        mesh.scale.set(scaleX, scaleY, scaleZ);\r\n    }\r\n    addEndpointMeshes() {\r\n        this.newEndpointMesh(this.start, this.end);\r\n        this.newEndpointMesh(this.end, this.start);\r\n    }\r\n    newEndpointMesh(position, direction) {\r\n        const mesh = new Mesh(this.endpoint, this.endpointMaterial);\r\n        mesh.position.set(position.x, position.y, position.z);\r\n        mesh.scale.set(this.scale.x, this.scale.y, this.scale.z);\r\n        mesh.lookAt(direction);\r\n        this.endpointMeshes.push(mesh);\r\n        this.root.add(mesh);\r\n    }\r\n    newText() {\r\n        const htmlText = document.createElement('div');\r\n        htmlText.className = this.labelClassName;\r\n        htmlText.textContent = this.getTextContent();\r\n        const label = new CSS2DObject(htmlText);\r\n        label.position.set(this.center.x, this.center.y, this.center.z);\r\n        this.root.add(label);\r\n        return label;\r\n    }\r\n    getTextContent() {\r\n        return `${this.length / IfcDimensionLine.scale} ${IfcDimensionLine.units}`;\r\n    }\r\n    newBoundingBox() {\r\n        const box = new BoxGeometry(1, 1, this.length);\r\n        return new Mesh(box);\r\n    }\r\n    setupBoundingBox(end) {\r\n        if (!this.boundingMesh)\r\n            return;\r\n        this.boundingMesh.position.set(this.center.x, this.center.y, this.center.z);\r\n        this.boundingMesh.lookAt(end);\r\n        this.boundingMesh.visible = false;\r\n        this.root.add(this.boundingMesh);\r\n    }\r\n    getLength() {\r\n        return parseFloat(this.start.distanceTo(this.end).toFixed(2));\r\n    }\r\n    getCenter() {\r\n        let dir = this.end.clone().sub(this.start);\r\n        const len = dir.length() * 0.5;\r\n        dir = dir.normalize().multiplyScalar(len);\r\n        return this.start.clone().add(dir);\r\n    }\r\n}\r\nIfcDimensionLine.scaleFactor = 0.1;\r\nIfcDimensionLine.scale = 1;\r\nIfcDimensionLine.units = 'm';\r\n//# sourceMappingURL=dimension-line.js.map","import { ConeGeometry, LineDashedMaterial, MeshBasicMaterial, Vector3 } from 'three';\r\nimport { CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\r\nimport { IfcComponent } from '../../../base-types';\r\nimport { IfcDimensionLine } from './dimension-line';\r\nexport class IfcDimensions extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.dimensions = [];\r\n        this.labelClassName = 'ifcjs-dimension-label';\r\n        this.previewClassName = 'ifcjs-dimension-preview';\r\n        // State\r\n        this.enabled = false;\r\n        this.preview = false;\r\n        this.dragging = false;\r\n        this.snapDistance = 0.25;\r\n        // Measures\r\n        this.baseScale = new Vector3(1, 1, 1);\r\n        // Materials\r\n        this.lineMaterial = new LineDashedMaterial({\r\n            color: 0x000000,\r\n            linewidth: 2,\r\n            depthTest: false,\r\n            dashSize: 0.2,\r\n            gapSize: 0.2\r\n        });\r\n        this.endpointsMaterial = new MeshBasicMaterial({ color: 0x000000, depthTest: false });\r\n        // Temp variables\r\n        this.startPoint = new Vector3();\r\n        this.endPoint = new Vector3();\r\n        this.context = context;\r\n        this.endpoint = IfcDimensions.getDefaultEndpointGeometry();\r\n        const htmlPreview = document.createElement('div');\r\n        htmlPreview.className = this.previewClassName;\r\n        this.previewElement = new CSS2DObject(htmlPreview);\r\n        this.previewElement.visible = false;\r\n    }\r\n    dispose() {\r\n        this.context = null;\r\n        this.dimensions.forEach((dim) => dim.dispose());\r\n        this.dimensions = null;\r\n        this.currentDimension = null;\r\n        this.endpoint.dispose();\r\n        this.endpoint = null;\r\n        this.previewElement.removeFromParent();\r\n        this.previewElement.element.remove();\r\n        this.previewElement = null;\r\n    }\r\n    update(_delta) {\r\n        if (this.enabled && this.preview) {\r\n            const intersects = this.context.castRayIfc();\r\n            this.previewElement.visible = !!intersects;\r\n            if (!intersects)\r\n                return;\r\n            this.previewElement.visible = true;\r\n            const closest = this.getClosestVertex(intersects);\r\n            this.previewElement.visible = !!closest;\r\n            if (!closest)\r\n                return;\r\n            this.previewElement.position.set(closest.x, closest.y, closest.z);\r\n            if (this.dragging) {\r\n                this.drawInProcess();\r\n            }\r\n        }\r\n    }\r\n    // TODO: This causes a memory leak, and it's a bit confusing\r\n    setArrow(height, radius) {\r\n        this.endpoint = IfcDimensions.getDefaultEndpointGeometry(height, radius);\r\n    }\r\n    setPreviewElement(element) {\r\n        this.previewElement = new CSS2DObject(element);\r\n    }\r\n    get active() {\r\n        return this.enabled;\r\n    }\r\n    get previewActive() {\r\n        return this.preview;\r\n    }\r\n    get previewObject() {\r\n        return this.previewElement;\r\n    }\r\n    set previewActive(state) {\r\n        this.preview = state;\r\n        const scene = this.context.getScene();\r\n        if (this.preview) {\r\n            scene.add(this.previewElement);\r\n        }\r\n        else {\r\n            scene.remove(this.previewElement);\r\n        }\r\n    }\r\n    set active(state) {\r\n        this.enabled = state;\r\n        this.dimensions.forEach((dim) => {\r\n            dim.visibility = state;\r\n        });\r\n    }\r\n    set dimensionsColor(color) {\r\n        this.endpointsMaterial.color = color;\r\n        this.lineMaterial.color = color;\r\n    }\r\n    set dimensionsWidth(width) {\r\n        this.lineMaterial.linewidth = width;\r\n    }\r\n    set endpointGeometry(geometry) {\r\n        this.dimensions.forEach((dim) => {\r\n            dim.endpointGeometry = geometry;\r\n        });\r\n    }\r\n    set endpointScaleFactor(factor) {\r\n        IfcDimensionLine.scaleFactor = factor;\r\n    }\r\n    set endpointScale(scale) {\r\n        this.baseScale = scale;\r\n        this.dimensions.forEach((dim) => {\r\n            dim.endpointScale = scale;\r\n        });\r\n    }\r\n    create() {\r\n        if (!this.enabled)\r\n            return;\r\n        if (!this.dragging) {\r\n            this.drawStart();\r\n            return;\r\n        }\r\n        this.drawEnd();\r\n    }\r\n    createInPlane(plane) {\r\n        if (!this.enabled)\r\n            return;\r\n        if (!this.dragging) {\r\n            this.drawStartInPlane(plane);\r\n            return;\r\n        }\r\n        this.drawEnd();\r\n    }\r\n    delete() {\r\n        if (!this.enabled || this.dimensions.length === 0)\r\n            return;\r\n        const boundingBoxes = this.getBoundingBoxes();\r\n        const intersects = this.context.castRay(boundingBoxes);\r\n        if (intersects.length === 0)\r\n            return;\r\n        const selected = this.dimensions.find((dim) => dim.boundingBox === intersects[0].object);\r\n        if (!selected)\r\n            return;\r\n        const index = this.dimensions.indexOf(selected);\r\n        this.dimensions.splice(index, 1);\r\n        selected.removeFromScene();\r\n    }\r\n    deleteAll() {\r\n        this.dimensions.forEach((dim) => {\r\n            dim.removeFromScene();\r\n        });\r\n        this.dimensions = [];\r\n    }\r\n    cancelDrawing() {\r\n        var _a;\r\n        if (!this.currentDimension)\r\n            return;\r\n        this.dragging = false;\r\n        (_a = this.currentDimension) === null || _a === void 0 ? void 0 : _a.removeFromScene();\r\n        this.currentDimension = undefined;\r\n    }\r\n    drawStart() {\r\n        this.dragging = true;\r\n        const intersects = this.context.castRayIfc();\r\n        if (!intersects)\r\n            return;\r\n        const found = this.getClosestVertex(intersects);\r\n        if (!found)\r\n            return;\r\n        this.startPoint = found;\r\n    }\r\n    drawStartInPlane(plane) {\r\n        this.dragging = true;\r\n        const intersects = this.context.castRay([plane]);\r\n        if (!intersects || intersects.length < 1)\r\n            return;\r\n        this.startPoint = intersects[0].point;\r\n    }\r\n    drawInProcess() {\r\n        const intersects = this.context.castRayIfc();\r\n        if (!intersects)\r\n            return;\r\n        const found = this.getClosestVertex(intersects);\r\n        if (!found)\r\n            return;\r\n        this.endPoint = found;\r\n        if (!this.currentDimension)\r\n            this.currentDimension = this.drawDimension();\r\n        this.currentDimension.endPoint = this.endPoint;\r\n    }\r\n    drawEnd() {\r\n        if (!this.currentDimension)\r\n            return;\r\n        this.currentDimension.createBoundingBox();\r\n        this.dimensions.push(this.currentDimension);\r\n        this.currentDimension = undefined;\r\n        this.dragging = false;\r\n    }\r\n    get getDimensionsLines() {\r\n        return this.dimensions;\r\n    }\r\n    drawDimension() {\r\n        return new IfcDimensionLine(this.context, this.startPoint, this.endPoint, this.lineMaterial, this.endpointsMaterial, this.endpoint, this.labelClassName, this.baseScale);\r\n    }\r\n    getBoundingBoxes() {\r\n        return this.dimensions\r\n            .map((dim) => dim.boundingBox)\r\n            .filter((box) => box !== undefined);\r\n    }\r\n    static getDefaultEndpointGeometry(height = 0.1, radius = 0.03) {\r\n        const coneGeometry = new ConeGeometry(radius, height);\r\n        coneGeometry.translate(0, -height / 2, 0);\r\n        coneGeometry.rotateX(-Math.PI / 2);\r\n        return coneGeometry;\r\n    }\r\n    getClosestVertex(intersects) {\r\n        let closestVertex = new Vector3();\r\n        let vertexFound = false;\r\n        let closestDistance = Number.MAX_SAFE_INTEGER;\r\n        const vertices = this.getVertices(intersects);\r\n        vertices === null || vertices === void 0 ? void 0 : vertices.forEach((vertex) => {\r\n            if (!vertex)\r\n                return;\r\n            const distance = intersects.point.distanceTo(vertex);\r\n            if (distance > closestDistance || distance > this.snapDistance)\r\n                return;\r\n            vertexFound = true;\r\n            closestVertex = vertex;\r\n            closestDistance = intersects.point.distanceTo(vertex);\r\n        });\r\n        return vertexFound ? closestVertex : intersects.point;\r\n    }\r\n    getVertices(intersects) {\r\n        const mesh = intersects.object;\r\n        if (!intersects.face || !mesh)\r\n            return null;\r\n        const geom = mesh.geometry;\r\n        return [\r\n            this.getVertex(intersects.face.a, geom),\r\n            this.getVertex(intersects.face.b, geom),\r\n            this.getVertex(intersects.face.c, geom)\r\n        ];\r\n    }\r\n    getVertex(index, geom) {\r\n        if (index === undefined)\r\n            return null;\r\n        const vertices = geom.attributes.position;\r\n        return new Vector3(vertices.getX(index), vertices.getY(index), vertices.getZ(index));\r\n    }\r\n}\r\n//# sourceMappingURL=dimensions.js.map","import { LineSegments, EdgesGeometry } from 'three';\r\nimport { disposeMeshRecursively } from '../../utils/ThreeUtils';\r\nexport class Edges {\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.threshold = 30;\r\n        this.edges = {};\r\n    }\r\n    static setupModelMaterial(material) {\r\n        material.polygonOffset = true;\r\n        material.polygonOffsetFactor = 1;\r\n        material.polygonOffsetUnits = 1;\r\n    }\r\n    dispose() {\r\n        const allEdges = Object.values(this.edges);\r\n        allEdges.forEach((item) => {\r\n            disposeMeshRecursively(item.edges);\r\n            if (Array.isArray(item.originalMaterials)) {\r\n                item.originalMaterials.forEach((mat) => mat.dispose());\r\n            }\r\n            else\r\n                item.originalMaterials.dispose();\r\n            if (item.baseMaterial)\r\n                item.baseMaterial.dispose();\r\n        });\r\n        this.edges = null;\r\n    }\r\n    getAll() {\r\n        return Object.keys(this.edges);\r\n    }\r\n    get(name) {\r\n        return this.edges[name];\r\n    }\r\n    create(name, modelID, lineMaterial, material) {\r\n        const model = this.context.items.ifcModels.find((model) => model.modelID === modelID);\r\n        if (!model)\r\n            return;\r\n        this.createFromMesh(name, model, lineMaterial, material);\r\n    }\r\n    // use this to create edges of a subset this implements a todo of allowing subsets of edges\r\n    createFromSubset(name, subset, lineMaterial, material) {\r\n        this.createFromMesh(name, subset, lineMaterial, material);\r\n    }\r\n    createFromMesh(name, mesh, lineMaterial, material) {\r\n        const planes = this.context.getClippingPlanes();\r\n        lineMaterial.clippingPlanes = planes;\r\n        if (material)\r\n            material.clippingPlanes = planes;\r\n        this.setupModelMaterials(mesh);\r\n        const geo = new EdgesGeometry(mesh.geometry, this.threshold);\r\n        lineMaterial.clippingPlanes = this.context.getClippingPlanes();\r\n        this.edges[name] = {\r\n            edges: new LineSegments(geo, lineMaterial),\r\n            originalMaterials: mesh.material,\r\n            baseMaterial: material,\r\n            model: mesh,\r\n            active: false\r\n        };\r\n    }\r\n    toggle(name, active) {\r\n        const selected = this.edges[name];\r\n        if (!selected)\r\n            return;\r\n        if (active === undefined)\r\n            active = !selected.active;\r\n        selected.active = active;\r\n        if (active) {\r\n            const pos = selected.model.position;\r\n            const rot = selected.model.rotation;\r\n            selected.edges.position.set(pos.x, pos.y, pos.z);\r\n            selected.edges.rotation.set(rot.x, rot.y, rot.z);\r\n            if (selected.baseMaterial)\r\n                selected.model.material = selected.baseMaterial;\r\n            this.context.getScene().add(selected.edges);\r\n            return;\r\n        }\r\n        if (selected.baseMaterial)\r\n            selected.model.material = selected.originalMaterials;\r\n        selected.edges.removeFromParent();\r\n    }\r\n    setupModelMaterials(model) {\r\n        if (Array.isArray(model.material)) {\r\n            model.material.forEach((mat) => Edges.setupModelMaterial(mat));\r\n            return;\r\n        }\r\n        Edges.setupModelMaterial(model.material);\r\n    }\r\n}\r\n//# sourceMappingURL=edges.js.map","import { BufferGeometry, Material, Mesh, Object3D, Scene } from 'three';\r\nimport { IFCManager } from './IFCManager';\r\nimport { BaseSubsetConfig } from '../BaseDefinitions';\r\n\r\nconst nullIfcManagerErrorMessage = 'IfcManager is null!';\r\n\r\n/**\r\n * Represents an IFC model. This object is returned by the `IFCLoader` after loading an IFC.\r\n * @geometry `THREE.Buffergeometry`, see Three.js documentation.\r\n * @materials `THREE.Material[]`, see Three.js documentation.\r\n * @manager contains all the logic to work with IFC.\r\n */\r\nexport class IFCModel extends Mesh {\r\n\r\n    private static modelIdCounter = 0;\r\n\r\n    static dispose() {\r\n        IFCModel.modelIdCounter = 0;\r\n    }\r\n\r\n    modelID = IFCModel.modelIdCounter++;\r\n    ifcManager: IFCManager | null = null;\r\n\r\n    /**\r\n     * @deprecated `IfcModel` is already a mesh; you can place it in the scene directly.\r\n     */\r\n    mesh = this;\r\n\r\n    setIFCManager(manager: IFCManager) {\r\n        this.ifcManager = manager;\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.setWasmPath` instead.\r\n     *\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    setWasmPath(path: string) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.setWasmPath(path);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.close` instead.\r\n     *\r\n     * Closes the specified model and deletes it from the [scene](https://threejs.org/docs/#api/en/scenes/Scene).\r\n     * @scene Scene where the model is (if it's located in a scene).\r\n     */\r\n    close(scene?: Scene) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.close(this.modelID, scene);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getExpressId` instead.\r\n     *\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry of the IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getAllItemsOfType` instead.\r\n     *\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @type The type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(type: number, verbose: boolean) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getAllItemsOfType(this.modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getItemProperties` instead.\r\n     *\r\n     * Gets the native properties of the given element.\r\n     * @id Express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(id: number, recursive = false) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getItemProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getPropertySets` instead.\r\n     *\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(id: number, recursive = false) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getPropertySets(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getTypeProperties` instead.\r\n     *\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(id: number, recursive = false) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getTypeProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getIfcType` instead.\r\n     *\r\n     * Gets the ifc type of the specified item.\r\n     * @id Express ID of the element.\r\n     */\r\n    getIfcType(id: number) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getIfcType(this.modelID, id);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getSpatialStructure` instead.\r\n     *\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     */\r\n    getSpatialStructure() {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getSpatialStructure(this.modelID);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.getSubset` instead.\r\n     *\r\n     * Gets the mesh of the subset with the specified [material](https://threejs.org/docs/#api/en/materials/Material).\r\n     * If no material is given, this returns the subset with the original materials.\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    getSubset(material?: Material) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        return this.ifcManager.getSubset(this.modelID, material);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.removeSubset` instead.\r\n     *\r\n     * Removes the specified subset.\r\n     * @parent The parent where the subset is (can be any `THREE.Object3D`).\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    removeSubset(material?: Material, customID?: string) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        this.ifcManager.removeSubset(this.modelID, material, customID);\r\n    }\r\n\r\n    /**\r\n     * @deprecated Use `IfcModel.ifcManager.createSubset` instead.\r\n     *\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: `THREE.Object3D` where the model is located.\r\n     * - **ids**: Express IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: Wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) Wether to apply a material to the subset\r\n     */\r\n    createSubset(config: BaseSubsetConfig) {\r\n        if (this.ifcManager === null) throw new Error(nullIfcManagerErrorMessage);\r\n        const modelConfig = { ...config, modelID: this.modelID };\r\n        return this.ifcManager.createSubset(modelConfig);\r\n    }\r\n}\r\n","//@ts-ignore\r\nimport {\r\n    PlacedGeometry,\r\n    Color as ifcColor,\r\n    IfcGeometry,\r\n    IFCSPACE,\r\n    FlatMesh,\r\n    IFCOPENINGELEMENT,\r\n    IFCPRODUCTDEFINITIONSHAPE\r\n} from 'web-ifc';\r\nimport { IfcState, IfcMesh } from '../BaseDefinitions';\r\nimport {\r\n    Color,\r\n    MeshLambertMaterial,\r\n    DoubleSide,\r\n    Matrix4,\r\n    BufferGeometry,\r\n    BufferAttribute,\r\n    Mesh\r\n} from 'three';\r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport { BvhManager } from './BvhManager';\r\nimport { IFCModel } from './IFCModel';\r\n\r\nexport interface ParserProgress {\r\n    loaded: number;\r\n    total: number;\r\n}\r\n\r\nexport interface OptionalCategories {\r\n    [category: number]: boolean\r\n}\r\n\r\nexport interface ParserAPI {\r\n    parse(buffer: any, coordinationMatrix?: number[]): Promise<IFCModel>;\r\n\r\n    getAndClearErrors(_modelId: number): void;\r\n\r\n    setupOptionalCategories(config: OptionalCategories): Promise<void>;\r\n\r\n    optionalCategories: OptionalCategories;\r\n}\r\n\r\nexport interface GeometriesByMaterial {\r\n    [materialID: string]: {\r\n        material: MeshLambertMaterial,\r\n        geometries: BufferGeometry[]\r\n    }\r\n}\r\n\r\n/**\r\n * Reads all the geometry of the IFC file and generates an optimized `THREE.Mesh`.\r\n */\r\nexport class IFCParser implements ParserAPI {\r\n    loadedModels = 0;\r\n\r\n    optionalCategories: OptionalCategories = {\r\n        [IFCSPACE]: true,\r\n        [IFCOPENINGELEMENT]: false\r\n    };\r\n\r\n    private geometriesByMaterials: GeometriesByMaterial = {};\r\n\r\n    private loadingState = {\r\n        total: 0,\r\n        current: 0,\r\n        step: 0.1\r\n    }\r\n\r\n    // Represents the index of the model in webIfcAPI\r\n    private currentWebIfcID = -1;\r\n    // When using JSON data for optimization, webIfcAPI is reinitialized every time a model is loaded\r\n    // This means that currentID is always 0, while currentModelID is the real index of stored models\r\n    private currentModelID = -1;\r\n\r\n    // BVH is optional because when using workers we have to apply it in the main thread,\r\n    // once the model has been serialized and reconstructed\r\n    constructor(private state: IfcState, private BVH?: BvhManager) {\r\n    }\r\n\r\n    async setupOptionalCategories(config: OptionalCategories) {\r\n        this.optionalCategories = config;\r\n    }\r\n\r\n    async parse(buffer: any, coordinationMatrix?: number[]) {\r\n        if (this.state.api.wasmModule === undefined) await this.state.api.Init();\r\n        await this.newIfcModel(buffer);\r\n        this.loadedModels++;\r\n        if (coordinationMatrix) {\r\n            await this.state.api.SetGeometryTransformation(this.currentWebIfcID, coordinationMatrix);\r\n        }\r\n        return this.loadAllGeometry(this.currentWebIfcID);\r\n    }\r\n\r\n    getAndClearErrors(_modelId: number) {\r\n        // return this.state.api.GetAndClearErrors(modelId);\r\n    }\r\n\r\n    private notifyProgress(loaded: number, total: number) {\r\n        if (this.state.onProgress) this.state.onProgress({ loaded, total });\r\n    }\r\n\r\n    private async newIfcModel(buffer: any) {\r\n        const data = new Uint8Array(buffer);\r\n        this.currentWebIfcID = await this.state.api.OpenModel(data, this.state.webIfcSettings);\r\n        this.currentModelID = this.state.useJSON ? this.loadedModels : this.currentWebIfcID;\r\n        this.state.models[this.currentModelID] = {\r\n            modelID: this.currentModelID,\r\n            mesh: {} as IfcMesh,\r\n            types: {},\r\n            jsonData: {}\r\n        };\r\n    }\r\n\r\n    private async loadAllGeometry(modelID: number) {\r\n        this.addOptionalCategories(modelID);\r\n        await this.initializeLoadingState(modelID);\r\n\r\n        this.state.api.StreamAllMeshes(modelID, (mesh: FlatMesh) => {\r\n            this.updateLoadingState();\r\n            // only during the lifetime of this function call, the geometry is available in memory\r\n            this.streamMesh(modelID, mesh);\r\n        });\r\n\r\n        this.notifyLoadingEnded();\r\n        const geometries: BufferGeometry[] = [];\r\n        const materials: MeshLambertMaterial[] = [];\r\n\r\n        Object.keys(this.geometriesByMaterials).forEach((key) => {\r\n            const geometriesByMaterial = this.geometriesByMaterials[key].geometries;\r\n            const merged = mergeBufferGeometries(geometriesByMaterial);\r\n            materials.push(this.geometriesByMaterials[key].material);\r\n            geometries.push(merged);\r\n        });\r\n\r\n        const combinedGeometry = mergeBufferGeometries(geometries, true);\r\n        this.cleanUpGeometryMemory(geometries);\r\n        if (this.BVH) this.BVH.applyThreeMeshBVH(combinedGeometry);\r\n        const model = new IFCModel(combinedGeometry, materials);\r\n        this.state.models[this.currentModelID].mesh = model;\r\n        return model;\r\n    }\r\n\r\n    private async initializeLoadingState(modelID: number) {\r\n        const shapes = await this.state.api.GetLineIDsWithType(modelID, IFCPRODUCTDEFINITIONSHAPE);\r\n        this.loadingState.total = shapes.size();\r\n        this.loadingState.current = 0;\r\n        this.loadingState.step = 0.1;\r\n    }\r\n\r\n    private notifyLoadingEnded() {\r\n        this.notifyProgress(this.loadingState.total, this.loadingState.total);\r\n    }\r\n\r\n    private updateLoadingState() {\r\n        const realCurrentItem = Math.min(this.loadingState.current++, this.loadingState.total);\r\n        if(realCurrentItem / this.loadingState.total >= this.loadingState.step) {\r\n            const currentProgress = Math.ceil(this.loadingState.total * this.loadingState.step);\r\n            this.notifyProgress(currentProgress, this.loadingState.total);\r\n            this.loadingState.step += 0.1;\r\n        }\r\n    }\r\n\r\n    // Some categories (like IfcSpace and IfcOpeningElement) need to be set explicitly\r\n    private addOptionalCategories(modelID: number) {\r\n\r\n        const optionalTypes: number[] = [];\r\n\r\n        for (let key in this.optionalCategories) {\r\n            if (this.optionalCategories.hasOwnProperty(key)) {\r\n                const category = parseInt(key);\r\n                if (this.optionalCategories[category]) optionalTypes.push(category);\r\n            }\r\n        }\r\n\r\n        this.state.api.StreamAllMeshesWithTypes(this.currentWebIfcID, optionalTypes, (mesh: FlatMesh) => {\r\n            this.streamMesh(modelID, mesh);\r\n        });\r\n    }\r\n\r\n    private streamMesh(modelID: number, mesh: FlatMesh) {\r\n        const placedGeometries = mesh.geometries;\r\n        const size = placedGeometries.size();\r\n\r\n        for (let i = 0; i < size; i++) {\r\n            const placedGeometry = placedGeometries.get(i);\r\n            let itemMesh = this.getPlacedGeometry(modelID, mesh.expressID, placedGeometry);\r\n            let geom = itemMesh.geometry.applyMatrix4(itemMesh.matrix);\r\n            this.storeGeometryByMaterial(placedGeometry.color, geom);\r\n        }\r\n    }\r\n\r\n    private getPlacedGeometry(modelID: number, expressID: number, placedGeometry: PlacedGeometry) {\r\n        const geometry = this.getBufferGeometry(modelID, expressID, placedGeometry);\r\n        const mesh = new Mesh(geometry);\r\n        mesh.matrix = this.getMeshMatrix(placedGeometry.flatTransformation);\r\n        mesh.matrixAutoUpdate = false;\r\n        return mesh;\r\n    }\r\n\r\n    private getBufferGeometry(modelID: number, expressID: number, placedGeometry: PlacedGeometry) {\r\n        const geometry = this.state.api.GetGeometry(modelID, placedGeometry.geometryExpressID) as IfcGeometry;\r\n        const verts = this.state.api.GetVertexArray(geometry.GetVertexData(), geometry.GetVertexDataSize()) as Float32Array;\r\n        const indices = this.state.api.GetIndexArray(geometry.GetIndexData(), geometry.GetIndexDataSize()) as Uint32Array;\r\n        const buffer = this.ifcGeometryToBuffer(expressID, verts, indices);\r\n        //@ts-ignore\r\n        geometry.delete();\r\n        return buffer;\r\n    }\r\n\r\n    private storeGeometryByMaterial(color: ifcColor, geometry: BufferGeometry) {\r\n        let colID = `${color.x}${color.y}${color.z}${color.w}`;\r\n        if (this.geometriesByMaterials[colID]) {\r\n            this.geometriesByMaterials[colID].geometries.push(geometry);\r\n            return;\r\n        }\r\n\r\n        const col = new Color(color.x, color.y, color.z);\r\n        const material = new MeshLambertMaterial({ color: col, side: DoubleSide });\r\n        material.transparent = color.w !== 1;\r\n        if (material.transparent) material.opacity = color.w;\r\n        this.geometriesByMaterials[colID] = { material, geometries: [geometry] };\r\n    }\r\n\r\n    private getMeshMatrix(matrix: Array<number>) {\r\n        const mat = new Matrix4();\r\n        mat.fromArray(matrix);\r\n        return mat;\r\n    }\r\n\r\n    private ifcGeometryToBuffer(expressID: number, vertexData: Float32Array, indexData: Uint32Array) {\r\n        const geometry = new BufferGeometry();\r\n\r\n        const posFloats = new Float32Array(vertexData.length / 2);\r\n        const normFloats = new Float32Array(vertexData.length / 2);\r\n        const idAttribute = new Uint32Array(vertexData.length / 6);\r\n\r\n        for (let i = 0; i < vertexData.length; i += 6) {\r\n            posFloats[i / 2] = vertexData[i];\r\n            posFloats[i / 2 + 1] = vertexData[i + 1];\r\n            posFloats[i / 2 + 2] = vertexData[i + 2];\r\n\r\n            normFloats[i / 2] = vertexData[i + 3];\r\n            normFloats[i / 2 + 1] = vertexData[i + 4];\r\n            normFloats[i / 2 + 2] = vertexData[i + 5];\r\n\r\n            idAttribute[i / 6] = expressID;\r\n        }\r\n\r\n        geometry.setAttribute(\r\n            'position',\r\n            new BufferAttribute(posFloats, 3));\r\n        geometry.setAttribute(\r\n            'normal',\r\n            new BufferAttribute(normFloats, 3));\r\n        geometry.setAttribute(\r\n            'expressID',\r\n            new BufferAttribute(idAttribute, 1));\r\n\r\n        geometry.setIndex(new BufferAttribute(indexData, 1));\r\n        return geometry;\r\n    }\r\n\r\n    // Three.js geometry has to be manually deallocated\r\n    private cleanUpGeometryMemory(geometries: BufferGeometry[]) {\r\n        geometries.forEach(geometry => geometry.dispose());\r\n\r\n        Object.keys(this.geometriesByMaterials).forEach((materialID) => {\r\n            const geometriesByMaterial = this.geometriesByMaterials[materialID];\r\n            geometriesByMaterial.geometries.forEach(geometry => geometry.dispose());\r\n            geometriesByMaterial.geometries = [];\r\n            // @ts-ignore\r\n            geometriesByMaterial.material = null;\r\n        });\r\n        this.geometriesByMaterials = {};\r\n    }\r\n}\r\n","import { BufferAttribute, BufferGeometry } from 'three';\r\nimport { IFCModel } from '../../components/IFCModel';\r\n\r\nexport class SerializedGeometry {\r\n    position: ArrayLike<number>;\r\n    normal: ArrayLike<number>;\r\n    expressID: ArrayLike<number>;\r\n    index: ArrayLike<number>;\r\n    groups: { start: number, count: number, materialIndex?: number }[];\r\n\r\n    constructor(geometry: BufferGeometry) {\r\n        this.position = geometry.attributes.position?.array || [];\r\n        this.normal = geometry.attributes.normal?.array || [];\r\n        this.expressID = geometry.attributes.expressID?.array || [];\r\n        this.index = geometry.index?.array || [];\r\n        this.groups = geometry.groups;\r\n    }\r\n}\r\n\r\nexport class GeometryReconstructor {\r\n    static new(serialized: SerializedGeometry) {\r\n        const geom = new BufferGeometry();\r\n        GeometryReconstructor.set(geom, 'expressID', new Uint32Array(serialized.expressID), 1);\r\n        GeometryReconstructor.set(geom, 'position', new Float32Array(serialized.position), 3);\r\n        GeometryReconstructor.set(geom, 'normal', new Float32Array(serialized.normal), 3);\r\n        geom.setIndex(Array.from(serialized.index));\r\n        geom.groups = serialized.groups;\r\n        return geom;\r\n    }\r\n\r\n    private static set(geom: BufferGeometry, name: string, data: ArrayLike<number>, size: number) {\r\n        if(data.length > 0) {\r\n            geom.setAttribute(name, new BufferAttribute(data, size));\r\n        }\r\n    }\r\n}","import { Vector as WebIfcVector, IfcGeometry as WebIfcIfcGeometry, FlatMesh as WebIfcFlatMesh } from 'web-ifc';\r\nimport { SerializedFlatMesh, SerializedIfcGeometry, SerializedVector } from '../BaseDefinitions';\r\nimport { Vector } from './Vector';\r\nimport { IfcGeometry } from './IfcGeometry';\r\nimport { FlatMesh } from './FlatMesh';\r\nimport { FlatMeshVector } from './FlatMeshVector';\r\nimport { IFCModel } from '../../components/IFCModel';\r\nimport { MeshReconstructor, SerializedMesh } from './Mesh';\r\n\r\nexport class Serializer {\r\n\r\n    serializeVector<T>(vector: WebIfcVector<T>) {\r\n        const size = vector.size();\r\n        const serialized: SerializedVector = { size };\r\n        for (let i = 0; i < size; i++) {\r\n            serialized[i] = vector.get(i);\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    reconstructVector(vector: SerializedVector): Vector<any> {\r\n        return new Vector(vector);\r\n    }\r\n\r\n    serializeIfcGeometry(geometry: WebIfcIfcGeometry) {\r\n        const GetVertexData = geometry.GetVertexData();\r\n        const GetVertexDataSize = geometry.GetVertexDataSize();\r\n        const GetIndexData = geometry.GetIndexData();\r\n        const GetIndexDataSize = geometry.GetIndexDataSize();\r\n        return {\r\n            GetVertexData,\r\n            GetVertexDataSize,\r\n            GetIndexData,\r\n            GetIndexDataSize\r\n        } as SerializedIfcGeometry;\r\n    }\r\n\r\n    reconstructIfcGeometry(geometry: SerializedIfcGeometry) {\r\n        return new IfcGeometry(geometry);\r\n    }\r\n\r\n    serializeFlatMesh(flatMesh: WebIfcFlatMesh) {\r\n        return {\r\n            expressID: flatMesh.expressID,\r\n            geometries: this.serializeVector(flatMesh.geometries)\r\n        } as SerializedFlatMesh;\r\n    }\r\n\r\n    reconstructFlatMesh(flatMesh: SerializedFlatMesh) {\r\n        return new FlatMesh(this, flatMesh);\r\n    }\r\n\r\n    serializeFlatMeshVector(vector: WebIfcVector<WebIfcFlatMesh>) {\r\n        const size = vector.size();\r\n        const serialized: SerializedVector = { size };\r\n        for (let i = 0; i < size; i++) {\r\n            const flatMesh = vector.get(i);\r\n            serialized[i] = this.serializeFlatMesh(flatMesh);\r\n        }\r\n        return serialized;\r\n    }\r\n\r\n    reconstructFlatMeshVector(vector: SerializedVector): WebIfcVector<WebIfcFlatMesh> {\r\n        return new FlatMeshVector(this, vector);\r\n    }\r\n\r\n    serializeIfcModel(model: IFCModel) {\r\n        return new SerializedMesh(model);\r\n    }\r\n\r\n    reconstructIfcModel(model: SerializedMesh) {\r\n        return MeshReconstructor.new(model);\r\n    }\r\n}","import { IfcState } from '../../BaseDefinitions';\r\nimport { BufferAttribute, BufferGeometry, Material } from 'three';\r\n\r\n// The number array has the meaning: [start, end, start, end, start, end...]\r\nexport interface Indices {\r\n    [materialID: number]: number[]\r\n}\r\n\r\nexport interface IndexedGeometry extends BufferGeometry {\r\n    index: BufferAttribute;\r\n}\r\n\r\nexport interface Group {\r\n    start: number,\r\n    count: number,\r\n    materialIndex?: number\r\n}\r\n\r\nexport interface Items {\r\n    indexCache: Uint32Array,\r\n    map: Map<number, Indices>\r\n}\r\n\r\nexport interface IndicesMap {\r\n    [modelID: number]: {\r\n        indexCache: Uint32Array;\r\n        map: Map<number, Indices>;\r\n    }\r\n}\r\n\r\nexport class ItemsMap {\r\n\r\n    constructor(private state: IfcState) {\r\n    }\r\n\r\n    map: IndicesMap = {};\r\n\r\n    generateGeometryIndexMap(modelID: number) {\r\n        if (this.map[modelID]) return;\r\n        const geometry = this.getGeometry(modelID);\r\n        const items = this.newItemsMap(modelID, geometry);\r\n        for (const group of geometry.groups) {\r\n            this.fillItemsWithGroupInfo(group, geometry, items);\r\n        }\r\n    }\r\n\r\n    getSubsetID(modelID: number, material?: Material, customID = 'DEFAULT') {\r\n        const baseID = modelID;\r\n        const materialID = material ? material.uuid : 'DEFAULT';\r\n        return `${baseID} - ${materialID} - ${customID}`;\r\n    }\r\n\r\n    // Use this only for destroying the current IFCLoader instance\r\n    dispose() {\r\n        Object.values(this.map).forEach(model => {\r\n            (model.indexCache as any) = null;\r\n            (model.map as any) = null;\r\n        });\r\n\r\n        (this.map as any) = null;\r\n    }\r\n\r\n    private getGeometry(modelID: number) {\r\n        const geometry = this.state.models[modelID].mesh.geometry;\r\n        if (!geometry) throw new Error('Model without geometry.');\r\n        if (!geometry.index) throw new Error('Geometry must be indexed');\r\n        return geometry as IndexedGeometry;\r\n    }\r\n\r\n    private newItemsMap(modelID: number, geometry: IndexedGeometry) {\r\n        const startIndices = geometry.index.array as Uint32Array;\r\n        this.map[modelID] = {\r\n            indexCache: startIndices.slice(0, geometry.index.array.length),\r\n            map: new Map()\r\n        };\r\n        return this.map[modelID] as Items;\r\n    }\r\n\r\n    private fillItemsWithGroupInfo(group: Group, geometry: IndexedGeometry, items: Items) {\r\n        let prevExpressID = -1;\r\n\r\n        const materialIndex = group.materialIndex as number;\r\n        const materialStart = group.start;\r\n        const materialEnd = materialStart + group.count - 1;\r\n\r\n        let objectStart = -1;\r\n        let objectEnd = -1;\r\n\r\n        for (let i = materialStart; i <= materialEnd; i++) {\r\n            const index = geometry.index.array[i];\r\n            const expressID = geometry.attributes.expressID.array[index];\r\n\r\n            // First iteration\r\n            if (prevExpressID === -1) {\r\n                prevExpressID = expressID;\r\n                objectStart = i;\r\n            }\r\n\r\n            // It's the end of the material, which also means end of the object\r\n            const isEndOfMaterial = i === materialEnd;\r\n            if (isEndOfMaterial) {\r\n                const store = this.getMaterialStore(items.map, expressID, materialIndex);\r\n                store.push(objectStart, materialEnd);\r\n                break;\r\n            }\r\n\r\n            // Still going through the same object\r\n            if (prevExpressID === expressID) continue;\r\n\r\n            // New object starts; save previous object\r\n\r\n            // Store previous object\r\n            const store = this.getMaterialStore(items.map, prevExpressID, materialIndex);\r\n            objectEnd = i - 1;\r\n            store.push(objectStart, objectEnd);\r\n\r\n            // Get ready to process next object\r\n            prevExpressID = expressID;\r\n            objectStart = i;\r\n        }\r\n    }\r\n\r\n    private getMaterialStore(map: Map<number, Indices>, id: number, matIndex: number) {\r\n        // If this object wasn't store before, add it to the map\r\n        if (map.get(id) === undefined) {\r\n            map.set(id, {});\r\n        }\r\n        const storedIfcItem = map.get(id);\r\n        if (storedIfcItem === undefined) throw new Error('Geometry map generation error');\r\n\r\n        // If this material wasn't stored for this object before, add it to the object\r\n        if (storedIfcItem[matIndex] === undefined) {\r\n            storedIfcItem[matIndex] = [];\r\n        }\r\n        return storedIfcItem[matIndex];\r\n    }\r\n\r\n}","import { BufferGeometry, Mesh } from 'three';\r\nimport { IfcState, SubsetConfig } from '../../BaseDefinitions';\r\nimport { IndexedGeometry, ItemsMap } from './ItemsMap';\r\nimport { Subset, Subsets } from './SubsetManager';\r\nimport { SubsetUtils } from './SubsetUtils';\r\nimport { BvhManager } from '../BvhManager';\r\n\r\nexport class SubsetCreator {\r\n\r\n    private tempIndex: number[] = [];\r\n\r\n    constructor(private state: IfcState, private items: ItemsMap, private subsets: Subsets, private BVH: BvhManager) {\r\n    }\r\n\r\n    createSubset(config: SubsetConfig, subsetID: string) {\r\n        if (!this.items.map[config.modelID]) this.items.generateGeometryIndexMap(config.modelID);\r\n        if (!this.subsets[subsetID]) this.initializeSubset(config, subsetID);\r\n        this.filterIndices(config, subsetID);\r\n        this.constructSubsetByMaterial(config, subsetID);\r\n        config.ids.forEach(id => this.subsets[subsetID].ids.add(id));\r\n        this.subsets[subsetID].mesh.geometry.setIndex(this.tempIndex);\r\n        this.tempIndex.length = 0;\r\n        const subset = this.subsets[subsetID].mesh;\r\n        if (config.applyBVH) this.BVH.applyThreeMeshBVH(subset.geometry);\r\n        if (config.scene) config.scene.add(subset);\r\n        return this.subsets[subsetID].mesh;\r\n    }\r\n\r\n    dispose() {\r\n        this.tempIndex = [];\r\n    }\r\n\r\n    private initializeSubset(config: SubsetConfig, subsetID: string) {\r\n        const model = this.state.models[config.modelID].mesh;\r\n        const subsetGeom = new BufferGeometry();\r\n        this.initializeSubsetAttributes(subsetGeom, model);\r\n        if (!config.material) this.initializeSubsetGroups(subsetGeom, model);\r\n        const mesh = new Mesh(subsetGeom, config.material || model.material) as Subset;\r\n        mesh.modelID = config.modelID;\r\n        const bvh = Boolean(config.applyBVH);\r\n        this.subsets[subsetID] = { ids: new Set<number>(), mesh, bvh };\r\n        model.add(mesh);\r\n    }\r\n\r\n    // The subset shares the same attributes as the original (no memory consumed)\r\n    private initializeSubsetAttributes(subsetGeom: BufferGeometry, model: Mesh) {\r\n        subsetGeom.setAttribute('position', model.geometry.attributes.position);\r\n        subsetGeom.setAttribute('normal', model.geometry.attributes.normal);\r\n        subsetGeom.setAttribute('expressID', model.geometry.attributes.expressID);\r\n        subsetGeom.setIndex([]);\r\n    }\r\n\r\n    // If the subset has original materials, initialize the groups for the subset\r\n    private initializeSubsetGroups(subsetGeom: BufferGeometry, model: Mesh) {\r\n        subsetGeom.groups = JSON.parse(JSON.stringify(model.geometry.groups));\r\n        this.resetGroups(subsetGeom);\r\n    }\r\n\r\n    // Remove previous indices or filter the given ones to avoid repeating items\r\n    private filterIndices(config: SubsetConfig, subsetID: string) {\r\n        const geometry = this.subsets[subsetID].mesh.geometry as IndexedGeometry;\r\n        if (config.removePrevious) {\r\n            geometry.setIndex([]);\r\n            this.resetGroups(geometry);\r\n            return;\r\n        }\r\n        const previousIndices = geometry.index.array;\r\n        const previousIDs = this.subsets[subsetID].ids;\r\n        config.ids = config.ids.filter(id => !previousIDs.has(id));\r\n        this.tempIndex = Array.from(previousIndices);\r\n    }\r\n\r\n    private constructSubsetByMaterial(config: SubsetConfig, subsetID: string) {\r\n        const model = this.state.models[config.modelID].mesh;\r\n        const newIndices = { count: 0 };\r\n        for (let i = 0; i < model.geometry.groups.length; i++) {\r\n            this.insertNewIndices(config, subsetID, i, newIndices);\r\n        }\r\n    }\r\n\r\n    // If this subset has original materials, insert indices in correct position and update groups\r\n    // Otherwise, just insert indices at any position\r\n    private insertNewIndices(config: SubsetConfig, subsetID: string, materialIndex: number, newIndices: any) {\r\n        const items = this.items.map[config.modelID];\r\n        const indicesOfOneMaterial = SubsetUtils.getAllIndicesOfGroup(config.modelID, config.ids, materialIndex, items) as number[];\r\n\r\n        if (!config.material) {\r\n            this.insertIndicesAtGroup(subsetID, indicesOfOneMaterial, materialIndex, newIndices);\r\n        } else {\r\n            indicesOfOneMaterial.forEach(index => this.tempIndex.push(index));\r\n        }\r\n    }\r\n\r\n    private insertIndicesAtGroup(subsetID: string, indicesByGroup: number[], index: number, newIndices: any) {\r\n        const currentGroup = this.getCurrentGroup(subsetID, index);\r\n        currentGroup.start += newIndices.count;\r\n        let newIndicesPosition = currentGroup.start + currentGroup.count;\r\n        newIndices.count += indicesByGroup.length;\r\n        if (indicesByGroup.length > 0) {\r\n            let position = newIndicesPosition;\r\n            const start = this.tempIndex.slice(0, position);\r\n            const end = this.tempIndex.slice(position);\r\n            this.tempIndex = Array.prototype.concat.apply([], [start, indicesByGroup, end]);\r\n            currentGroup.count += indicesByGroup.length;\r\n        }\r\n    }\r\n\r\n    private getCurrentGroup(subsetID: string, groupIndex: number) {\r\n        const geometry = this.subsets[subsetID].mesh.geometry as IndexedGeometry;\r\n        return geometry.groups[groupIndex];\r\n    }\r\n\r\n    private resetGroups(geometry: BufferGeometry) {\r\n        geometry.groups.forEach((group) => {\r\n            group.start = 0;\r\n            group.count = 0;\r\n        });\r\n    }\r\n}","export class SubsetUtils {\r\n\r\n    // If flatten, all indices are in the same array; otherwise, indices are split in subarrays by material\r\n    static getAllIndicesOfGroup(modelID: number, ids: number[], materialIndex: number, items: any, flatten = true) {\r\n        const indicesByGroup: any = [];\r\n        for (const expressID of ids) {\r\n            const entry = items.map.get(expressID);\r\n            if (!entry) continue;\r\n            const value = entry[materialIndex];\r\n            if (!value) continue;\r\n            SubsetUtils.getIndexChunk(value, indicesByGroup, materialIndex, items, flatten);\r\n        }\r\n        return indicesByGroup;\r\n    }\r\n\r\n    private static getIndexChunk(value: number[], indicesByGroup: any, materialIndex: number, items: any, flatten: boolean) {\r\n        const pairs = value.length / 2;\r\n        for (let pair = 0; pair < pairs; pair++) {\r\n            const pairIndex = pair * 2;\r\n            const start = value[pairIndex];\r\n            const end = value[pairIndex + 1];\r\n            for (let j = start; j <= end; j++) {\r\n                if(flatten) indicesByGroup.push(items.indexCache[j]);\r\n                else {\r\n                    if (!indicesByGroup[materialIndex]) indicesByGroup[materialIndex] = [];\r\n                    indicesByGroup[materialIndex].push(items.indexCache[j]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import { Material, Mesh, Object3D } from 'three';\r\nimport { SubsetConfig, IfcState } from '../../BaseDefinitions';\r\nimport { BvhManager } from '../BvhManager';\r\nimport { ItemsMap } from './ItemsMap';\r\nimport { SubsetCreator } from './SubsetCreator';\r\n\r\nexport interface Subset extends Mesh {\r\n    modelID: number;\r\n}\r\n\r\nexport type Subsets = {\r\n    [subsetID: string]: { ids: Set<number>, mesh: Subset, bvh: boolean };\r\n};\r\n\r\n/**\r\n * Contains the logic to get, create and delete geometric subsets of an IFC model. For example,\r\n * this can extract all the items in a specific IfcBuildingStorey and create a new Mesh.\r\n */\r\nexport class SubsetManager {\r\n    readonly items: ItemsMap;\r\n    private readonly BVH: BvhManager;\r\n    private state: IfcState;\r\n    private subsets: Subsets = {};\r\n    private subsetCreator: SubsetCreator;\r\n\r\n    constructor(state: IfcState, BVH: BvhManager) {\r\n        this.state = state;\r\n        this.items = new ItemsMap(state);\r\n        this.BVH = BVH;\r\n        this.subsetCreator = new SubsetCreator(state, this.items, this.subsets, this.BVH);\r\n    }\r\n\r\n    getAllSubsets(){\r\n        return this.subsets\r\n    }\r\n\r\n    getSubset(modelID: number, material?: Material, customId?: string) {\r\n        const subsetID = this.getSubsetID(modelID, material, customId);\r\n        return this.subsets[subsetID].mesh;\r\n    }\r\n\r\n    removeSubset(modelID: number, material?: Material, customID?: string) {\r\n        const subsetID = this.getSubsetID(modelID, material, customID);\r\n        const subset = this.subsets[subsetID];\r\n        if (!subset) return;\r\n        if (subset.mesh.parent) subset.mesh.removeFromParent();\r\n        subset.mesh.geometry.attributes = {};\r\n        subset.mesh.geometry.index = null;\r\n        subset.mesh.geometry.dispose();\r\n        // @ts-ignore\r\n        subset.mesh.geometry = null;\r\n        delete this.subsets[subsetID];\r\n    }\r\n\r\n    createSubset(config: SubsetConfig) {\r\n        const subsetID = this.getSubsetID(config.modelID, config.material, config.customID);\r\n        return this.subsetCreator.createSubset(config, subsetID);\r\n    }\r\n\r\n    removeFromSubset(modelID: number, ids: number[], customID?: string, material?: Material) {\r\n        const subsetID = this.getSubsetID(modelID, material, customID);\r\n        if (!this.subsets[subsetID]) return;\r\n\r\n        const previousIDs = this.subsets[subsetID].ids;\r\n        ids.forEach((id) => {\r\n            if(previousIDs.has(id)) previousIDs.delete(id);\r\n        })\r\n\r\n        return this.createSubset({\r\n            modelID,\r\n            removePrevious: true,\r\n            material,\r\n            customID,\r\n            applyBVH: this.subsets[subsetID].bvh,\r\n            ids: Array.from(previousIDs),\r\n            scene: this.subsets[subsetID].mesh.parent as Object3D\r\n        });\r\n    }\r\n\r\n    clearSubset(modelID: number, customID?: string, material?: Material) {\r\n        const subsetID = this.getSubsetID(modelID, material, customID);\r\n        if (!this.subsets[subsetID]) return;\r\n        this.subsets[subsetID].ids.clear();\r\n        const subset = this.getSubset(modelID, material, customID);\r\n        subset.geometry.setIndex([]);\r\n    }\r\n\r\n    // Use this only for destroying the current IFCLoader instance\r\n    dispose() {\r\n        this.items.dispose();\r\n        this.subsetCreator.dispose();\r\n\r\n        Object.values(this.subsets).forEach(subset => {\r\n            (subset.ids as any) = null;\r\n            subset.mesh.removeFromParent();\r\n            const mats = subset.mesh.material;\r\n            if(Array.isArray(mats)) mats.forEach(mat => mat.dispose());\r\n            else mats.dispose();\r\n            subset.mesh.geometry.index = null;\r\n            subset.mesh.geometry.dispose();\r\n            const geom = subset.mesh.geometry as any;\r\n            if(geom.disposeBoundsTree) geom.disposeBoundsTree();\r\n            (subset.mesh as any) = null;\r\n        });\r\n        (this.subsets as any) = null;\r\n    }\r\n\r\n    private getSubsetID(modelID: number, material?: Material, customID = 'DEFAULT') {\r\n        const baseID = modelID;\r\n        const materialID = material ? material.uuid : 'DEFAULT';\r\n        return `${baseID} - ${materialID} - ${customID}`;\r\n    }\r\n}\r\n","import { BufferAttribute, BufferGeometry, Material, Matrix4, Mesh, Object3D } from 'three';\r\n// TODO: Remove ts ignore comments when @types/three gets updated\r\n// @ts-ignore\r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport {\r\n    FlatMesh,\r\n    IfcGeometry,\r\n    IFCRELAGGREGATES, IFCRELASSOCIATESMATERIAL,\r\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n    IFCRELDEFINESBYPROPERTIES,\r\n    IFCRELDEFINESBYTYPE, LoaderError, LoaderSettings, RawLineData, Vector\r\n} from 'web-ifc';\r\nimport {ParserProgress} from \"./components/IFCParser\";\r\n\r\nexport const IdAttrName = 'expressID';\r\n\r\nexport type IdAttributeByMaterial = { [id: number]: number };\r\nexport type IdAttributesByMaterials = { [materialID: string]: IdAttributeByMaterial };\r\n\r\n//TODO: Rename \"scene\" to \"parent\" in the next major release\r\nexport interface BaseSubsetConfig {\r\n    scene?: Object3D;\r\n    ids: number[];\r\n    removePrevious: boolean;\r\n    material?: Material;\r\n    customID?: string;\r\n    applyBVH?: boolean;\r\n}\r\n\r\nexport interface SubsetConfig extends BaseSubsetConfig {\r\n    modelID: number;\r\n}\r\n\r\nexport const DEFAULT = 'default';\r\n\r\nexport type MapFaceindexID = { [key: number]: number };\r\n\r\nexport interface TypesMap {\r\n    [key: number]: number;\r\n}\r\n\r\n\r\nexport interface IfcModel {\r\n    modelID: number;\r\n    mesh: IfcMesh;\r\n    types: TypesMap;\r\n    jsonData: { [id: number]: JSONObject };\r\n}\r\n\r\nexport interface JSONObject {\r\n    expressID: number;\r\n    type: string;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface Worker {\r\n    active: boolean;\r\n    path: string;\r\n}\r\n\r\nexport interface IfcState {\r\n    models: { [modelID: number]: IfcModel };\r\n    api: WebIfcAPI;\r\n    useJSON: boolean;\r\n    worker: Worker;\r\n    webIfcSettings?: LoaderSettings;\r\n    onProgress?: (event: ParserProgress) => void;\r\n    coordinationMatrix?: Matrix4,\r\n    wasmPath?: string;\r\n}\r\n\r\nexport interface IfcMesh extends Mesh {\r\n    modelID: number;\r\n}\r\n\r\nexport interface Node {\r\n    expressID: number;\r\n    type: string;\r\n    children: Node[];\r\n}\r\n\r\nexport interface pName {\r\n    name: number;\r\n    relating: string;\r\n    related: string;\r\n    key: string;\r\n}\r\n\r\nexport const PropsNames = {\r\n    aggregates: {\r\n        name: IFCRELAGGREGATES,\r\n        relating: 'RelatingObject',\r\n        related: 'RelatedObjects',\r\n        key: 'children'\r\n    },\r\n    spatial: {\r\n        name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n        relating: 'RelatingStructure',\r\n        related: 'RelatedElements',\r\n        key: 'children'\r\n    },\r\n    psets: {\r\n        name: IFCRELDEFINESBYPROPERTIES,\r\n        relating: 'RelatingPropertyDefinition',\r\n        related: 'RelatedObjects',\r\n        key: 'hasPsets'\r\n    },\r\n    materials: {\r\n        name: IFCRELASSOCIATESMATERIAL,\r\n        relating: 'RelatingMaterial',\r\n        related: 'RelatedObjects',\r\n        key: 'hasMaterial'\r\n    },\r\n    type: {\r\n        name: IFCRELDEFINESBYTYPE,\r\n        relating: 'RelatingType',\r\n        related: 'RelatedObjects',\r\n        key: 'hasType'\r\n    }\r\n};\r\n\r\nexport interface WebIfcAPI {\r\n\r\n    wasmModule: any;\r\n\r\n    Init(): void | Promise<void>;\r\n\r\n    // To close the web worker\r\n    Close?: () => void;\r\n\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @data Buffer containing IFC data (bytes)\r\n     * @data Settings settings for loading the model\r\n     */\r\n    OpenModel(data: string | Uint8Array, settings?: LoaderSettings): number | Promise<number>;\r\n\r\n    /**\r\n     * Creates a new model and returns a modelID number\r\n     * @data Settings settings for generating data the model\r\n     */\r\n    CreateModel(settings?: LoaderSettings): number | Promise<number>;\r\n\r\n    ExportFileAsIFC(modelID: number): Uint8Array | Promise<Uint8Array>;\r\n\r\n    /**\r\n     * Opens a model and returns a modelID number\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     * @data Buffer containing IFC data (bytes)\r\n     */\r\n    GetGeometry(modelID: number, geometryExpressID: number): IfcGeometry | Promise<IfcGeometry>;\r\n\r\n    GetLine(modelID: number, expressID: number, flatten?: boolean):  any | Promise<any>;\r\n\r\n    GetAndClearErrors(modelID: number): Vector<LoaderError> | Promise<Vector<LoaderError>>;\r\n\r\n    WriteLine(modelID: number, lineObject: any): void | Promise<void>;\r\n\r\n    FlattenLine(modelID: number, line: any): void | Promise<void>;\r\n\r\n    GetRawLineData(modelID: number, expressID: number): RawLineData | Promise<RawLineData>;\r\n\r\n    WriteRawLineData(modelID: number, data: RawLineData):  any | Promise<any>;\r\n\r\n    GetLineIDsWithType(modelID: number, type: number): Vector<number> | Promise<Vector<number>>;\r\n\r\n    GetAllLines(modelID: Number): Vector<number> | Promise<Vector<number>>;\r\n\r\n    SetGeometryTransformation(modelID: number, transformationMatrix: Array<number>): void | Promise<void>;\r\n\r\n    GetCoordinationMatrix(modelID: number): Array<number> | Promise<Array<number>>;\r\n\r\n    GetVertexArray(ptr: number, size: number): Float32Array | Promise<Float32Array>;\r\n\r\n    GetIndexArray(ptr: number, size: number): Uint32Array | Promise<Uint32Array>;\r\n\r\n    getSubArray(heap: any, startPtr: any, sizeBytes: any): any | Promise<any>;\r\n\r\n    /**\r\n     * Closes a model and frees all related memory\r\n     * @modelID Model handle retrieved by OpenModel, model must not be closed\r\n     */\r\n    CloseModel(modelID: number): void | Promise<void>;\r\n\r\n    StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): void | Promise<void>;\r\n\r\n    StreamAllMeshesWithTypes(modelID: number, types: Array<number>, meshCallback: (mesh: FlatMesh) => void): void | Promise<void>;\r\n\r\n    /**\r\n     * Checks if a specific model ID is open or closed\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    IsModelOpen(modelID: number): boolean | Promise<boolean>;\r\n\r\n    /**\r\n     * Load all geometry in a model\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    LoadAllGeometry(modelID: number): Vector<FlatMesh> | Promise<Vector<FlatMesh>>;\r\n\r\n    /**\r\n     * Load geometry for a single element\r\n     * @modelID Model handle retrieved by OpenModel\r\n     */\r\n    GetFlatMesh(modelID: number, expressID: number): FlatMesh | Promise<FlatMesh>;\r\n\r\n    SetWasmPath(path: string): void | Promise<void>;\r\n}\r\n","import { IfcState, pName, PropsNames, Node } from '../../BaseDefinitions';\r\n\r\nexport class BasePropertyManager {\r\n\r\n    constructor(protected state: IfcState) {\r\n    }\r\n\r\n    async getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.psets);\r\n    }\r\n\r\n    async getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.type);\r\n    }\r\n\r\n    async getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\r\n        return await this.getProperty(modelID, elementID, recursive, PropsNames.materials);\r\n    }\r\n\r\n    protected async getSpatialNode(modelID: number, node: Node, treeChunks: any, includeProperties?: boolean) {\r\n        await this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\r\n        await this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\r\n    }\r\n\r\n    protected async getChildren(modelID: number, node: Node, treeChunks: any, propNames: pName, includeProperties?: boolean) {\r\n        const children = treeChunks[node.expressID];\r\n        if (children == undefined) return;\r\n        const prop = propNames.key as keyof Node;\r\n        const nodes: any[] = [];\r\n        for(let i = 0; i < children.length; i++){\r\n            const child = children[i];\r\n            let node = this.newNode(modelID, child);\r\n            if (includeProperties) {\r\n                const properties = await this.getItemProperties(modelID, node.expressID) as any;\r\n                node = { ...properties, ...node };\r\n            }\r\n            await this.getSpatialNode(modelID, node, treeChunks, includeProperties);\r\n            nodes.push(node);\r\n        }\r\n        (node[prop] as Node[]) = nodes;\r\n    }\r\n\r\n    protected newNode(modelID: number, id: number) {\r\n        const typeName = this.getNodeType(modelID, id);\r\n        return {\r\n            expressID: id,\r\n            type: typeName,\r\n            children: []\r\n        };\r\n    }\r\n\r\n    protected async getSpatialTreeChunks(modelID: number) {\r\n        const treeChunks: any = {};\r\n        await this.getChunks(modelID, treeChunks, PropsNames.aggregates);\r\n        await this.getChunks(modelID, treeChunks, PropsNames.spatial);\r\n        return treeChunks;\r\n    }\r\n\r\n    protected saveChunk(chunks: any, propNames: pName, rel: any) {\r\n        const relating = rel[propNames.relating].value;\r\n        const related = rel[propNames.related].map((r: any) => r.value);\r\n        if (chunks[relating] == undefined) {\r\n            chunks[relating] = related;\r\n        } else {\r\n            chunks[relating] = chunks[relating].concat(related);\r\n        }\r\n    }\r\n\r\n    protected getRelated(rel: any, propNames: pName, IDs: number[]) {\r\n        const element = rel[propNames.relating];\r\n        if(!element) {\r\n            return console.warn(`The object with ID ${rel.expressID} has a broken reference.`);\r\n        }\r\n        if (!Array.isArray(element)) IDs.push(element.value);\r\n        else element.forEach((ele) => IDs.push(ele.value));\r\n    }\r\n\r\n    protected static isRelated(id: number, rel: any, propNames: pName) {\r\n        const relatedItems = rel[propNames.related];\r\n        if (Array.isArray(relatedItems)) {\r\n            const values = relatedItems.map((item) => item.value);\r\n            return values.includes(id);\r\n        }\r\n        return relatedItems.value === id;\r\n    }\r\n\r\n    protected static newIfcProject(id: number) {\r\n        return {\r\n            expressID: id,\r\n            type: 'IFCPROJECT',\r\n            children: []\r\n        };\r\n    }\r\n\r\n    async getProperty(modelID: number, elementID: number, recursive = false, propName: pName): Promise<any> {\r\n    }\r\n\r\n    protected async getChunks(modelID: number, chunks: any, propNames: pName): Promise<void> {\r\n    }\r\n\r\n    protected async getItemProperties(modelID: number, expressID: number, recursive = false): Promise<any> {\r\n    }\r\n\r\n    protected getNodeType(modelID: number, id: number): any {\r\n    }\r\n}","export let IfcElements: {[key: number]: string} = {\r\n  103090709: 'IFCPROJECT',\r\n  4097777520: 'IFCSITE',\r\n  4031249490: 'IFCBUILDING',\r\n  3124254112: 'IFCBUILDINGSTOREY',\r\n  3856911033: 'IFCSPACE',\r\n  1674181508: 'IFCANNOTATION',\r\n  25142252: 'IFCCONTROLLER',\r\n  32344328: 'IFCBOILER',\r\n  76236018: 'IFCLAMP',\r\n  90941305: 'IFCPUMP',\r\n  177149247: 'IFCAIRTERMINALBOX',\r\n  182646315: 'IFCFLOWINSTRUMENT',\r\n  263784265: 'IFCFURNISHINGELEMENT',\r\n  264262732: 'IFCELECTRICGENERATOR',\r\n  277319702: 'IFCAUDIOVISUALAPPLIANCE',\r\n  310824031: 'IFCPIPEFITTING',\r\n  331165859: 'IFCSTAIR',\r\n  342316401: 'IFCDUCTFITTING',\r\n  377706215: 'IFCMECHANICALFASTENER',\r\n  395920057: 'IFCDOOR',\r\n  402227799: 'IFCELECTRICMOTOR',\r\n  413509423: 'IFCSYSTEMFURNITUREELEMENT',\r\n  484807127: 'IFCEVAPORATOR',\r\n  486154966: 'IFCWINDOWSTANDARDCASE',\r\n  629592764: 'IFCLIGHTFIXTURE',\r\n  630975310: 'IFCUNITARYCONTROLELEMENT',\r\n  635142910: 'IFCCABLECARRIERFITTING',\r\n  639361253: 'IFCCOIL',\r\n  647756555: 'IFCFASTENER',\r\n  707683696: 'IFCFLOWSTORAGEDEVICE',\r\n  738039164: 'IFCPROTECTIVEDEVICE',\r\n  753842376: 'IFCBEAM',\r\n  812556717: 'IFCTANK',\r\n  819412036: 'IFCFILTER',\r\n  843113511: 'IFCCOLUMN',\r\n  862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\r\n  900683007: 'IFCFOOTING',\r\n  905975707: 'IFCCOLUMNSTANDARDCASE',\r\n  926996030: 'IFCVOIDINGFEATURE',\r\n  979691226: 'IFCREINFORCINGBAR',\r\n  987401354: 'IFCFLOWSEGMENT',\r\n  1003880860: 'IFCELECTRICTIMECONTROL',\r\n  1051757585: 'IFCCABLEFITTING',\r\n  1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n  1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n  1073191201: 'IFCMEMBER',\r\n  1095909175: 'IFCBUILDINGELEMENTPROXY',\r\n  1156407060: 'IFCPLATESTANDARDCASE',\r\n  1162798199: 'IFCSWITCHINGDEVICE',\r\n  1329646415: 'IFCSHADINGDEVICE',\r\n  1335981549: 'IFCDISCRETEACCESSORY',\r\n  1360408905: 'IFCDUCTSILENCER',\r\n  1404847402: 'IFCSTACKTERMINAL',\r\n  1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\r\n  1437502449: 'IFCMEDICALDEVICE',\r\n  1509553395: 'IFCFURNITURE',\r\n  1529196076: 'IFCSLAB',\r\n  1620046519: 'IFCTRANSPORTELEMENT',\r\n  1634111441: 'IFCAIRTERMINAL',\r\n  1658829314: 'IFCENERGYCONVERSIONDEVICE',\r\n  1677625105: 'IFCCIVILELEMENT',\r\n  1687234759: 'IFCPILE',\r\n  1904799276: 'IFCELECTRICAPPLIANCE',\r\n  1911478936: 'IFCMEMBERSTANDARDCASE',\r\n  1945004755: 'IFCDISTRIBUTIONELEMENT',\r\n  1973544240: 'IFCCOVERING',\r\n  1999602285: 'IFCSPACEHEATER',\r\n  2016517767: 'IFCROOF',\r\n  2056796094: 'IFCAIRTOAIRHEATRECOVERY',\r\n  2058353004: 'IFCFLOWCONTROLLER',\r\n  2068733104: 'IFCHUMIDIFIER',\r\n  2176052936: 'IFCJUNCTIONBOX',\r\n  2188021234: 'IFCFLOWMETER',\r\n  2223149337: 'IFCFLOWTERMINAL',\r\n  2262370178: 'IFCRAILING',\r\n  2272882330: 'IFCCONDENSER',\r\n  2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n  2320036040: 'IFCREINFORCINGMESH',\r\n  2347447852: 'IFCTENDONANCHOR',\r\n  2391383451: 'IFCVIBRATIONISOLATOR',\r\n  2391406946: 'IFCWALL',\r\n  2474470126: 'IFCMOTORCONNECTION',\r\n  2769231204: 'IFCVIRTUALELEMENT',\r\n  2814081492: 'IFCENGINE',\r\n  2906023776: 'IFCBEAMSTANDARDCASE',\r\n  2938176219: 'IFCBURNER',\r\n  2979338954: 'IFCBUILDINGELEMENTPART',\r\n  3024970846: 'IFCRAMP',\r\n  3026737570: 'IFCTUBEBUNDLE',\r\n  3027962421: 'IFCSLABSTANDARDCASE',\r\n  3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\r\n  3053780830: 'IFCSANITARYTERMINAL',\r\n  3079942009: 'IFCOPENINGSTANDARDCASE',\r\n  3087945054: 'IFCALARM',\r\n  3101698114: 'IFCSURFACEFEATURE',\r\n  3127900445: 'IFCSLABELEMENTEDCASE',\r\n  3132237377: 'IFCFLOWMOVINGDEVICE',\r\n  3171933400: 'IFCPLATE',\r\n  3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\r\n  3242481149: 'IFCDOORSTANDARDCASE',\r\n  3283111854: 'IFCRAMPFLIGHT',\r\n  3296154744: 'IFCCHIMNEY',\r\n  3304561284: 'IFCWINDOW',\r\n  3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n  3319311131: 'IFCHEATEXCHANGER',\r\n  3415622556: 'IFCFAN',\r\n  3420628829: 'IFCSOLARDEVICE',\r\n  3493046030: 'IFCGEOGRAPHICELEMENT',\r\n  3495092785: 'IFCCURTAINWALL',\r\n  3508470533: 'IFCFLOWTREATMENTDEVICE',\r\n  3512223829: 'IFCWALLSTANDARDCASE',\r\n  3518393246: 'IFCDUCTSEGMENT',\r\n  3571504051: 'IFCCOMPRESSOR',\r\n  3588315303: 'IFCOPENINGELEMENT',\r\n  3612865200: 'IFCPIPESEGMENT',\r\n  3640358203: 'IFCCOOLINGTOWER',\r\n  3651124850: 'IFCPROJECTIONELEMENT',\r\n  3694346114: 'IFCOUTLET',\r\n  3747195512: 'IFCEVAPORATIVECOOLER',\r\n  3758799889: 'IFCCABLECARRIERSEGMENT',\r\n  3824725483: 'IFCTENDON',\r\n  3825984169: 'IFCTRANSFORMER',\r\n  3902619387: 'IFCCHILLER',\r\n  4074379575: 'IFCDAMPER',\r\n  4086658281: 'IFCSENSOR',\r\n  4123344466: 'IFCELEMENTASSEMBLY',\r\n  4136498852: 'IFCCOOLEDBEAM',\r\n  4156078855: 'IFCWALLELEMENTEDCASE',\r\n  4175244083: 'IFCINTERCEPTOR',\r\n  4207607924: 'IFCVALVE',\r\n  4217484030: 'IFCCABLESEGMENT',\r\n  4237592921: 'IFCWASTETERMINAL',\r\n  4252922144: 'IFCSTAIRFLIGHT',\r\n  4278956645: 'IFCFLOWFITTING',\r\n  4288193352: 'IFCACTUATOR',\r\n  4292641817: 'IFCUNITARYEQUIPMENT',\r\n  3009204131: 'IFCGRID'\r\n};","import { BasePropertyManager } from './BasePropertyManager';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { pName } from '../../BaseDefinitions';\r\nimport { PropertyAPI } from './BaseDefinitions';\r\nimport { IfcElements } from '../IFCElementsMap';\r\n\r\nexport class WebIfcPropertyManager extends BasePropertyManager  implements PropertyAPI {\r\n    async getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.state.api.GetLine(modelID, id, recursive);\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        const chunks = await this.getSpatialTreeChunks(modelID);\r\n        const allLines = await this.state.api.GetLineIDsWithType(modelID, IFCPROJECT);\r\n        const projectID = allLines.get(0);\r\n        const project = WebIfcPropertyManager.newIfcProject(projectID);\r\n        await this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return project;\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        let items: number[] = [];\r\n        const lines = await this.state.api.GetLineIDsWithType(modelID, type);\r\n        for (let i = 0; i < lines.size(); i++) items.push(lines.get(i));\r\n        if (!verbose) return items;\r\n        const result: any[] = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            result.push(await this.state.api.GetLine(modelID, items[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    override async getProperty(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const propSetIds = await this.getAllRelatedItemsOfType(modelID, elementID, propName);\r\n        const result: any[] = [];\r\n        for (let i = 0; i < propSetIds.length; i++) {\r\n            result.push(await this.state.api.GetLine(modelID, propSetIds[i], recursive));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected override getNodeType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    protected override async getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = await this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        for (let i = 0; i < relation.size(); i++) {\r\n            const rel = await this.state.api.GetLine(modelID, relation.get(i), false);\r\n            this.saveChunk(chunks, propNames, rel);\r\n        }\r\n    }\r\n\r\n    private async getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = await this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        const IDs: number[] = [];\r\n        for (let i = 0; i < lines.size(); i++) {\r\n            const rel = await this.state.api.GetLine(modelID, lines.get(i));\r\n            const isRelated = BasePropertyManager.isRelated(id, rel, propNames);\r\n            if (isRelated) this.getRelated(rel, propNames, IDs);\r\n        }\r\n        return IDs;\r\n    }\r\n}","export let IfcTypesMap:  {[key: number]: string} = {\r\n    3821786052: \"IFCACTIONREQUEST\",\r\n    2296667514: \"IFCACTOR\",\r\n    3630933823: \"IFCACTORROLE\",\r\n    4288193352: \"IFCACTUATOR\",\r\n    2874132201: \"IFCACTUATORTYPE\",\r\n    618182010: \"IFCADDRESS\",\r\n    1635779807: \"IFCADVANCEDBREP\",\r\n    2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\r\n    3406155212: \"IFCADVANCEDFACE\",\r\n    1634111441: \"IFCAIRTERMINAL\",\r\n    177149247: \"IFCAIRTERMINALBOX\",\r\n    1411407467: \"IFCAIRTERMINALBOXTYPE\",\r\n    3352864051: \"IFCAIRTERMINALTYPE\",\r\n    2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\r\n    1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\r\n    3087945054: \"IFCALARM\",\r\n    3001207471: \"IFCALARMTYPE\",\r\n    325726236: \"IFCALIGNMENT\",\r\n    749761778: \"IFCALIGNMENT2DHORIZONTAL\",\r\n    3199563722: \"IFCALIGNMENT2DHORIZONTALSEGMENT\",\r\n    2483840362: \"IFCALIGNMENT2DSEGMENT\",\r\n    3379348081: \"IFCALIGNMENT2DVERSEGCIRCULARARC\",\r\n    3239324667: \"IFCALIGNMENT2DVERSEGLINE\",\r\n    4263986512: \"IFCALIGNMENT2DVERSEGPARABOLICARC\",\r\n    53199957: \"IFCALIGNMENT2DVERTICAL\",\r\n    2029264950: \"IFCALIGNMENT2DVERTICALSEGMENT\",\r\n    3512275521: \"IFCALIGNMENTCURVE\",\r\n    1674181508: \"IFCANNOTATION\",\r\n    669184980: \"IFCANNOTATIONFILLAREA\",\r\n    639542469: \"IFCAPPLICATION\",\r\n    411424972: \"IFCAPPLIEDVALUE\",\r\n    130549933: \"IFCAPPROVAL\",\r\n    3869604511: \"IFCAPPROVALRELATIONSHIP\",\r\n    3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\r\n    1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\r\n    2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\r\n    3460190687: \"IFCASSET\",\r\n    3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\r\n    277319702: \"IFCAUDIOVISUALAPPLIANCE\",\r\n    1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\r\n    4261334040: \"IFCAXIS1PLACEMENT\",\r\n    3125803723: \"IFCAXIS2PLACEMENT2D\",\r\n    2740243338: \"IFCAXIS2PLACEMENT3D\",\r\n    1967976161: \"IFCBSPLINECURVE\",\r\n    2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\r\n    2887950389: \"IFCBSPLINESURFACE\",\r\n    167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\r\n    753842376: \"IFCBEAM\",\r\n    2906023776: \"IFCBEAMSTANDARDCASE\",\r\n    819618141: \"IFCBEAMTYPE\",\r\n    4196446775: \"IFCBEARING\",\r\n    3649138523: \"IFCBEARINGTYPE\",\r\n    616511568: \"IFCBLOBTEXTURE\",\r\n    1334484129: \"IFCBLOCK\",\r\n    32344328: \"IFCBOILER\",\r\n    231477066: \"IFCBOILERTYPE\",\r\n    3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\r\n    2736907675: \"IFCBOOLEANRESULT\",\r\n    4037036970: \"IFCBOUNDARYCONDITION\",\r\n    1136057603: \"IFCBOUNDARYCURVE\",\r\n    1560379544: \"IFCBOUNDARYEDGECONDITION\",\r\n    3367102660: \"IFCBOUNDARYFACECONDITION\",\r\n    1387855156: \"IFCBOUNDARYNODECONDITION\",\r\n    2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\r\n    1260505505: \"IFCBOUNDEDCURVE\",\r\n    4182860854: \"IFCBOUNDEDSURFACE\",\r\n    2581212453: \"IFCBOUNDINGBOX\",\r\n    2713105998: \"IFCBOXEDHALFSPACE\",\r\n    644574406: \"IFCBRIDGE\",\r\n    963979645: \"IFCBRIDGEPART\",\r\n    4031249490: \"IFCBUILDING\",\r\n    3299480353: \"IFCBUILDINGELEMENT\",\r\n    2979338954: \"IFCBUILDINGELEMENTPART\",\r\n    39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\r\n    1095909175: \"IFCBUILDINGELEMENTPROXY\",\r\n    1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\r\n    1950629157: \"IFCBUILDINGELEMENTTYPE\",\r\n    3124254112: \"IFCBUILDINGSTOREY\",\r\n    1177604601: \"IFCBUILDINGSYSTEM\",\r\n    2938176219: \"IFCBURNER\",\r\n    2188180465: \"IFCBURNERTYPE\",\r\n    2898889636: \"IFCCSHAPEPROFILEDEF\",\r\n    635142910: \"IFCCABLECARRIERFITTING\",\r\n    395041908: \"IFCCABLECARRIERFITTINGTYPE\",\r\n    3758799889: \"IFCCABLECARRIERSEGMENT\",\r\n    3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\r\n    1051757585: \"IFCCABLEFITTING\",\r\n    2674252688: \"IFCCABLEFITTINGTYPE\",\r\n    4217484030: \"IFCCABLESEGMENT\",\r\n    1285652485: \"IFCCABLESEGMENTTYPE\",\r\n    3999819293: \"IFCCAISSONFOUNDATION\",\r\n    3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\r\n    1123145078: \"IFCCARTESIANPOINT\",\r\n    574549367: \"IFCCARTESIANPOINTLIST\",\r\n    1675464909: \"IFCCARTESIANPOINTLIST2D\",\r\n    2059837836: \"IFCCARTESIANPOINTLIST3D\",\r\n    59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\r\n    3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\r\n    3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\r\n    3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\r\n    1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\r\n    3150382593: \"IFCCENTERLINEPROFILEDEF\",\r\n    3902619387: \"IFCCHILLER\",\r\n    2951183804: \"IFCCHILLERTYPE\",\r\n    3296154744: \"IFCCHIMNEY\",\r\n    2197970202: \"IFCCHIMNEYTYPE\",\r\n    2611217952: \"IFCCIRCLE\",\r\n    2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\r\n    1383045692: \"IFCCIRCLEPROFILEDEF\",\r\n    1062206242: \"IFCCIRCULARARCSEGMENT2D\",\r\n    1677625105: \"IFCCIVILELEMENT\",\r\n    3893394355: \"IFCCIVILELEMENTTYPE\",\r\n    747523909: \"IFCCLASSIFICATION\",\r\n    647927063: \"IFCCLASSIFICATIONREFERENCE\",\r\n    2205249479: \"IFCCLOSEDSHELL\",\r\n    639361253: \"IFCCOIL\",\r\n    2301859152: \"IFCCOILTYPE\",\r\n    776857604: \"IFCCOLOURRGB\",\r\n    3285139300: \"IFCCOLOURRGBLIST\",\r\n    3264961684: \"IFCCOLOURSPECIFICATION\",\r\n    843113511: \"IFCCOLUMN\",\r\n    905975707: \"IFCCOLUMNSTANDARDCASE\",\r\n    300633059: \"IFCCOLUMNTYPE\",\r\n    3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\r\n    400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\r\n    2542286263: \"IFCCOMPLEXPROPERTY\",\r\n    3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\r\n    3732776249: \"IFCCOMPOSITECURVE\",\r\n    15328376: \"IFCCOMPOSITECURVEONSURFACE\",\r\n    2485617015: \"IFCCOMPOSITECURVESEGMENT\",\r\n    1485152156: \"IFCCOMPOSITEPROFILEDEF\",\r\n    3571504051: \"IFCCOMPRESSOR\",\r\n    3850581409: \"IFCCOMPRESSORTYPE\",\r\n    2272882330: \"IFCCONDENSER\",\r\n    2816379211: \"IFCCONDENSERTYPE\",\r\n    2510884976: \"IFCCONIC\",\r\n    370225590: \"IFCCONNECTEDFACESET\",\r\n    1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\r\n    2859738748: \"IFCCONNECTIONGEOMETRY\",\r\n    45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\r\n    2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\r\n    2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\r\n    775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\r\n    1959218052: \"IFCCONSTRAINT\",\r\n    3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\r\n    2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\r\n    1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\r\n    4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\r\n    488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\r\n    1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\r\n    2559216714: \"IFCCONSTRUCTIONRESOURCE\",\r\n    2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\r\n    3419103109: \"IFCCONTEXT\",\r\n    3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\r\n    3293443760: \"IFCCONTROL\",\r\n    25142252: \"IFCCONTROLLER\",\r\n    578613899: \"IFCCONTROLLERTYPE\",\r\n    2889183280: \"IFCCONVERSIONBASEDUNIT\",\r\n    2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\r\n    4136498852: \"IFCCOOLEDBEAM\",\r\n    335055490: \"IFCCOOLEDBEAMTYPE\",\r\n    3640358203: \"IFCCOOLINGTOWER\",\r\n    2954562838: \"IFCCOOLINGTOWERTYPE\",\r\n    1785450214: \"IFCCOORDINATEOPERATION\",\r\n    1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\r\n    3895139033: \"IFCCOSTITEM\",\r\n    1419761937: \"IFCCOSTSCHEDULE\",\r\n    602808272: \"IFCCOSTVALUE\",\r\n    1973544240: \"IFCCOVERING\",\r\n    1916426348: \"IFCCOVERINGTYPE\",\r\n    3295246426: \"IFCCREWRESOURCE\",\r\n    1815067380: \"IFCCREWRESOURCETYPE\",\r\n    2506170314: \"IFCCSGPRIMITIVE3D\",\r\n    2147822146: \"IFCCSGSOLID\",\r\n    539742890: \"IFCCURRENCYRELATIONSHIP\",\r\n    3495092785: \"IFCCURTAINWALL\",\r\n    1457835157: \"IFCCURTAINWALLTYPE\",\r\n    2601014836: \"IFCCURVE\",\r\n    2827736869: \"IFCCURVEBOUNDEDPLANE\",\r\n    2629017746: \"IFCCURVEBOUNDEDSURFACE\",\r\n    1186437898: \"IFCCURVESEGMENT2D\",\r\n    3800577675: \"IFCCURVESTYLE\",\r\n    1105321065: \"IFCCURVESTYLEFONT\",\r\n    2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\r\n    3510044353: \"IFCCURVESTYLEFONTPATTERN\",\r\n    1213902940: \"IFCCYLINDRICALSURFACE\",\r\n    4074379575: \"IFCDAMPER\",\r\n    3961806047: \"IFCDAMPERTYPE\",\r\n    3426335179: \"IFCDEEPFOUNDATION\",\r\n    1306400036: \"IFCDEEPFOUNDATIONTYPE\",\r\n    3632507154: \"IFCDERIVEDPROFILEDEF\",\r\n    1765591967: \"IFCDERIVEDUNIT\",\r\n    1045800335: \"IFCDERIVEDUNITELEMENT\",\r\n    2949456006: \"IFCDIMENSIONALEXPONENTS\",\r\n    32440307: \"IFCDIRECTION\",\r\n    1335981549: \"IFCDISCRETEACCESSORY\",\r\n    2635815018: \"IFCDISCRETEACCESSORYTYPE\",\r\n    1945343521: \"IFCDISTANCEEXPRESSION\",\r\n    1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\r\n    1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\r\n    562808652: \"IFCDISTRIBUTIONCIRCUIT\",\r\n    1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\r\n    2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\r\n    1945004755: \"IFCDISTRIBUTIONELEMENT\",\r\n    3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\r\n    3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\r\n    3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\r\n    3041715199: \"IFCDISTRIBUTIONPORT\",\r\n    3205830791: \"IFCDISTRIBUTIONSYSTEM\",\r\n    1154170062: \"IFCDOCUMENTINFORMATION\",\r\n    770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\r\n    3732053477: \"IFCDOCUMENTREFERENCE\",\r\n    395920057: \"IFCDOOR\",\r\n    2963535650: \"IFCDOORLININGPROPERTIES\",\r\n    1714330368: \"IFCDOORPANELPROPERTIES\",\r\n    3242481149: \"IFCDOORSTANDARDCASE\",\r\n    526551008: \"IFCDOORSTYLE\",\r\n    2323601079: \"IFCDOORTYPE\",\r\n    445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\r\n    4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\r\n    342316401: \"IFCDUCTFITTING\",\r\n    869906466: \"IFCDUCTFITTINGTYPE\",\r\n    3518393246: \"IFCDUCTSEGMENT\",\r\n    3760055223: \"IFCDUCTSEGMENTTYPE\",\r\n    1360408905: \"IFCDUCTSILENCER\",\r\n    2030761528: \"IFCDUCTSILENCERTYPE\",\r\n    3900360178: \"IFCEDGE\",\r\n    476780140: \"IFCEDGECURVE\",\r\n    1472233963: \"IFCEDGELOOP\",\r\n    1904799276: \"IFCELECTRICAPPLIANCE\",\r\n    663422040: \"IFCELECTRICAPPLIANCETYPE\",\r\n    862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\r\n    2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\r\n    3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\r\n    3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\r\n    264262732: \"IFCELECTRICGENERATOR\",\r\n    1534661035: \"IFCELECTRICGENERATORTYPE\",\r\n    402227799: \"IFCELECTRICMOTOR\",\r\n    1217240411: \"IFCELECTRICMOTORTYPE\",\r\n    1003880860: \"IFCELECTRICTIMECONTROL\",\r\n    712377611: \"IFCELECTRICTIMECONTROLTYPE\",\r\n    1758889154: \"IFCELEMENT\",\r\n    4123344466: \"IFCELEMENTASSEMBLY\",\r\n    2397081782: \"IFCELEMENTASSEMBLYTYPE\",\r\n    1623761950: \"IFCELEMENTCOMPONENT\",\r\n    2590856083: \"IFCELEMENTCOMPONENTTYPE\",\r\n    1883228015: \"IFCELEMENTQUANTITY\",\r\n    339256511: \"IFCELEMENTTYPE\",\r\n    2777663545: \"IFCELEMENTARYSURFACE\",\r\n    1704287377: \"IFCELLIPSE\",\r\n    2835456948: \"IFCELLIPSEPROFILEDEF\",\r\n    1658829314: \"IFCENERGYCONVERSIONDEVICE\",\r\n    2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\r\n    2814081492: \"IFCENGINE\",\r\n    132023988: \"IFCENGINETYPE\",\r\n    3747195512: \"IFCEVAPORATIVECOOLER\",\r\n    3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\r\n    484807127: \"IFCEVAPORATOR\",\r\n    3390157468: \"IFCEVAPORATORTYPE\",\r\n    4148101412: \"IFCEVENT\",\r\n    211053100: \"IFCEVENTTIME\",\r\n    4024345920: \"IFCEVENTTYPE\",\r\n    297599258: \"IFCEXTENDEDPROPERTIES\",\r\n    4294318154: \"IFCEXTERNALINFORMATION\",\r\n    3200245327: \"IFCEXTERNALREFERENCE\",\r\n    1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\r\n    1209101575: \"IFCEXTERNALSPATIALELEMENT\",\r\n    2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\r\n    2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\r\n    1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\r\n    3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\r\n    477187591: \"IFCEXTRUDEDAREASOLID\",\r\n    2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\r\n    2556980723: \"IFCFACE\",\r\n    2047409740: \"IFCFACEBASEDSURFACEMODEL\",\r\n    1809719519: \"IFCFACEBOUND\",\r\n    803316827: \"IFCFACEOUTERBOUND\",\r\n    3008276851: \"IFCFACESURFACE\",\r\n    807026263: \"IFCFACETEDBREP\",\r\n    3737207727: \"IFCFACETEDBREPWITHVOIDS\",\r\n    24185140: \"IFCFACILITY\",\r\n    1310830890: \"IFCFACILITYPART\",\r\n    4219587988: \"IFCFAILURECONNECTIONCONDITION\",\r\n    3415622556: \"IFCFAN\",\r\n    346874300: \"IFCFANTYPE\",\r\n    647756555: \"IFCFASTENER\",\r\n    2489546625: \"IFCFASTENERTYPE\",\r\n    2827207264: \"IFCFEATUREELEMENT\",\r\n    2143335405: \"IFCFEATUREELEMENTADDITION\",\r\n    1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\r\n    738692330: \"IFCFILLAREASTYLE\",\r\n    374418227: \"IFCFILLAREASTYLEHATCHING\",\r\n    315944413: \"IFCFILLAREASTYLETILES\",\r\n    819412036: \"IFCFILTER\",\r\n    1810631287: \"IFCFILTERTYPE\",\r\n    1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\r\n    4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\r\n    2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\r\n    2058353004: \"IFCFLOWCONTROLLER\",\r\n    3907093117: \"IFCFLOWCONTROLLERTYPE\",\r\n    4278956645: \"IFCFLOWFITTING\",\r\n    3198132628: \"IFCFLOWFITTINGTYPE\",\r\n    182646315: \"IFCFLOWINSTRUMENT\",\r\n    4037862832: \"IFCFLOWINSTRUMENTTYPE\",\r\n    2188021234: \"IFCFLOWMETER\",\r\n    3815607619: \"IFCFLOWMETERTYPE\",\r\n    3132237377: \"IFCFLOWMOVINGDEVICE\",\r\n    1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\r\n    987401354: \"IFCFLOWSEGMENT\",\r\n    1834744321: \"IFCFLOWSEGMENTTYPE\",\r\n    707683696: \"IFCFLOWSTORAGEDEVICE\",\r\n    1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\r\n    2223149337: \"IFCFLOWTERMINAL\",\r\n    2297155007: \"IFCFLOWTERMINALTYPE\",\r\n    3508470533: \"IFCFLOWTREATMENTDEVICE\",\r\n    3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\r\n    900683007: \"IFCFOOTING\",\r\n    1893162501: \"IFCFOOTINGTYPE\",\r\n    263784265: \"IFCFURNISHINGELEMENT\",\r\n    4238390223: \"IFCFURNISHINGELEMENTTYPE\",\r\n    1509553395: \"IFCFURNITURE\",\r\n    1268542332: \"IFCFURNITURETYPE\",\r\n    3493046030: \"IFCGEOGRAPHICELEMENT\",\r\n    4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\r\n    987898635: \"IFCGEOMETRICCURVESET\",\r\n    3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\r\n    2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\r\n    4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\r\n    3590301190: \"IFCGEOMETRICSET\",\r\n    3009204131: \"IFCGRID\",\r\n    852622518: \"IFCGRIDAXIS\",\r\n    178086475: \"IFCGRIDPLACEMENT\",\r\n    2706460486: \"IFCGROUP\",\r\n    812098782: \"IFCHALFSPACESOLID\",\r\n    3319311131: \"IFCHEATEXCHANGER\",\r\n    1251058090: \"IFCHEATEXCHANGERTYPE\",\r\n    2068733104: \"IFCHUMIDIFIER\",\r\n    1806887404: \"IFCHUMIDIFIERTYPE\",\r\n    1484403080: \"IFCISHAPEPROFILEDEF\",\r\n    3905492369: \"IFCIMAGETEXTURE\",\r\n    3570813810: \"IFCINDEXEDCOLOURMAP\",\r\n    2571569899: \"IFCINDEXEDPOLYCURVE\",\r\n    178912537: \"IFCINDEXEDPOLYGONALFACE\",\r\n    2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\r\n    1437953363: \"IFCINDEXEDTEXTUREMAP\",\r\n    2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\r\n    4175244083: \"IFCINTERCEPTOR\",\r\n    3946677679: \"IFCINTERCEPTORTYPE\",\r\n    3113134337: \"IFCINTERSECTIONCURVE\",\r\n    2391368822: \"IFCINVENTORY\",\r\n    3741457305: \"IFCIRREGULARTIMESERIES\",\r\n    3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\r\n    2176052936: \"IFCJUNCTIONBOX\",\r\n    4288270099: \"IFCJUNCTIONBOXTYPE\",\r\n    572779678: \"IFCLSHAPEPROFILEDEF\",\r\n    3827777499: \"IFCLABORRESOURCE\",\r\n    428585644: \"IFCLABORRESOURCETYPE\",\r\n    1585845231: \"IFCLAGTIME\",\r\n    76236018: \"IFCLAMP\",\r\n    1051575348: \"IFCLAMPTYPE\",\r\n    2655187982: \"IFCLIBRARYINFORMATION\",\r\n    3452421091: \"IFCLIBRARYREFERENCE\",\r\n    4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\r\n    629592764: \"IFCLIGHTFIXTURE\",\r\n    1161773419: \"IFCLIGHTFIXTURETYPE\",\r\n    1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\r\n    1402838566: \"IFCLIGHTSOURCE\",\r\n    125510826: \"IFCLIGHTSOURCEAMBIENT\",\r\n    2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\r\n    4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\r\n    1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\r\n    3422422726: \"IFCLIGHTSOURCESPOT\",\r\n    1281925730: \"IFCLINE\",\r\n    3092502836: \"IFCLINESEGMENT2D\",\r\n    388784114: \"IFCLINEARPLACEMENT\",\r\n    1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\r\n    2624227202: \"IFCLOCALPLACEMENT\",\r\n    1008929658: \"IFCLOOP\",\r\n    1425443689: \"IFCMANIFOLDSOLIDBREP\",\r\n    3057273783: \"IFCMAPCONVERSION\",\r\n    2347385850: \"IFCMAPPEDITEM\",\r\n    1838606355: \"IFCMATERIAL\",\r\n    1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\r\n    3708119000: \"IFCMATERIALCONSTITUENT\",\r\n    2852063980: \"IFCMATERIALCONSTITUENTSET\",\r\n    760658860: \"IFCMATERIALDEFINITION\",\r\n    2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\r\n    248100487: \"IFCMATERIALLAYER\",\r\n    3303938423: \"IFCMATERIALLAYERSET\",\r\n    1303795690: \"IFCMATERIALLAYERSETUSAGE\",\r\n    1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\r\n    2199411900: \"IFCMATERIALLIST\",\r\n    2235152071: \"IFCMATERIALPROFILE\",\r\n    164193824: \"IFCMATERIALPROFILESET\",\r\n    3079605661: \"IFCMATERIALPROFILESETUSAGE\",\r\n    3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\r\n    552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\r\n    3265635763: \"IFCMATERIALPROPERTIES\",\r\n    853536259: \"IFCMATERIALRELATIONSHIP\",\r\n    1507914824: \"IFCMATERIALUSAGEDEFINITION\",\r\n    2597039031: \"IFCMEASUREWITHUNIT\",\r\n    377706215: \"IFCMECHANICALFASTENER\",\r\n    2108223431: \"IFCMECHANICALFASTENERTYPE\",\r\n    1437502449: \"IFCMEDICALDEVICE\",\r\n    1114901282: \"IFCMEDICALDEVICETYPE\",\r\n    1073191201: \"IFCMEMBER\",\r\n    1911478936: \"IFCMEMBERSTANDARDCASE\",\r\n    3181161470: \"IFCMEMBERTYPE\",\r\n    3368373690: \"IFCMETRIC\",\r\n    2998442950: \"IFCMIRROREDPROFILEDEF\",\r\n    2706619895: \"IFCMONETARYUNIT\",\r\n    2474470126: \"IFCMOTORCONNECTION\",\r\n    977012517: \"IFCMOTORCONNECTIONTYPE\",\r\n    1918398963: \"IFCNAMEDUNIT\",\r\n    3888040117: \"IFCOBJECT\",\r\n    219451334: \"IFCOBJECTDEFINITION\",\r\n    3701648758: \"IFCOBJECTPLACEMENT\",\r\n    2251480897: \"IFCOBJECTIVE\",\r\n    4143007308: \"IFCOCCUPANT\",\r\n    590820931: \"IFCOFFSETCURVE\",\r\n    3388369263: \"IFCOFFSETCURVE2D\",\r\n    3505215534: \"IFCOFFSETCURVE3D\",\r\n    2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\r\n    2665983363: \"IFCOPENSHELL\",\r\n    3588315303: \"IFCOPENINGELEMENT\",\r\n    3079942009: \"IFCOPENINGSTANDARDCASE\",\r\n    4251960020: \"IFCORGANIZATION\",\r\n    1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\r\n    643959842: \"IFCORIENTATIONEXPRESSION\",\r\n    1029017970: \"IFCORIENTEDEDGE\",\r\n    144952367: \"IFCOUTERBOUNDARYCURVE\",\r\n    3694346114: \"IFCOUTLET\",\r\n    2837617999: \"IFCOUTLETTYPE\",\r\n    1207048766: \"IFCOWNERHISTORY\",\r\n    2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\r\n    2519244187: \"IFCPATH\",\r\n    1682466193: \"IFCPCURVE\",\r\n    2382730787: \"IFCPERFORMANCEHISTORY\",\r\n    3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\r\n    3327091369: \"IFCPERMIT\",\r\n    2077209135: \"IFCPERSON\",\r\n    101040310: \"IFCPERSONANDORGANIZATION\",\r\n    3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\r\n    2483315170: \"IFCPHYSICALQUANTITY\",\r\n    2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\r\n    1687234759: \"IFCPILE\",\r\n    1158309216: \"IFCPILETYPE\",\r\n    310824031: \"IFCPIPEFITTING\",\r\n    804291784: \"IFCPIPEFITTINGTYPE\",\r\n    3612865200: \"IFCPIPESEGMENT\",\r\n    4231323485: \"IFCPIPESEGMENTTYPE\",\r\n    597895409: \"IFCPIXELTEXTURE\",\r\n    2004835150: \"IFCPLACEMENT\",\r\n    603570806: \"IFCPLANARBOX\",\r\n    1663979128: \"IFCPLANAREXTENT\",\r\n    220341763: \"IFCPLANE\",\r\n    3171933400: \"IFCPLATE\",\r\n    1156407060: \"IFCPLATESTANDARDCASE\",\r\n    4017108033: \"IFCPLATETYPE\",\r\n    2067069095: \"IFCPOINT\",\r\n    4022376103: \"IFCPOINTONCURVE\",\r\n    1423911732: \"IFCPOINTONSURFACE\",\r\n    2924175390: \"IFCPOLYLOOP\",\r\n    2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\r\n    2839578677: \"IFCPOLYGONALFACESET\",\r\n    3724593414: \"IFCPOLYLINE\",\r\n    3740093272: \"IFCPORT\",\r\n    1946335990: \"IFCPOSITIONINGELEMENT\",\r\n    3355820592: \"IFCPOSTALADDRESS\",\r\n    759155922: \"IFCPREDEFINEDCOLOUR\",\r\n    2559016684: \"IFCPREDEFINEDCURVEFONT\",\r\n    3727388367: \"IFCPREDEFINEDITEM\",\r\n    3778827333: \"IFCPREDEFINEDPROPERTIES\",\r\n    3967405729: \"IFCPREDEFINEDPROPERTYSET\",\r\n    1775413392: \"IFCPREDEFINEDTEXTFONT\",\r\n    677532197: \"IFCPRESENTATIONITEM\",\r\n    2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\r\n    1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\r\n    3119450353: \"IFCPRESENTATIONSTYLE\",\r\n    2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\r\n    2744685151: \"IFCPROCEDURE\",\r\n    569719735: \"IFCPROCEDURETYPE\",\r\n    2945172077: \"IFCPROCESS\",\r\n    4208778838: \"IFCPRODUCT\",\r\n    673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\r\n    2095639259: \"IFCPRODUCTREPRESENTATION\",\r\n    3958567839: \"IFCPROFILEDEF\",\r\n    2802850158: \"IFCPROFILEPROPERTIES\",\r\n    103090709: \"IFCPROJECT\",\r\n    653396225: \"IFCPROJECTLIBRARY\",\r\n    2904328755: \"IFCPROJECTORDER\",\r\n    3843373140: \"IFCPROJECTEDCRS\",\r\n    3651124850: \"IFCPROJECTIONELEMENT\",\r\n    2598011224: \"IFCPROPERTY\",\r\n    986844984: \"IFCPROPERTYABSTRACTION\",\r\n    871118103: \"IFCPROPERTYBOUNDEDVALUE\",\r\n    1680319473: \"IFCPROPERTYDEFINITION\",\r\n    148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\r\n    4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\r\n    3710013099: \"IFCPROPERTYENUMERATION\",\r\n    2752243245: \"IFCPROPERTYLISTVALUE\",\r\n    941946838: \"IFCPROPERTYREFERENCEVALUE\",\r\n    1451395588: \"IFCPROPERTYSET\",\r\n    3357820518: \"IFCPROPERTYSETDEFINITION\",\r\n    492091185: \"IFCPROPERTYSETTEMPLATE\",\r\n    3650150729: \"IFCPROPERTYSINGLEVALUE\",\r\n    110355661: \"IFCPROPERTYTABLEVALUE\",\r\n    3521284610: \"IFCPROPERTYTEMPLATE\",\r\n    1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\r\n    738039164: \"IFCPROTECTIVEDEVICE\",\r\n    2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\r\n    655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\r\n    1842657554: \"IFCPROTECTIVEDEVICETYPE\",\r\n    3219374653: \"IFCPROXY\",\r\n    90941305: \"IFCPUMP\",\r\n    2250791053: \"IFCPUMPTYPE\",\r\n    2044713172: \"IFCQUANTITYAREA\",\r\n    2093928680: \"IFCQUANTITYCOUNT\",\r\n    931644368: \"IFCQUANTITYLENGTH\",\r\n    2090586900: \"IFCQUANTITYSET\",\r\n    3252649465: \"IFCQUANTITYTIME\",\r\n    2405470396: \"IFCQUANTITYVOLUME\",\r\n    825690147: \"IFCQUANTITYWEIGHT\",\r\n    2262370178: \"IFCRAILING\",\r\n    2893384427: \"IFCRAILINGTYPE\",\r\n    3024970846: \"IFCRAMP\",\r\n    3283111854: \"IFCRAMPFLIGHT\",\r\n    2324767716: \"IFCRAMPFLIGHTTYPE\",\r\n    1469900589: \"IFCRAMPTYPE\",\r\n    1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\r\n    683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\r\n    2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\r\n    3615266464: \"IFCRECTANGLEPROFILEDEF\",\r\n    2798486643: \"IFCRECTANGULARPYRAMID\",\r\n    3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\r\n    3915482550: \"IFCRECURRENCEPATTERN\",\r\n    2433181523: \"IFCREFERENCE\",\r\n    4021432810: \"IFCREFERENT\",\r\n    3413951693: \"IFCREGULARTIMESERIES\",\r\n    1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\r\n    3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\r\n    979691226: \"IFCREINFORCINGBAR\",\r\n    2572171363: \"IFCREINFORCINGBARTYPE\",\r\n    3027567501: \"IFCREINFORCINGELEMENT\",\r\n    964333572: \"IFCREINFORCINGELEMENTTYPE\",\r\n    2320036040: \"IFCREINFORCINGMESH\",\r\n    2310774935: \"IFCREINFORCINGMESHTYPE\",\r\n    160246688: \"IFCRELAGGREGATES\",\r\n    3939117080: \"IFCRELASSIGNS\",\r\n    1683148259: \"IFCRELASSIGNSTOACTOR\",\r\n    2495723537: \"IFCRELASSIGNSTOCONTROL\",\r\n    1307041759: \"IFCRELASSIGNSTOGROUP\",\r\n    1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\r\n    4278684876: \"IFCRELASSIGNSTOPROCESS\",\r\n    2857406711: \"IFCRELASSIGNSTOPRODUCT\",\r\n    205026976: \"IFCRELASSIGNSTORESOURCE\",\r\n    1865459582: \"IFCRELASSOCIATES\",\r\n    4095574036: \"IFCRELASSOCIATESAPPROVAL\",\r\n    919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\r\n    2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\r\n    982818633: \"IFCRELASSOCIATESDOCUMENT\",\r\n    3840914261: \"IFCRELASSOCIATESLIBRARY\",\r\n    2655215786: \"IFCRELASSOCIATESMATERIAL\",\r\n    826625072: \"IFCRELCONNECTS\",\r\n    1204542856: \"IFCRELCONNECTSELEMENTS\",\r\n    3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\r\n    4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\r\n    3190031847: \"IFCRELCONNECTSPORTS\",\r\n    2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\r\n    1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\r\n    504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\r\n    3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\r\n    3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\r\n    886880790: \"IFCRELCOVERSBLDGELEMENTS\",\r\n    2802773753: \"IFCRELCOVERSSPACES\",\r\n    2565941209: \"IFCRELDECLARES\",\r\n    2551354335: \"IFCRELDECOMPOSES\",\r\n    693640335: \"IFCRELDEFINES\",\r\n    1462361463: \"IFCRELDEFINESBYOBJECT\",\r\n    4186316022: \"IFCRELDEFINESBYPROPERTIES\",\r\n    307848117: \"IFCRELDEFINESBYTEMPLATE\",\r\n    781010003: \"IFCRELDEFINESBYTYPE\",\r\n    3940055652: \"IFCRELFILLSELEMENT\",\r\n    279856033: \"IFCRELFLOWCONTROLELEMENTS\",\r\n    427948657: \"IFCRELINTERFERESELEMENTS\",\r\n    3268803585: \"IFCRELNESTS\",\r\n    1441486842: \"IFCRELPOSITIONS\",\r\n    750771296: \"IFCRELPROJECTSELEMENT\",\r\n    1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\r\n    4122056220: \"IFCRELSEQUENCE\",\r\n    366585022: \"IFCRELSERVICESBUILDINGS\",\r\n    3451746338: \"IFCRELSPACEBOUNDARY\",\r\n    3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\r\n    1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\r\n    1401173127: \"IFCRELVOIDSELEMENT\",\r\n    478536968: \"IFCRELATIONSHIP\",\r\n    816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\r\n    1076942058: \"IFCREPRESENTATION\",\r\n    3377609919: \"IFCREPRESENTATIONCONTEXT\",\r\n    3008791417: \"IFCREPRESENTATIONITEM\",\r\n    1660063152: \"IFCREPRESENTATIONMAP\",\r\n    2914609552: \"IFCRESOURCE\",\r\n    2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\r\n    1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\r\n    2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\r\n    1042787934: \"IFCRESOURCETIME\",\r\n    1856042241: \"IFCREVOLVEDAREASOLID\",\r\n    3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\r\n    4158566097: \"IFCRIGHTCIRCULARCONE\",\r\n    3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\r\n    2016517767: \"IFCROOF\",\r\n    2781568857: \"IFCROOFTYPE\",\r\n    2341007311: \"IFCROOT\",\r\n    2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\r\n    448429030: \"IFCSIUNIT\",\r\n    3053780830: \"IFCSANITARYTERMINAL\",\r\n    1768891740: \"IFCSANITARYTERMINALTYPE\",\r\n    1054537805: \"IFCSCHEDULINGTIME\",\r\n    2157484638: \"IFCSEAMCURVE\",\r\n    2042790032: \"IFCSECTIONPROPERTIES\",\r\n    4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\r\n    1862484736: \"IFCSECTIONEDSOLID\",\r\n    1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\r\n    1509187699: \"IFCSECTIONEDSPINE\",\r\n    4086658281: \"IFCSENSOR\",\r\n    1783015770: \"IFCSENSORTYPE\",\r\n    1329646415: \"IFCSHADINGDEVICE\",\r\n    4074543187: \"IFCSHADINGDEVICETYPE\",\r\n    867548509: \"IFCSHAPEASPECT\",\r\n    3982875396: \"IFCSHAPEMODEL\",\r\n    4240577450: \"IFCSHAPEREPRESENTATION\",\r\n    4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\r\n    3692461612: \"IFCSIMPLEPROPERTY\",\r\n    3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\r\n    4097777520: \"IFCSITE\",\r\n    1529196076: \"IFCSLAB\",\r\n    3127900445: \"IFCSLABELEMENTEDCASE\",\r\n    3027962421: \"IFCSLABSTANDARDCASE\",\r\n    2533589738: \"IFCSLABTYPE\",\r\n    2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\r\n    3420628829: \"IFCSOLARDEVICE\",\r\n    1072016465: \"IFCSOLARDEVICETYPE\",\r\n    723233188: \"IFCSOLIDMODEL\",\r\n    3856911033: \"IFCSPACE\",\r\n    1999602285: \"IFCSPACEHEATER\",\r\n    1305183839: \"IFCSPACEHEATERTYPE\",\r\n    3812236995: \"IFCSPACETYPE\",\r\n    1412071761: \"IFCSPATIALELEMENT\",\r\n    710998568: \"IFCSPATIALELEMENTTYPE\",\r\n    2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\r\n    3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\r\n    463610769: \"IFCSPATIALZONE\",\r\n    2481509218: \"IFCSPATIALZONETYPE\",\r\n    451544542: \"IFCSPHERE\",\r\n    4015995234: \"IFCSPHERICALSURFACE\",\r\n    1404847402: \"IFCSTACKTERMINAL\",\r\n    3112655638: \"IFCSTACKTERMINALTYPE\",\r\n    331165859: \"IFCSTAIR\",\r\n    4252922144: \"IFCSTAIRFLIGHT\",\r\n    1039846685: \"IFCSTAIRFLIGHTTYPE\",\r\n    338393293: \"IFCSTAIRTYPE\",\r\n    682877961: \"IFCSTRUCTURALACTION\",\r\n    3544373492: \"IFCSTRUCTURALACTIVITY\",\r\n    2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\r\n    1179482911: \"IFCSTRUCTURALCONNECTION\",\r\n    2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\r\n    1004757350: \"IFCSTRUCTURALCURVEACTION\",\r\n    4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\r\n    214636428: \"IFCSTRUCTURALCURVEMEMBER\",\r\n    2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\r\n    2757150158: \"IFCSTRUCTURALCURVEREACTION\",\r\n    3136571912: \"IFCSTRUCTURALITEM\",\r\n    1807405624: \"IFCSTRUCTURALLINEARACTION\",\r\n    2162789131: \"IFCSTRUCTURALLOAD\",\r\n    385403989: \"IFCSTRUCTURALLOADCASE\",\r\n    3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\r\n    1252848954: \"IFCSTRUCTURALLOADGROUP\",\r\n    1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\r\n    609421318: \"IFCSTRUCTURALLOADORRESULT\",\r\n    2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\r\n    2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\r\n    1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\r\n    1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\r\n    1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\r\n    2525727697: \"IFCSTRUCTURALLOADSTATIC\",\r\n    3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\r\n    530289379: \"IFCSTRUCTURALMEMBER\",\r\n    1621171031: \"IFCSTRUCTURALPLANARACTION\",\r\n    2082059205: \"IFCSTRUCTURALPOINTACTION\",\r\n    734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\r\n    1235345126: \"IFCSTRUCTURALPOINTREACTION\",\r\n    3689010777: \"IFCSTRUCTURALREACTION\",\r\n    2986769608: \"IFCSTRUCTURALRESULTGROUP\",\r\n    3657597509: \"IFCSTRUCTURALSURFACEACTION\",\r\n    1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\r\n    3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\r\n    2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\r\n    603775116: \"IFCSTRUCTURALSURFACEREACTION\",\r\n    2830218821: \"IFCSTYLEMODEL\",\r\n    3958052878: \"IFCSTYLEDITEM\",\r\n    3049322572: \"IFCSTYLEDREPRESENTATION\",\r\n    148013059: \"IFCSUBCONTRACTRESOURCE\",\r\n    4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\r\n    2233826070: \"IFCSUBEDGE\",\r\n    2513912981: \"IFCSURFACE\",\r\n    699246055: \"IFCSURFACECURVE\",\r\n    2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\r\n    3101698114: \"IFCSURFACEFEATURE\",\r\n    2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\r\n    4124788165: \"IFCSURFACEOFREVOLUTION\",\r\n    2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\r\n    1300840506: \"IFCSURFACESTYLE\",\r\n    3303107099: \"IFCSURFACESTYLELIGHTING\",\r\n    1607154358: \"IFCSURFACESTYLEREFRACTION\",\r\n    1878645084: \"IFCSURFACESTYLERENDERING\",\r\n    846575682: \"IFCSURFACESTYLESHADING\",\r\n    1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\r\n    626085974: \"IFCSURFACETEXTURE\",\r\n    2247615214: \"IFCSWEPTAREASOLID\",\r\n    1260650574: \"IFCSWEPTDISKSOLID\",\r\n    1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\r\n    230924584: \"IFCSWEPTSURFACE\",\r\n    1162798199: \"IFCSWITCHINGDEVICE\",\r\n    2315554128: \"IFCSWITCHINGDEVICETYPE\",\r\n    2254336722: \"IFCSYSTEM\",\r\n    413509423: \"IFCSYSTEMFURNITUREELEMENT\",\r\n    1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\r\n    3071757647: \"IFCTSHAPEPROFILEDEF\",\r\n    985171141: \"IFCTABLE\",\r\n    2043862942: \"IFCTABLECOLUMN\",\r\n    531007025: \"IFCTABLEROW\",\r\n    812556717: \"IFCTANK\",\r\n    5716631: \"IFCTANKTYPE\",\r\n    3473067441: \"IFCTASK\",\r\n    1549132990: \"IFCTASKTIME\",\r\n    2771591690: \"IFCTASKTIMERECURRING\",\r\n    3206491090: \"IFCTASKTYPE\",\r\n    912023232: \"IFCTELECOMADDRESS\",\r\n    3824725483: \"IFCTENDON\",\r\n    2347447852: \"IFCTENDONANCHOR\",\r\n    3081323446: \"IFCTENDONANCHORTYPE\",\r\n    3663046924: \"IFCTENDONCONDUIT\",\r\n    2281632017: \"IFCTENDONCONDUITTYPE\",\r\n    2415094496: \"IFCTENDONTYPE\",\r\n    2387106220: \"IFCTESSELLATEDFACESET\",\r\n    901063453: \"IFCTESSELLATEDITEM\",\r\n    4282788508: \"IFCTEXTLITERAL\",\r\n    3124975700: \"IFCTEXTLITERALWITHEXTENT\",\r\n    1447204868: \"IFCTEXTSTYLE\",\r\n    1983826977: \"IFCTEXTSTYLEFONTMODEL\",\r\n    2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\r\n    1640371178: \"IFCTEXTSTYLETEXTMODEL\",\r\n    280115917: \"IFCTEXTURECOORDINATE\",\r\n    1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\r\n    2552916305: \"IFCTEXTUREMAP\",\r\n    1210645708: \"IFCTEXTUREVERTEX\",\r\n    3611470254: \"IFCTEXTUREVERTEXLIST\",\r\n    1199560280: \"IFCTIMEPERIOD\",\r\n    3101149627: \"IFCTIMESERIES\",\r\n    581633288: \"IFCTIMESERIESVALUE\",\r\n    1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\r\n    1735638870: \"IFCTOPOLOGYREPRESENTATION\",\r\n    1935646853: \"IFCTOROIDALSURFACE\",\r\n    3825984169: \"IFCTRANSFORMER\",\r\n    1692211062: \"IFCTRANSFORMERTYPE\",\r\n    2595432518: \"IFCTRANSITIONCURVESEGMENT2D\",\r\n    1620046519: \"IFCTRANSPORTELEMENT\",\r\n    2097647324: \"IFCTRANSPORTELEMENTTYPE\",\r\n    2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\r\n    2916149573: \"IFCTRIANGULATEDFACESET\",\r\n    1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\r\n    3593883385: \"IFCTRIMMEDCURVE\",\r\n    3026737570: \"IFCTUBEBUNDLE\",\r\n    1600972822: \"IFCTUBEBUNDLETYPE\",\r\n    1628702193: \"IFCTYPEOBJECT\",\r\n    3736923433: \"IFCTYPEPROCESS\",\r\n    2347495698: \"IFCTYPEPRODUCT\",\r\n    3698973494: \"IFCTYPERESOURCE\",\r\n    427810014: \"IFCUSHAPEPROFILEDEF\",\r\n    180925521: \"IFCUNITASSIGNMENT\",\r\n    630975310: \"IFCUNITARYCONTROLELEMENT\",\r\n    3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\r\n    4292641817: \"IFCUNITARYEQUIPMENT\",\r\n    1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\r\n    4207607924: \"IFCVALVE\",\r\n    728799441: \"IFCVALVETYPE\",\r\n    1417489154: \"IFCVECTOR\",\r\n    2799835756: \"IFCVERTEX\",\r\n    2759199220: \"IFCVERTEXLOOP\",\r\n    1907098498: \"IFCVERTEXPOINT\",\r\n    1530820697: \"IFCVIBRATIONDAMPER\",\r\n    3956297820: \"IFCVIBRATIONDAMPERTYPE\",\r\n    2391383451: \"IFCVIBRATIONISOLATOR\",\r\n    3313531582: \"IFCVIBRATIONISOLATORTYPE\",\r\n    2769231204: \"IFCVIRTUALELEMENT\",\r\n    891718957: \"IFCVIRTUALGRIDINTERSECTION\",\r\n    926996030: \"IFCVOIDINGFEATURE\",\r\n    2391406946: \"IFCWALL\",\r\n    4156078855: \"IFCWALLELEMENTEDCASE\",\r\n    3512223829: \"IFCWALLSTANDARDCASE\",\r\n    1898987631: \"IFCWALLTYPE\",\r\n    4237592921: \"IFCWASTETERMINAL\",\r\n    1133259667: \"IFCWASTETERMINALTYPE\",\r\n    3304561284: \"IFCWINDOW\",\r\n    336235671: \"IFCWINDOWLININGPROPERTIES\",\r\n    512836454: \"IFCWINDOWPANELPROPERTIES\",\r\n    486154966: \"IFCWINDOWSTANDARDCASE\",\r\n    1299126871: \"IFCWINDOWSTYLE\",\r\n    4009809668: \"IFCWINDOWTYPE\",\r\n    4088093105: \"IFCWORKCALENDAR\",\r\n    1028945134: \"IFCWORKCONTROL\",\r\n    4218914973: \"IFCWORKPLAN\",\r\n    3342526732: \"IFCWORKSCHEDULE\",\r\n    1236880293: \"IFCWORKTIME\",\r\n    2543172580: \"IFCZSHAPEPROFILEDEF\",\r\n    1033361043: \"IFCZONE\",\r\n}","import { IfcTypesMap } from '../IfcTypesMap';\r\nimport { JSONObject, pName } from '../../BaseDefinitions';\r\nimport { BasePropertyManager } from './BasePropertyManager';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { PropertyAPI } from './BaseDefinitions';\r\n\r\nexport class JSONPropertyManager extends BasePropertyManager implements PropertyAPI {\r\n\r\n    async getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return { ...this.state.models[modelID].jsonData[id] };\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        const chunks = await this.getSpatialTreeChunks(modelID);\r\n        const projectsIDs = await this.getAllItemsOfType(modelID, IFCPROJECT, false);\r\n        const projectID = projectsIDs[0];\r\n        const project = JSONPropertyManager.newIfcProject(projectID);\r\n        await this.getSpatialNode(modelID, project, chunks, includeProperties);\r\n        return { ...project };\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const typeName = IfcTypesMap[type];\r\n        if (!typeName) {\r\n            throw new Error(`Type not found: ${type}`);\r\n        }\r\n        return this.filterItemsByType(data, typeName, verbose);\r\n    }\r\n\r\n    override async getProperty(modelID: number, elementID: number, recursive = false, propName: pName) {\r\n        const resultIDs = await this.getAllRelatedItemsOfType(modelID, elementID, propName);\r\n        const result = this.getItemsByID(modelID, resultIDs);\r\n        if (recursive) {\r\n            result.forEach(result => this.getReferencesRecursively(modelID, result));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected override getNodeType(modelID: number, id: number) {\r\n        return this.state.models[modelID].jsonData[id].type;\r\n    }\r\n\r\n    protected override async getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = await this.getAllItemsOfType(modelID, propNames.name, true);\r\n        relation.forEach(rel => {\r\n            this.saveChunk(chunks, propNames, rel);\r\n        });\r\n    }\r\n\r\n    private filterItemsByType(data: { [id: number]: JSONObject }, typeName: string, verbose: boolean) {\r\n        const result: any[] = [];\r\n        Object.keys(data).forEach(key => {\r\n            const numKey = parseInt(key);\r\n            if (data[numKey].type.toUpperCase() === typeName) {\r\n                result.push(verbose ? { ...data[numKey] } : numKey);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    private async getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = await this.getAllItemsOfType(modelID, propNames.name, true);\r\n        const IDs: number[] = [];\r\n        lines.forEach(line => {\r\n            const isRelated = JSONPropertyManager.isRelated(id, line, propNames);\r\n            if (isRelated) this.getRelated(line, propNames, IDs);\r\n        });\r\n        return IDs;\r\n    }\r\n\r\n    private getItemsByID(modelID: number, ids: number[]) {\r\n        const data = this.state.models[modelID].jsonData;\r\n        const result: any[] = [];\r\n        ids.forEach(id => result.push({ ...data[id] }));\r\n        return result;\r\n    }\r\n\r\n    private getReferencesRecursively(modelID: number, jsonObject: any) {\r\n        if (jsonObject == undefined) return;\r\n        const keys = Object.keys(jsonObject);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n            this.getJSONItem(modelID, jsonObject, key);\r\n        }\r\n    }\r\n\r\n    private getJSONItem(modelID: number, jsonObject: any, key: string) {\r\n        if (Array.isArray(jsonObject[key])) {\r\n            return this.getMultipleJSONItems(modelID, jsonObject, key);\r\n        }\r\n        if (jsonObject[key] && jsonObject[key].type === 5) {\r\n            jsonObject[key] = this.getItemsByID(modelID, [jsonObject[key].value])[0];\r\n            this.getReferencesRecursively(modelID, jsonObject[key]);\r\n        }\r\n    }\r\n\r\n    private getMultipleJSONItems(modelID: number, jsonObject: any, key: string) {\r\n        jsonObject[key] = jsonObject[key].map((item: any) => {\r\n            if (item.type === 5) {\r\n                item = this.getItemsByID(modelID, [item.value])[0];\r\n                this.getReferencesRecursively(modelID, item);\r\n            }\r\n            return item;\r\n        });\r\n    }\r\n}","import {\r\n    IdAttrName\r\n} from '../../BaseDefinitions';\r\nimport { IfcState } from '../../BaseDefinitions';\r\nimport { BufferGeometry } from 'three';\r\nimport { WebIfcPropertyManager } from './WebIfcPropertyManager';\r\nimport { JSONPropertyManager } from './JSONPropertyManager';\r\nimport { PropertyManagerAPI, PropertyAPI } from './BaseDefinitions';\r\n\r\n/**\r\n * Contains the logic to get the properties of the items within an IFC model.\r\n */\r\nexport class PropertyManager implements PropertyManagerAPI {\r\n    private readonly webIfcProps: WebIfcPropertyManager;\r\n    private readonly jsonProps: JSONPropertyManager;\r\n    private currentProps: PropertyAPI;\r\n\r\n    constructor(private state: IfcState) {\r\n        this.webIfcProps = new WebIfcPropertyManager(state);\r\n        this.jsonProps = new JSONPropertyManager(state);\r\n        this.currentProps = this.webIfcProps;\r\n    }\r\n\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) throw new Error('Geometry does not have index information.');\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    async getItemProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getItemProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    async getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getPropertySets(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getTypeProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getMaterialsProperties(modelID: number, elementID: number, recursive = false) {\r\n        this.updateCurrentProps();\r\n        return this.currentProps.getMaterialsProperties(modelID, elementID, recursive);\r\n    }\r\n\r\n    async getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        this.updateCurrentProps();\r\n        if (!this.state.useJSON && includeProperties) {\r\n            console.warn('Including properties in getSpatialStructure with the JSON workflow disabled can lead to poor performance.');\r\n        }\r\n        return await this.currentProps.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n\r\n    private updateCurrentProps() {\r\n        this.currentProps = this.state.useJSON ? this.jsonProps : this.webIfcProps;\r\n    }\r\n\r\n}\r\n","import { IfcState, WebIfcAPI } from '../BaseDefinitions';\r\n\r\nexport interface IfcWorkerAPI {\r\n    post: (data: any) => void;\r\n    initializeAPI: (api: WebIfcAPI) => void;\r\n    state?: IfcState;\r\n    postCallback: (data: any, result: any, serializer?: any) => void;\r\n}\r\n\r\nexport enum WorkerActions {\r\n    // Worker State Actions\r\n    updateStateUseJson = 'updateStateUseJson',\r\n    updateStateWebIfcSettings = 'updateStateWebIfcSettings',\r\n    updateModelStateTypes = 'updateModelStateTypes',\r\n    updateModelStateJsonData = 'updateModelStateJsonData',\r\n    loadJsonDataFromWorker = 'loadJsonDataFromWorker',\r\n    dispose = 'dispose',\r\n\r\n    // WebIFC Actions\r\n    Close = 'Close',\r\n    DisposeWebIfc = 'DisposeWebIfc',\r\n    Init = 'Init',\r\n    OpenModel = 'OpenModel',\r\n    CreateModel = 'CreateModel',\r\n    ExportFileAsIFC = 'ExportFileAsIFC',\r\n    GetGeometry = 'GetGeometry',\r\n    GetLine = 'GetLine',\r\n    GetAndClearErrors = 'GetAndClearErrors',\r\n    WriteLine = 'WriteLine',\r\n    FlattenLine = 'FlattenLine',\r\n    GetRawLineData = 'GetRawLineData',\r\n    WriteRawLineData = 'WriteRawLineData',\r\n    GetLineIDsWithType = 'GetLineIDsWithType',\r\n    GetAllLines = 'GetAllLines',\r\n    SetGeometryTransformation = 'SetGeometryTransformation',\r\n    GetCoordinationMatrix = 'GetCoordinationMatrix',\r\n    GetVertexArray = 'GetVertexArray',\r\n    GetIndexArray = 'GetIndexArray',\r\n    getSubArray = 'getSubArray',\r\n    CloseModel = 'CloseModel',\r\n    StreamAllMeshes = 'StreamAllMeshes',\r\n    StreamAllMeshesWithTypes = 'StreamAllMeshesWithTypes',\r\n    IsModelOpen = 'IsModelOpen',\r\n    LoadAllGeometry = 'LoadAllGeometry',\r\n    GetFlatMesh = 'GetFlatMesh',\r\n    SetWasmPath = 'SetWasmPath',\r\n\r\n    // Parser\r\n    parse = 'parse',\r\n    setupOptionalCategories = 'setupOptionalCategories',\r\n\r\n    // Properties\r\n    getExpressId = 'getExpressId',\r\n    initializeProperties = 'initializeProperties',\r\n    getAllItemsOfType = 'getAllItemsOfType',\r\n    getItemProperties = 'getItemProperties',\r\n    getMaterialsProperties = 'getMaterialsProperties',\r\n    getPropertySets = 'getPropertySets',\r\n    getSpatialStructure = 'getSpatialStructure',\r\n    getTypeProperties = 'getTypeProperties',    \r\n}\r\n\r\nexport enum WorkerAPIs {\r\n    workerState = 'workerState',\r\n    webIfc = 'webIfc',\r\n    properties = 'properties',\r\n    parser = 'parser',\r\n}\r\n\r\nexport interface IfcEventData {\r\n    worker: WorkerAPIs;\r\n    action: WorkerActions;\r\n    args: any;\r\n    id: number;\r\n    result: any;\r\n    onProgress: boolean;\r\n}\r\n\r\nexport interface RootWorker {\r\n    [WorkerAPIs.workerState]: WorkerStateAPI;\r\n    [WorkerAPIs.webIfc]: WebIfcWorkerAPI;\r\n    [WorkerAPIs.properties]: PropertyWorkerAPI;\r\n}\r\n\r\nexport interface BaseWorkerAPI {\r\n    API: WorkerAPIs;\r\n}\r\n\r\nexport type IfcWorkerEventHandler = (data: IfcEventData) => void;\r\n\r\nexport interface WorkerStateAPI extends BaseWorkerAPI {\r\n    [WorkerActions.updateStateUseJson]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateStateWebIfcSettings]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateModelStateTypes]: IfcWorkerEventHandler;\r\n    [WorkerActions.updateModelStateJsonData]: IfcWorkerEventHandler;\r\n    [WorkerActions.loadJsonDataFromWorker]: IfcWorkerEventHandler;\r\n    [WorkerActions.dispose]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface PropertyWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.getAllItemsOfType]: IfcWorkerEventHandler;\r\n    [WorkerActions.getItemProperties]: IfcWorkerEventHandler;\r\n    [WorkerActions.getMaterialsProperties]: IfcWorkerEventHandler;\r\n    [WorkerActions.getPropertySets]: IfcWorkerEventHandler;\r\n    [WorkerActions.getSpatialStructure]: IfcWorkerEventHandler;\r\n    [WorkerActions.getTypeProperties]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface ParserWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.parse]: IfcWorkerEventHandler;\r\n    [WorkerActions.setupOptionalCategories]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface WebIfcWorkerAPI extends BaseWorkerAPI {\r\n    [WorkerActions.Init]: IfcWorkerEventHandler;\r\n    [WorkerActions.Close]: IfcWorkerEventHandler;\r\n    [WorkerActions.DisposeWebIfc]: IfcWorkerEventHandler;\r\n    [WorkerActions.OpenModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.CreateModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.ExportFileAsIFC]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetGeometry]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetAndClearErrors]: IfcWorkerEventHandler;\r\n    [WorkerActions.WriteLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.FlattenLine]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetRawLineData]: IfcWorkerEventHandler;\r\n    [WorkerActions.WriteRawLineData]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetLineIDsWithType]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetAllLines]: IfcWorkerEventHandler;\r\n    [WorkerActions.SetGeometryTransformation]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetCoordinationMatrix]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetVertexArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetIndexArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.getSubArray]: IfcWorkerEventHandler;\r\n    [WorkerActions.CloseModel]: IfcWorkerEventHandler;\r\n    [WorkerActions.StreamAllMeshes]: IfcWorkerEventHandler;\r\n    [WorkerActions.StreamAllMeshesWithTypes]: IfcWorkerEventHandler;\r\n    [WorkerActions.IsModelOpen]: IfcWorkerEventHandler;\r\n    [WorkerActions.LoadAllGeometry]: IfcWorkerEventHandler;\r\n    [WorkerActions.GetFlatMesh]: IfcWorkerEventHandler;\r\n    [WorkerActions.SetWasmPath]: IfcWorkerEventHandler;\r\n}\r\n\r\nexport interface SerializedVector {\r\n    [key: number]: any;\r\n\r\n    size: number;\r\n}\r\n\r\nexport interface SerializedIfcGeometry {\r\n    GetVertexData: number;\r\n    GetVertexDataSize: number;\r\n    GetIndexData: number;\r\n    GetIndexDataSize: number;\r\n}\r\n\r\nexport interface SerializedFlatMesh {\r\n    geometries: SerializedVector;\r\n    expressID: number;\r\n}\r\n\r\nexport const ErrorStateNotAvailable = 'The state of the worker does not exist';\r\nexport const ErrorRootStateNotAvailable = 'The root worker does not have any state';\r\nexport const ErrorPropertiesNotAvailable = 'Error: Properties not available from web worker';\r\nexport const ErrorParserNotAvailable = 'Error: Parser not available from web worker';\r\nexport const ErrorBadJsonPath = 'Error: Model not available from web worker';\r\nexport const ErrorBadJson = 'Error: The given Json could not be read as a JS object';","import { IfcState } from '../BaseDefinitions';\r\nimport { IfcElements } from './IFCElementsMap'\r\nimport { IFCWorkerHandler } from '../web-workers/IFCWorkerHandler';\r\n\r\n/**\r\n * Contains the logic to manage the type (e. g. IfcWall, IfcWindow, IfcDoor) of\r\n * all the items within an IFC file.\r\n */\r\nexport class TypeManager {\r\n\r\n    constructor(private state: IfcState) {\r\n        this.state = state;\r\n    }\r\n\r\n    async getAllTypes(worker?: IFCWorkerHandler){\r\n\t\tfor (let modelID in this.state.models) {\r\n\t\t\tif (this.state.models.hasOwnProperty(modelID)) {\r\n\t\t\t\tconst types = this.state.models[modelID].types;\r\n\t\t\t\tif (Object.keys(types).length == 0) {\r\n\t\t\t\t\tawait this.getAllTypesOfModel(parseInt(modelID), worker);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    async getAllTypesOfModel(modelID: number, worker?: IFCWorkerHandler) {\r\n        const result = {};\r\n        const elements = Object.keys(IfcElements).map((e) => parseInt(e));\r\n        for(let i = 0; i < elements.length; i++) {\r\n            const element = elements[i];\r\n            const lines = await this.state.api.GetLineIDsWithType(modelID, element);\r\n            const size = lines.size();\r\n            //@ts-ignore\r\n            for (let i = 0; i < size; i++) result[lines.get(i)] = element;\r\n        }\r\n        if(this.state.worker.active && worker) {\r\n            // TODO: When using web workers, store the type information there and request it to the worker\r\n            // Otherwise the type data is stored in 2 different places at the same time\r\n            await worker.workerState.updateModelStateTypes(modelID, result);\r\n        }\r\n        this.state.models[modelID].types = result;\r\n    }\r\n}\r\n","import { BufferGeometry, Mesh } from 'three';\r\n\r\nexport class BvhManager {\r\n    private computeBoundsTree?: any;\r\n    private disposeBoundsTree?: any;\r\n    private acceleratedRaycast?: any;\r\n\r\n    initializeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.computeBoundsTree = computeBoundsTree;\r\n        this.disposeBoundsTree = disposeBoundsTree;\r\n        this.acceleratedRaycast = acceleratedRaycast;\r\n        this.setupThreeMeshBVH();\r\n    }\r\n\r\n    applyThreeMeshBVH(geometry: BufferGeometry) {\r\n        if (this.computeBoundsTree)\r\n            //@ts-ignore\r\n            geometry.computeBoundsTree();\r\n    }\r\n\r\n    private setupThreeMeshBVH() {\r\n        if (!this.computeBoundsTree || !this.disposeBoundsTree || !this.acceleratedRaycast) return;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.computeBoundsTree = this.computeBoundsTree;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.disposeBoundsTree = this.disposeBoundsTree;\r\n        Mesh.prototype.raycast = this.acceleratedRaycast;\r\n    }\r\n}","import { SerializedIfcGeometry } from '../BaseDefinitions';\r\nimport { IfcGeometry as WebIfcIfcGeometry } from 'web-ifc';\r\n\r\nexport class IfcGeometry implements WebIfcIfcGeometry {\r\n    private readonly _GetVertexData: number;\r\n    private readonly _GetVertexDataSize: number;\r\n    private readonly _GetIndexData: number;\r\n    private readonly _GetIndexDataSize: number;\r\n\r\n    constructor(vector: SerializedIfcGeometry) {\r\n        this._GetVertexData = vector.GetVertexData;\r\n        this._GetVertexDataSize = vector.GetVertexDataSize;\r\n        this._GetIndexData = vector.GetIndexData;\r\n        this._GetIndexDataSize = vector.GetIndexDataSize;\r\n    }\r\n\r\n    GetVertexData() {\r\n        return this._GetVertexData;\r\n    }\r\n\r\n    GetVertexDataSize() {\r\n        return this._GetVertexDataSize;\r\n    }\r\n\r\n    GetIndexData() {\r\n        return this._GetIndexData;\r\n    }\r\n\r\n    GetIndexDataSize() {\r\n        return this._GetIndexDataSize;\r\n    }\r\n}","import { SerializedVector } from '../BaseDefinitions';\r\nimport { Vector as WebIfcVector } from 'web-ifc';\r\n\r\nexport class Vector<T> implements WebIfcVector<T> {\r\n    private readonly _size: number;\r\n    private _data: { [key: number]: T } = {};\r\n\r\n    constructor(vector: SerializedVector) {\r\n        this._size = vector.size;\r\n        const keys = Object.keys(vector).filter((key) => key.indexOf('size') === -1).map(key => parseInt(key));\r\n        keys.forEach((key) => this._data[key] = vector[key]);\r\n    }\r\n\r\n    size() {\r\n        return this._size;\r\n    }\r\n\r\n    get(index: number) {\r\n        return this._data[index];\r\n    }\r\n}","import { SerializedFlatMesh } from '../BaseDefinitions';\r\nimport { FlatMesh as WebIfcFlatMesh, PlacedGeometry } from 'web-ifc';\r\nimport { Vector } from './Vector';\r\nimport { Serializer } from './Serializer';\r\n\r\nexport class FlatMesh implements WebIfcFlatMesh {\r\n    geometries: Vector<PlacedGeometry>;\r\n    expressID: number;\r\n\r\n    constructor(serializer: Serializer, flatMesh: SerializedFlatMesh) {\r\n        this.expressID = flatMesh.expressID;\r\n        this.geometries = serializer.reconstructVector(flatMesh.geometries);\r\n    }\r\n}","import {Color, DoubleSide, MeshLambertMaterial} from 'three';\r\n\r\nexport class SerializedMaterial {\r\n    color: number[];\r\n    opacity: number;\r\n    transparent: boolean;\r\n\r\n    constructor(material: MeshLambertMaterial) {\r\n        this.color = [material.color.r, material.color.g, material.color.b];\r\n        this.opacity = material.opacity;\r\n        this.transparent = material.transparent;\r\n    }\r\n}\r\n\r\nexport class MaterialReconstructor {\r\n    static new(material: SerializedMaterial) {\r\n        return new MeshLambertMaterial({\r\n            color: new Color(material.color[0], material.color[1], material.color[2]),\r\n            opacity: material.opacity,\r\n            transparent: material.transparent,\r\n            side: DoubleSide\r\n        })\r\n    }\r\n}","import { SerializedVector } from '../BaseDefinitions';\r\nimport { FlatMesh as WebIfcFlatMesh, Vector as WebIfcVector } from 'web-ifc';\r\nimport { Serializer } from './Serializer';\r\n\r\nexport class FlatMeshVector implements WebIfcVector<WebIfcFlatMesh> {\r\n    private readonly _size: number;\r\n    private _data: { [key: number]: WebIfcFlatMesh } = {};\r\n\r\n    constructor(serializer: Serializer, vector: SerializedVector) {\r\n        this._size = vector.size;\r\n        const keys = Object.keys(vector).filter((key) => key.indexOf('size') === -1).map(key => parseInt(key));\r\n        keys.forEach(key => this._data[key] = serializer.reconstructFlatMesh(vector[key]));\r\n    }\r\n\r\n    size() {\r\n        return this._size;\r\n    }\r\n\r\n    get(index: number) {\r\n        return this._data[index];\r\n    }\r\n}","import { IFCModel } from '../../components/IFCModel';\r\nimport { Material, MeshLambertMaterial } from 'three';\r\nimport { MaterialReconstructor, SerializedMaterial } from './Material';\r\nimport { GeometryReconstructor, SerializedGeometry } from './Geometry';\r\n\r\nexport class SerializedMesh {\r\n\r\n    modelID: number;\r\n    geometry: SerializedGeometry;\r\n    materials: SerializedMaterial [] = [];\r\n\r\n    constructor(model: IFCModel) {\r\n        this.modelID = model.modelID;\r\n        this.geometry = new SerializedGeometry(model.geometry);\r\n        if (Array.isArray(model.material)) {\r\n            model.material.forEach(mat => {\r\n                this.materials.push(new SerializedMaterial(mat as MeshLambertMaterial));\r\n            });\r\n        } else {\r\n            this.materials.push(new SerializedMaterial(model.material as MeshLambertMaterial));\r\n        }\r\n    }\r\n}\r\n\r\nexport class MeshReconstructor {\r\n\r\n    static new(serialized: SerializedMesh) {\r\n        const model = new IFCModel();\r\n        model.modelID = serialized.modelID;\r\n        model.geometry = GeometryReconstructor.new(serialized.geometry);\r\n        MeshReconstructor.getMaterials(serialized, model);\r\n        return model;\r\n    }\r\n\r\n    private static getMaterials(serialized: SerializedMesh, model: IFCModel) {\r\n        model.material = [];\r\n        const mats = model.material as Material[];\r\n        serialized.materials.forEach(mat => {\r\n            mats.push(MaterialReconstructor.new(mat));\r\n        });\r\n    }\r\n}","import { IfcState } from '../../BaseDefinitions';\r\nimport { IFCUtils } from '../IFCUtils'\r\n\r\nexport class Data {\r\n    isLoaded = false;\r\n    workPlans: {[key: number]: any} = {}\r\n    workSchedules: {[key: number]: any} = {}\r\n    workCalendars: {[key: number]: any} = {}\r\n    workTimes: {[key: number]: any} = {}\r\n    recurrencePatterns: {[key: number]: any} = {}\r\n    timePeriods: {[key: number]: any} = {}\r\n    tasks: {[key: number]: any} = {}\r\n    taskTimes: {[key: number]: any} = {}\r\n    lagTimes: {[key: number]: any} = {}\r\n    sequences: {[key: number]: any} = {}\r\n    utils: any;\r\n\r\n    constructor(public state: IfcState) {\r\n        this.utils = new IFCUtils(this.state);\r\n\r\n    }\r\n\r\n    //TO DO: Refactor to retrieve top-level task from a workschedule entity, and then load tasks.\r\n    // Currently only tasks are retrieved. \r\n    async load(modelID: number){\r\n        await this.loadTasks(modelID)\r\n        await this.loadWorkSchedules(modelID)\r\n        await this.loadWorkCalendars(modelID)\r\n        await this.loadWorkTimes(modelID)\r\n        await this.loadTimePeriods(modelID)\r\n        this.isLoaded = true\r\n\r\n    }\r\n\r\n\r\n    async loadWorkSchedules(modelID: number){\r\n        let workSchedules = await this.utils.byType(modelID, \"IfcWorkSchedule\")\r\n        for (let i = 0; i < workSchedules.length; i++){\r\n            let workSchedule = workSchedules[i]\r\n            this.workSchedules[workSchedule.expressID] = {   \r\n                \"Id\": workSchedule.expressID,\r\n                \"Name\": workSchedule.Name.value,\r\n                \"Description\": ((workSchedule.Description) ? workSchedule.Description.value : \"\"),\r\n                \"Creators\": [], \r\n                \"CreationDate\": ((workSchedule.CreationDate) ? workSchedule.CreationDate.value : \"\"),\r\n                \"StartTime\": ((workSchedule.StartTime) ? workSchedule.StartTime.value : \"\"),\r\n                \"FinishTime\": ((workSchedule.FinishTime) ? workSchedule.FinishTime.value : \"\"),\r\n                \"TotalFloat\": ((workSchedule.TotalFloat) ? workSchedule.TotalFloat.value : \"\"),\r\n                \"RelatedObjects\": [],\r\n            }\r\n        }\r\n        this.loadWorkScheduleRelatedObjects(modelID)\r\n    }\r\n\r\n\r\n    async loadWorkScheduleRelatedObjects(modelID: number){\r\n        let relsControls = await this.utils.byType(modelID, \"IfcRelAssignsToControl\");\r\n        for (let i = 0; i < relsControls.length; i++){\r\n            let relControls = relsControls[i];\r\n            let relatingControl = await this.utils.byId(modelID, relControls.RelatingControl.value);\r\n            let relatedObjects = relControls.RelatedObjects;\r\n            if (this.utils.isA(relatingControl, \"IfcWorkSchedule\")) {\r\n                for (var objectIndex = 0; objectIndex < relatedObjects.length; objectIndex++) {\r\n                    this.workSchedules[relatingControl.expressID][\"RelatedObjects\"].push(relatedObjects[objectIndex].value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadTasks(modelID: number){\r\n        let tasks = await this.utils.byType(modelID, \"IfcTask\")\r\n        for (let i = 0; i < tasks.length; i++){\r\n            let task = tasks[i]\r\n            this.tasks[task.expressID] = {   \r\n                \"Id\": task.expressID,\r\n                \"Name\": ((task.Name) ? task.Name.value : \"\"),\r\n                \"PredefinedType\": ((task.PredefinedType) ? task.PredefinedType.value : \"\"),\r\n                \"TaskTime\": ((task.TaskTime) ? await this.utils.byId(modelID, task.TaskTime.value) : \"\"), \r\n                \"Identification\": ((task.Identification) ? task.Identification.value : \"\"),\r\n                \"IsMilestone\": ((task.IsMilestone) ? task.IsMilestone.value : \"\"),\r\n                \"IsPredecessorTo\": [],\r\n                \"IsSucessorFrom\": [],\r\n                \"Inputs\": [],\r\n                \"Resources\": [],\r\n                \"Outputs\": [],\r\n                \"Controls\": [],\r\n                \"Nests\": [],\r\n                \"IsNestedBy\": [],\r\n                \"OperatesOn\":[],\r\n                \"HasAssignmentsWorkCalendars\": [],\r\n            }\r\n        }\r\n        await this.loadTaskSequence(modelID)\r\n        await this.loadTaskOutputs(modelID)\r\n        await this.loadTaskNesting(modelID)\r\n        await this.loadTaskOperations(modelID)\r\n        await this.loadAssignementsWorkCalendar(modelID)\r\n    }\r\n\r\n    async loadTaskSequence(modelID: number){\r\n        let relsSequence = await this.utils.idsByType(modelID, \"IfcRelSequence\")\r\n        for (let i = 0; i < relsSequence.size(); i++){\r\n            let relSequenceId = relsSequence.get(i)\r\n            if(relSequenceId !==0){\r\n                let relSequence = await this.utils.byId(modelID, relSequenceId)\r\n                let related_process = relSequence.RelatedProcess.value;\r\n                let relatingProcess = relSequence.RelatingProcess.value;\r\n                this.tasks[relatingProcess][\"IsPredecessorTo\"].push(relSequence.expressID)\r\n                this.tasks[related_process][\"IsSucessorFrom\"].push(relSequence.expressID)\r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    async loadTaskOutputs(modelID: number){\r\n        let rels_assigns_to_product = await this.utils.byType(modelID, \"IfcRelAssignsToProduct\");\r\n        for (let i = 0; i < rels_assigns_to_product.length; i++){\r\n            let relAssignsToProduct = rels_assigns_to_product[i]\r\n            let relatedObject = await this.utils.byId(modelID, relAssignsToProduct.RelatedObjects[0].value); \r\n            if (this.utils.isA(relatedObject, \"IfcTask\")) {\r\n                let relatingProduct = await this.utils.byId(modelID, relAssignsToProduct.RelatingProduct.value);\r\n                this.tasks[relatedObject.expressID][\"Outputs\"].push(relatingProduct.expressID);\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadTaskNesting(modelID: number){\r\n        let rels_nests = await this.utils.byType(modelID, \"IfcRelNests\");\r\n        for (let i = 0; i < rels_nests.length; i++){\r\n            let relNests = rels_nests[i];\r\n            let relating_object = await this.utils.byId(modelID, relNests.RelatingObject.value);\r\n            if (this.utils.isA(relating_object, \"IfcTask\")) {\r\n                let relatedObjects = relNests.RelatedObjects;\r\n                for (var object_index = 0; object_index < relatedObjects.length; object_index++) {\r\n                    this.tasks[relating_object.expressID][\"IsNestedBy\"].push(relatedObjects[object_index].value);\r\n                    this.tasks[relatedObjects[object_index].value][\"Nests\"].push(relating_object.expressID);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadTaskOperations(modelID: number){\r\n        let relsAssignsToProcess = await this.utils.byType(modelID, \"IfcRelAssignsToProcess\");\r\n        for (let i = 0; i < relsAssignsToProcess.length; i++){\r\n            let relAssignToProcess = relsAssignsToProcess[i];\r\n            let relatingProcess = await this.utils.byId(modelID, relAssignToProcess.RelatingProcess.value);\r\n            if (this.utils.isA(relatingProcess, \"IfcTask\")) {\r\n                let relatedObjects = relAssignToProcess.RelatedObjects;\r\n                for (var object_index = 0; object_index < relatedObjects.length; object_index++) {\r\n                    this.tasks[relatingProcess.expressID][\"OperatesOn\"].push(relatedObjects[object_index].value);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadAssignementsWorkCalendar(modelID: number){\r\n        let relsAssignsToControl = await this.utils.byType(modelID, \"IfcRelAssignsToControl\");\r\n        for (let i = 0; i < relsAssignsToControl.length; i++){\r\n            let relAssignsToControl = relsAssignsToControl[i];\r\n            let relatingControl = await this.utils.byId(modelID, relAssignsToControl.RelatingControl.value);\r\n            if (this.utils.isA(relatingControl, \"IfcWorkCalendar\")) {\r\n                let relatedObjects = relAssignsToControl.RelatedObjects;\r\n                for (var object_index = 0; object_index < relatedObjects.length; object_index++) {\r\n                    this.tasks[relatedObjects[object_index].value][\"HasAssignmentsWorkCalendars\"].push(relatingControl.expressID);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async loadWorkCalendars(modelID: number){\r\n        let workCalendars = await this.utils.byType(modelID, \"IfcWorkCalendar\")\r\n        for (let i = 0; i < workCalendars.length; i++){\r\n            let workCalendar = workCalendars[i]\r\n            let workCalenderData = {   \r\n                \"Id\": workCalendar.expressID,\r\n                \"Name\": ((workCalendar.Name) ? workCalendar.Name.value : \"\"),\r\n                \"Description\": ((workCalendar.Description) ? workCalendar.Description.value : \"\"),\r\n                \"WorkingTimes\": ((workCalendar.WorkingTimes) ? workCalendar.WorkingTimes : []),\r\n                \"ExceptionTimes\": ((workCalendar.ExceptionTimes) ? workCalendar.ExceptionTimes : []),\r\n            }\r\n            this.workCalendars[workCalendar.expressID] = workCalenderData\r\n        }\r\n        // this.loadworkCalendarRelatedObjects(modelID)\r\n    }    \r\n\r\n    async loadWorkTimes(modelID: number){\r\n        let workTimes = await this.utils.byType(modelID, \"IfcWorkTime\")\r\n        for (let i = 0; i < workTimes.length; i++){\r\n            let workTime = workTimes[i]\r\n            let workTimeData = {   \r\n                \"Name\": ((workTime.Name) ? workTime.Name.value : \"\"),\r\n                \"RecurrencePattern\": ((workTime.RecurrencePattern) ? await this.utils.byId(modelID, workTime.RecurrencePattern.value) : \"\"), \r\n                \"Start\": ((workTime.Start) ? new Date(workTime.Start.value) : \"\"),\r\n                \"Finish\": ((workTime.Finish) ? new Date(workTime.Finish.value) : \"\"),\r\n            }\r\n            this.workTimes[workTime.expressID] = workTimeData\r\n        }\r\n    }\r\n\r\n    async loadTimePeriods(modelID: number){\r\n        let timePeriods = await this.utils.byType(modelID, \"IfcTimePeriod\")\r\n        for (let i = 0; i < timePeriods.length; i++){\r\n            let timePeriod = timePeriods[i]\r\n            let workTimeData = {   \r\n                \"StartTime\": ((timePeriod.StartTime) ? new Date(timePeriod.StartTime.value) : \"\"),\r\n                \"EndTime\": ((timePeriod.EndTime) ? new Date(timePeriod.EndTime.value) : \"\"),\r\n            }\r\n            this.timePeriods[timePeriod.expressID] = workTimeData\r\n        }\r\n    }    \r\n}\r\n","import { PropertyAPI, PropertyManagerAPI } from '../../components/properties/BaseDefinitions';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { WorkerActions, WorkerAPIs } from '../BaseDefinitions';\r\nimport { BufferGeometry } from 'three';\r\nimport { IdAttrName } from '../../BaseDefinitions';\r\n\r\nexport class PropertyHandler implements PropertyManagerAPI {\r\n\r\n    API = WorkerAPIs.properties;\r\n\r\n    constructor(private handler: IFCWorkerHandler) {\r\n    }\r\n\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) throw new Error('Geometry does not have index information.');\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getAllItemsOfType, { modelID, type, verbose });\r\n    }\r\n\r\n    getItemProperties(modelID: number, elementID: number, recursive: boolean): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.getItemProperties, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getMaterialsProperties(modelID: number, elementID: number, recursive: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getMaterialsProperties, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getPropertySets(modelID: number, elementID: number, recursive: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getPropertySets, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getTypeProperties(modelID: number, elementID: number, recursive: boolean): Promise<any[]> {\r\n        return this.handler.request(this.API, WorkerActions.getTypeProperties, { modelID, elementID, recursive });\r\n    }\r\n\r\n    getSpatialStructure(modelID: number, includeProperties?: boolean): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.getSpatialStructure, { modelID, includeProperties });\r\n    }\r\n}","import { WebIfcAPI } from '../../BaseDefinitions';\r\nimport {\r\n    SerializedFlatMesh,\r\n    SerializedIfcGeometry,\r\n    SerializedVector,\r\n    WorkerActions,\r\n    WorkerAPIs\r\n} from '../BaseDefinitions';\r\nimport { FlatMesh, IfcGeometry, LoaderError, LoaderSettings, RawLineData, Vector } from 'web-ifc';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { Serializer } from '../serializer/Serializer';\r\n\r\nexport class WebIfcHandler implements WebIfcAPI {\r\n\r\n    wasmModule: any;\r\n    API = WorkerAPIs.webIfc;\r\n\r\n    constructor(private handler: IFCWorkerHandler, private serializer: Serializer) {\r\n    }\r\n\r\n    async Init(): Promise<void> {\r\n        this.wasmModule = true;\r\n        return this.handler.request(this.API, WorkerActions.Init);\r\n    }\r\n\r\n    async OpenModel(data: string | Uint8Array, settings?: LoaderSettings): Promise<number> {\r\n        return this.handler.request(this.API, WorkerActions.OpenModel, { data, settings });\r\n    }\r\n\r\n    async CreateModel(settings?: LoaderSettings): Promise<number> {\r\n        return this.handler.request(this.API, WorkerActions.CreateModel, { settings });\r\n    }\r\n\r\n    async ExportFileAsIFC(modelID: number): Promise<Uint8Array> {\r\n        return this.handler.request(this.API, WorkerActions.ExportFileAsIFC, { modelID });\r\n    }\r\n\r\n    async GetGeometry(modelID: number, geometryExpressID: number): Promise<IfcGeometry> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (geom: SerializedIfcGeometry) => {\r\n            return this.serializer.reconstructIfcGeometry(geom);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetGeometry, { modelID, geometryExpressID });\r\n    }\r\n\r\n    async GetLine(modelID: number, expressID: number, flatten?: boolean): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.GetLine, { modelID, expressID, flatten });\r\n    }\r\n\r\n    async GetAndClearErrors(modelID: number): Promise<Vector<LoaderError>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetAndClearErrors, { modelID });\r\n    }\r\n\r\n    async WriteLine(modelID: number, lineObject: any): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.WriteLine, { modelID, lineObject });\r\n    }\r\n\r\n    async FlattenLine(modelID: number, line: any): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.FlattenLine, { modelID, line });\r\n    }\r\n\r\n    async GetRawLineData(modelID: number, expressID: number): Promise<RawLineData> {\r\n        return this.handler.request(this.API, WorkerActions.GetRawLineData, { modelID, expressID });\r\n    }\r\n\r\n    async WriteRawLineData(modelID: number, data: RawLineData): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.WriteRawLineData, { modelID, data });\r\n    }\r\n\r\n    async GetLineIDsWithType(modelID: number, type: number): Promise<Vector<number>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetLineIDsWithType, { modelID, type });\r\n    }\r\n\r\n    async GetAllLines(modelID: number): Promise<Vector<number>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetAllLines, { modelID });\r\n    }\r\n\r\n    async SetGeometryTransformation(modelID: number, transformationMatrix: number[]): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.SetGeometryTransformation, {\r\n            modelID,\r\n            transformationMatrix\r\n        });\r\n    }\r\n\r\n    async GetCoordinationMatrix(modelID: number): Promise<number[]> {\r\n        return this.handler.request(this.API, WorkerActions.GetCoordinationMatrix, { modelID });\r\n    }\r\n\r\n    async GetVertexArray(ptr: number, size: number): Promise<Float32Array> {\r\n        return this.handler.request(this.API, WorkerActions.GetVertexArray, { ptr, size });\r\n    }\r\n\r\n    async GetIndexArray(ptr: number, size: number): Promise<Uint32Array> {\r\n        return this.handler.request(this.API, WorkerActions.GetIndexArray, { ptr, size });\r\n    }\r\n\r\n    async getSubArray(heap: any, startPtr: any, sizeBytes: any): Promise<any> {\r\n        return this.handler.request(this.API, WorkerActions.getSubArray, { heap, startPtr, sizeBytes });\r\n    }\r\n\r\n    async CloseModel(modelID: number): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.CloseModel, { modelID });\r\n    }\r\n\r\n    async StreamAllMeshes(modelID: number, meshCallback: (mesh: FlatMesh) => void): Promise<void> {\r\n        this.handler.callbackHandlers[this.handler.requestID] = {\r\n            action: meshCallback,\r\n            serializer: this.serializer.reconstructFlatMesh\r\n        };\r\n        return this.handler.request(this.API, WorkerActions.StreamAllMeshes, { modelID });\r\n    }\r\n\r\n    async StreamAllMeshesWithTypes(modelID: number, types: number[], meshCallback: (mesh: FlatMesh) => void): Promise<void> {\r\n        this.handler.callbackHandlers[this.handler.requestID] = {\r\n            action: meshCallback,\r\n            serializer: this.serializer.reconstructFlatMesh\r\n        };\r\n        return this.handler.request(this.API, WorkerActions.StreamAllMeshesWithTypes, { modelID, types });\r\n    }\r\n\r\n    async IsModelOpen(modelID: number): Promise<boolean> {\r\n        return this.handler.request(this.API, WorkerActions.IsModelOpen, { modelID });\r\n    }\r\n\r\n    async LoadAllGeometry(modelID: number): Promise<Vector<FlatMesh>> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (vector: SerializedVector) => {\r\n            return this.serializer.reconstructFlatMeshVector(vector);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.LoadAllGeometry, { modelID });\r\n    }\r\n\r\n    async GetFlatMesh(modelID: number, expressID: number): Promise<FlatMesh> {\r\n        this.handler.serializeHandlers[this.handler.requestID] = (flatMesh: SerializedFlatMesh) => {\r\n            return this.serializer.reconstructFlatMesh(flatMesh);\r\n        }\r\n        return this.handler.request(this.API, WorkerActions.GetFlatMesh, { modelID, expressID });\r\n    }\r\n\r\n    async SetWasmPath(path: string): Promise<void> {\r\n        return this.handler.request(this.API, WorkerActions.SetWasmPath, { path });\r\n    }\r\n}","export enum DBOperation {\r\n    transferIfcModel,\r\n    transferIndividualItems\r\n}\r\n\r\nexport class IndexedDatabase {\r\n    async save(item: any, id: DBOperation) {\r\n        const open = IndexedDatabase.openOrCreateDB(id);\r\n        this.createSchema(open, id)\r\n        return new Promise<any>((resolve, reject) => {\r\n            open.onsuccess = () => this.saveItem(item, open, id, resolve);\r\n        });\r\n    }\r\n\r\n    async load(id: number) {\r\n        const open = IndexedDatabase.openOrCreateDB(id);\r\n        return new Promise<any>((resolve, reject) => {\r\n            open.onsuccess = () => this.loadItem(open, id, resolve);\r\n        })\r\n    }\r\n\r\n    private createSchema(open: IDBOpenDBRequest, id: DBOperation) {\r\n        open.onupgradeneeded = function () {\r\n            const db = open.result;\r\n            db.createObjectStore(id.toString(), {keyPath: \"id\"});\r\n        };\r\n    }\r\n\r\n    private saveItem(item: any, open: IDBOpenDBRequest, id: DBOperation, resolve: (value: any) => void ) {\r\n        const {db, tx, store} = IndexedDatabase.getDBItems(open, id);\r\n        item.id = id;\r\n        store.put(item);\r\n        tx.oncomplete = () => IndexedDatabase.closeDB(db, tx, resolve);\r\n    }\r\n\r\n    private loadItem(open: IDBOpenDBRequest, id: DBOperation, resolve: (value: any) => void ) {\r\n        const {db, tx, store} = IndexedDatabase.getDBItems(open, id);\r\n        const item = store.get(id);\r\n        const callback = () => {\r\n            delete item.result.id;\r\n            resolve(item.result)\r\n        };\r\n        tx.oncomplete = () => IndexedDatabase.closeDB(db, tx, callback);\r\n    }\r\n\r\n    private static getDBItems(open: IDBOpenDBRequest, id: DBOperation) {\r\n        const db = open.result;\r\n        const tx = db.transaction(id.toString(), \"readwrite\");\r\n        const store = tx.objectStore(id.toString());\r\n        return {db, tx, store};\r\n    }\r\n\r\n    private static openOrCreateDB(id: DBOperation) {\r\n        return indexedDB.open(id.toString(), 1);\r\n    }\r\n\r\n    private static closeDB(db: IDBDatabase, tx: IDBTransaction, resolve: (value: any) => void) {\r\n        db.close();\r\n        resolve(\"success\");\r\n    }\r\n}","import { WorkerActions, WorkerAPIs } from '../BaseDefinitions';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { IfcState } from '../../BaseDefinitions';\r\n\r\nexport class WorkerStateHandler {\r\n    API = WorkerAPIs.workerState;\r\n    state: IfcState;\r\n\r\n    constructor(private handler: IFCWorkerHandler) {\r\n        this.state = this.handler.state;\r\n    }\r\n\r\n    async updateStateUseJson() {\r\n        const useJson = this.state.useJSON;\r\n        return this.handler.request(this.API, WorkerActions.updateStateUseJson, { useJson });\r\n    }\r\n\r\n    async updateStateWebIfcSettings() {\r\n        const webIfcSettings = this.state.webIfcSettings;\r\n        return this.handler.request(this.API, WorkerActions.updateStateWebIfcSettings, { webIfcSettings });\r\n    }\r\n\r\n    async updateModelStateTypes (modelID: number, types: any) {\r\n        return this.handler.request(this.API, WorkerActions.updateModelStateTypes, { modelID, types });\r\n    }\r\n\r\n    async updateModelStateJsonData(modelID: number, jsonData: any) {\r\n        return this.handler.request(this.API, WorkerActions.updateModelStateJsonData, { modelID, jsonData });\r\n    }\r\n\r\n    async loadJsonDataFromWorker(modelID: number, path: string) {\r\n        return this.handler.request(this.API, WorkerActions.loadJsonDataFromWorker, { modelID, path });\r\n    }\r\n}","import {OptionalCategories, ParserAPI, ParserProgress } from '../../components/IFCParser';\r\nimport { WorkerActions, WorkerAPIs } from '../BaseDefinitions';\r\nimport { IFCWorkerHandler } from '../IFCWorkerHandler';\r\nimport { IFCModel } from '../../components/IFCModel';\r\nimport { Serializer } from '../serializer/Serializer';\r\nimport { ParserResult } from '../workers/ParserWorker';\r\nimport { BvhManager } from '../../components/BvhManager';\r\nimport { DBOperation, IndexedDatabase } from '../../indexedDB/IndexedDatabase';\r\nimport { IFCOPENINGELEMENT, IFCSPACE } from \"web-ifc\";\r\n\r\nexport class ParserHandler implements ParserAPI {\r\n\r\n    optionalCategories: OptionalCategories = {\r\n        [IFCSPACE]: true,\r\n        [IFCOPENINGELEMENT]: false\r\n    };\r\n\r\n    API = WorkerAPIs.parser;\r\n\r\n    constructor(private handler: IFCWorkerHandler,\r\n                private serializer: Serializer,\r\n                private BVH: BvhManager,\r\n                private IDB: IndexedDatabase) {\r\n    }\r\n\r\n    async setupOptionalCategories(config: OptionalCategories) {\r\n        this.optionalCategories = config;\r\n        return this.handler.request(this.API, WorkerActions.setupOptionalCategories, {config});\r\n    }\r\n\r\n    async parse(buffer: any, coordinationMatrix?: number[]): Promise<IFCModel> {\r\n        this.handler.onprogressHandlers[this.handler.requestID] = (progress: ParserProgress) => {\r\n            if (this.handler.state.onProgress) this.handler.state.onProgress(progress);\r\n        };\r\n        this.handler.serializeHandlers[this.handler.requestID] = async (result: ParserResult) => {\r\n            this.updateState(result.modelID);\r\n            // await this.getItems(result.modelID);\r\n            return this.getModel();\r\n        };\r\n        return this.handler.request(this.API, WorkerActions.parse, {buffer, coordinationMatrix});\r\n    }\r\n\r\n    getAndClearErrors(_modelId: number): void {\r\n    }\r\n\r\n    private updateState(modelID: number) {\r\n        this.handler.state.models[modelID] = {\r\n            modelID: modelID,\r\n            mesh: {} as any,\r\n            types: {},\r\n            jsonData: {}\r\n        };\r\n    }\r\n\r\n    // private async getItems(modelID: number) {\r\n    //     const items = await this.IDB.load(DBOperation.transferIndividualItems);\r\n    //     this.handler.state.models[modelID].items = this.serializer.reconstructGeometriesByMaterials(items);\r\n    // }\r\n\r\n    private async getModel() {\r\n        const serializedModel = await this.IDB.load(DBOperation.transferIfcModel);\r\n        const model = this.serializer.reconstructIfcModel(serializedModel);\r\n        this.BVH.applyThreeMeshBVH(model.geometry);\r\n        this.handler.state.models[model.modelID].mesh = model;\r\n        return model;\r\n    }\r\n}","import { IfcEventData, WorkerActions, WorkerAPIs } from './BaseDefinitions';\r\nimport { Serializer } from './serializer/Serializer';\r\nimport { PropertyHandler } from './handlers/PropertyHandler';\r\nimport { WebIfcHandler } from './handlers/WebIfcHandler';\r\nimport { IfcState } from '../BaseDefinitions';\r\nimport { WorkerStateHandler } from './handlers/WorkerStateHandler';\r\nimport { ParserHandler } from './handlers/ParserHandler';\r\nimport { BvhManager } from '../components/BvhManager';\r\nimport { IndexedDatabase } from '../indexedDB/IndexedDatabase';\r\n\r\nexport class IFCWorkerHandler {\r\n\r\n    requestID = 0;\r\n    rejectHandlers: any = {};\r\n    resolveHandlers: any = {};\r\n    serializeHandlers: any = {};\r\n    callbackHandlers: { [id: number]: { action: any, serializer: any } } = {};\r\n    onprogressHandlers: any = {};\r\n\r\n    readonly IDB: IndexedDatabase;\r\n    readonly workerState: WorkerStateHandler;\r\n    readonly webIfc: WebIfcHandler;\r\n    readonly properties: PropertyHandler;\r\n    readonly parser: ParserHandler;\r\n\r\n    private ifcWorker: Worker;\r\n    private readonly serializer = new Serializer();\r\n    private readonly workerPath: string;\r\n\r\n    constructor(public state: IfcState, private BVH: BvhManager) {\r\n        this.IDB = new IndexedDatabase();\r\n        this.workerPath = this.state.worker.path;\r\n        this.ifcWorker = new Worker(this.workerPath);\r\n        this.ifcWorker.onmessage = (data: any) => this.handleResponse(data);\r\n        this.properties = new PropertyHandler(this);\r\n        this.parser = new ParserHandler(this, this.serializer, this.BVH, this.IDB);\r\n        this.webIfc = new WebIfcHandler(this, this.serializer);\r\n        this.workerState = new WorkerStateHandler(this);\r\n    }\r\n\r\n    request(worker: WorkerAPIs, action: WorkerActions, args?: any) {\r\n        const data: IfcEventData = {worker, action, args, id: this.requestID, result: undefined, onProgress: false};\r\n\r\n        return new Promise<any>((resolve, reject) => {\r\n            this.resolveHandlers[this.requestID] = resolve;\r\n            this.rejectHandlers[this.requestID] = reject;\r\n            this.requestID++;\r\n            this.ifcWorker.postMessage(data);\r\n        });\r\n    }\r\n\r\n    async terminate() {\r\n        await this.request(WorkerAPIs.workerState, WorkerActions.dispose);\r\n        await this.request(WorkerAPIs.webIfc, WorkerActions.DisposeWebIfc);\r\n        this.ifcWorker.terminate();\r\n    }\r\n\r\n    async Close(): Promise<void> {\r\n        await this.request(WorkerAPIs.webIfc, WorkerActions.Close);\r\n    }\r\n\r\n    private handleResponse(event: MessageEvent) {\r\n        const data = event.data as IfcEventData;\r\n        if (data.onProgress) {\r\n            this.resolveOnProgress(data);\r\n            return;\r\n        }\r\n        this.callHandlers(data);\r\n        delete this.resolveHandlers[data.id];\r\n        delete this.rejectHandlers[data.id];\r\n        delete this.onprogressHandlers[data.id];\r\n    }\r\n\r\n    private callHandlers(data: IfcEventData) {\r\n        try {\r\n            this.resolveSerializations(data);\r\n            this.resolveCallbacks(data);\r\n            this.resolveHandlers[data.id](data.result);\r\n        } catch (error) {\r\n            this.rejectHandlers[data.id](error);\r\n        }\r\n    }\r\n\r\n    private resolveOnProgress(data: IfcEventData) {\r\n        if (this.onprogressHandlers[data.id]) {\r\n            data.result = this.onprogressHandlers[data.id](data.result);\r\n        }\r\n    }\r\n\r\n    private resolveSerializations(data: IfcEventData) {\r\n        if (this.serializeHandlers[data.id]) {\r\n            data.result = this.serializeHandlers[data.id](data.result);\r\n            delete this.serializeHandlers[data.id];\r\n        }\r\n    }\r\n\r\n    private resolveCallbacks(data: IfcEventData) {\r\n        if (this.callbackHandlers[data.id]) {\r\n            let callbackParameter = data.result;\r\n            if (this.callbackHandlers[data.id].serializer) {\r\n                callbackParameter = this.callbackHandlers[data.id].serializer(data.result);\r\n            }\r\n            this.callbackHandlers[data.id].action(callbackParameter);\r\n        }\r\n    }\r\n}","import { IfcState } from '../BaseDefinitions';\r\nimport { Material } from 'three';\r\n\r\nexport class MemoryCleaner {\r\n    constructor(private state: IfcState) {\r\n    }\r\n\r\n    async dispose() {\r\n\r\n        Object.keys(this.state.models).forEach(modelID => {\r\n            const model = this.state.models[parseInt(modelID, 10)];\r\n            model.mesh.removeFromParent();\r\n            const geom = model.mesh.geometry as any;\r\n            if (geom.disposeBoundsTree) geom.disposeBoundsTree();\r\n            geom.dispose();\r\n            if (!Array.isArray(model.mesh.material)) model.mesh.material.dispose();\r\n            else model.mesh.material.forEach(mat => mat.dispose());\r\n            (model.mesh as any) = null;\r\n            (model.types as any) = null;\r\n            (model.jsonData as any) = null;\r\n        });\r\n\r\n        (this.state.api as any) = null;\r\n        (this.state.models as any) = null;\r\n    }\r\n}","import { IfcState } from '../BaseDefinitions';\r\nimport { IfcTypesMap } from './IfcTypesMap'\r\n\r\nexport class IFCUtils {\r\n    \r\n    map: {[key: string]: number} = {};\r\n\r\n    constructor(public state: IfcState) {}\r\n\r\n    getMapping(){\r\n        this.map = this.reverseElementMapping(IfcTypesMap)\r\n    }\r\n\r\n    releaseMapping(){\r\n        this.map = {}\r\n    }\r\n\r\n    reverseElementMapping(obj: {}) {\r\n        let reverseElement = {};\r\n        Object.keys(obj).forEach(key => {\r\n            reverseElement[obj[key as any as keyof typeof obj]] = key as any as keyof typeof obj;\r\n        })\r\n        return reverseElement;\r\n    }\r\n\r\n    isA(entity: any, entity_class: string){\r\n        var test = false;\r\n        if (entity_class){\r\n            if (IfcTypesMap[entity.type] === entity_class.toUpperCase()){\r\n                test = true;\r\n            }\r\n            return test\r\n        }\r\n        else {\r\n            return IfcTypesMap[entity.type]\r\n        }\r\n    }\r\n\r\n    async byId (modelID: number, id: number) {\r\n        return this.state.api.GetLine(modelID, id);\r\n    }\r\n\r\n    async idsByType(modelID: number, entity_class: string){\r\n        this.getMapping()\r\n        let entities_ids = await this.state.api.GetLineIDsWithType(modelID, Number(this.map[entity_class.toUpperCase()]) );\r\n        this.releaseMapping()\r\n        return entities_ids\r\n    }\r\n\r\n    async byType(modelID:number, entity_class:string){\r\n        let entities_ids = await this.idsByType(modelID, entity_class) \r\n        if (entities_ids !== null){\r\n            this.getMapping()\r\n            let items: number[] = [];\r\n            for (let i = 0; i < entities_ids.size(); i++){\r\n                let entity = await this.byId(modelID, entities_ids.get(i))\r\n                items.push(entity);\r\n            } \r\n            this.releaseMapping()\r\n            return items;\r\n        }\r\n    }\r\n}\r\n","export var IfcEvent;\r\n(function (IfcEvent) {\r\n    IfcEvent[\"onCameraReady\"] = \"onCameraReady\";\r\n})(IfcEvent || (IfcEvent = {}));\r\nexport class IfcEvents {\r\n    constructor() {\r\n        this.events = {\r\n            [IfcEvent.onCameraReady]: {\r\n                needsUpdate: false,\r\n                published: false,\r\n                actions: []\r\n            }\r\n        };\r\n    }\r\n    dispose() {\r\n        this.events.onCameraReady.actions.length = 0;\r\n        this.events = null;\r\n    }\r\n    subscribe(event, action) {\r\n        this.events[event].actions.push(action);\r\n        this.events[event].needsUpdate = true;\r\n        this.update(event);\r\n    }\r\n    publish(event) {\r\n        this.events[event].published = true;\r\n        this.update(event);\r\n    }\r\n    update(event) {\r\n        if (this.events[event].needsUpdate && this.events[event].published) {\r\n            const actions = this.events[event].actions;\r\n            for (let i = 0; i < actions.length; i++) {\r\n                actions[i]();\r\n            }\r\n            actions.length = 0;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ifcEvent.js.map","import * as WebIFC from 'web-ifc';\r\nimport { IFCParser, ParserAPI, ParserProgress } from './IFCParser';\r\nimport { SubsetManager } from './subsets/SubsetManager';\r\nimport { PropertyManager } from './properties/PropertyManager';\r\nimport { IfcElements } from './IFCElementsMap';\r\nimport { TypeManager } from './TypeManager';\r\nimport { SubsetConfig, IfcState, JSONObject } from '../BaseDefinitions';\r\nimport {BufferGeometry, Material, Matrix4, Scene} from 'three';\r\nimport { IFCModel } from './IFCModel';\r\nimport { BvhManager } from './BvhManager';\r\nimport { LoaderSettings } from 'web-ifc';\r\nimport { IFCWorkerHandler } from '../web-workers/IFCWorkerHandler';\r\nimport { PropertyManagerAPI } from './properties/BaseDefinitions';\r\nimport { MemoryCleaner } from './MemoryCleaner';\r\nimport { IFCUtils } from './IFCUtils';\r\nimport { Data } from './sequence/Data'\r\nimport { IfcTypesMap } from './IfcTypesMap';\r\n\r\n/**\r\n * Contains all the logic to work with the loaded IFC files (select, edit, etc).\r\n */\r\nexport class IFCManager {\r\n    state: IfcState = {\r\n        models: [],\r\n        api: new WebIFC.IfcAPI(),\r\n        useJSON: false,\r\n        worker: { active: false, path: '' }\r\n    };\r\n\r\n    BVH = new BvhManager();\r\n    typesMap: {[key: number]: string} = IfcTypesMap;\r\n    parser: ParserAPI = new IFCParser(this.state, this.BVH);\r\n    subsets = new SubsetManager(this.state, this.BVH);\r\n    utils = new IFCUtils(this.state)\r\n    sequenceData = new Data(this.state)\r\n    private properties: PropertyManagerAPI = new PropertyManager(this.state);\r\n    private types = new TypeManager(this.state);\r\n    private cleaner = new MemoryCleaner(this.state);\r\n    private worker?: IFCWorkerHandler;\r\n\r\n    /**\r\n     * Returns the underlying web-ifc API.\r\n     */\r\n    get ifcAPI() {\r\n        return this.state.api;\r\n    }\r\n\r\n    // SETUP - all the logic regarding the configuration of web-ifc-three\r\n\r\n    async parse(buffer: ArrayBuffer) {\r\n        const model = await this.parser.parse(buffer, this.state.coordinationMatrix?.toArray()) as IFCModel;\r\n        model.setIFCManager(this);\r\n        // this.state.useJSON ? await this.disposeMemory() : await this.types.getAllTypes(this.worker);\r\n        await this.types.getAllTypes(this.worker);\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    async setWasmPath(path: string) {\r\n        this.state.api.SetWasmPath(path);\r\n        this.state.wasmPath = path;\r\n    }\r\n\r\n    /**\r\n     * Makes object picking a lot faster\r\n     * Courtesy of gkjohnson's [work](https://github.com/gkjohnson/three-mesh-bvh).\r\n     * Import these objects from his library and pass them as arguments. IFC.js takes care of the rest!\r\n     */\r\n    setupThreeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.BVH.initializeMeshBVH(computeBoundsTree, disposeBoundsTree, acceleratedRaycast);\r\n    }\r\n\r\n    /**\r\n     * Sets a callback function that is called every 10% of IFC loaded.\r\n     * @onProgress callback function\r\n     */\r\n    setOnProgress(onProgress: (event: ParserProgress) => void) {\r\n        this.state.onProgress = onProgress;\r\n    }\r\n\r\n\r\n    /**\r\n     * Sets a coordination matrix to be applied when loading geometry.\r\n     * @matrix THREE.Matrix4\r\n     */\r\n    setupCoordinationMatrix(matrix: Matrix4){\r\n        this.state.coordinationMatrix = matrix;\r\n    }\r\n\r\n    /**\r\n     * Clears the coordination matrix that is applied when loading geometry.\r\n     */\r\n    clearCoordinationMatrix(){\r\n        delete this.state.coordinationMatrix;\r\n    }\r\n\r\n    /**\r\n     * Applies a configuration for [web-ifc](https://ifcjs.github.io/info/docs/Guide/web-ifc/Introduction).\r\n     */\r\n    async applyWebIfcConfig(settings: LoaderSettings) {\r\n        this.state.webIfcSettings = settings;\r\n        if (this.state.worker.active && this.worker) {\r\n            await this.worker.workerState.updateStateWebIfcSettings();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Uses web workers, making the loader non-blocking.\r\n     * @active Wether to use web workers or not.\r\n     * @path Relative path to the web worker file. Necessary if active=true.\r\n     */\r\n    async useWebWorkers(active: boolean, path?: string) {\r\n        if (this.state.worker.active === active) return;\r\n        // @ts-ignore\r\n        this.state.api = null;\r\n        if (active) {\r\n            if (!path) throw new Error('You must provide a path to the web worker.');\r\n            this.state.worker.active = active;\r\n            this.state.worker.path = path;\r\n            await this.initializeWorkers();\r\n            const wasm = this.state.wasmPath;\r\n            if(wasm) await this.setWasmPath(wasm);\r\n        } else {\r\n            this.state.api = new WebIFC.IfcAPI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated This approach had sense when the compute-heavy operations were blocking. If you are facing performance issues, you can either use webworkers or use the approach used in web-ifc-viewer to work with JSON and glTF. If you have any question regarding this, check out the docs or ask us direclty.\r\n     * Enables the JSON mode (which consumes way less memory) and eliminates the WASM data.\r\n     * Only use this in the following scenarios:\r\n     * - If you don't need to access the properties of the IFC\r\n     * - If you will provide the properties as JSON.\r\n     * @useJSON: Wether to use the JSON mode or not.\r\n     */\r\n    async useJSONData(useJSON = true) {\r\n        this.state.useJSON = useJSON;\r\n        if (useJSON) {\r\n            await this.worker?.workerState.updateStateUseJson();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated This approach had sense when the compute-heavy operations were blocking. If you are facing performance issues, you can either use webworkers or use the approach used in web-ifc-viewer to work with JSON and glTF. If you have any question regarding this, check out the docs or ask us direclty.\r\n     * Adds the properties of a model as JSON data. If you are using web workers, use\r\n     * `loadJsonDataFromWorker()` instead to avoid overheads.\r\n     * @modelID ID of the IFC model.\r\n     * @data: data as an object where the keys are the expressIDs and the values the properties.\r\n     */\r\n    async addModelJSONData(modelID: number, data: { [id: number]: JSONObject }) {\r\n        const model = this.state.models[modelID];\r\n        if (!model) throw new Error('The specified model for the JSON data does not exist');\r\n        if (this.state.worker.active) {\r\n            await this.worker?.workerState.updateModelStateJsonData(modelID, data);\r\n        } else {\r\n            model.jsonData = data;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @deprecated This approach had sense when the compute-heavy operations were blocking. If you are facing performance issues, you can either use webworkers or use the approach used in web-ifc-viewer to work with JSON and glTF. If you have any question regarding this, check out the docs or ask us direclty.\r\n     * Loads the data of an IFC model from a JSON file directly from a web worker. If you are not using\r\n     * web workers, use `addModelJSONData()` instead.\r\n     * @modelID ID of the IFC model.\r\n     * @path: the path to the JSON file **relative to the web worker file**.\r\n     */\r\n    async loadJsonDataFromWorker(modelID: number, path: string) {\r\n        if (this.state.worker.active) {\r\n            await this.worker?.workerState.loadJsonDataFromWorker(modelID, path);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Closes the specified model and deletes it from the [scene](https://threejs.org/docs/#api/en/scenes/Scene).\r\n     * @modelID ID of the IFC model.\r\n     * @scene Scene where the model is (if it's located in a scene).\r\n     */\r\n    close(modelID: number, scene?: Scene) {\r\n        this.state.api.CloseModel(modelID);\r\n        if (scene) scene.remove(this.state.models[modelID].mesh);\r\n        delete this.state.models[modelID];\r\n    }\r\n\r\n    /**\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        return this.properties.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @modelID ID of the IFC model.\r\n     * @type type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        return this.properties.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * Gets the native properties of the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getItemProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getPropertySets(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getTypeProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the materials assigned to the given element.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getMaterialsProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getMaterialsProperties(modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the ifc type of the specified item.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the element.\r\n     */\r\n    getIfcType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID];\r\n    }\r\n\r\n    /**\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    getSpatialStructure(modelID: number, includeProperties?: boolean) {\r\n        return this.properties.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n\r\n    /**\r\n     * Gets the mesh of the subset with the specified [material](https://threejs.org/docs/#api/en/materials/Material).\r\n     * If no material is given, this returns the subset with the original materials.\r\n     * @modelID ID of the IFC model.\r\n     * @material Material assigned to the subset (if any).\r\n     * @customId Optional identifier of the subset.\r\n     */\r\n    getSubset(modelID: number, material?: Material, customId?: string) {\r\n        return this.subsets.getSubset(modelID, material, customId);\r\n    }\r\n\r\n    /**\r\n     * Removes the specified subset.\r\n     * @modelID ID of the IFC model.\r\n     * @parent The parent where the subset is (can be any `THREE.Object3D`).\r\n     * @material Material assigned to the subset, if any.\r\n     */\r\n    removeSubset(modelID: number, material?: Material, customID?: string) {\r\n        this.subsets.removeSubset(modelID, material, customID);\r\n    }\r\n\r\n    /**\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: `THREE.Object3D` where the model is located.\r\n     * - **modelID**: ID of the model.\r\n     * - **ids**: Express IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) wether to apply a material to the subset.\r\n     * - **customID**: (optional) custom identifier to distinguish subsets of the same model with the same material.\r\n     */\r\n    createSubset(config: SubsetConfig) {\r\n        return this.subsets.createSubset(config);\r\n    }\r\n\r\n    /**\r\n     * Removes the specified items from the geometry of a subset.\r\n     * @modelID ID of the IFC model.\r\n     * @ids Express IDs of the items of the model that will conform the subset.\r\n     * @material (optional) Material assigned to the subset, if any.\r\n     * @customID (optional) custom identifier to distinguish subsets of the same model with the same material.\r\n     */\r\n    removeFromSubset(modelID: number, ids: number[], customID?: string, material?: Material) {\r\n        return this.subsets.removeFromSubset(modelID, ids, customID, material);\r\n    }\r\n\r\n    /**\r\n     * Removes all the geometry of a subset.\r\n     * @modelID ID of the IFC model.\r\n     * @ids Express IDs of the items of the model that will conform the subset.\r\n     * @material (optional) Material assigned to the subset, if any.\r\n     * @customID (optional) custom identifier to distinguish subsets of the same model with the same material.\r\n     */\r\n    clearSubset(modelID: number, customID?: string, material?: Material) {\r\n        return this.subsets.clearSubset(modelID, customID, material);\r\n    }\r\n\r\n\r\n\r\n\r\n    // UTILITIES - Miscelaneus logic for various purposes\r\n\r\n    /**\r\n    * Returns the IFC class name of an instance if the optional parameter is not provided.\r\n    * If an entit class is provided, it will check if an instance belongs to the class.\r\n    * @modelID ID of the IFC model.\r\n    * @entityClass IFC Class name.\r\n    */\r\n    async isA(entity: any, entity_class: string) {\r\n        return this.utils.isA(entity, entity_class);\r\n    }\r\n\r\n    async getSequenceData(modelID: number) {\r\n        await this.sequenceData.load(modelID);\r\n        return this.sequenceData;\r\n    }\r\n\r\n\r\n    /**\r\n    * Returns the IFC objects filtered by IFC Type and wrapped with the entity_instance class.\r\n    * If an IFC type class has subclasses, all entities of those subclasses are also returned.\r\n    * @modelID ID of the IFC model.\r\n    * @entityClass IFC Class name.\r\n    */\r\n    async byType(modelID: number, entityClass: string) {\r\n        return this.utils.byType(modelID, entityClass);\r\n    }\r\n\r\n    /**\r\n    * Returns the IFC objects filtered by IFC ID.\r\n    * @modelID ID of the IFC model.\r\n    * @id Express ID of the element.\r\n    */\r\n    async byId(modelID: number, id: number) {\r\n        return this.utils.byId(modelID, id);\r\n    }\r\n\r\n    /**\r\n    * Returns the IFC objects filtered by IFC Type and wrapped with the entity_instance class.\r\n    * If an IFC type class has subclasses, all entities of those subclasses are also returned.\r\n    * @modelID ID of the IFC model.\r\n    * @entityClass IFC Class name.\r\n    */\r\n    async idsByType(modelID: number, entityClass: string) {\r\n        return this.utils.idsByType(modelID, entityClass);\r\n    }\r\n\r\n\r\n    // MISC - Miscelaneus logic for various purposes\r\n\r\n    /**\r\n     * Disposes all memory used by the IFCLoader, including WASM memory and the web worker.\r\n     * Use this if you want to destroy the object completely.\r\n     * If you want to load an IFC later, you'll need to create a new instance.\r\n     */\r\n    async dispose() {\r\n        IFCModel.dispose();\r\n        await this.cleaner.dispose();\r\n        this.subsets.dispose();\r\n        if(this.worker && this.state.worker.active) await this.worker.terminate();\r\n        (this.state as any) = null;\r\n    }\r\n\r\n    /**\r\n     * @deprecated This approach had sense when the compute-heavy operations were blocking. If you are facing performance issues, you can either use webworkers or use the approach used in web-ifc-viewer to work with JSON and glTF. If you have any question regarding this, check out the docs or ask us direclty.\r\n     * Completely releases the WASM memory, thus drastically decreasing the memory use of the app.\r\n     * Only use this in the following scenarios:\r\n     * - If you don't need to access the properties of the IFC\r\n     * - If you will provide the properties as JSON.\r\n     */\r\n    async disposeMemory() {\r\n        if (this.state.worker.active) {\r\n            await this.worker?.Close();\r\n        } else {\r\n            // @ts-ignore\r\n            this.state.api.Close();\r\n            (this.state.api as any) = null;\r\n            this.state.api = new WebIFC.IfcAPI();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * For internal use of IFC.js dev team and testers\r\n     */\r\n    getAndClearErrors(modelID: number) {\r\n        return this.parser.getAndClearErrors(modelID);\r\n    }\r\n\r\n    private async initializeWorkers() {\r\n        this.worker = new IFCWorkerHandler(this.state, this.BVH);\r\n        this.state.api = this.worker.webIfc;\r\n        this.properties = this.worker.properties;\r\n        await this.worker.parser.setupOptionalCategories(this.parser.optionalCategories);\r\n        this.parser = this.worker.parser;\r\n        await this.worker.workerState.updateStateUseJson();\r\n        await this.worker.workerState.updateStateWebIfcSettings();\r\n    }\r\n\r\n\r\n}\r\n","import { IFCManager } from './IFC/components/IFCManager';\r\nimport {FileLoader, Loader, LoadingManager, Matrix4} from 'three';\r\nimport { IFCModel } from './IFC/components/IFCModel';\r\n\r\nclass IFCLoader extends Loader {\r\n    ifcManager: IFCManager;\r\n    private onProgress?: (event: ProgressEvent) => void;\r\n\r\n    constructor(manager?: LoadingManager) {\r\n        super(manager);\r\n        this.ifcManager = new IFCManager();\r\n    }\r\n\r\n    load(\r\n        url: any,\r\n        onLoad: (ifc: IFCModel) => void,\r\n        onProgress?: (event: ProgressEvent) => void,\r\n        onError?: (event: ErrorEvent) => void\r\n    ) {\r\n        const scope = this;\r\n\r\n        const loader = new FileLoader(scope.manager);\r\n        this.onProgress = onProgress;\r\n        loader.setPath(scope.path);\r\n        loader.setResponseType('arraybuffer');\r\n        loader.setRequestHeader(scope.requestHeader);\r\n        loader.setWithCredentials(scope.withCredentials);\r\n        loader.load(\r\n            url,\r\n            async function (buffer) {\r\n                try {\r\n                    if (typeof buffer == 'string') {\r\n                        throw new Error('IFC files must be given as a buffer!');\r\n                    }\r\n                    onLoad(await scope.parse(buffer));\r\n                } catch (e: any) {\r\n                    if (onError) {\r\n                        onError(e);\r\n                    } else {\r\n                        console.error(e);\r\n                    }\r\n\r\n                    scope.manager.itemError(url);\r\n                }\r\n            },\r\n            onProgress,\r\n            onError\r\n        );\r\n    }\r\n\r\n    parse(buffer: ArrayBuffer) {\r\n        return this.ifcManager.parse(buffer);\r\n    }\r\n}\r\n\r\nexport { IFCLoader };\r\n","import { IfcComponent } from '../../../base-types';\r\nexport class IfcSelection extends IfcComponent {\r\n    constructor(context, loader, material) {\r\n        super(context);\r\n        this.context = context;\r\n        this.meshes = new Set();\r\n        // True only for prepick\r\n        this.fastRemovePrevious = false;\r\n        this.renderOrder = 0;\r\n        this.modelIDs = new Set();\r\n        this.selectedFaces = {};\r\n        this.pick = async (item, focusSelection = false, removePrevious = true) => {\r\n            var _a;\r\n            const mesh = item.object;\r\n            if (item.faceIndex === undefined || ((_a = this.selectedFaces[mesh.modelID]) === null || _a === void 0 ? void 0 : _a.has(item.faceIndex))) {\r\n                return null;\r\n            }\r\n            const id = this.loader.ifcManager.getExpressId(mesh.geometry, item.faceIndex);\r\n            if (id === undefined)\r\n                return null;\r\n            if (removePrevious) {\r\n                if (this.fastRemovePrevious) {\r\n                    this.toggleVisibility(false);\r\n                    this.modelIDs.clear();\r\n                    this.selectedFaces = {};\r\n                }\r\n                else {\r\n                    this.unpick();\r\n                }\r\n            }\r\n            if (!this.selectedFaces[mesh.modelID])\r\n                this.selectedFaces[mesh.modelID] = new Set();\r\n            this.selectedFaces[mesh.modelID].add(item.faceIndex);\r\n            this.modelIDs.add(mesh.modelID);\r\n            const selected = this.newSelection(mesh.modelID, [id], removePrevious);\r\n            selected.position.copy(mesh.position);\r\n            selected.rotation.copy(mesh.rotation);\r\n            selected.scale.copy(mesh.scale);\r\n            selected.visible = true;\r\n            selected.renderOrder = this.renderOrder;\r\n            if (focusSelection) {\r\n                await this.focusSelection(selected);\r\n            }\r\n            return { modelID: mesh.modelID, id };\r\n        };\r\n        this.pickByID = async (modelID, ids, focusSelection = false, removePrevious = true) => {\r\n            const mesh = this.context.items.ifcModels.find((model) => model.modelID === modelID);\r\n            if (!mesh)\r\n                return;\r\n            if (removePrevious) {\r\n                this.modelIDs.clear();\r\n            }\r\n            this.modelIDs.add(modelID);\r\n            const selected = this.newSelection(modelID, ids, removePrevious);\r\n            selected.visible = true;\r\n            selected.position.copy(mesh.position);\r\n            selected.rotation.copy(mesh.rotation);\r\n            selected.scale.copy(mesh.scale);\r\n            selected.renderOrder = this.renderOrder;\r\n            if (focusSelection)\r\n                await this.focusSelection(selected);\r\n        };\r\n        this.newSelection = (modelID, ids, removePrevious) => {\r\n            const mesh = this.loader.ifcManager.createSubset({\r\n                scene: this.scene,\r\n                modelID,\r\n                ids,\r\n                removePrevious,\r\n                material: this.material\r\n            });\r\n            if (mesh) {\r\n                this.meshes.add(mesh);\r\n                this.context.renderer.postProduction.excludedItems.add(mesh);\r\n            }\r\n            return mesh;\r\n        };\r\n        this.scene = context.getScene();\r\n        this.loader = loader;\r\n        if (material)\r\n            this.material = material;\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this.meshes.forEach((mesh) => {\r\n            mesh.removeFromParent();\r\n            mesh.geometry.dispose();\r\n        });\r\n        (_a = this.material) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this.meshes = null;\r\n        this.material = null;\r\n        this.scene = null;\r\n        this.loader = null;\r\n        this.context = null;\r\n    }\r\n    unpick() {\r\n        for (const modelID of this.modelIDs) {\r\n            this.loader.ifcManager.removeSubset(modelID, this.material);\r\n        }\r\n        this.modelIDs.clear();\r\n        this.meshes.clear();\r\n        this.selectedFaces = {};\r\n    }\r\n    toggleVisibility(visible) {\r\n        this.meshes.forEach((mesh) => (mesh.visible = visible));\r\n    }\r\n    async focusSelection(mesh) {\r\n        const postproductionActive = this.context.renderer.postProduction.active;\r\n        this.context.renderer.postProduction.active = false;\r\n        await this.context.ifcCamera.targetItem(mesh);\r\n        this.context.renderer.postProduction.active = postproductionActive;\r\n    }\r\n}\r\n//# sourceMappingURL=selection.js.map","import { DoubleSide, Mesh, MeshLambertMaterial } from 'three';\r\nimport { IfcSelection } from './selection';\r\nexport class IfcSelector {\r\n    constructor(context, ifc) {\r\n        this.context = context;\r\n        this.ifc = ifc;\r\n        this.userDataField = 'ifcjsFadedModel';\r\n        this.defSelectMat = this.initializeDefMaterial(0xff33ff, 0.3);\r\n        this.defPreselectMat = this.initializeDefMaterial(0xff55ff, 0.5);\r\n        this.defHighlightMat = this.initializeDefMaterial(0xeeeeee, 0.05);\r\n        this.preselection = new IfcSelection(context, this.ifc.loader, this.defPreselectMat);\r\n        this.preselection.fastRemovePrevious = true;\r\n        this.selection = new IfcSelection(context, this.ifc.loader, this.defSelectMat);\r\n        this.highlight = new IfcSelection(context, this.ifc.loader);\r\n        this.highlight.renderOrder = -1;\r\n    }\r\n    dispose() {\r\n        var _a, _b, _c;\r\n        (_a = this.defPreselectMat) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this.defHighlightMat = null;\r\n        (_b = this.defSelectMat) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this.defSelectMat = null;\r\n        (_c = this.defHighlightMat) === null || _c === void 0 ? void 0 : _c.dispose();\r\n        this.defHighlightMat = null;\r\n        this.preselection.dispose();\r\n        this.preselection = null;\r\n        this.selection.dispose();\r\n        this.selection = null;\r\n        this.highlight.dispose();\r\n        this.highlight = null;\r\n    }\r\n    /**\r\n     * Highlights the item pointed by the cursor.\r\n     */\r\n    async prePickIfcItem() {\r\n        const found = this.context.castRayIfc();\r\n        // This is more efficient than destroying and recreating the subset when the user hovers away\r\n        if (!found) {\r\n            this.preselection.toggleVisibility(false);\r\n            return;\r\n        }\r\n        await this.preselection.pick(found);\r\n    }\r\n    /**\r\n     * Highlights the item pointed by the cursor and gets is properties.\r\n     * @focusSelection If true, animate the perspectiveCamera to focus the current selection\r\n     * @removePrevious whether to remove the previous subset\r\n     */\r\n    async pickIfcItem(focusSelection = false, removePrevious = true) {\r\n        const found = this.context.castRayIfc();\r\n        if (!found)\r\n            return null;\r\n        const result = await this.selection.pick(found, focusSelection, removePrevious);\r\n        if (result == null || result.modelID == null || result.id == null)\r\n            return null;\r\n        return result;\r\n    }\r\n    /**\r\n     * Highlights the item pointed by the cursor and gets is properties, without applying any material to it.\r\n     * @focusSelection If true, animate the perspectiveCamera to focus the current selection\r\n     * @removePrevious whether to remove the previous subset\r\n     */\r\n    async highlightIfcItem(focusSelection = false, removePrevious = true) {\r\n        const found = this.context.castRayIfc();\r\n        if (!found)\r\n            return null;\r\n        this.fadeAwayModels();\r\n        const result = await this.highlight.pick(found, focusSelection, removePrevious);\r\n        if (result == null || result.modelID == null || result.id == null)\r\n            return null;\r\n        return result;\r\n    }\r\n    /**\r\n     * Highlights the item with the given ID with the picking material.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the item.\r\n     * @focusSelection If true, animate the perspectiveCamera to focus the current selection\r\n     * @removePrevious whether to remove the previous subset\r\n     */\r\n    async pickIfcItemsByID(modelID, ids, focusSelection = false, removePrevious = true) {\r\n        await this.selection.pickByID(modelID, ids, focusSelection, removePrevious);\r\n    }\r\n    /**\r\n     * Highlights the item with the given ID with the prepicking material.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the item.\r\n     * @focusSelection If true, animate the perspectiveCamera to focus the current selection\r\n     * @removePrevious whether to remove the previous subset\r\n     */\r\n    async prepickIfcItemsByID(modelID, ids, focusSelection = false, removePrevious = true) {\r\n        await this.preselection.pickByID(modelID, ids, focusSelection, removePrevious);\r\n    }\r\n    /**\r\n     * Highlights the item with the given ID and fades away the model.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the item.\r\n     * @focusSelection If true, animate the perspectiveCamera to focus the current selection\r\n     * @removePrevious whether to remove the previous subset\r\n     */\r\n    async highlightIfcItemsByID(modelID, ids, focusSelection = false, removePrevious = true) {\r\n        this.fadeAwayModels();\r\n        await this.highlight.pickByID(modelID, ids, focusSelection, removePrevious);\r\n    }\r\n    /**\r\n     * Unapplies the picking material.\r\n     */\r\n    unpickIfcItems() {\r\n        this.selection.unpick();\r\n    }\r\n    /**\r\n     * Unapplies the prepicking material.\r\n     */\r\n    unPrepickIfcItems() {\r\n        this.preselection.unpick();\r\n    }\r\n    /**\r\n     * Unapplies the highlight material, removing the fading of the model\r\n     */\r\n    unHighlightIfcItems() {\r\n        this.context.items.ifcModels.forEach((model) => this.unHighlightItem(model));\r\n        this.highlight.unpick();\r\n        if (this.context.renderer.postProduction.active) {\r\n            this.context.renderer.postProduction.visible = true;\r\n        }\r\n    }\r\n    unHighlightItem(model) {\r\n        const fadedModel = model.userData[this.userDataField];\r\n        if (fadedModel && fadedModel.parent) {\r\n            fadedModel.parent.add(model);\r\n            fadedModel.removeFromParent();\r\n        }\r\n    }\r\n    fadeAwayModels() {\r\n        this.context.items.ifcModels.forEach((model) => {\r\n            if (!model.userData[this.userDataField]) {\r\n                const mesh = new Mesh(model.geometry, this.defHighlightMat);\r\n                model.userData[this.userDataField] = mesh;\r\n                this.context.renderer.postProduction.excludedItems.add(mesh);\r\n            }\r\n            if (model.parent) {\r\n                const fadedMesh = model.userData[this.userDataField];\r\n                fadedMesh.position.copy(model.position);\r\n                fadedMesh.rotation.copy(model.rotation);\r\n                fadedMesh.scale.copy(model.scale);\r\n                model.parent.add(fadedMesh);\r\n                model.removeFromParent();\r\n            }\r\n        });\r\n    }\r\n    initializeDefMaterial(color, opacity) {\r\n        const planes = this.context.getClippingPlanes();\r\n        return new MeshLambertMaterial({\r\n            color,\r\n            opacity,\r\n            transparent: true,\r\n            depthTest: false,\r\n            side: DoubleSide,\r\n            clippingPlanes: planes\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=selector.js.map","export const geometryTypes = new Set([\r\n    1123145078, 574549367, 1675464909, 2059837836, 3798115385, 32440307, 3125803723, 3207858831,\r\n    2740243338, 2624227202, 4240577450, 3615266464, 3724593414, 220341763, 477187591, 1878645084,\r\n    1300840506, 3303107099, 1607154358, 1878645084, 846575682, 1351298697, 2417041796, 3049322572,\r\n    3331915920, 1416205885, 776857604, 3285139300, 3958052878, 2827736869, 2732653382, 673634403,\r\n    3448662350, 4142052618, 2924175390, 803316827, 2556980723, 1809719519, 2205249479, 807026263,\r\n    3737207727, 1660063152, 2347385850, 3940055652, 2705031697, 3732776249, 2485617015, 2611217952,\r\n    1704287377, 2937912522, 2770003689, 1281925730, 1484403080, 3448662350, 4142052618, 3800577675,\r\n    4006246654, 3590301190, 1383045692, 2775532180, 2047409740, 370225590, 3593883385, 2665983363,\r\n    4124623270, 812098782, 3649129432, 987898635, 1105321065, 3510044353, 1635779807, 2603310189,\r\n    3406155212, 1310608509, 4261334040, 2736907675, 3649129432, 1136057603, 1260505505, 4182860854,\r\n    2713105998, 2898889636, 59481748, 3749851601, 3486308946, 3150382593, 1062206242, 3264961684,\r\n    15328376, 1485152156, 370225590, 1981873012, 2859738748, 45288368, 2614616156, 2732653382,\r\n    775493141, 2147822146, 2601014836, 2629017746, 1186437898, 2367409068, 1213902940, 3632507154,\r\n    3900360178, 476780140, 1472233963, 2804161546, 3008276851, 738692330, 374418227, 315944413,\r\n    3905492369, 3570813810, 2571569899, 178912537, 2294589976, 1437953363, 2133299955, 572779678,\r\n    3092502836, 388784114, 2624227202, 1425443689, 3057273783, 2347385850, 1682466193, 2519244187,\r\n    2839578677, 3958567839, 2513912981, 2830218821, 427810014\r\n]);\r\n//# sourceMappingURL=geometry-types.js.map","import { IFCBUILDING } from 'web-ifc';\r\nimport { geometryTypes } from './geometry-types';\r\nexport class IfcProperties {\r\n    constructor(context, loader) {\r\n        this.context = context;\r\n        this.loader = loader;\r\n    }\r\n    dispose() {\r\n        this.context = null;\r\n        this.loader = null;\r\n        this.webIfc = null;\r\n    }\r\n    /**\r\n     * Serializes all the properties of an IFC (exluding the geometry) into an array of Blobs.\r\n     * This is useful for populating databases with IFC data.\r\n     * @modelID ID of the IFC model whose properties to extract.\r\n     * @maxSize (optional) maximum number of entities for each Blob. If not defined, it's infinite (only one Blob will be created).\r\n     * @event (optional) callback called every time a 10% of entities are serialized into Blobs.\r\n     */\r\n    async serializeAllProperties(model, maxSize, event) {\r\n        this.webIfc = this.loader.ifcManager.ifcAPI;\r\n        if (!model)\r\n            throw new Error('The requested model was not found.');\r\n        const blobs = [];\r\n        await this.getPropertiesAsBlobs(model.modelID, blobs, maxSize, event);\r\n        return blobs;\r\n    }\r\n    async getPropertiesAsBlobs(modelID, blobs, maxSize, event) {\r\n        const geometriesIDs = await this.getAllGeometriesIDs(modelID);\r\n        let properties = await this.initializePropertiesObject(modelID);\r\n        const allLinesIDs = await this.webIfc.GetAllLines(modelID);\r\n        const linesCount = allLinesIDs.size();\r\n        let lastEvent = 0.1;\r\n        let counter = 0;\r\n        for (let i = 0; i < linesCount; i++) {\r\n            const id = allLinesIDs.get(i);\r\n            if (!geometriesIDs.has(id)) {\r\n                // eslint-disable-next-line no-await-in-loop\r\n                await this.getItemProperty(modelID, id, properties);\r\n                counter++;\r\n            }\r\n            if (maxSize && counter > maxSize) {\r\n                blobs.push(new Blob([JSON.stringify(properties)], { type: 'application/json' }));\r\n                properties = {};\r\n                counter = 0;\r\n            }\r\n            if (event && i / linesCount > lastEvent) {\r\n                event(i, linesCount);\r\n                lastEvent += 0.1;\r\n            }\r\n        }\r\n        blobs.push(new Blob([JSON.stringify(properties)], { type: 'application/json' }));\r\n    }\r\n    async getItemProperty(modelID, id, properties) {\r\n        try {\r\n            const props = await this.webIfc.GetLine(modelID, id);\r\n            if (props.type) {\r\n                props.type = this.loader.ifcManager.typesMap[props.type];\r\n            }\r\n            this.formatItemProperties(props);\r\n            properties[id] = props;\r\n        }\r\n        catch (e) {\r\n            console.log(`There was a problem getting the properties of the item with ID ${id}`);\r\n        }\r\n    }\r\n    formatItemProperties(props) {\r\n        Object.keys(props).forEach((key) => {\r\n            const value = props[key];\r\n            if (value && value.value !== undefined)\r\n                props[key] = value.value;\r\n            else if (Array.isArray(value))\r\n                props[key] = value.map((item) => {\r\n                    if (item && item.value)\r\n                        return item.value;\r\n                    return item;\r\n                });\r\n        });\r\n    }\r\n    async initializePropertiesObject(modelID) {\r\n        return {\r\n            coordinationMatrix: await this.webIfc.GetCoordinationMatrix(modelID),\r\n            globalHeight: await this.getBuildingHeight(modelID)\r\n        };\r\n    }\r\n    async getBuildingHeight(modelID) {\r\n        const building = await this.getBuilding(modelID);\r\n        let placement;\r\n        const siteReference = building.ObjectPlacement.PlacementRelTo;\r\n        if (siteReference)\r\n            placement = siteReference.RelativePlacement.Location;\r\n        else\r\n            placement = building.ObjectPlacement.RelativePlacement.Location;\r\n        const transform = placement.Coordinates.map((coord) => coord.value);\r\n        return transform[2];\r\n    }\r\n    async getBuilding(modelID) {\r\n        const ifc = this.loader.ifcManager;\r\n        const allBuildingsIDs = await ifc.getAllItemsOfType(modelID, IFCBUILDING, false);\r\n        const buildingID = allBuildingsIDs[0];\r\n        return ifc.getItemProperties(modelID, buildingID, true);\r\n    }\r\n    async getAllGeometriesIDs(modelID) {\r\n        const geometriesIDs = new Set();\r\n        const geomTypesArray = Array.from(geometryTypes);\r\n        for (let i = 0; i < geomTypesArray.length; i++) {\r\n            const category = geomTypesArray[i];\r\n            // eslint-disable-next-line no-await-in-loop\r\n            const ids = await this.webIfc.GetLineIDsWithType(modelID, category);\r\n            const idsSize = ids.size();\r\n            for (let j = 0; j < idsSize; j++) {\r\n                geometriesIDs.add(ids.get(j));\r\n            }\r\n        }\r\n        return geometriesIDs;\r\n    }\r\n}\r\n//# sourceMappingURL=ifc-properties.js.map","// @ts-ignore\r\nimport { computeBoundsTree, disposeBoundsTree, acceleratedRaycast } from 'three-mesh-bvh';\r\nimport { Matrix4 } from 'three';\r\nimport { IFCLoader } from 'web-ifc-three/IFCLoader';\r\nimport { IfcComponent } from '../../base-types';\r\nimport { IfcUnits } from './units';\r\nimport { IfcSelector } from './selection/selector';\r\nimport { IfcProperties } from './ifc-properties';\r\nexport class IfcManager extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.context = context;\r\n        this.loader = new IFCLoader();\r\n        this.setupThreeMeshBVH();\r\n        this.selector = new IfcSelector(context, this);\r\n        this.units = new IfcUnits(this);\r\n        this.properties = new IfcProperties(context, this.loader);\r\n    }\r\n    async dispose() {\r\n        this.context = null;\r\n        this.selector.dispose();\r\n        this.selector = null;\r\n        this.units.dispose();\r\n        this.units = null;\r\n        this.properties.dispose();\r\n        this.properties = null;\r\n        await this.loader.ifcManager.dispose();\r\n        this.loader = null;\r\n    }\r\n    /**\r\n     * Loads the given IFC in the current scene.\r\n     * @file IFC as File.\r\n     * @fitToFrame (optional) if true, brings the perspectiveCamera to the loaded IFC.\r\n     * @onError (optional) a callback function to report on loading errors\r\n     */\r\n    async loadIfc(file, fitToFrame = false, onError) {\r\n        const url = URL.createObjectURL(file);\r\n        return this.loadIfcUrl(url, fitToFrame, undefined, onError);\r\n    }\r\n    /**\r\n     * Loads the given IFC in the current scene.\r\n     * @file IFC as URL.\r\n     * @fitToFrame (optional) if true, brings the perspectiveCamera to the loaded IFC.\r\n     * @onProgress (optional) a callback function to report on downloading progress\r\n     * @onError (optional) a callback function to report on loading errors\r\n     */\r\n    async loadIfcUrl(url, fitToFrame = false, onProgress, onError) {\r\n        try {\r\n            const firstModel = Boolean(this.context.items.ifcModels.length === 0);\r\n            const settings = this.loader.ifcManager.state.webIfcSettings;\r\n            const fastBools = (settings === null || settings === void 0 ? void 0 : settings.USE_FAST_BOOLS) || true;\r\n            const coordsToOrigin = (settings === null || settings === void 0 ? void 0 : settings.COORDINATE_TO_ORIGIN) || false;\r\n            await this.loader.ifcManager.applyWebIfcConfig({\r\n                COORDINATE_TO_ORIGIN: firstModel && coordsToOrigin,\r\n                USE_FAST_BOOLS: fastBools\r\n            });\r\n            const ifcModel = await this.loader.loadAsync(url, onProgress);\r\n            this.addIfcModel(ifcModel);\r\n            if (firstModel && coordsToOrigin) {\r\n                const matrixArr = await this.loader.ifcManager.ifcAPI.GetCoordinationMatrix(ifcModel.modelID);\r\n                const matrix = new Matrix4().fromArray(matrixArr);\r\n                this.loader.ifcManager.setupCoordinationMatrix(matrix);\r\n            }\r\n            if (fitToFrame)\r\n                this.context.fitToFrame();\r\n            return ifcModel;\r\n        }\r\n        catch (err) {\r\n            console.error('Error loading IFC.');\r\n            console.error(err);\r\n            if (onError)\r\n                onError(err);\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    async setWasmPath(path) {\r\n        await this.loader.ifcManager.setWasmPath(path);\r\n    }\r\n    /**\r\n     * Applies a configuration for [web-ifc](https://ifcjs.github.io/info/docs/Guide/web-ifc/Introduction).\r\n     */\r\n    async applyWebIfcConfig(settings) {\r\n        await this.loader.ifcManager.applyWebIfcConfig(settings);\r\n    }\r\n    /**\r\n     * Gets the spatial structure of the specified model.\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    getSpatialStructure(modelID, includeProperties) {\r\n        return this.loader.ifcManager.getSpatialStructure(modelID, includeProperties);\r\n    }\r\n    /**\r\n     * Gets the properties of the specified item.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the item.\r\n     * @indirect If true, also returns psets, qsets and type properties.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    async getProperties(modelID, id, indirect, recursive) {\r\n        if (modelID == null || id == null)\r\n            return null;\r\n        const props = await this.loader.ifcManager.getItemProperties(modelID, id, recursive);\r\n        if (indirect) {\r\n            props.psets = await this.loader.ifcManager.getPropertySets(modelID, id, recursive);\r\n            props.mats = await this.loader.ifcManager.getMaterialsProperties(modelID, id, recursive);\r\n            props.type = await this.loader.ifcManager.getTypeProperties(modelID, id, recursive);\r\n        }\r\n        return props;\r\n    }\r\n    /**\r\n     * Gets the ID of the model pointed by the cursor.\r\n     */\r\n    getModelID() {\r\n        const found = this.context.castRayIfc();\r\n        if (!found)\r\n            return null;\r\n        const mesh = found.object;\r\n        if (!mesh || mesh.modelID === undefined || mesh.modelID === null)\r\n            return null;\r\n        return mesh.modelID;\r\n    }\r\n    /**\r\n     * Gets all the items of the specified type in the specified IFC model.\r\n     * @modelID ID of the IFC model.\r\n     * @type type of element. You can import the type from web-ifc.\r\n     * @verbose If true, also gets the properties for all the elements.\r\n     */\r\n    getAllItemsOfType(modelID, type, verbose = false) {\r\n        return this.loader.ifcManager.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.prePickIfcItem() instead.\r\n     */\r\n    async prePickIfcItem() {\r\n        await this.selector.prePickIfcItem();\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.pickIfcItem() instead.\r\n     */\r\n    async pickIfcItem(focusSelection = false) {\r\n        return this.selector.pickIfcItem(focusSelection);\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.highlightIfcItem() instead.\r\n     */\r\n    async highlightIfcItem(focusSelection = false) {\r\n        return this.selector.highlightIfcItem(focusSelection);\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.pickIfcItemsByID() instead.\r\n     */\r\n    async pickIfcItemsByID(modelID, ids, focusSelection = false) {\r\n        await this.selector.pickIfcItemsByID(modelID, ids, focusSelection);\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.prepickIfcItemsByID() instead.\r\n     */\r\n    async prepickIfcItemsByID(modelID, ids, focusSelection = false) {\r\n        await this.selector.prepickIfcItemsByID(modelID, ids, focusSelection);\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.highlightIfcItemsByID() instead.\r\n     */\r\n    async highlightIfcItemsByID(modelID, ids, focusSelection = false) {\r\n        await this.selector.highlightIfcItemsByID(modelID, ids, focusSelection);\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.unpickIfcItems() instead.\r\n     */\r\n    unpickIfcItems() {\r\n        this.selector.unpickIfcItems();\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.unPrepickIfcItems() instead.\r\n     */\r\n    unPrepickIfcItems() {\r\n        this.selector.unPrepickIfcItems();\r\n    }\r\n    /**\r\n     * @deprecated: use IFC.selector.unHighlightIfcItems() instead.\r\n     */\r\n    unHighlightIfcItems() {\r\n        this.selector.unHighlightIfcItems();\r\n    }\r\n    addIfcModel(ifcMesh) {\r\n        this.context.items.ifcModels.push(ifcMesh);\r\n        this.context.items.pickableIfcModels.push(ifcMesh);\r\n        this.context.getScene().add(ifcMesh);\r\n    }\r\n    setupThreeMeshBVH() {\r\n        this.loader.ifcManager.setupThreeMeshBVH(computeBoundsTree, disposeBoundsTree, acceleratedRaycast);\r\n    }\r\n}\r\n//# sourceMappingURL=ifc-manager.js.map","import { IfcComponent } from '../../base-types';\r\nexport class DropboxAPI extends IfcComponent {\r\n    constructor(context, loader) {\r\n        super(context);\r\n        this.onDBChooserSuccess = async (files) => {\r\n            const rawResponse = await fetch(files[0].link);\r\n            const result = await rawResponse.text();\r\n            const ifcBlob = new Blob([result], { type: 'text/plain' });\r\n            const file = new File([ifcBlob], 'ifcFile');\r\n            this.loader.loadIfc(file);\r\n        };\r\n        this.getOptions = () => {\r\n            return {\r\n                success: this.onDBChooserSuccess,\r\n                cancel: this.onDBChooserCancel,\r\n                linkType: 'direct',\r\n                multiselect: false,\r\n                extensions: ['.ifc'],\r\n                folderselect: false\r\n            };\r\n        };\r\n        this.loader = loader;\r\n        this.counter = 0;\r\n    }\r\n    initializeAPI() {\r\n        const script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.src = 'https://www.dropbox.com/static/api/2/dropins.js';\r\n        script.id = 'dropboxjs';\r\n        script.setAttribute('data-app-key', 'iej3z16hhyca35a');\r\n        document.getElementsByTagName('head')[0].appendChild(script);\r\n    }\r\n    loadDropboxIfc() {\r\n        this.openDropboxChooser(this.getOptions());\r\n    }\r\n    openDropboxChooser(options) {\r\n        try {\r\n            if (Dropbox) {\r\n                Dropbox.choose(this.getOptions());\r\n                return clearTimeout(this.tid);\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (this.counter++ > 9)\r\n                return this.errorOnConnection();\r\n            this.tid = setTimeout(() => this.openDropboxChooser(options), 2000);\r\n        }\r\n        return null;\r\n    }\r\n    errorOnConnection() {\r\n        console.error('Error: could not communicate with dropbox');\r\n        clearTimeout(this.tid);\r\n    }\r\n    onDBChooserCancel(_files) {\r\n        console.log('Canceled!');\r\n    }\r\n}\r\n//# sourceMappingURL=dropbox.js.map","// -------------------------------------------------------------------------------------------\r\n// Credit to Jason Kleban: https://gist.github.com/JasonKleban/50cee44960c225ac1993c922563aa540\r\n// -------------------------------------------------------------------------------------------\r\nexport class LiteEvent {\r\n    constructor() {\r\n        this.handlers = [];\r\n        this.trigger = ((data) => {\r\n            // @ts-ignore\r\n            this.handlers.slice(0).forEach((h) => h(data));\r\n        });\r\n    }\r\n    on(handler) {\r\n        this.handlers.push(handler);\r\n    }\r\n    off(handler) {\r\n        this.handlers = this.handlers.filter((h) => h !== handler);\r\n    }\r\n    expose() {\r\n        return this;\r\n    }\r\n}\r\n//# sourceMappingURL=LiteEvent.js.map","import CameraControls from 'camera-controls';\r\nimport { Vector3 } from 'three';\r\nimport { CameraProjections, IfcComponent, NavigationModes } from '../../../../base-types';\r\nimport { LiteEvent } from '../../../../utils/LiteEvent';\r\nexport class FirstPersonControl extends IfcComponent {\r\n    constructor(context, ifcCamera) {\r\n        super(context);\r\n        this.ifcCamera = ifcCamera;\r\n        this.mode = NavigationModes.FirstPerson;\r\n        this.enabled = false;\r\n        this.onChange = new LiteEvent();\r\n        this.onChangeProjection = new LiteEvent();\r\n    }\r\n    toggle(active) {\r\n        this.enabled = active;\r\n        if (active) {\r\n            if (this.ifcCamera.projection !== CameraProjections.Perspective) {\r\n                this.ifcCamera.setNavigationMode(NavigationModes.Orbit);\r\n                return;\r\n            }\r\n            this.setupFirstPersonCamera();\r\n        }\r\n    }\r\n    setupFirstPersonCamera() {\r\n        const controls = this.ifcCamera.cameraControls;\r\n        const cameraPosition = new Vector3();\r\n        controls.camera.getWorldPosition(cameraPosition);\r\n        const newTargetPosition = new Vector3();\r\n        controls.distance--;\r\n        controls.camera.getWorldPosition(newTargetPosition);\r\n        controls.minDistance = 1;\r\n        controls.maxDistance = 1;\r\n        controls.distance = 1;\r\n        controls.moveTo(newTargetPosition.x, newTargetPosition.y, newTargetPosition.z);\r\n        this.ifcCamera.cameraControls.truckSpeed = 50;\r\n        controls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\r\n        controls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\r\n    }\r\n    fitModelToFrame() { }\r\n}\r\n//# sourceMappingURL=first-person-control.js.map","// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\nimport { Box3, Sphere, Vector3 } from 'three';\r\nimport { IfcComponent, NavigationModes } from '../../../../base-types';\r\nimport { LiteEvent } from '../../../../utils/LiteEvent';\r\nexport class OrbitControl extends IfcComponent {\r\n    constructor(context, ifcCamera) {\r\n        super(context);\r\n        this.context = context;\r\n        this.ifcCamera = ifcCamera;\r\n        this.enabled = true;\r\n        this.mode = NavigationModes.Orbit;\r\n        this.onChange = new LiteEvent();\r\n        this.onUnlock = new LiteEvent();\r\n        this.onChangeProjection = new LiteEvent();\r\n        this.activateOrbitControls();\r\n    }\r\n    /**\r\n     * @deprecated Use cameraControls.getTarget.\r\n     */\r\n    get target() {\r\n        const target = new Vector3();\r\n        this.ifcCamera.cameraControls.getTarget(target);\r\n        return target;\r\n    }\r\n    toggle(active) {\r\n        this.enabled = active;\r\n        if (active) {\r\n            this.activateOrbitControls();\r\n        }\r\n    }\r\n    async fitModelToFrame() {\r\n        if (!this.enabled)\r\n            return;\r\n        const scene = this.context.getScene();\r\n        const box = new Box3().setFromObject(scene.children[scene.children.length - 1]);\r\n        const sceneSize = new Vector3();\r\n        box.getSize(sceneSize);\r\n        const sceneCenter = new Vector3();\r\n        box.getCenter(sceneCenter);\r\n        const nearFactor = 0.5;\r\n        const radius = Math.max(sceneSize.x, sceneSize.y, sceneSize.z) * nearFactor;\r\n        const sphere = new Sphere(sceneCenter, radius);\r\n        await this.ifcCamera.cameraControls.fitToSphere(sphere, true);\r\n    }\r\n    activateOrbitControls() {\r\n        const controls = this.ifcCamera.cameraControls;\r\n        controls.minDistance = 1;\r\n        controls.maxDistance = 300;\r\n        this.ifcCamera.cameraControls.truckSpeed = 2;\r\n    }\r\n}\r\n//# sourceMappingURL=orbit-control.js.map","import { Vector3 } from 'three';\r\nimport CameraControls from 'camera-controls';\r\nimport { CameraProjections, NavigationModes } from '../../../base-types';\r\nexport class ProjectionManager {\r\n    constructor(context, ifcCamera) {\r\n        this.context = context;\r\n        this.previousDistance = -1;\r\n        this.cameras = ifcCamera;\r\n        this.currentCamera = ifcCamera.perspectiveCamera;\r\n        this.currentProjection = CameraProjections.Perspective;\r\n    }\r\n    get activeCamera() {\r\n        return this.currentCamera;\r\n    }\r\n    get projection() {\r\n        return this.currentProjection;\r\n    }\r\n    set projection(projection) {\r\n        if (this.projection === projection)\r\n            return;\r\n        if (projection === CameraProjections.Orthographic) {\r\n            this.setOrthoCamera();\r\n        }\r\n        else {\r\n            this.setPerspectiveCamera();\r\n        }\r\n    }\r\n    setOrthoCamera() {\r\n        // Matching orthographic camera to perspective camera\r\n        // Resource: https://stackoverflow.com/questions/48758959/what-is-required-to-convert-threejs-perspective-camera-to-orthographic\r\n        if (this.cameras.currentNavMode.mode === NavigationModes.FirstPerson)\r\n            return;\r\n        this.previousDistance = this.cameras.cameraControls.distance;\r\n        this.cameras.cameraControls.distance = 200;\r\n        const { width, height } = this.getDims();\r\n        this.setupOrthoCamera(height, width);\r\n        this.currentCamera = this.cameras.orthographicCamera;\r\n        this.currentProjection = CameraProjections.Orthographic;\r\n    }\r\n    getDims() {\r\n        const lineOfSight = new Vector3();\r\n        this.cameras.perspectiveCamera.getWorldDirection(lineOfSight);\r\n        const target = new Vector3();\r\n        this.cameras.cameraControls.getTarget(target);\r\n        const distance = target.clone().sub(this.cameras.perspectiveCamera.position);\r\n        const depth = distance.dot(lineOfSight);\r\n        const dims = this.context.getDimensions();\r\n        const aspect = dims.x / dims.y;\r\n        const fov = this.cameras.perspectiveCamera.fov;\r\n        const height = depth * 2 * Math.atan((fov * (Math.PI / 180)) / 2);\r\n        const width = height * aspect;\r\n        return { width, height };\r\n    }\r\n    setupOrthoCamera(height, width) {\r\n        this.cameras.cameraControls.mouseButtons.wheel = CameraControls.ACTION.ZOOM;\r\n        this.cameras.orthographicCamera.zoom = 1;\r\n        this.cameras.orthographicCamera.left = width / -2;\r\n        this.cameras.orthographicCamera.right = width / 2;\r\n        this.cameras.orthographicCamera.top = height / 2;\r\n        this.cameras.orthographicCamera.bottom = height / -2;\r\n        this.cameras.orthographicCamera.updateProjectionMatrix();\r\n        this.cameras.orthographicCamera.position.copy(this.cameras.perspectiveCamera.position);\r\n        this.cameras.orthographicCamera.quaternion.copy(this.cameras.perspectiveCamera.quaternion);\r\n        this.cameras.cameraControls.camera = this.cameras.orthographicCamera;\r\n    }\r\n    setPerspectiveCamera() {\r\n        this.cameras.cameraControls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\r\n        this.cameras.perspectiveCamera.position.copy(this.cameras.orthographicCamera.position);\r\n        this.cameras.perspectiveCamera.quaternion.copy(this.cameras.orthographicCamera.quaternion);\r\n        this.cameras.perspectiveCamera.updateProjectionMatrix();\r\n        this.cameras.cameraControls.camera = this.cameras.perspectiveCamera;\r\n        this.cameras.cameraControls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\r\n        this.currentCamera = this.cameras.perspectiveCamera;\r\n        this.currentProjection = CameraProjections.Perspective;\r\n        this.cameras.cameraControls.distance = this.previousDistance;\r\n        this.cameras.cameraControls.zoomTo(1);\r\n    }\r\n}\r\n//# sourceMappingURL=projection-manager.js.map","import { Box3 } from 'three';\r\nimport CameraControls from 'camera-controls';\r\nimport { IfcComponent, NavigationModes } from '../../../../base-types';\r\nimport { LiteEvent } from '../../../../utils/LiteEvent';\r\nexport class PlanControl extends IfcComponent {\r\n    constructor(context, ifcCamera) {\r\n        super(context);\r\n        this.context = context;\r\n        this.ifcCamera = ifcCamera;\r\n        this.mode = NavigationModes.Plan;\r\n        this.enabled = false;\r\n        this.onChange = new LiteEvent();\r\n        this.onChangeProjection = new LiteEvent();\r\n        this.defaultAzimuthSpeed = ifcCamera.cameraControls.azimuthRotateSpeed;\r\n        this.defaultPolarSpeed = ifcCamera.cameraControls.polarRotateSpeed;\r\n    }\r\n    toggle(active) {\r\n        this.enabled = active;\r\n        const controls = this.ifcCamera.cameraControls;\r\n        controls.azimuthRotateSpeed = active ? 0 : this.defaultAzimuthSpeed;\r\n        controls.polarRotateSpeed = active ? 0 : this.defaultPolarSpeed;\r\n        controls.mouseButtons.left = CameraControls.ACTION.ROTATE;\r\n    }\r\n    async fitModelToFrame() {\r\n        if (!this.enabled)\r\n            return;\r\n        const scene = this.context.getScene();\r\n        console.log(scene);\r\n        const box = new Box3().setFromObject(scene.children[0]);\r\n        await this.ifcCamera.cameraControls.fitToBox(box, false);\r\n    }\r\n}\r\n//# sourceMappingURL=plan-control.js.map","import { Box3, MathUtils, Matrix4, MOUSE, OrthographicCamera, PerspectiveCamera, Quaternion, Raycaster, Sphere, Spherical, Vector2, Vector3, Vector4 } from 'three';\r\nimport CameraControls from 'camera-controls';\r\nimport { CameraProjections, IfcComponent, NavigationModes } from '../../../base-types';\r\nimport { LiteEvent } from '../../../utils/LiteEvent';\r\nimport { FirstPersonControl } from './controls/first-person-control';\r\nimport { OrbitControl } from './controls/orbit-control';\r\nimport { ProjectionManager } from './projection-manager';\r\nimport { PlanControl } from './controls/plan-control';\r\nconst subsetOfTHREE = {\r\n    MOUSE,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Quaternion,\r\n    Matrix4,\r\n    Spherical,\r\n    Box3,\r\n    Sphere,\r\n    Raycaster,\r\n    MathUtils: {\r\n        DEG2RAD: MathUtils.DEG2RAD,\r\n        clamp: MathUtils.clamp\r\n    }\r\n};\r\nconst frustumSize = 50;\r\nexport class IfcCamera extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.onChange = new LiteEvent();\r\n        this.onChangeProjection = new LiteEvent();\r\n        this.previousUserInput = {};\r\n        this.context = context;\r\n        const dims = this.context.getDimensions();\r\n        const aspect = dims.x / dims.y;\r\n        this.perspectiveCamera = new PerspectiveCamera(45, aspect, 1, 2000);\r\n        this.orthographicCamera = new OrthographicCamera((frustumSize * aspect) / -2, (frustumSize * aspect) / 2, frustumSize / 2, frustumSize / -2, 0.1, 1000);\r\n        this.setupCameras();\r\n        CameraControls.install({ THREE: subsetOfTHREE });\r\n        this.cameraControls = new CameraControls(this.perspectiveCamera, context.getDomElement());\r\n        this.navMode = {\r\n            [NavigationModes.Orbit]: new OrbitControl(this.context, this),\r\n            [NavigationModes.FirstPerson]: new FirstPersonControl(this.context, this),\r\n            [NavigationModes.Plan]: new PlanControl(this.context, this)\r\n        };\r\n        this.currentNavMode = this.navMode[NavigationModes.Orbit];\r\n        this.currentNavMode.toggle(true, { preventTargetAdjustment: true });\r\n        Object.values(this.navMode).forEach((mode) => {\r\n            mode.onChange.on(this.onChange.trigger);\r\n            mode.onChangeProjection.on(this.onChangeProjection.trigger);\r\n        });\r\n        this.projectionManager = new ProjectionManager(context, this);\r\n        this.setupControls();\r\n    }\r\n    dispose() {\r\n        this.perspectiveCamera.removeFromParent();\r\n        this.perspectiveCamera = null;\r\n        this.orthographicCamera.removeFromParent();\r\n        this.orthographicCamera = null;\r\n        this.cameraControls.dispose();\r\n        this.cameraControls = null;\r\n        this.navMode = null;\r\n        this.context = null;\r\n        this.projectionManager = null;\r\n    }\r\n    get projection() {\r\n        return this.projectionManager.projection;\r\n    }\r\n    set projection(projection) {\r\n        this.projectionManager.projection = projection;\r\n        this.onChangeProjection.trigger(this.activeCamera);\r\n    }\r\n    /**\r\n     * @deprecated Use cameraControls instead.\r\n     */\r\n    get controls() {\r\n        return this.cameraControls;\r\n    }\r\n    get activeCamera() {\r\n        return this.projectionManager.activeCamera;\r\n    }\r\n    update(_delta) {\r\n        super.update(_delta);\r\n        if (this.cameraControls.enabled) {\r\n            this.cameraControls.update(_delta);\r\n        }\r\n    }\r\n    updateAspect(dims) {\r\n        if (!dims)\r\n            dims = this.context.getDimensions();\r\n        this.perspectiveCamera.aspect = dims.x / dims.y;\r\n        this.perspectiveCamera.updateProjectionMatrix();\r\n        this.setOrthoCameraAspect(dims);\r\n    }\r\n    /**\r\n     * @deprecated Use onChange.on() instead.\r\n     */\r\n    submitOnChange(action) {\r\n        this.onChange.on(action);\r\n    }\r\n    setNavigationMode(mode) {\r\n        if (this.currentNavMode.mode === mode)\r\n            return;\r\n        this.currentNavMode.toggle(false);\r\n        this.currentNavMode = this.navMode[mode];\r\n        this.currentNavMode.toggle(true);\r\n    }\r\n    toggleCameraControls(active) {\r\n        this.cameraControls.enabled = active;\r\n    }\r\n    toggleProjection() {\r\n        const isOrto = this.projection === CameraProjections.Orthographic;\r\n        this.projection = isOrto ? CameraProjections.Perspective : CameraProjections.Orthographic;\r\n        this.onChangeProjection.trigger(this.activeCamera);\r\n    }\r\n    async targetItem(mesh) {\r\n        const center = this.context.getCenter(mesh);\r\n        await this.cameraControls.moveTo(center.x, center.y, center.z, true);\r\n    }\r\n    toggleUserInput(active) {\r\n        console.log(this.previousUserInput);\r\n        if (active) {\r\n            if (Object.keys(this.previousUserInput).length === 0)\r\n                return;\r\n            this.cameraControls.mouseButtons.left = this.previousUserInput.left;\r\n            this.cameraControls.mouseButtons.right = this.previousUserInput.right;\r\n            this.cameraControls.mouseButtons.middle = this.previousUserInput.middle;\r\n            this.cameraControls.mouseButtons.wheel = this.previousUserInput.wheel;\r\n        }\r\n        else {\r\n            this.previousUserInput.left = this.cameraControls.mouseButtons.left;\r\n            this.previousUserInput.right = this.cameraControls.mouseButtons.right;\r\n            this.previousUserInput.middle = this.cameraControls.mouseButtons.middle;\r\n            this.previousUserInput.wheel = this.cameraControls.mouseButtons.wheel;\r\n            this.cameraControls.mouseButtons.left = 0;\r\n            this.cameraControls.mouseButtons.right = 0;\r\n            this.cameraControls.mouseButtons.middle = 0;\r\n            this.cameraControls.mouseButtons.wheel = 0;\r\n        }\r\n    }\r\n    setOrthoCameraAspect(dims) {\r\n        const aspect = dims.x / dims.y;\r\n        this.orthographicCamera.left = (-frustumSize * aspect) / 2;\r\n        this.orthographicCamera.right = (frustumSize * aspect) / 2;\r\n        this.orthographicCamera.top = frustumSize / 2;\r\n        this.orthographicCamera.bottom = -frustumSize / 2;\r\n        this.orthographicCamera.updateProjectionMatrix();\r\n    }\r\n    // private setOrbitControls() {\r\n    //   this.setNavigationMode(NavigationModes.Orbit);\r\n    //   return this.currentNavMode as OrbitControl;\r\n    // }\r\n    setupCameras() {\r\n        this.setCameraPositionAndTarget(this.perspectiveCamera);\r\n    }\r\n    setCameraPositionAndTarget(camera) {\r\n        camera.position.z = 10;\r\n        camera.position.y = 10;\r\n        camera.position.x = 10;\r\n        camera.lookAt(new Vector3(0, 0, 0));\r\n    }\r\n    setupControls() {\r\n        this.cameraControls.dampingFactor = 0.2;\r\n        this.cameraControls.dollyToCursor = true;\r\n        this.cameraControls.infinityDolly = true;\r\n        this.cameraControls.setTarget(0, 0, 0);\r\n        this.cameraControls.addEventListener('controlend', () => this.onChange.trigger(this));\r\n        this.cameraControls.addEventListener('rest', () => this.onChange.trigger(this));\r\n    }\r\n}\r\n//# sourceMappingURL=camera.js.map","import { Raycaster } from 'three';\r\nimport { IfcComponent } from '../../base-types';\r\nexport class IfcRaycaster extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.context = context;\r\n        this.raycaster = new Raycaster();\r\n    }\r\n    dispose() {\r\n        this.raycaster = null;\r\n        this.context = null;\r\n    }\r\n    castRay(items) {\r\n        const camera = this.context.getCamera();\r\n        this.raycaster.setFromCamera(this.context.mouse.position, camera);\r\n        return this.raycaster.intersectObjects(items);\r\n    }\r\n    castRayIfc() {\r\n        const items = this.castRay(this.context.items.pickableIfcModels);\r\n        const filtered = this.filterClippingPlanes(items);\r\n        return filtered.length > 0 ? filtered[0] : null;\r\n    }\r\n    filterClippingPlanes(objs) {\r\n        const planes = this.context.getClippingPlanes();\r\n        if (objs.length <= 0 || !planes || (planes === null || planes === void 0 ? void 0 : planes.length) <= 0)\r\n            return objs;\r\n        // const planes = this.clipper?.planes.map((p) => p.plane);\r\n        return objs.filter((elem) => planes.every((elem2) => elem2.distanceToPoint(elem.point) > 0));\r\n    }\r\n}\r\n//# sourceMappingURL=raycaster.js.map","import { Pass, FullScreenQuad } from 'three/examples/jsm/postprocessing/Pass';\r\nimport { Color, MeshNormalMaterial, NearestFilter, RGBFormat, ShaderMaterial, Vector2, Vector4, WebGLRenderTarget } from 'three';\r\n// source: https://discourse.threejs.org/t/how-to-render-full-outlines-as-a-post-process-tutorial/22674\r\n// Follows the structure of\r\n// \t\thttps://github.com/mrdoob/three.js/blob/master/examples/jsm/postprocessing/OutlinePass.js\r\nclass CustomOutlinePass extends Pass {\r\n    constructor(resolution, scene, camera) {\r\n        super();\r\n        this.renderScene = scene;\r\n        this.camera = camera;\r\n        this.resolution = new Vector2(resolution.x, resolution.y);\r\n        // @ts-ignore\r\n        this.fsQuad = new FullScreenQuad(null);\r\n        this.fsQuad.material = this.createOutlinePostProcessMaterial();\r\n        // Create a buffer to store the normals of the scene onto\r\n        const normalTarget = new WebGLRenderTarget(this.resolution.x, this.resolution.y);\r\n        normalTarget.texture.format = RGBFormat;\r\n        normalTarget.texture.minFilter = NearestFilter;\r\n        normalTarget.texture.magFilter = NearestFilter;\r\n        normalTarget.texture.generateMipmaps = false;\r\n        normalTarget.stencilBuffer = false;\r\n        this.normalTarget = normalTarget;\r\n        this.normalOverrideMaterial = new MeshNormalMaterial();\r\n    }\r\n    dispose() {\r\n        this.normalTarget.dispose();\r\n        this.normalTarget = null;\r\n        this.fsQuad.dispose();\r\n        this.fsQuad = null;\r\n    }\r\n    setSize(width, height) {\r\n        this.normalTarget.setSize(width, height);\r\n        this.resolution.set(width * 2, height * 2);\r\n        // @ts-ignore\r\n        this.fsQuad.material.uniforms.screenSize.value.set(this.resolution.x, this.resolution.y, 1 / this.resolution.x, 1 / this.resolution.y);\r\n    }\r\n    render(renderer, writeBuffer, readBuffer) {\r\n        // Turn off writing to the depth buffer\r\n        // because we need to read from it in the subsequent passes.\r\n        const depthBufferValue = writeBuffer.depthBuffer;\r\n        writeBuffer.depthBuffer = false;\r\n        // 1. Re-render the scene to capture all normals in texture.\r\n        // Ideally we could capture this in the first render pass along with\r\n        // the depth texture.\r\n        renderer.setRenderTarget(this.normalTarget);\r\n        const overrideMaterialValue = this.renderScene.overrideMaterial;\r\n        this.renderScene.overrideMaterial = this.normalOverrideMaterial;\r\n        renderer.render(this.renderScene, this.camera);\r\n        this.renderScene.overrideMaterial = overrideMaterialValue;\r\n        // @ts-ignore\r\n        this.fsQuad.material.uniforms.depthBuffer.value = readBuffer.depthTexture;\r\n        // @ts-ignore\r\n        this.fsQuad.material.uniforms.normalBuffer.value = this.normalTarget.texture;\r\n        // @ts-ignore\r\n        this.fsQuad.material.uniforms.sceneColorBuffer.value = readBuffer.texture;\r\n        // 2. Draw the outlines using the depth texture and normal texture\r\n        // and combine it with the scene color\r\n        if (this.renderToScreen) {\r\n            // If this is the last effect, then renderToScreen is true.\r\n            // So we should render to the screen by setting target null\r\n            // Otherwise, just render into the writeBuffer that the next effect will use as its read buffer.\r\n            renderer.setRenderTarget(null);\r\n            this.fsQuad.render(renderer);\r\n        }\r\n        else {\r\n            renderer.setRenderTarget(writeBuffer);\r\n            this.fsQuad.render(renderer);\r\n        }\r\n        // Reset the depthBuffer value so we continue writing to it in the next render.\r\n        writeBuffer.depthBuffer = depthBufferValue;\r\n    }\r\n    get vertexShader() {\r\n        return `\r\n\t\t\tvarying vec2 vUv;\r\n\t\t\tvoid main() {\r\n\t\t\t  vUv = uv;\r\n\t\t\t  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n\t\t\t}\r\n\t\t\t`;\r\n    }\r\n    get fragmentShader() {\r\n        return `\r\n\t\t\t#include <packing>\r\n\t\t\t// The above include imports \"perspectiveDepthToViewZ\"\r\n\t\t\t// and other GLSL functions from ThreeJS we need for reading depth.\r\n\t\t\tuniform sampler2D sceneColorBuffer;\r\n\t\t\tuniform sampler2D depthBuffer;\r\n\t\t\tuniform sampler2D normalBuffer;\r\n\t\t\tuniform float cameraNear;\r\n  \t\tuniform float cameraFar;\r\n  \t\tuniform vec4 screenSize;\r\n      uniform vec3 outlineColor;\r\n      uniform vec4 multiplierParameters;\r\n      uniform int debugVisualize;\r\n\r\n\t\t\tvarying vec2 vUv;\r\n\r\n\t\t\t// Helper functions for reading from depth buffer.\r\n\t\t\tfloat readDepth (sampler2D depthSampler, vec2 coord) {\r\n\t\t\t\tfloat fragCoordZ = texture2D(depthSampler, coord).x;\r\n\t\t\t\tfloat viewZ = perspectiveDepthToViewZ( fragCoordZ, cameraNear, cameraFar );\r\n\t\t\t\treturn viewZToOrthographicDepth( viewZ, cameraNear, cameraFar );\r\n\t\t\t}\r\n\t\t\tfloat getLinearDepth(vec3 pos) {\r\n\t\t\t\treturn -(viewMatrix * vec4(pos, 1.0)).z;\r\n\t\t\t}\r\n\r\n\t\t\tfloat getLinearScreenDepth(sampler2D map) {\r\n\t\t    \tvec2 uv = gl_FragCoord.xy * screenSize.zw;\r\n\t\t    \treturn readDepth(map,uv);\r\n\t\t\t}\r\n\t\t\t// Helper functions for reading normals and depth of neighboring pixels.\r\n\t\t\tfloat getPixelDepth(int x, int y) {\r\n\t\t\t\t// screenSize.zw is pixel size \r\n\t\t\t\t// vUv is current position\r\n\t\t\t\treturn readDepth(depthBuffer, vUv + screenSize.zw * vec2(x, y));\r\n\t\t\t}\r\n\t\t\tvec3 getPixelNormal(int x, int y) {\r\n\t\t\t\treturn texture2D(normalBuffer, vUv + screenSize.zw * vec2(x, y)).rgb;\r\n\t\t\t}\r\n\r\n      float saturate(float num) {\r\n        return clamp(num, 0.0, 1.0);\r\n      }\r\n\r\n\t\t\tvoid main() {\r\n\t\t\t\tvec4 sceneColor = texture2D(sceneColorBuffer, vUv);\r\n\t\t\t\tfloat depth = getPixelDepth(0, 0);\r\n\t\t\t\tvec3 normal = getPixelNormal(0, 0);\r\n\r\n\t\t\t\t// Get the difference between depth of neighboring pixels and current.\r\n\t\t\t\tfloat depthDiff = 0.0;\r\n\t\t  \tdepthDiff += abs(depth - getPixelDepth(1, 0));\r\n\t\t  \tdepthDiff += abs(depth - getPixelDepth(-1, 0));\r\n\t\t  \tdepthDiff += abs(depth - getPixelDepth(0, 1));\r\n\t\t  \tdepthDiff += abs(depth - getPixelDepth(0, -1));\r\n\r\n\t\t  \t// Get the difference between normals of neighboring pixels and current\r\n\t\t  \tfloat normalDiff = 0.0;\r\n\t\t  \tnormalDiff += distance(normal, getPixelNormal(1, 0));\r\n\t\t  \tnormalDiff += distance(normal, getPixelNormal(0, 1));\r\n\t\t  \tnormalDiff += distance(normal, getPixelNormal(0, 1));\r\n\t\t  \tnormalDiff += distance(normal, getPixelNormal(0, -1));\r\n\r\n        normalDiff += distance(normal, getPixelNormal(1, 1));\r\n        normalDiff += distance(normal, getPixelNormal(1, -1));\r\n        normalDiff += distance(normal, getPixelNormal(-1, 1));\r\n        normalDiff += distance(normal, getPixelNormal(-1, -1));\r\n\r\n        // Apply multiplier & bias to each \r\n        float depthBias = multiplierParameters.x;\r\n        float depthMultiplier = multiplierParameters.y;\r\n        float normalBias = multiplierParameters.z;\r\n        float normalMultiplier = multiplierParameters.w;\r\n\r\n        depthDiff = depthDiff * depthMultiplier;\r\n        depthDiff = saturate(depthDiff);\r\n        depthDiff = pow(depthDiff, depthBias);\r\n\r\n        normalDiff = normalDiff * normalMultiplier;\r\n        normalDiff = saturate(normalDiff);\r\n        normalDiff = pow(normalDiff, normalBias);\r\n\r\n\r\n\t\t  \tfloat outline = normalDiff + depthDiff;\r\n\t\t\t\r\n\t\t  \t// Combine outline with scene color.\r\n\t\t  \tvec4 outlineColor = vec4(outlineColor, 1.0);\r\n\t\t  \tgl_FragColor = vec4(mix(sceneColor, outlineColor, outline));\r\n\r\n        // For debug visualization of the different inputs to this shader.\r\n        if (debugVisualize == 1) {\r\n          gl_FragColor = sceneColor;\r\n        }\r\n        if (debugVisualize == 2) {\r\n          gl_FragColor = vec4(vec3(depth), 1.0);\r\n        }\r\n        if (debugVisualize == 3) {\r\n          gl_FragColor = vec4(normal, 1.0);\r\n        }\r\n        if (debugVisualize == 4) {\r\n          gl_FragColor = vec4(vec3(outline * outlineColor), 1.0);\r\n        }\r\n\t\t\t}\r\n\t\t\t`;\r\n    }\r\n    createOutlinePostProcessMaterial() {\r\n        return new ShaderMaterial({\r\n            uniforms: {\r\n                debugVisualize: { value: 0 },\r\n                // @ts-ignore\r\n                sceneColorBuffer: {},\r\n                // @ts-ignore\r\n                depthBuffer: {},\r\n                // @ts-ignore\r\n                normalBuffer: {},\r\n                outlineColor: { value: new Color(0xffffff) },\r\n                // 4 scalar values packed in one uniform: depth multiplier, depth bias, and same for normals.\r\n                multiplierParameters: { value: new Vector4(1, 1, 1, 1) },\r\n                cameraNear: { value: this.camera.near },\r\n                cameraFar: { value: this.camera.far },\r\n                screenSize: {\r\n                    value: new Vector4(this.resolution.x, this.resolution.y, 1 / this.resolution.x, 1 / this.resolution.y)\r\n                }\r\n            },\r\n            vertexShader: this.vertexShader,\r\n            fragmentShader: this.fragmentShader\r\n        });\r\n    }\r\n}\r\nexport { CustomOutlinePass };\r\n//# sourceMappingURL=custom-outline-pass.js.map","import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { Color, DepthTexture, MeshLambertMaterial, Vector2, WebGLRenderTarget } from 'three';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { SAOPass } from 'three/examples/jsm/postprocessing/SAOPass';\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\nimport { CustomOutlinePass } from './custom-outline-pass';\r\n// source: https://discourse.threejs.org/t/how-to-render-full-outlines-as-a-post-process-tutorial/22674\r\nexport class Postproduction {\r\n    constructor(context, renderer) {\r\n        this.context = context;\r\n        this.renderer = renderer;\r\n        this.htmlOverlay = document.createElement('img');\r\n        this.excludedItems = new Set();\r\n        this.initialized = false;\r\n        this.visibilityField = 'ifcjsPostproductionVisible';\r\n        this.isUserControllingCamera = false;\r\n        this.isControlSleeping = true;\r\n        this.lastWheelUsed = 0;\r\n        this.lastResized = 0;\r\n        this.resizeDelay = 500;\r\n        this.isActive = false;\r\n        this.isVisible = false;\r\n        this.white = new Color(255, 255, 255);\r\n        this.tempMaterial = new MeshLambertMaterial({\r\n            colorWrite: false,\r\n            opacity: 0,\r\n            transparent: true\r\n        });\r\n        this.outlineParams = {\r\n            mode: { Mode: 0 },\r\n            FXAA: true,\r\n            outlineColor: 0x777777,\r\n            depthBias: 16,\r\n            depthMult: 83,\r\n            normalBias: 5,\r\n            normalMult: 1.0\r\n        };\r\n        this.onControlStart = () => (this.isUserControllingCamera = true);\r\n        this.onWake = () => (this.isControlSleeping = false);\r\n        this.onResize = () => {\r\n            this.lastResized = performance.now();\r\n            this.visible = false;\r\n            setTimeout(() => {\r\n                if (performance.now() - this.lastResized >= this.resizeDelay) {\r\n                    this.visible = true;\r\n                }\r\n            }, this.resizeDelay);\r\n        };\r\n        this.onControl = () => {\r\n            this.visible = false;\r\n        };\r\n        this.onControlEnd = () => {\r\n            this.isUserControllingCamera = false;\r\n            if (!this.isUserControllingCamera && this.isControlSleeping) {\r\n                this.visible = true;\r\n            }\r\n        };\r\n        this.onWheel = () => {\r\n            this.lastWheelUsed = performance.now();\r\n        };\r\n        this.onSleep = () => {\r\n            // This prevents that this gets triggered a million times when zooming with the wheel\r\n            this.isControlSleeping = true;\r\n            const currentWheel = performance.now();\r\n            setTimeout(() => {\r\n                if (this.lastWheelUsed > currentWheel)\r\n                    return;\r\n                if (!this.isUserControllingCamera && this.isControlSleeping) {\r\n                    this.visible = true;\r\n                }\r\n            }, 200);\r\n        };\r\n        this.onChangeProjection = (camera) => {\r\n            this.composer.passes.forEach((pass) => {\r\n                // @ts-ignore\r\n                pass.camera = camera;\r\n            });\r\n            this.update();\r\n        };\r\n        this.renderTarget = this.newRenderTarget();\r\n        this.composer = new EffectComposer(renderer, this.renderTarget);\r\n        this.composer.setSize(window.innerWidth, window.innerHeight);\r\n    }\r\n    get active() {\r\n        return this.isActive;\r\n    }\r\n    set active(active) {\r\n        if (this.isActive === active)\r\n            return;\r\n        if (!this.initialized)\r\n            this.tryToInitialize();\r\n        this.visible = active;\r\n        this.isActive = active;\r\n    }\r\n    get visible() {\r\n        return this.isVisible;\r\n    }\r\n    set visible(visible) {\r\n        if (!this.isActive)\r\n            return;\r\n        this.isVisible = visible;\r\n        if (visible)\r\n            this.update();\r\n        this.htmlOverlay.style.visibility = visible ? 'visible' : 'collapse';\r\n    }\r\n    get outlineColor() {\r\n        return this.outlineParams.outlineColor;\r\n    }\r\n    set outlineColor(color) {\r\n        this.outlineParams.outlineColor = color;\r\n        this.outlineUniforms.outlineColor.value.set(color);\r\n    }\r\n    get sao() {\r\n        var _a;\r\n        return (_a = this.saoPass) === null || _a === void 0 ? void 0 : _a.params;\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this.active = false;\r\n        window.removeEventListener('resize', this.onResize);\r\n        this.renderTarget.dispose();\r\n        this.renderTarget = null;\r\n        (_a = this.depthTexture) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this.depthTexture = null;\r\n        (_b = this.customOutline) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this.customOutline = null;\r\n        this.composer = null;\r\n        this.excludedItems.clear();\r\n        this.excludedItems = null;\r\n        this.composer = null;\r\n        this.htmlOverlay.remove();\r\n        this.htmlOverlay = null;\r\n        this.outlineParams = null;\r\n        this.context = null;\r\n        this.renderer = null;\r\n        this.saoPass = null;\r\n        this.outlineUniforms = null;\r\n        this.scene = null;\r\n    }\r\n    setSize(width, height) {\r\n        this.composer.setSize(width, height);\r\n    }\r\n    update() {\r\n        var _a, _b, _c;\r\n        if (!this.initialized || !this.isActive)\r\n            return;\r\n        this.hideExcludedItems();\r\n        this.context.getScene().traverse((object) => {\r\n            // @ts-ignore\r\n            object.userData.prevMaterial = object.material;\r\n            // @ts-ignore\r\n            object.material = this.tempMaterial;\r\n        });\r\n        const background = (_a = this.scene) === null || _a === void 0 ? void 0 : _a.background;\r\n        if (((_b = this.scene) === null || _b === void 0 ? void 0 : _b.background) && background)\r\n            this.scene.background = this.white;\r\n        this.composer.render();\r\n        if (((_c = this.scene) === null || _c === void 0 ? void 0 : _c.background) && background)\r\n            this.scene.background = background;\r\n        this.context.getScene().traverse((object) => {\r\n            // @ts-ignore\r\n            object.material = object.userData.prevMaterial;\r\n            delete object.userData.prevMaterial;\r\n        });\r\n        this.htmlOverlay.src = this.renderer.domElement.toDataURL();\r\n        this.showExcludedItems();\r\n    }\r\n    hideExcludedItems() {\r\n        for (const object of this.excludedItems) {\r\n            object.userData[this.visibilityField] = object.visible;\r\n            object.visible = false;\r\n        }\r\n    }\r\n    showExcludedItems() {\r\n        for (const object of this.excludedItems) {\r\n            if (object.userData[this.visibilityField] !== undefined) {\r\n                object.visible = object.userData[this.visibilityField];\r\n            }\r\n        }\r\n    }\r\n    tryToInitialize() {\r\n        const scene = this.context.getScene();\r\n        const camera = this.context.getCamera();\r\n        if (!scene || !camera)\r\n            return;\r\n        this.scene = scene;\r\n        this.renderer.clippingPlanes = this.context.getClippingPlanes();\r\n        this.setupEvents();\r\n        this.addBasePass(scene, camera);\r\n        this.addSaoPass(scene, camera);\r\n        this.addOutlinePass(scene, camera);\r\n        this.addAntialiasPass();\r\n        this.setupHtmlOverlay();\r\n        this.initialized = true;\r\n    }\r\n    setupEvents() {\r\n        const controls = this.context.ifcCamera.cameraControls;\r\n        const domElement = this.context.getDomElement();\r\n        controls.addEventListener('control', this.onControl);\r\n        controls.addEventListener('controlstart', this.onControlStart);\r\n        controls.addEventListener('wake', this.onWake);\r\n        controls.addEventListener('controlend', this.onControlEnd);\r\n        domElement.addEventListener('wheel', this.onWheel);\r\n        controls.addEventListener('sleep', this.onSleep);\r\n        window.addEventListener('resize', this.onResize);\r\n        this.context.ifcCamera.onChangeProjection.on(this.onChangeProjection);\r\n    }\r\n    setupHtmlOverlay() {\r\n        this.context.getContainerElement().appendChild(this.htmlOverlay);\r\n        // @ts-ignore\r\n        this.htmlOverlay.style.mixBlendMode = 'multiply';\r\n        this.htmlOverlay.style.position = 'absolute';\r\n        this.htmlOverlay.style.height = '100%';\r\n        this.htmlOverlay.style.userSelect = 'none';\r\n        this.htmlOverlay.style.pointerEvents = 'none';\r\n        this.htmlOverlay.style.top = '0';\r\n        this.htmlOverlay.style.left = '0';\r\n    }\r\n    addAntialiasPass() {\r\n        this.fxaaPass = new ShaderPass(FXAAShader);\r\n        this.fxaaPass.uniforms.resolution.value.set((1 / this.renderer.domElement.offsetWidth) * this.renderer.getPixelRatio(), (1 / this.renderer.domElement.offsetHeight) * this.renderer.getPixelRatio());\r\n        this.composer.addPass(this.fxaaPass);\r\n    }\r\n    addOutlinePass(scene, camera) {\r\n        this.customOutline = new CustomOutlinePass(new Vector2(window.innerWidth, window.innerHeight), scene, camera);\r\n        // Initial values\r\n        // @ts-ignore\r\n        this.outlineUniforms = this.customOutline.fsQuad.material.uniforms;\r\n        this.outlineUniforms.outlineColor.value.set(this.outlineParams.outlineColor);\r\n        this.outlineUniforms.multiplierParameters.value.x = this.outlineParams.depthBias;\r\n        this.outlineUniforms.multiplierParameters.value.y = this.outlineParams.depthMult;\r\n        this.outlineUniforms.multiplierParameters.value.z = this.outlineParams.normalBias;\r\n        this.outlineUniforms.multiplierParameters.value.w = this.outlineParams.normalMult;\r\n        this.composer.addPass(this.customOutline);\r\n    }\r\n    addSaoPass(scene, camera) {\r\n        this.saoPass = new SAOPass(scene, camera, false, true);\r\n        this.composer.addPass(this.saoPass);\r\n        this.saoPass.enabled = true;\r\n        this.saoPass.params.saoIntensity = 0.01;\r\n        this.saoPass.params.saoBias = 0.5;\r\n        this.saoPass.params.saoBlurRadius = 8;\r\n        this.saoPass.params.saoBlurDepthCutoff = 0.0015;\r\n        this.saoPass.params.saoScale = 30;\r\n        this.saoPass.params.saoKernelRadius = 30;\r\n    }\r\n    addBasePass(scene, camera) {\r\n        this.basePass = new RenderPass(scene, camera);\r\n        this.composer.addPass(this.basePass);\r\n    }\r\n    newRenderTarget() {\r\n        this.depthTexture = new DepthTexture(window.innerWidth, window.innerHeight);\r\n        return new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\r\n            depthTexture: this.depthTexture,\r\n            depthBuffer: true\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=postproduction.js.map","import { Vector2, WebGLRenderer } from 'three';\r\nimport { CSS2DRenderer } from 'three/examples/jsm/renderers/CSS2DRenderer';\r\nimport { IfcComponent } from '../../../base-types';\r\nimport { Postproduction } from './postproduction';\r\nexport class IfcRenderer extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.renderer2D = new CSS2DRenderer();\r\n        this.blocked = false;\r\n        this.context = context;\r\n        this.container = context.options.container;\r\n        this.renderer = new WebGLRenderer({ alpha: true, antialias: true });\r\n        this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n        this.setupRenderers();\r\n        this.postProduction = new Postproduction(this.context, this.renderer);\r\n        this.adjustRendererSize();\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this.renderer.domElement.remove();\r\n        this.renderer.dispose();\r\n        this.postProduction.dispose();\r\n        this.postProduction = null;\r\n        this.renderer = null;\r\n        this.renderer2D = null;\r\n        this.container = null;\r\n        this.context = null;\r\n        (_a = this.tempRenderer) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this.tempCanvas) === null || _b === void 0 ? void 0 : _b.remove();\r\n    }\r\n    update(_delta) {\r\n        if (this.blocked)\r\n            return;\r\n        const scene = this.context.getScene();\r\n        const camera = this.context.getCamera();\r\n        this.renderer.render(scene, camera);\r\n        this.renderer2D.render(scene, camera);\r\n    }\r\n    getSize() {\r\n        return new Vector2(this.renderer.domElement.clientWidth, this.renderer.domElement.clientHeight);\r\n    }\r\n    adjustRendererSize() {\r\n        const width = this.container.clientWidth;\r\n        const height = this.container.clientHeight;\r\n        this.renderer.setSize(width, height);\r\n        this.postProduction.setSize(width, height);\r\n        this.renderer2D.setSize(width, height);\r\n    }\r\n    newScreenshot(camera, dimensions) {\r\n        const previousDimensions = this.getSize();\r\n        const domElement = this.renderer.domElement;\r\n        const tempCanvas = domElement.cloneNode(true);\r\n        // Using a new renderer to make screenshots without updating what the user sees in the canvas\r\n        if (!this.tempRenderer) {\r\n            this.tempRenderer = new WebGLRenderer({ canvas: tempCanvas, antialias: true });\r\n            this.tempRenderer.localClippingEnabled = true;\r\n        }\r\n        if (dimensions) {\r\n            this.tempRenderer.setSize(dimensions.x, dimensions.y);\r\n            this.context.ifcCamera.updateAspect(dimensions);\r\n        }\r\n        // todo add this later to have a centered screenshot\r\n        // await this.context.getIfcCamera().currentNavMode.fitModelToFrame();\r\n        const scene = this.context.getScene();\r\n        const cameraToRender = camera || this.context.getCamera();\r\n        this.tempRenderer.render(scene, cameraToRender);\r\n        const result = this.tempRenderer.domElement.toDataURL();\r\n        if (dimensions)\r\n            this.context.ifcCamera.updateAspect(previousDimensions);\r\n        return result;\r\n    }\r\n    setupRenderers() {\r\n        this.renderer.localClippingEnabled = true;\r\n        this.container.appendChild(this.renderer.domElement);\r\n        this.renderer2D.domElement.style.position = 'absolute';\r\n        this.renderer2D.domElement.style.top = '0px';\r\n        this.renderer2D.domElement.style.pointerEvents = 'none';\r\n        this.container.appendChild(this.renderer2D.domElement);\r\n    }\r\n}\r\n//# sourceMappingURL=renderer.js.map","import { AmbientLight, Color, DirectionalLight, Scene } from 'three';\r\nimport { IfcComponent } from '../../base-types';\r\nexport class IfcScene extends IfcComponent {\r\n    constructor(context) {\r\n        super(context);\r\n        this.context = context;\r\n        this.defaultBackgroundColor = new Color(0xa9a9a9);\r\n        this.scene = new Scene();\r\n        this.setupScene(context.options);\r\n        this.setupLights();\r\n    }\r\n    dispose() {\r\n        this.scene.children.length = 0;\r\n        this.scene = null;\r\n    }\r\n    add(item) {\r\n        this.scene.add(item);\r\n    }\r\n    remove(item) {\r\n        this.scene.remove(item);\r\n    }\r\n    addModel(model) {\r\n        this.context.items.ifcModels.push(model);\r\n        this.context.items.pickableIfcModels.push(model);\r\n        this.scene.add(model);\r\n    }\r\n    removeModel(model) {\r\n        let index = this.context.items.ifcModels.indexOf(model);\r\n        if (index >= 0)\r\n            this.context.items.ifcModels.splice(index, 1);\r\n        index = this.context.items.pickableIfcModels.indexOf(model);\r\n        if (index >= 0)\r\n            this.context.items.pickableIfcModels.splice(index, 1);\r\n        if (model.parent)\r\n            model.removeFromParent();\r\n    }\r\n    setupScene(options) {\r\n        this.scene.background = (options === null || options === void 0 ? void 0 : options.backgroundColor) || this.defaultBackgroundColor;\r\n    }\r\n    setupLights() {\r\n        const light1 = new DirectionalLight(0xffeeff, 0.8);\r\n        light1.position.set(1, 1, 1);\r\n        this.scene.add(light1);\r\n        const light2 = new DirectionalLight(0xffffff, 0.8);\r\n        light2.position.set(-1, 0.5, -1);\r\n        this.scene.add(light2);\r\n        const ambientLight = new AmbientLight(0xffffee, 0.25);\r\n        this.scene.add(ambientLight);\r\n    }\r\n}\r\n//# sourceMappingURL=scene.js.map","import gsap from 'gsap';\r\nexport class Animator {\r\n    constructor() {\r\n        this.transformer = gsap;\r\n    }\r\n    dispose() {\r\n        this.transformer = null;\r\n    }\r\n    move(vector, transform, duration = 1, delay = 0) {\r\n        const x = transform.x;\r\n        const y = transform.y;\r\n        const z = transform.z;\r\n        gsap.to(vector, { duration, delay, x, y, z });\r\n    }\r\n}\r\n//# sourceMappingURL=animator.js.map","import { Vector2 } from 'three';\r\nexport class IfcMouse {\r\n    constructor(domElement) {\r\n        this.position = new Vector2();\r\n        this.rawPosition = new Vector2();\r\n        this.setupMousePositionUpdate(domElement);\r\n    }\r\n    setupMousePositionUpdate(domElement) {\r\n        domElement.onmousemove = (event) => {\r\n            this.rawPosition.x = event.clientX;\r\n            this.rawPosition.y = event.clientY;\r\n            const bounds = domElement.getBoundingClientRect();\r\n            this.position.x = ((event.clientX - bounds.left) / (bounds.right - bounds.left)) * 2 - 1;\r\n            this.position.y = -((event.clientY - bounds.top) / (bounds.bottom - bounds.top)) * 2 + 1;\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=mouse.js.map","import { Clock, Vector2, Vector3 } from 'three';\r\nimport { IfcCamera } from './camera/camera';\r\nimport { IfcRaycaster } from './raycaster';\r\nimport { IfcRenderer } from './renderer/renderer';\r\nimport { IfcScene } from './scene';\r\nimport { Animator } from './animator';\r\nimport { IfcEvent, IfcEvents } from './ifcEvent';\r\nimport { NavigationModes } from '../../base-types';\r\nimport { IfcMouse } from './mouse';\r\nexport class IfcContext {\r\n    constructor(options) {\r\n        this.stats = null;\r\n        this.isThisBeingDisposed = false;\r\n        this.render = () => {\r\n            if (this.isThisBeingDisposed)\r\n                return;\r\n            if (this.stats)\r\n                this.stats.begin();\r\n            const isWebXR = this.options.webXR || false;\r\n            if (isWebXR) {\r\n                this.renderForWebXR();\r\n            }\r\n            else {\r\n                requestAnimationFrame(this.render);\r\n            }\r\n            this.updateAllComponents();\r\n            if (this.stats)\r\n                this.stats.end();\r\n        };\r\n        this.renderForWebXR = () => {\r\n            const newAnimationLoop = () => {\r\n                this.getRenderer().render(this.getScene(), this.getCamera());\r\n            };\r\n            this.getRenderer().setAnimationLoop(newAnimationLoop);\r\n        };\r\n        this.resize = () => {\r\n            this.updateAspect();\r\n        };\r\n        if (!options.container)\r\n            throw new Error('Could not get container element!');\r\n        this.options = options;\r\n        this.events = new IfcEvents();\r\n        this.items = this.newItems();\r\n        this.scene = new IfcScene(this);\r\n        this.renderer = new IfcRenderer(this);\r\n        this.mouse = new IfcMouse(this.renderer.renderer.domElement);\r\n        this.ifcCamera = new IfcCamera(this);\r\n        this.events.publish(IfcEvent.onCameraReady);\r\n        this.clippingPlanes = [];\r\n        this.ifcCaster = new IfcRaycaster(this);\r\n        this.clock = new Clock(true);\r\n        this.ifcAnimator = new Animator();\r\n        this.setupWindowRescale();\r\n        this.render();\r\n    }\r\n    dispose() {\r\n        var _a, _b, _c;\r\n        this.isThisBeingDisposed = true;\r\n        (_a = this.stats) === null || _a === void 0 ? void 0 : _a.dom.remove();\r\n        (_b = this.options.preselectMaterial) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        (_c = this.options.selectMaterial) === null || _c === void 0 ? void 0 : _c.dispose();\r\n        this.options = null;\r\n        this.items.components.length = 0;\r\n        this.items.ifcModels.forEach((model) => {\r\n            model.removeFromParent();\r\n            if (model.geometry.boundsTree)\r\n                model.geometry.disposeBoundsTree();\r\n            model.geometry.dispose();\r\n            if (Array.isArray(model.material))\r\n                model.material.forEach((mat) => mat.dispose());\r\n            else\r\n                model.material.dispose();\r\n        });\r\n        this.items.ifcModels.length = 0;\r\n        this.items.pickableIfcModels.length = 0;\r\n        this.items = null;\r\n        this.ifcCamera.dispose();\r\n        this.ifcCamera = null;\r\n        this.scene.dispose();\r\n        this.scene = null;\r\n        this.renderer.dispose();\r\n        this.mouse = null;\r\n        this.renderer = null;\r\n        this.events.dispose();\r\n        this.events = null;\r\n        this.ifcCaster.dispose();\r\n        this.ifcCaster = null;\r\n        this.ifcAnimator.dispose();\r\n        this.ifcAnimator = null;\r\n        this.clock = null;\r\n        this.clippingPlanes.length = 0;\r\n        this.unsetWindowRescale();\r\n    }\r\n    getScene() {\r\n        return this.scene.scene;\r\n    }\r\n    getRenderer() {\r\n        return this.renderer.renderer;\r\n    }\r\n    getRenderer2D() {\r\n        return this.renderer.renderer2D;\r\n    }\r\n    getCamera() {\r\n        return this.ifcCamera.activeCamera;\r\n    }\r\n    getIfcCamera() {\r\n        return this.ifcCamera;\r\n    }\r\n    getDomElement() {\r\n        return this.getRenderer().domElement;\r\n    }\r\n    getDomElement2D() {\r\n        return this.getRenderer2D().domElement;\r\n    }\r\n    getContainerElement() {\r\n        return this.options.container;\r\n    }\r\n    getDimensions() {\r\n        const element = this.getContainerElement();\r\n        return new Vector2(element.clientWidth, element.clientHeight);\r\n    }\r\n    getClippingPlanes() {\r\n        return this.clippingPlanes;\r\n    }\r\n    getAnimator() {\r\n        return this.ifcAnimator;\r\n    }\r\n    getCenter(mesh) {\r\n        mesh.geometry.computeBoundingBox();\r\n        if (!mesh.geometry.index)\r\n            return new Vector3();\r\n        const indices = mesh.geometry.index.array;\r\n        const position = mesh.geometry.attributes.position;\r\n        const threshold = 20;\r\n        let xCoords = 0;\r\n        let yCoords = 0;\r\n        let zCoords = 0;\r\n        let counter = 0;\r\n        for (let i = 0; i < indices.length || i < threshold; i++) {\r\n            xCoords += position.getX(indices[i]);\r\n            yCoords += position.getY(indices[i]);\r\n            zCoords += position.getZ(indices[i]);\r\n            counter++;\r\n        }\r\n        return new Vector3(xCoords / counter + mesh.position.x, yCoords / counter + mesh.position.y, zCoords / counter + mesh.position.z);\r\n    }\r\n    // eslint-disable-next-line no-undef\r\n    addComponent(component) {\r\n        this.items.components.push(component);\r\n    }\r\n    addClippingPlane(plane) {\r\n        this.clippingPlanes.push(plane);\r\n    }\r\n    removeClippingPlane(plane) {\r\n        const index = this.clippingPlanes.indexOf(plane);\r\n        this.clippingPlanes.splice(index, 1);\r\n    }\r\n    castRay(items) {\r\n        return this.ifcCaster.castRay(items);\r\n    }\r\n    castRayIfc() {\r\n        return this.ifcCaster.castRayIfc();\r\n    }\r\n    fitToFrame() {\r\n        this.ifcCamera.navMode[NavigationModes.Orbit].fitModelToFrame();\r\n    }\r\n    toggleCameraControls(active) {\r\n        this.ifcCamera.toggleCameraControls(active);\r\n    }\r\n    updateAspect() {\r\n        this.ifcCamera.updateAspect();\r\n        this.renderer.adjustRendererSize();\r\n    }\r\n    updateAllComponents() {\r\n        const delta = this.clock.getDelta();\r\n        this.items.components.forEach((component) => component.update(delta));\r\n    }\r\n    setupWindowRescale() {\r\n        window.addEventListener('resize', this.resize);\r\n    }\r\n    unsetWindowRescale() {\r\n        window.removeEventListener('resize', this.resize);\r\n    }\r\n    newItems() {\r\n        return {\r\n            components: [],\r\n            ifcModels: [],\r\n            pickableIfcModels: []\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=context.js.map","import { IFCBUILDING, IFCBUILDINGSTOREY, IFCUNITASSIGNMENT } from 'web-ifc';\r\nexport class StoreyManager {\r\n    constructor() {\r\n        this.list = [];\r\n        this.unitsFactor = {\r\n            MILLI: 0.001,\r\n            CENTI: 0.01,\r\n            DECI: 0.1\r\n        };\r\n        this.loaderError = 'Loader must be defined!';\r\n    }\r\n    dispose() {\r\n        this.list = null;\r\n        this.unitsFactor = null;\r\n    }\r\n    async getAbsoluteElevation(modelID) {\r\n        if (!this.loader)\r\n            throw new Error(this.loaderError);\r\n        await this.getCurrentStoreys(modelID);\r\n        const unitsScale = await this.getUnitsFactor(modelID);\r\n        const siteCoords = await this.getSiteCoords(modelID);\r\n        const transformHeight = await this.getTransformHeight(modelID);\r\n        const storeys = this.list[modelID];\r\n        const result = {};\r\n        for (let i = 0; i < storeys.length; i++) {\r\n            const storey = storeys[i];\r\n            const baseHeight = storey.Elevation.value;\r\n            const name = this.getStoreyName(storey);\r\n            result[name] = (baseHeight + siteCoords[2]) * unitsScale + transformHeight;\r\n        }\r\n        return result;\r\n    }\r\n    async getCurrentStoreys(modelID) {\r\n        if (!this.list[modelID]) {\r\n            this.list[modelID] = await this.loader.ifcManager.getAllItemsOfType(modelID, IFCBUILDINGSTOREY, true);\r\n        }\r\n    }\r\n    async getSiteCoords(modelID) {\r\n        try {\r\n            const building = await this.getBuilding(modelID);\r\n            const sitePlace = building.ObjectPlacement.PlacementRelTo.RelativePlacement.Location;\r\n            return sitePlace.Coordinates.map((coord) => coord.value);\r\n        }\r\n        catch (e) {\r\n            return [0, 0, 0];\r\n        }\r\n    }\r\n    async getBuilding(modelID) {\r\n        const allBuildingsIDs = await this.loader.ifcManager.getAllItemsOfType(modelID, IFCBUILDING, false);\r\n        const buildingID = allBuildingsIDs[0];\r\n        return this.loader.ifcManager.getItemProperties(modelID, buildingID, true);\r\n    }\r\n    async getTransformHeight(modelID) {\r\n        const transformMatrix = await this.loader.ifcManager.ifcAPI.GetCoordinationMatrix(modelID);\r\n        return transformMatrix[13];\r\n    }\r\n    getStoreyName(storey) {\r\n        if (storey.Name)\r\n            return storey.Name.value;\r\n        if (storey.LongName)\r\n            return storey.LongName.value;\r\n        return storey.GlobalId;\r\n    }\r\n    // TODO: This assumes the first unit is the length, which is true in most cases\r\n    // Might need to fix this in the future\r\n    async getUnitsFactor(modelID) {\r\n        var _a;\r\n        const allUnitsIDs = await this.loader.ifcManager.getAllItemsOfType(modelID, IFCUNITASSIGNMENT, false);\r\n        const unitsID = allUnitsIDs[0];\r\n        const unitsProps = await this.loader.ifcManager.getItemProperties(modelID, unitsID);\r\n        const lengthUnitID = unitsProps.Units[0].value;\r\n        const lengthUnit = await this.loader.ifcManager.getItemProperties(modelID, lengthUnitID);\r\n        const prefix = (_a = lengthUnit.Prefix) === null || _a === void 0 ? void 0 : _a.value;\r\n        return this.unitsFactor[prefix] || 1;\r\n    }\r\n}\r\n//# sourceMappingURL=storey-manager.js.map","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { BufferAttribute, BufferGeometry, Mesh, MeshLambertMaterial } from 'three';\r\nimport { GLTFExporter } from 'three/examples/jsm/exporters/GLTFExporter';\r\nimport { IFCLoader } from 'web-ifc-three/IFCLoader';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { IfcComponent } from '../../base-types';\r\nimport { disposeMeshRecursively } from '../../utils/ThreeUtils';\r\nimport { StoreyManager } from '../display/plans/storey-manager';\r\nexport class GLTFManager extends IfcComponent {\r\n    constructor(context, IFC) {\r\n        super(context);\r\n        this.context = context;\r\n        this.IFC = IFC;\r\n        this.GLTFModels = {};\r\n        this.loader = new GLTFLoader();\r\n        this.exporter = new GLTFExporter();\r\n        this.tempIfcLoader = null;\r\n        this.allFloors = 'allFloors';\r\n        this.allCategories = 'allCategories';\r\n        this.stories = new StoreyManager();\r\n        this.options = {\r\n            trs: false,\r\n            onlyVisible: false,\r\n            truncateDrawRange: true,\r\n            binary: true,\r\n            maxTextureSize: 0\r\n        };\r\n        this.setupGeometryIndexDraco = (meshes, geometry) => {\r\n            let off = 0;\r\n            const offsets = [];\r\n            for (let i = 0; i < meshes.length; i++) {\r\n                offsets.push(off);\r\n                // eslint-disable-next-line no-underscore-dangle\r\n                off += meshes[i].geometry.attributes._expressid.count;\r\n            }\r\n            const indices = meshes.map((mesh, i) => {\r\n                const index = mesh.geometry.index;\r\n                return !index ? [] : new Uint32Array(index.array).map((value) => value + offsets[i]);\r\n            });\r\n            geometry.setIndex(this.flattenIndices(indices));\r\n        };\r\n        this.flattenIndices = (indices) => {\r\n            const indexArray = [];\r\n            for (let i = 0; i < indices.length; i++) {\r\n                for (let j = 0; j < indices[i].length; j++) {\r\n                    indexArray.push(indices[i][j]);\r\n                }\r\n            }\r\n            return indexArray;\r\n        };\r\n    }\r\n    dispose() {\r\n        this.loader = null;\r\n        this.exporter = null;\r\n        const models = Object.values(this.GLTFModels);\r\n        models.forEach((model) => {\r\n            model.removeFromParent();\r\n            model.children.forEach((child) => disposeMeshRecursively(child));\r\n        });\r\n        this.GLTFModels = null;\r\n        this.stories.dispose();\r\n        this.stories = null;\r\n    }\r\n    /**\r\n     * Loads any glTF file into the scene using [Three.js loader](https://threejs.org/docs/#examples/en/loaders/GLTFLoader).\r\n     * @url The URL of the GLTF file to load\r\n     */\r\n    async load(url) {\r\n        const loaded = (await this.loader.loadAsync(url));\r\n        const mesh = loaded.scene;\r\n        const modelID = this.getModelID();\r\n        this.GLTFModels[modelID] = mesh;\r\n        this.context.getScene().add(mesh);\r\n        return mesh;\r\n    }\r\n    /**\r\n     * Load glTF and enable IFC.js tools over it.\r\n     * This just works if the glTF was previously exported from an IFC model using `exportIfcAsGltf()`.\r\n     * @url The URL of the GLTF file to load\r\n     */\r\n    async loadModel(url) {\r\n        const gltfMesh = await this.getGltfMesh(url);\r\n        gltfMesh.geometry.computeBoundsTree();\r\n        gltfMesh.modelID = this.getModelID();\r\n        this.context.getScene().add(gltfMesh);\r\n        this.setupMeshAsModel(gltfMesh);\r\n        return gltfMesh;\r\n    }\r\n    // TODO: Split up in smaller methods AND bring to new file\r\n    /**\r\n     * Exports the specified IFC file (or file subset) as glTF.\r\n     * @fileURL The URL of the IFC file to convert to glTF\r\n     * @ids (optional) The ids of the items to export. If not defined, the full model is exported\r\n     */\r\n    async exportIfcFileAsGltf(config) {\r\n        const { ifcFileUrl, getProperties, categories, splitByFloors, maxJSONSize, onProgress, coordinationMatrix } = config;\r\n        const { loader, manager } = await this.setupIfcLoader(coordinationMatrix);\r\n        const model = await loader.loadAsync(ifcFileUrl, (event) => {\r\n            if (onProgress)\r\n                onProgress(event.loaded, event.total, 'IFC');\r\n        });\r\n        const result = {\r\n            gltf: {},\r\n            json: [],\r\n            id: '',\r\n            coordinationMatrix: []\r\n        };\r\n        const projects = await manager.getAllItemsOfType(model.modelID, IFCPROJECT, true);\r\n        if (!projects.length)\r\n            throw new Error('No IfcProject instances were found in the IFC.');\r\n        const GUID = projects[0].GlobalId;\r\n        if (!GUID)\r\n            throw new Error('The found IfcProject does not have a GUID');\r\n        result.id = GUID.value;\r\n        result.coordinationMatrix = await manager.ifcAPI.GetCoordinationMatrix(0);\r\n        let allIdsByFloor = {};\r\n        let floorNames = [];\r\n        if (splitByFloors) {\r\n            allIdsByFloor = await this.getIDsByFloor(loader);\r\n            floorNames = Object.keys(allIdsByFloor);\r\n        }\r\n        await this.getModels(categories, result, manager, splitByFloors, floorNames, allIdsByFloor, model, onProgress);\r\n        if (getProperties) {\r\n            await this.getProperties(model, maxJSONSize, onProgress, result);\r\n        }\r\n        await loader.ifcManager.dispose();\r\n        this.tempIfcLoader = null;\r\n        return result;\r\n    }\r\n    async getProperties(model, maxJSONSize, onProgress, result) {\r\n        const previousLoader = this.IFC.properties.loader;\r\n        this.IFC.properties.loader = this.tempIfcLoader;\r\n        const jsons = await this.IFC.properties.serializeAllProperties(model, maxJSONSize, (progress, total) => {\r\n            if (onProgress)\r\n                onProgress(progress, total, 'JSON');\r\n        });\r\n        result.json = jsons.map((json) => new File([json], 'properties.json'));\r\n        this.IFC.properties.loader = previousLoader;\r\n    }\r\n    async getModels(categories, result, manager, splitByFloors, floorNames, allIdsByFloor, model, onProgress) {\r\n        if (categories) {\r\n            await this.getModelsByCategory(categories, result, manager, splitByFloors, floorNames, allIdsByFloor, model, onProgress);\r\n        }\r\n        else {\r\n            await this.getModelsWithoutCategories(result, splitByFloors, floorNames, allIdsByFloor, model);\r\n        }\r\n    }\r\n    async setupIfcLoader(coordinationMatrix) {\r\n        const loader = new IFCLoader();\r\n        this.tempIfcLoader = loader;\r\n        const state = this.IFC.loader.ifcManager.state;\r\n        const manager = loader.ifcManager;\r\n        if (state.wasmPath)\r\n            await manager.setWasmPath(state.wasmPath);\r\n        if (state.worker.active)\r\n            await manager.useWebWorkers(true, state.worker.path);\r\n        if (state.webIfcSettings)\r\n            await manager.applyWebIfcConfig(state.webIfcSettings);\r\n        await manager.parser.setupOptionalCategories(this.IFC.loader.ifcManager.parser.optionalCategories);\r\n        if (coordinationMatrix) {\r\n            await this.overrideCoordMatrix(manager, coordinationMatrix);\r\n        }\r\n        return { loader, manager };\r\n    }\r\n    async overrideCoordMatrix(manager, coordinationMatrix) {\r\n        manager.setupCoordinationMatrix(coordinationMatrix);\r\n    }\r\n    async getModelsByCategory(categories, result, manager, splitByFloors, floorNames, allIdsByFloor, model, onProgress) {\r\n        var _a;\r\n        const items = [];\r\n        const categoryNames = Object.keys(categories);\r\n        for (let i = 0; i < categoryNames.length; i++) {\r\n            const categoryName = categoryNames[i];\r\n            const currentCategories = categories[categoryName];\r\n            if (!result.gltf[categoryName])\r\n                result.gltf[categoryName] = {};\r\n            for (let j = 0; j < currentCategories.length; j++) {\r\n                const foundItems = await manager.getAllItemsOfType(0, currentCategories[j], false);\r\n                items.push(...foundItems);\r\n            }\r\n            const groupedIDs = {};\r\n            if (splitByFloors) {\r\n                floorNames.forEach((floorName) => {\r\n                    const floorIDs = allIdsByFloor[floorName];\r\n                    groupedIDs[floorName] = items.filter((id) => floorIDs.ids.has(id));\r\n                });\r\n            }\r\n            else {\r\n                groupedIDs[this.allFloors] = items;\r\n            }\r\n            const foundFloorNames = Object.keys(groupedIDs);\r\n            for (let j = 0; j < foundFloorNames.length; j++) {\r\n                const foundFloorName = foundFloorNames[j];\r\n                const items = groupedIDs[foundFloorName];\r\n                if (items.length) {\r\n                    const gltf = await this.exportModelPartToGltf(model, items, true);\r\n                    const height = ((_a = allIdsByFloor[foundFloorName]) === null || _a === void 0 ? void 0 : _a.height) || 0;\r\n                    result.gltf[categoryName][foundFloorName] = {\r\n                        file: this.glTFToFile(gltf, 'model-part.gltf'),\r\n                        height\r\n                    };\r\n                }\r\n                else {\r\n                    result.gltf[categoryName][foundFloorName] = {\r\n                        file: null,\r\n                        height: 0\r\n                    };\r\n                }\r\n            }\r\n            if (onProgress)\r\n                onProgress(i, categoryNames === null || categoryNames === void 0 ? void 0 : categoryNames.length, 'GLTF');\r\n            items.length = 0;\r\n        }\r\n    }\r\n    async getModelsWithoutCategories(result, splitByFloors, floorNames, allIdsByFloor, model) {\r\n        result.gltf[this.allCategories] = {};\r\n        if (splitByFloors) {\r\n            for (let i = 0; i < floorNames.length; i++) {\r\n                const floorName = floorNames[i];\r\n                const floorIDs = Array.from(allIdsByFloor[floorName].ids);\r\n                const gltf = await this.exportModelPartToGltf(model, floorIDs, true);\r\n                result.gltf[this.allCategories][floorName] = {\r\n                    file: this.glTFToFile(gltf),\r\n                    height: allIdsByFloor[floorName].height\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            const gltf = await this.exportMeshToGltf(model);\r\n            result.gltf[this.allCategories][this.allFloors] = {\r\n                file: this.glTFToFile(gltf),\r\n                height: 0\r\n            };\r\n        }\r\n    }\r\n    // TODO: Is this really necessary? Maybe with exporting the file is enough\r\n    /**\r\n     * Exports the specified model (or model subset) as glTF.\r\n     * @modelID The ID of the IFC model to convert to glTF\r\n     * @ids (optional) The ids of the items to export. If not defined, the full model is exported\r\n     */\r\n    async exportIfcAsGltf(modelID, ids) {\r\n        const model = this.context.items.ifcModels.find((model) => model.modelID === modelID);\r\n        if (!model)\r\n            throw new Error('The specified model does not exist!');\r\n        return ids ? this.exportModelPartToGltf(model, ids) : this.exportMeshToGltf(model);\r\n    }\r\n    /**\r\n     * Exports the given mesh as glTF.\r\n     * @mesh The mesh to export.\r\n     */\r\n    exportMeshToGltf(mesh) {\r\n        return new Promise((resolve) => {\r\n            this.exporter.parse(mesh, (result) => resolve(result), this.options);\r\n        });\r\n    }\r\n    // TODO: Split up in smaller methods AND bring to new file\r\n    exportModelPartToGltf(model, ids, useTempLoader = false) {\r\n        const coordinates = [];\r\n        const expressIDs = [];\r\n        const newIndices = [];\r\n        const alreadySaved = new Map();\r\n        const customID = 'temp-gltf-subset';\r\n        const loader = useTempLoader ? this.tempIfcLoader : this.IFC.loader;\r\n        if (!loader)\r\n            throw new Error('IFCLoader could not be found!');\r\n        const subset = loader.ifcManager.createSubset({\r\n            modelID: model.modelID,\r\n            ids,\r\n            removePrevious: true,\r\n            customID\r\n        });\r\n        if (!subset.geometry.index)\r\n            throw new Error('Geometry must be indexed!');\r\n        const positionAttr = subset.geometry.attributes.position;\r\n        const expressIDAttr = subset.geometry.attributes.expressID;\r\n        const newGroups = subset.geometry.groups.filter((group) => group.count !== 0);\r\n        const newMaterials = [];\r\n        const prevMaterials = subset.material;\r\n        let newMaterialIndex = 0;\r\n        newGroups.forEach((group) => {\r\n            newMaterials.push(prevMaterials[group.materialIndex]);\r\n            group.materialIndex = newMaterialIndex++;\r\n        });\r\n        let newIndex = 0;\r\n        for (let i = 0; i < subset.geometry.index.count; i++) {\r\n            const index = subset.geometry.index.array[i];\r\n            if (!alreadySaved.has(index)) {\r\n                coordinates.push(positionAttr.array[3 * index]);\r\n                coordinates.push(positionAttr.array[3 * index + 1]);\r\n                coordinates.push(positionAttr.array[3 * index + 2]);\r\n                expressIDs.push(expressIDAttr.getX(index));\r\n                alreadySaved.set(index, newIndex++);\r\n            }\r\n            const saved = alreadySaved.get(index);\r\n            newIndices.push(saved);\r\n        }\r\n        const geometryToExport = new BufferGeometry();\r\n        const newVerticesAttr = new BufferAttribute(Float32Array.from(coordinates), 3);\r\n        const newExpressIDAttr = new BufferAttribute(Uint32Array.from(expressIDs), 1);\r\n        geometryToExport.setAttribute('position', newVerticesAttr);\r\n        geometryToExport.setAttribute('expressID', newExpressIDAttr);\r\n        geometryToExport.setIndex(newIndices);\r\n        geometryToExport.groups = newGroups;\r\n        geometryToExport.computeVertexNormals();\r\n        loader.ifcManager.removeSubset(model.modelID, undefined, customID);\r\n        const mesh = new Mesh(geometryToExport, newMaterials);\r\n        return this.exportMeshToGltf(mesh);\r\n    }\r\n    glTFToFile(gltf, name = 'model.gltf') {\r\n        return new File([new Blob([gltf])], name);\r\n    }\r\n    async getIDsByFloor(loader) {\r\n        const ifcProject = await loader.ifcManager.getSpatialStructure(0);\r\n        const idsByFloor = {};\r\n        const storeys = ifcProject.children[0].children[0].children;\r\n        const storeysIDs = storeys.map((storey) => storey.expressID);\r\n        this.stories.loader = loader;\r\n        const heightsByName = await this.stories.getAbsoluteElevation(0);\r\n        const heights = Object.values(heightsByName);\r\n        for (let i = 0; i < storeysIDs.length; i++) {\r\n            const storey = storeys[i];\r\n            const ids = [];\r\n            this.getChildrenRecursively(storey, ids);\r\n            const storeyID = storeysIDs[i];\r\n            const properties = await loader.ifcManager.getItemProperties(0, storeyID);\r\n            const name = this.getStoreyName(properties);\r\n            const height = heights[i];\r\n            idsByFloor[name] = {\r\n                ids: new Set(ids),\r\n                height\r\n            };\r\n        }\r\n        return idsByFloor;\r\n    }\r\n    getStoreyName(storey) {\r\n        if (storey.Name)\r\n            return storey.Name.value;\r\n        if (storey.LongName)\r\n            return storey.LongName.value;\r\n        return storey.GlobalId;\r\n    }\r\n    getChildrenRecursively(spatialNode, result) {\r\n        const ids = spatialNode.children.map((child) => child.expressID);\r\n        result.push(...ids);\r\n        spatialNode.children.forEach((child) => {\r\n            if (child.children.length) {\r\n                this.getChildrenRecursively(child, result);\r\n            }\r\n        });\r\n    }\r\n    getModelID() {\r\n        const models = this.context.items.ifcModels;\r\n        if (!models.length)\r\n            return 0;\r\n        const allIDs = models.map((model) => model.modelID);\r\n        return Math.max(...allIDs) + 1;\r\n    }\r\n    async getGltfMesh(url) {\r\n        const allMeshes = await this.getMeshes(url);\r\n        const geometry = this.getGeometry(allMeshes);\r\n        const materials = this.getMaterials(allMeshes);\r\n        this.cleanUpLoadedInformation(allMeshes);\r\n        return new Mesh(geometry, materials);\r\n    }\r\n    // Necessary to make the glTF work as a model\r\n    setupMeshAsModel(newMesh) {\r\n        // TODO: In the future we might want to rethink this or at least fix the typings\r\n        this.IFC.loader.ifcManager.state.models[newMesh.modelID] = { mesh: newMesh };\r\n        const items = this.context.items;\r\n        items.ifcModels.push(newMesh);\r\n        items.pickableIfcModels.push(newMesh);\r\n    }\r\n    cleanUpLoadedInformation(allMeshes) {\r\n        allMeshes.forEach((mesh) => {\r\n            mesh.geometry.attributes = {};\r\n            mesh.geometry.dispose();\r\n            mesh.material.dispose();\r\n        });\r\n    }\r\n    getMaterials(allMeshes) {\r\n        const clippingPlanes = this.context.getClippingPlanes();\r\n        return allMeshes.map((mesh) => {\r\n            const material = mesh.material;\r\n            return new MeshLambertMaterial({\r\n                color: material.color,\r\n                transparent: material.opacity !== 1,\r\n                opacity: material.opacity,\r\n                side: 2,\r\n                clippingPlanes\r\n            });\r\n        });\r\n    }\r\n    async getMeshes(url) {\r\n        const result = await this.load(url);\r\n        result.removeFromParent();\r\n        const isNested = result.children[0].children.length !== 0;\r\n        const meshes = isNested ? result.children[0].children : [result.children[0]];\r\n        return meshes;\r\n    }\r\n    getGeometry(meshes) {\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        const parseDraco = meshes.length <= 1\r\n            ? false\r\n            : meshes[0].geometry.attributes.position.array !==\r\n                meshes[1].geometry.attributes.position.array;\r\n        const geometry = new BufferGeometry();\r\n        if (parseDraco) {\r\n            this.setupGeometryAttributesDraco(geometry, meshes);\r\n            this.setupGeometryIndexDraco(meshes, geometry);\r\n        }\r\n        else {\r\n            this.setupGeometryAttributes(geometry, meshes);\r\n            this.setupGeometryIndex(meshes, geometry);\r\n        }\r\n        this.setupGroups(meshes, geometry);\r\n        return geometry;\r\n    }\r\n    setupGeometryAttributes(geometry, meshes) {\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        geometry.setAttribute('expressID', meshes[0].geometry.attributes._expressid);\r\n        geometry.setAttribute('position', meshes[0].geometry.attributes.position);\r\n        geometry.setAttribute('normal', meshes[0].geometry.attributes.normal);\r\n    }\r\n    setupGeometryAttributesDraco(geometry, meshes) {\r\n        let intArraryLength = 0;\r\n        let floatArrayLength = 0;\r\n        for (let i = 0; i < meshes.length; i++) {\r\n            const mesh = meshes[i];\r\n            const attributes = mesh.geometry.attributes;\r\n            // eslint-disable-next-line no-underscore-dangle\r\n            intArraryLength += attributes._expressid.array.length;\r\n            floatArrayLength += attributes.position.array.length;\r\n        }\r\n        const expressidArray = new Uint32Array(intArraryLength);\r\n        const positionArray = new Float32Array(floatArrayLength);\r\n        const normalArray = new Float32Array(floatArrayLength);\r\n        this.fillArray(meshes, '_expressid', expressidArray);\r\n        this.fillArray(meshes, 'position', positionArray);\r\n        this.fillArray(meshes, 'normal', normalArray);\r\n        geometry.setAttribute('expressID', new BufferAttribute(expressidArray, 1));\r\n        geometry.setAttribute('position', new BufferAttribute(positionArray, 3));\r\n        geometry.setAttribute('normal', new BufferAttribute(normalArray, 3));\r\n    }\r\n    fillArray(meshes, key, arr) {\r\n        let offset = 0;\r\n        for (let i = 0; i < meshes.length; i++) {\r\n            const mesh = meshes[i];\r\n            arr.set(mesh.geometry.attributes[key].array, offset);\r\n            offset += mesh.geometry.attributes[key].array.length;\r\n        }\r\n    }\r\n    setupGeometryIndex(meshes, geometry) {\r\n        const indices = meshes.map((mesh) => {\r\n            const index = mesh.geometry.index;\r\n            return index ? index.array : [];\r\n        });\r\n        const indexArray = [];\r\n        for (let i = 0; i < indices.length; i++) {\r\n            for (let j = 0; j < indices[i].length; j++) {\r\n                indexArray.push(indices[i][j]);\r\n            }\r\n        }\r\n        geometry.setIndex(indexArray);\r\n    }\r\n    setupGroups(meshes, geometry) {\r\n        const groupLengths = meshes.map((mesh) => {\r\n            const index = mesh.geometry.index;\r\n            return index ? index.count : 0;\r\n        });\r\n        let start = 0;\r\n        let materialIndex = 0;\r\n        geometry.groups = groupLengths.map((count) => {\r\n            const result = { start, count, materialIndex };\r\n            materialIndex++;\r\n            start += count;\r\n            return result;\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=glTF.js.map","import { Group, Mesh, MeshBasicMaterial, MeshDepthMaterial, OrthographicCamera, PlaneGeometry, ShaderMaterial, Vector3, WebGLRenderTarget } from 'three';\r\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader';\r\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader';\r\nimport { disposeMeshRecursively } from '../../utils/ThreeUtils';\r\nexport class ShadowDropper {\r\n    constructor(context, IFC) {\r\n        this.shadows = {};\r\n        // Controls how far away the shadow is computed\r\n        this.cameraHeight = 10;\r\n        this.darkness = 1.2;\r\n        this.opacity = 1;\r\n        this.resolution = 512;\r\n        this.amount = 3.5;\r\n        this.planeColor = 0xffffff;\r\n        this.shadowOffset = 0;\r\n        this.tempMaterial = new MeshBasicMaterial({ visible: false });\r\n        this.depthMaterial = new MeshDepthMaterial();\r\n        this.context = context;\r\n        this.IFC = IFC;\r\n        this.initializeDepthMaterial();\r\n    }\r\n    dispose() {\r\n        const shadowIDs = Object.keys(this.shadows);\r\n        shadowIDs.forEach((shadowID) => this.deleteShadow(shadowID));\r\n        this.shadows = null;\r\n        this.tempMaterial.dispose();\r\n        this.tempMaterial = null;\r\n        this.depthMaterial.dispose();\r\n        this.depthMaterial = null;\r\n        this.context = null;\r\n        this.IFC = null;\r\n    }\r\n    async renderShadow(modelID) {\r\n        const model = this.context.items.ifcModels.find((model) => model.modelID === modelID);\r\n        if (!model)\r\n            throw new Error('The requested model was not found.');\r\n        await this.renderShadowOfMesh(model, `${model.modelID}`);\r\n    }\r\n    renderShadowOfMesh(model, id = model.uuid) {\r\n        if (this.shadows[id])\r\n            throw new Error(`There is already a shadow with ID ${id}`);\r\n        const { size, center } = this.getSizeAndCenter(model);\r\n        const scene = this.context.getScene();\r\n        const shadow = this.createShadow(id, size);\r\n        this.initializeShadow(model, shadow, scene, center);\r\n        this.createPlanes(shadow, size);\r\n        this.bakeShadow(model, shadow, scene);\r\n        this.context.renderer.postProduction.excludedItems.add(shadow.root);\r\n    }\r\n    deleteShadow(id) {\r\n        const shadow = this.shadows[id];\r\n        delete this.shadows[id];\r\n        if (!shadow)\r\n            throw new Error(`No shadow with ID ${id} was found.`);\r\n        disposeMeshRecursively(shadow.root);\r\n        disposeMeshRecursively(shadow.blurPlane);\r\n        shadow.rt.dispose();\r\n        shadow.rtBlur.dispose();\r\n    }\r\n    createPlanes(currentShadow, size) {\r\n        const planeGeometry = new PlaneGeometry(size.x, size.z).rotateX(Math.PI / 2);\r\n        this.createBasePlane(currentShadow, planeGeometry);\r\n        this.createBlurPlane(currentShadow, planeGeometry);\r\n        // this.createGroundColorPlane(currentShadow, planeGeometry);\r\n    }\r\n    initializeShadow(model, shadow, scene, center) {\r\n        this.initializeRoot(model, shadow, scene, center);\r\n        this.initializeRenderTargets(shadow);\r\n        this.initializeCamera(shadow);\r\n    }\r\n    bakeShadow(model, shadow, scene) {\r\n        const isModelInScene = model.parent !== null && model.parent !== undefined;\r\n        if (!isModelInScene)\r\n            scene.add(model);\r\n        const children = scene.children.filter((obj) => obj !== model && obj !== shadow.root);\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            scene.remove(children[i]);\r\n        }\r\n        // remove the background\r\n        const initialBackground = scene.background;\r\n        scene.background = null;\r\n        // force the depthMaterial to everything\r\n        scene.overrideMaterial = this.depthMaterial;\r\n        // render to the render target to get the depths\r\n        const renderer = this.context.getRenderer();\r\n        renderer.setRenderTarget(shadow.rt);\r\n        renderer.render(scene, shadow.camera);\r\n        // and reset the override material\r\n        scene.overrideMaterial = null;\r\n        this.blurShadow(shadow, this.amount);\r\n        // a second pass to reduce the artifacts\r\n        // (0.4 is the minimum blur amount so that the artifacts are gone)\r\n        this.blurShadow(shadow, this.amount * 0.4);\r\n        // reset and render the normal scene\r\n        renderer.setRenderTarget(null);\r\n        scene.background = initialBackground;\r\n        for (let i = children.length - 1; i >= 0; i--) {\r\n            scene.add(children[i]);\r\n        }\r\n        if (!isModelInScene)\r\n            model.removeFromParent();\r\n    }\r\n    initializeCamera(shadow) {\r\n        shadow.camera.rotation.x = Math.PI / 2; // get the camera to look up\r\n        shadow.root.add(shadow.camera);\r\n    }\r\n    initializeRenderTargets(shadow) {\r\n        shadow.rt.texture.generateMipmaps = false;\r\n        shadow.rtBlur.texture.generateMipmaps = false;\r\n    }\r\n    initializeRoot(model, shadow, scene, center) {\r\n        const minPosition = this.getLowestYCoordinate(model);\r\n        shadow.root.position.set(center.x, minPosition - this.shadowOffset, center.z);\r\n        scene.add(shadow.root);\r\n    }\r\n    // Plane simulating the \"ground\". This is not needed for BIM models generally\r\n    // private createGroundColorPlane(_shadow: Shadow, planeGeometry: BufferGeometry) {\r\n    //   const fillPlaneMaterial = new MeshBasicMaterial({\r\n    //     color: this.planeColor,\r\n    //     opacity: this.opacity,\r\n    //     transparent: true,\r\n    //     depthWrite: false,\r\n    //     clippingPlanes: this.context.getClippingPlanes()\r\n    //   });\r\n    //   const fillPlane = new Mesh(planeGeometry, fillPlaneMaterial);\r\n    //   fillPlane.rotateX(Math.PI);\r\n    //   fillPlane.renderOrder = -1;\r\n    //   shadow.root.add(fillPlane);\r\n    // }\r\n    createBasePlane(shadow, planeGeometry) {\r\n        const planeMaterial = this.createPlaneMaterial(shadow);\r\n        const plane = new Mesh(planeGeometry, planeMaterial);\r\n        // make sure it's rendered after the fillPlane\r\n        plane.renderOrder = 2;\r\n        shadow.root.add(plane);\r\n        // the y from the texture is flipped!\r\n        plane.scale.y = -1;\r\n    }\r\n    createBlurPlane(shadow, planeGeometry) {\r\n        shadow.blurPlane.geometry = planeGeometry;\r\n        shadow.blurPlane.visible = false;\r\n        shadow.root.add(shadow.blurPlane);\r\n    }\r\n    createPlaneMaterial(shadow) {\r\n        return new MeshBasicMaterial({\r\n            map: shadow.rt.texture,\r\n            opacity: this.opacity,\r\n            transparent: true,\r\n            depthWrite: false,\r\n            clippingPlanes: this.context.getClippingPlanes()\r\n        });\r\n    }\r\n    // like MeshDepthMaterial, but goes from black to transparent\r\n    initializeDepthMaterial() {\r\n        this.depthMaterial.depthTest = false;\r\n        this.depthMaterial.depthWrite = false;\r\n        const oldShader = 'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );';\r\n        const newShader = 'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );';\r\n        this.depthMaterial.userData.darkness = { value: this.darkness };\r\n        this.depthMaterial.onBeforeCompile = (shader) => {\r\n            shader.uniforms.darkness = this.depthMaterial.userData.darkness;\r\n            shader.fragmentShader = /* glsl */ `\r\n\t\t\t\t\t\tuniform float darkness;\r\n\t\t\t\t\t\t${shader.fragmentShader.replace(oldShader, newShader)}\r\n\t\t\t\t\t`;\r\n        };\r\n    }\r\n    createShadow(id, size) {\r\n        this.shadows[id] = {\r\n            root: new Group(),\r\n            rt: new WebGLRenderTarget(this.resolution, this.resolution),\r\n            rtBlur: new WebGLRenderTarget(this.resolution, this.resolution),\r\n            blurPlane: new Mesh(),\r\n            camera: this.createCamera(size)\r\n        };\r\n        return this.shadows[id];\r\n    }\r\n    createCamera(size) {\r\n        return new OrthographicCamera(-size.x / 2, size.x / 2, size.z / 2, -size.z / 2, 0, this.cameraHeight);\r\n    }\r\n    getSizeAndCenter(model) {\r\n        const geometry = model.geometry;\r\n        geometry.computeBoundingBox();\r\n        if (geometry.boundingBox) {\r\n            const size = new Vector3();\r\n            geometry.boundingBox.getSize(size);\r\n            size.x *= 1.5;\r\n            size.z *= 1.5;\r\n            const center = new Vector3();\r\n            geometry.boundingBox.getCenter(center);\r\n            return { size, center };\r\n        }\r\n        throw new Error(`Bounding box could not be computed for the mesh ${model.uuid}`);\r\n    }\r\n    getLowestYCoordinate(model) {\r\n        const indices = model.geometry.index;\r\n        const position = model.geometry.attributes.position;\r\n        let minPosition = Number.MAX_VALUE;\r\n        for (let i = 0; i <= indices.count; i++) {\r\n            const current = position.getY(indices.array[i]);\r\n            if (current < minPosition)\r\n                minPosition = current;\r\n        }\r\n        return minPosition;\r\n    }\r\n    blurShadow(shadow, amount) {\r\n        const horizontalBlurMaterial = new ShaderMaterial(HorizontalBlurShader);\r\n        horizontalBlurMaterial.depthTest = false;\r\n        const verticalBlurMaterial = new ShaderMaterial(VerticalBlurShader);\r\n        verticalBlurMaterial.depthTest = false;\r\n        shadow.blurPlane.visible = true;\r\n        // blur horizontally and draw in the renderTargetBlur\r\n        shadow.blurPlane.material = horizontalBlurMaterial;\r\n        // @ts-ignore\r\n        shadow.blurPlane.material.uniforms.tDiffuse.value = shadow.rt.texture;\r\n        horizontalBlurMaterial.uniforms.h.value = (amount * 1) / 256;\r\n        const renderer = this.context.getRenderer();\r\n        renderer.setRenderTarget(shadow.rtBlur);\r\n        renderer.render(shadow.blurPlane, shadow.camera);\r\n        // blur vertically and draw in the main renderTarget\r\n        shadow.blurPlane.material = verticalBlurMaterial;\r\n        // @ts-ignore\r\n        shadow.blurPlane.material.uniforms.tDiffuse.value = shadow.rtBlur.texture;\r\n        verticalBlurMaterial.uniforms.v.value = (amount * 1) / 256;\r\n        renderer.setRenderTarget(shadow.rt);\r\n        renderer.render(shadow.blurPlane, shadow.camera);\r\n        shadow.blurPlane.visible = false;\r\n    }\r\n}\r\n//# sourceMappingURL=shadow-dropper.js.map","export class DXFWriter {\r\n    constructor() {\r\n        this.drawings = {};\r\n        this.Drawing = null;\r\n    }\r\n    dispose() {\r\n        this.drawings = null;\r\n    }\r\n    initializeJSDXF(drawing) {\r\n        this.Drawing = drawing;\r\n    }\r\n    newDrawing(drawingName, units = 'Meters') {\r\n        if (this.Drawing === null) {\r\n            throw new Error('You must pass the dxf-writer drawing object as parameter');\r\n        }\r\n        this.drawings[drawingName] = new this.Drawing();\r\n        this.drawings[drawingName].setUnits(units);\r\n    }\r\n    drawNamedLayer(drawingName, plan, layerName, dxfLayerName, color, style = 'CONTINUOUS') {\r\n        if (!plan.plane)\r\n            return;\r\n        const layer = plan.plane.edges.edges[layerName];\r\n        if (!layer)\r\n            return;\r\n        const coordinates = layer.generatorGeometry.attributes.position.array;\r\n        this.draw(drawingName, coordinates, dxfLayerName, color, style);\r\n    }\r\n    draw(drawingName, coordinates, dxfLayerName, color, style = 'CONTINUOUS') {\r\n        const currentDrawing = this.drawings[drawingName];\r\n        if (!currentDrawing.layers[dxfLayerName]) {\r\n            currentDrawing.addLayer(dxfLayerName, color, style);\r\n        }\r\n        currentDrawing.setActiveLayer(dxfLayerName);\r\n        // flip vertical axis, so Three.js -Z becomes DXF +Y\r\n        for (let i = 0; i < coordinates.length - 5; i += 6) {\r\n            const start = [coordinates[i], -coordinates[i + 2]];\r\n            const end = [coordinates[i + 3], -coordinates[i + 5]];\r\n            // eslint-disable-next-line no-continue\r\n            if (start[0] === 0 && start[1] === 0 && end[0] === 0 && end[1] === 0)\r\n                continue;\r\n            currentDrawing.drawLine(start[0], start[1], end[0], end[1]);\r\n        }\r\n    }\r\n    drawEdges(drawingName, polygons, dxfLayerName, color, style = 'CONTINUOUS') {\r\n        const currentDrawing = this.drawings[drawingName];\r\n        if (!currentDrawing.layers[dxfLayerName]) {\r\n            currentDrawing.addLayer(dxfLayerName, color, style);\r\n        }\r\n        currentDrawing.setActiveLayer(dxfLayerName);\r\n        for (let i = 0; i < polygons.length; i++) {\r\n            const polygon = polygons[i];\r\n            for (let j = 0; j < polygon.length - 3; j += 2) {\r\n                const start = [polygon[j], polygon[j + 1]];\r\n                const end = [polygon[j + 2], polygon[j + 3]];\r\n                currentDrawing.drawPolyline([start, end]);\r\n            }\r\n        }\r\n    }\r\n    exportDXF(drawingName) {\r\n        const currentDrawing = this.drawings[drawingName];\r\n        if (!currentDrawing)\r\n            throw new Error(`There is no drawing with id: ${drawingName}`);\r\n        const serialized = currentDrawing.toDxfString();\r\n        return new Blob([serialized], { type: 'application/dxf' });\r\n        // const saveLink = document.createElement('a');\r\n        // saveLink.href = URL.createObjectURL(blob);\r\n        // saveLink.download = 'data.dxf';\r\n        // saveLink.click();\r\n        // saveLink.remove();\r\n    }\r\n}\r\n//# sourceMappingURL=dxf.js.map","import { Box3 } from 'three';\r\nexport class PDFWriter {\r\n    constructor() {\r\n        this.documents = {};\r\n        this.errorText = 'The specified document does not exist.';\r\n    }\r\n    dispose() {\r\n        this.documents = null;\r\n    }\r\n    setLineWidth(id, lineWidth) {\r\n        const document = this.getDocument(id);\r\n        document.drawing.setLineWidth(lineWidth);\r\n    }\r\n    setColor(id, color) {\r\n        const document = this.getDocument(id);\r\n        document.drawing.setTextColor(color.r, color.g, color.b);\r\n    }\r\n    setScale(id, scale) {\r\n        const document = this.getDocument(id);\r\n        document.scale = scale;\r\n    }\r\n    newDocument(id, jsPDFDocument, scale = 1) {\r\n        this.documents[id] = { drawing: jsPDFDocument, scale };\r\n    }\r\n    getScale(bbox, pageHeight, pageWidth) {\r\n        const height = bbox.max.x - bbox.min.x;\r\n        const width = bbox.max.z - bbox.min.z;\r\n        const minPagesize = Math.min(pageHeight, pageWidth);\r\n        const maxBoxDim = Math.max(height, width);\r\n        if (maxBoxDim === 0 || minPagesize === 0)\r\n            return 1;\r\n        return minPagesize / maxBoxDim;\r\n    }\r\n    drawNamedLayer(id, plan, layerName, dims) {\r\n        if (!plan.plane)\r\n            return;\r\n        const layer = plan.plane.edges.edges[layerName];\r\n        if (!layer)\r\n            return;\r\n        layer.mesh.geometry.computeBoundingBox();\r\n        console.log(layer);\r\n        const bbox = new Box3().setFromObject(layer.mesh);\r\n        const coordinates = layer.generatorGeometry.attributes.position.array;\r\n        this.draw(id, coordinates, bbox);\r\n        if (dims) {\r\n            this.addLabels(id, dims, bbox);\r\n        }\r\n    }\r\n    draw(id, coordinates, box) {\r\n        const document = this.getDocument(id);\r\n        const scale = this.getScale(box, 210, 297);\r\n        const offsetX = Math.abs(box.min.x) + 1;\r\n        const offsetY = Math.abs(box.min.z) + 1;\r\n        for (let i = 0; i < coordinates.length - 5; i += 6) {\r\n            const start = [(coordinates[i] + offsetX) * scale, (coordinates[i + 2] + offsetY) * scale];\r\n            const end = [(coordinates[i + 3] + offsetX) * scale, (coordinates[i + 5] + offsetY) * scale];\r\n            // eslint-disable-next-line no-continue\r\n            if (start[0] === 0 && start[1] === 0 && end[0] === 0 && end[1] === 0)\r\n                continue;\r\n            document.drawing.line(start[0], start[1], end[0], end[1], 'S');\r\n        }\r\n    }\r\n    addLabels(id, ifcDimensions, box) {\r\n        const document = this.getDocument(id);\r\n        const scale = this.getScale(box, 210, 297);\r\n        const offsetX = Math.abs(box.min.x) + 1;\r\n        const offsetY = Math.abs(box.min.z) + 1;\r\n        const dimLines = ifcDimensions.getDimensionsLines;\r\n        dimLines.forEach((dimLine) => {\r\n            document.drawing.text(dimLine.text.element.textContent, (dimLine.center.x + offsetX) * scale, (dimLine.center.z + offsetY) * scale);\r\n        });\r\n    }\r\n    exportPDF(id, exportName) {\r\n        const document = this.getDocument(id);\r\n        document.drawing.save(exportName);\r\n    }\r\n    getDocument(id) {\r\n        if (!this.documents[id])\r\n            throw new Error(this.errorText);\r\n        return this.documents[id];\r\n    }\r\n}\r\n//# sourceMappingURL=pdf.js.map","/* eslint-disable */\r\nimport { Vector3, Triangle, Line3, MathUtils, Plane, BufferGeometry, BufferAttribute } from 'three';\r\nimport { ExtendedTriangle } from 'three-mesh-bvh';\r\nconst _upVector = new Vector3(0, 1, 0);\r\nconst EPSILON = 1e-16;\r\n// Modified version of js EdgesGeometry logic to handle silhouette edges\r\nexport const generateEdges = (function () {\r\n    const _v0 = new Vector3();\r\n    const _v1 = new Vector3();\r\n    const _normal = new Vector3();\r\n    const _triangle = new Triangle();\r\n    return function generateEdges(geometry, projectionDir, thresholdAngle = 1) {\r\n        const edges = [];\r\n        const precisionPoints = 4;\r\n        const precision = Math.pow(10, precisionPoints);\r\n        const thresholdDot = Math.cos(MathUtils.DEG2RAD * thresholdAngle);\r\n        const indexAttr = geometry.getIndex();\r\n        const positionAttr = geometry.getAttribute('position');\r\n        const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n        const indexArr = [0, 0, 0];\r\n        const vertKeys = ['a', 'b', 'c'];\r\n        const hashes = new Array(3);\r\n        const edgeData = {};\r\n        for (let i = 0; i < indexCount; i += 3) {\r\n            if (indexAttr) {\r\n                indexArr[0] = indexAttr.getX(i);\r\n                indexArr[1] = indexAttr.getX(i + 1);\r\n                indexArr[2] = indexAttr.getX(i + 2);\r\n            }\r\n            else {\r\n                indexArr[0] = i;\r\n                indexArr[1] = i + 1;\r\n                indexArr[2] = i + 2;\r\n            }\r\n            const { a, b, c } = _triangle;\r\n            a.fromBufferAttribute(positionAttr, indexArr[0]);\r\n            b.fromBufferAttribute(positionAttr, indexArr[1]);\r\n            c.fromBufferAttribute(positionAttr, indexArr[2]);\r\n            _triangle.getNormal(_normal);\r\n            // create hashes for the edge from the vertices\r\n            hashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\r\n            hashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\r\n            hashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`;\r\n            // skip degenerate triangles\r\n            if (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\r\n                continue;\r\n            }\r\n            // iterate over every edge\r\n            for (let j = 0; j < 3; j++) {\r\n                // get the first and next vertex making up the edge\r\n                const jNext = (j + 1) % 3;\r\n                const vecHash0 = hashes[j];\r\n                const vecHash1 = hashes[jNext];\r\n                const v0 = _triangle[vertKeys[j]];\r\n                const v1 = _triangle[vertKeys[jNext]];\r\n                const hash = `${vecHash0}_${vecHash1}`;\r\n                const reverseHash = `${vecHash1}_${vecHash0}`;\r\n                if (reverseHash in edgeData && edgeData[reverseHash]) {\r\n                    // if we found a sibling edge add it into the vertex array if\r\n                    // it meets the angle threshold and delete the edge from the map.\r\n                    const otherNormal = edgeData[reverseHash].normal;\r\n                    const meetsThreshold = _normal.dot(otherNormal) <= thresholdDot;\r\n                    const projectionThreshold = Math.sign(projectionDir.dot(_normal)) !== Math.sign(projectionDir.dot(otherNormal));\r\n                    if (meetsThreshold || projectionThreshold) {\r\n                        const line = new Line3();\r\n                        line.start.copy(v0);\r\n                        line.end.copy(v1);\r\n                        edges.push(line);\r\n                    }\r\n                    edgeData[reverseHash] = null;\r\n                }\r\n                else if (!(hash in edgeData)) {\r\n                    // if we've already got an edge here then skip adding a new one\r\n                    edgeData[hash] = {\r\n                        index0: indexArr[j],\r\n                        index1: indexArr[jNext],\r\n                        normal: _normal.clone()\r\n                    };\r\n                }\r\n            }\r\n        }\r\n        // iterate over all remaining, unmatched edges and add them to the vertex array\r\n        for (const key in edgeData) {\r\n            if (edgeData[key]) {\r\n                const { index0, index1 } = edgeData[key];\r\n                _v0.fromBufferAttribute(positionAttr, index0);\r\n                _v1.fromBufferAttribute(positionAttr, index1);\r\n                const line = new Line3();\r\n                line.start.copy(_v0);\r\n                line.end.copy(_v1);\r\n                edges.push(line);\r\n            }\r\n        }\r\n        return edges;\r\n    };\r\n})();\r\n// outputs the overlapping segment of a coplanar line and triangle\r\nexport const getOverlappingLine = (function () {\r\n    const _dir0 = new Vector3();\r\n    const _dir1 = new Vector3();\r\n    const _tempDir = new Vector3();\r\n    const _orthoPlane = new Plane();\r\n    const _line0 = new Line3();\r\n    const _line1 = new Line3();\r\n    const _tempLine = new Line3();\r\n    return function getOverlappingLine(line, triangle, lineTarget = new Line3()) {\r\n        if (triangle.needsUpdate) {\r\n            triangle.needsUpdate();\r\n        }\r\n        // if the triangle is degenerate then return no overlap\r\n        if (triangle.getArea() <= EPSILON) {\r\n            return null;\r\n        }\r\n        const { points, plane } = triangle;\r\n        _line0.copy(line);\r\n        _line0.delta(_dir0);\r\n        // if the line and triangle are not coplanar then return no overlap\r\n        const areCoplanar = plane.normal.dot(_dir0) === 0.0;\r\n        if (!areCoplanar) {\r\n            return null;\r\n        }\r\n        // a plane that's orthogonal to the triangle that the line lies on\r\n        _dir0.cross(plane.normal).normalize();\r\n        _orthoPlane.setFromNormalAndCoplanarPoint(_dir0, _line0.start);\r\n        // find the line of intersection of the triangle along the plane if it exists\r\n        let intersectCount = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            const p1 = points[i];\r\n            const p2 = points[(i + 1) % 3];\r\n            _tempLine.start.copy(p1);\r\n            _tempLine.end.copy(p2);\r\n            if (_orthoPlane.distanceToPoint(_tempLine.end) === 0 &&\r\n                _orthoPlane.distanceToPoint(_tempLine.start) === 0) {\r\n                // if the edge lies on the plane then take the line\r\n                _line1.copy(_tempLine);\r\n                intersectCount = 2;\r\n                break;\r\n            }\r\n            else if (_orthoPlane.intersectLine(_tempLine, intersectCount === 0 ? _line1.start : _line1.end)) {\r\n                let p;\r\n                if (intersectCount === 0) {\r\n                    p = _line1.start;\r\n                }\r\n                else {\r\n                    p = _line1.end;\r\n                }\r\n                if (p.distanceTo(p2) === 0.0) {\r\n                    continue;\r\n                }\r\n                intersectCount++;\r\n                if (intersectCount === 2) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (intersectCount === 2) {\r\n            // find the intersect line if any\r\n            _line0.delta(_dir0).normalize();\r\n            _line1.delta(_dir1).normalize();\r\n            // swap edges so they're facing in the same direction\r\n            if (_dir0.dot(_dir1) < 0) {\r\n                const tmp = _line1.start;\r\n                _line1.start = _line1.end;\r\n                _line1.end = tmp;\r\n            }\r\n            // check if the edges are overlapping\r\n            const s1 = _line0.start.dot(_dir0);\r\n            const e1 = _line0.end.dot(_dir0);\r\n            const s2 = _line1.start.dot(_dir0);\r\n            const e2 = _line1.end.dot(_dir0);\r\n            const separated1 = e1 < s2;\r\n            const separated2 = s1 < e2;\r\n            if (s1 !== e2 && s2 !== e1 && separated1 === separated2) {\r\n                return null;\r\n            }\r\n            // assign the target output\r\n            _tempDir.subVectors(_line0.start, _line1.start);\r\n            if (_tempDir.dot(_dir0) > 0) {\r\n                lineTarget.start.copy(_line0.start);\r\n            }\r\n            else {\r\n                lineTarget.start.copy(_line1.start);\r\n            }\r\n            _tempDir.subVectors(_line0.end, _line1.end);\r\n            if (_tempDir.dot(_dir0) < 0) {\r\n                lineTarget.end.copy(_line0.end);\r\n            }\r\n            else {\r\n                lineTarget.end.copy(_line1.end);\r\n            }\r\n            return lineTarget;\r\n        }\r\n        return null;\r\n    };\r\n})();\r\n// returns the the y value on the plane at the given point x, z\r\nexport const getPlaneYAtPoint = (function () {\r\n    const testLine = new Line3();\r\n    return function getPlaneYAtPoint(plane, point, target = null) {\r\n        testLine.start.copy(point);\r\n        testLine.end.copy(point);\r\n        testLine.start.y += 1e5;\r\n        testLine.end.y -= 1e5;\r\n        plane.intersectLine(testLine, target);\r\n    };\r\n})();\r\n// returns whether the given line is above the given triangle plane\r\nexport const isLineAbovePlane = (function () {\r\n    const _v0 = new Vector3();\r\n    const _v1 = new Vector3();\r\n    return function isLineAbovePlane(plane, line) {\r\n        _v0.lerpVectors(line.start, line.end, 0.5);\r\n        getPlaneYAtPoint(plane, _v0, _v1);\r\n        return _v1.y < _v0.y;\r\n    };\r\n})();\r\nexport const isYProjectedLineDegenerate = (function () {\r\n    const _tempDir = new Vector3();\r\n    const _upVector = new Vector3(0, 1, 0);\r\n    return function isYProjectedLineDegenerate(line) {\r\n        line.delta(_tempDir).normalize();\r\n        return Math.abs(_tempDir.dot(_upVector)) >= 1.0 - EPSILON;\r\n    };\r\n})();\r\n// checks whether the y-projected triangle will be degerate\r\nexport function isYProjectedTriangleDegenerate(tri) {\r\n    if (tri.needsUpdate) {\r\n        tri.update();\r\n    }\r\n    return Math.abs(tri.plane.normal.dot(_upVector)) <= EPSILON;\r\n}\r\n// Is the provided line exactly an edge on the triangle\r\nexport function isLineTriangleEdge(tri, line) {\r\n    // if this is the same line as on the triangle\r\n    const triPoints = tri.points;\r\n    let matches = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n        const { start, end } = line;\r\n        const tp = triPoints[i];\r\n        if (start.distanceToSquared(tp) <= EPSILON) {\r\n            matches++;\r\n        }\r\n        if (end.distanceToSquared(tp) <= EPSILON) {\r\n            matches++;\r\n        }\r\n    }\r\n    return matches >= 2;\r\n}\r\n// Extracts the normalized [0, 1] distances along the given line that overlaps with the provided triangle when\r\n// projected along the y axis\r\nexport const getProjectedOverlaps = (function () {\r\n    const _target = new Line3();\r\n    const _tempDir = new Vector3();\r\n    const _tempVec0 = new Vector3();\r\n    const _tempVec1 = new Vector3();\r\n    const _line = new Line3();\r\n    const _tri = new ExtendedTriangle();\r\n    return function getProjectedOverlaps(tri, line, overlapsTarget) {\r\n        _line.copy(line);\r\n        _tri.copy(tri);\r\n        // flatten them to a common plane\r\n        _line.start.y = 0;\r\n        _line.end.y = 0;\r\n        _tri.a.y = 0;\r\n        _tri.b.y = 0;\r\n        _tri.c.y = 0;\r\n        _tri.needsUpdate = true;\r\n        _tri.update();\r\n        // if the line is meaningfully long and the we have an overlapping line then extract the\r\n        // distances along the original line to return\r\n        if (getOverlappingLine(_line, _tri, _target)) {\r\n            _line.delta(_tempDir);\r\n            _tempVec0.subVectors(_target.start, _line.start);\r\n            _tempVec1.subVectors(_target.end, _line.start);\r\n            let d0 = _tempVec0.length() / _tempDir.length();\r\n            let d1 = _tempVec1.length() / _tempDir.length();\r\n            d0 = Math.min(Math.max(d0, 0), 1);\r\n            d1 = Math.min(Math.max(d1, 0), 1);\r\n            if (!(Math.abs(d0 - d1) <= EPSILON)) {\r\n                overlapsTarget.push(new Float32Array([d0, d1]));\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n})();\r\n// Trim the provided line to just the section below the given triangle plane\r\nexport const trimToBeneathTriPlane = (function () {\r\n    const _lineDirection = new Vector3();\r\n    const _planeHit = new Vector3();\r\n    const _centerPoint = new Vector3();\r\n    const _planePoint = new Vector3();\r\n    return function trimToBeneathTriPlane(tri, line, lineTarget) {\r\n        if (tri.needsUpdate) {\r\n            tri.update();\r\n        }\r\n        lineTarget.copy(line);\r\n        // handle vertical triangles\r\n        const { plane } = tri;\r\n        if (isYProjectedTriangleDegenerate(tri)) {\r\n            return false;\r\n        }\r\n        // if the line and plane are coplanar then return that we can't trim\r\n        line.delta(_lineDirection);\r\n        const areCoplanar = plane.normal.dot(_lineDirection) === 0.0;\r\n        if (areCoplanar) {\r\n            return false;\r\n        }\r\n        // if the line does intersect the plane then trim\r\n        const doesLineIntersect = plane.intersectLine(line, _planeHit);\r\n        if (doesLineIntersect) {\r\n            const { start, end } = lineTarget;\r\n            // test the line side with the largest segment extending beyond the plane\r\n            let testPoint;\r\n            let flipped = false;\r\n            if (start.distanceTo(_planeHit) > end.distanceTo(_planeHit)) {\r\n                testPoint = start;\r\n            }\r\n            else {\r\n                testPoint = end;\r\n                flipped = true;\r\n            }\r\n            // get the center point of the line segment and the plane hit\r\n            _centerPoint.lerpVectors(testPoint, _planeHit, 0.5);\r\n            getPlaneYAtPoint(tri.plane, _centerPoint, _planePoint);\r\n            // adjust the appropriate line point align with the plane hit point\r\n            if (_planePoint.y < _centerPoint.y) {\r\n                if (flipped)\r\n                    end.copy(_planeHit);\r\n                else\r\n                    start.copy(_planeHit);\r\n            }\r\n            else if (flipped)\r\n                start.copy(_planeHit);\r\n            else\r\n                end.copy(_planeHit);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n})();\r\n// Converts the given array of overlaps into line segments\r\nexport const overlapsToLines = (function () {\r\n    const newLine = new Line3();\r\n    return function overlapsToLines(line, overlaps, target = []) {\r\n        compressEdgeOverlaps(overlaps);\r\n        const invOverlaps = [[0, 1]];\r\n        for (let i = 0, l = overlaps.length; i < l; i++) {\r\n            const invOverlap = invOverlaps[i];\r\n            const overlap = overlaps[i];\r\n            invOverlap[1] = overlap[0];\r\n            invOverlaps.push(new Float32Array([overlap[1], 1]));\r\n        }\r\n        for (let i = 0, l = invOverlaps.length; i < l; i++) {\r\n            const { start, end } = line;\r\n            newLine.start.lerpVectors(start, end, invOverlaps[i][0]);\r\n            newLine.end.lerpVectors(start, end, invOverlaps[i][1]);\r\n            target.push(\r\n            // @ts-ignore\r\n            new Float32Array([\r\n                newLine.start.x,\r\n                newLine.start.y,\r\n                newLine.start.z,\r\n                newLine.end.x,\r\n                newLine.end.y,\r\n                newLine.end.z\r\n            ]));\r\n        }\r\n        return target;\r\n    };\r\n})();\r\n// converts the given list of edges to a line segments geometry\r\nexport function edgesToGeometry(edges, y = null) {\r\n    const edgeArray = new Float32Array(edges.length * 6);\r\n    let c = 0;\r\n    for (let i = 0, l = edges.length; i < l; i++) {\r\n        const line = edges[i];\r\n        edgeArray[c++] = line[0];\r\n        edgeArray[c++] = y === null ? line[1] : y;\r\n        edgeArray[c++] = line[2];\r\n        edgeArray[c++] = line[3];\r\n        edgeArray[c++] = y === null ? line[4] : y;\r\n        edgeArray[c++] = line[5];\r\n    }\r\n    const edgeGeom = new BufferGeometry();\r\n    const edgeBuffer = new BufferAttribute(edgeArray, 3, true);\r\n    edgeGeom.setAttribute('position', edgeBuffer);\r\n    return edgeGeom;\r\n}\r\n// compresses the given edge overlaps into a minimal set of representative objects\r\nexport function compressEdgeOverlaps(overlaps) {\r\n    overlaps.sort((a, b) => {\r\n        return a[0] - b[0];\r\n    });\r\n    for (let i = 1; i < overlaps.length; i++) {\r\n        const overlap = overlaps[i];\r\n        const prevOverlap = overlaps[i - 1];\r\n        if (overlap[0] <= prevOverlap[1]) {\r\n            prevOverlap[1] = Math.max(prevOverlap[1], overlap[1]);\r\n            overlaps.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=edgeUtils.js.map","import * as THREE from 'three';\r\nimport { mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport { MeshBVH } from 'three-mesh-bvh';\r\nimport { compressEdgeOverlaps, edgesToGeometry, generateEdges, getProjectedOverlaps, isLineAbovePlane, isLineTriangleEdge, isYProjectedLineDegenerate, isYProjectedTriangleDegenerate, overlapsToLines, trimToBeneathTriPlane } from './edgeUtils';\r\n// Source: https://github.com/gkjohnson/three-mesh-bvh/blob/master/example/edgeProjection.js\r\nexport class EdgeProjector {\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.params = {\r\n            displayModel: 'color',\r\n            displayEdges: false,\r\n            displayProjection: true,\r\n            useBVH: true,\r\n            sortEdges: true,\r\n            amount: 50,\r\n            color: 0x030303\r\n        };\r\n        this.projectedEdges = [];\r\n    }\r\n    dispose() {\r\n        this.projectedEdges.forEach((edge) => {\r\n            edge.geometry.dispose();\r\n            if (Array.isArray(edge.material))\r\n                edge.material.forEach((mat) => mat.dispose());\r\n            else\r\n                edge.material.dispose();\r\n        });\r\n        this.projectedEdges = [];\r\n    }\r\n    async projectEdges(model) {\r\n        const scene = this.context.getScene();\r\n        // create projection display mesh\r\n        const projection = new THREE.LineSegments(new THREE.BufferGeometry(), new THREE.LineBasicMaterial({ color: this.params.color }));\r\n        let task = this.updateEdges(scene, this.params, model, projection);\r\n        while (task) {\r\n            const res = task.next();\r\n            if (res.done) {\r\n                task = null;\r\n            }\r\n        }\r\n        this.projectedEdges.push(projection);\r\n        return projection;\r\n    }\r\n    *updateEdges(scene, params, model, projection) {\r\n        scene.remove(projection);\r\n        // transform and merge geometries to project into a single model\r\n        const geometries = [];\r\n        model.updateWorldMatrix(true, true);\r\n        const clone = model.geometry.clone();\r\n        clone.applyMatrix4(model.matrixWorld);\r\n        for (const key in clone.attributes) {\r\n            if (key !== 'position') {\r\n                clone.deleteAttribute(key);\r\n            }\r\n        }\r\n        geometries.push(clone);\r\n        const mergedGeometry = mergeBufferGeometries(geometries, false);\r\n        geometries.length = 0;\r\n        clone.dispose();\r\n        yield;\r\n        // generate the bvh for acceleration\r\n        const bvh = new MeshBVH(mergedGeometry);\r\n        yield;\r\n        // generate the candidate edges\r\n        const edges = generateEdges(mergedGeometry, new THREE.Vector3(0, 1, 0), 50);\r\n        if (params.sortEdges) {\r\n            edges.sort((a, b) => {\r\n                return Math.min(a.start.y, a.end.y) - Math.min(b.start.y, b.end.y);\r\n            });\r\n        }\r\n        yield;\r\n        scene.add(projection);\r\n        // trim the candidate edges\r\n        const finalEdges = [];\r\n        const tempLine = new THREE.Line3();\r\n        const tempRay = new THREE.Ray();\r\n        const tempVec = new THREE.Vector3();\r\n        for (let i = 0, l = edges.length; i < l; i++) {\r\n            const line = edges[i];\r\n            if (isYProjectedLineDegenerate(line)) {\r\n                continue;\r\n            }\r\n            const lowestLineY = Math.min(line.start.y, line.end.y);\r\n            const overlaps = [];\r\n            bvh.shapecast({\r\n                intersectsBounds: (box) => {\r\n                    if (!params.useBVH) {\r\n                        return true;\r\n                    }\r\n                    // check if the box bounds are above the lowest line point\r\n                    box.min.y = Math.min(lowestLineY, box.min.y);\r\n                    tempRay.origin.copy(line.start);\r\n                    line.delta(tempRay.direction).normalize();\r\n                    if (box.containsPoint(tempRay.origin)) {\r\n                        return true;\r\n                    }\r\n                    if (tempRay.intersectBox(box, tempVec)) {\r\n                        return tempRay.origin.distanceToSquared(tempVec) < line.distanceSq();\r\n                    }\r\n                    return false;\r\n                },\r\n                intersectsTriangle: (tri) => {\r\n                    // skip the triangle if it is completely below the line\r\n                    const highestTriangleY = Math.max(tri.a.y, tri.b.y, tri.c.y);\r\n                    if (highestTriangleY < lowestLineY) {\r\n                        return false;\r\n                    }\r\n                    // if the projected triangle is just a line then don't check it\r\n                    if (isYProjectedTriangleDegenerate(tri)) {\r\n                        return false;\r\n                    }\r\n                    // if this line lies on a triangle edge then don't check it\r\n                    if (isLineTriangleEdge(tri, line)) {\r\n                        return false;\r\n                    }\r\n                    trimToBeneathTriPlane(tri, line, tempLine);\r\n                    if (isLineAbovePlane(tri.plane, tempLine)) {\r\n                        return false;\r\n                    }\r\n                    if (tempLine.distance() < 1e-10) {\r\n                        return false;\r\n                    }\r\n                    // compress the edge overlaps so we can easily tell if the whole edge is hidden already\r\n                    // and exit early\r\n                    if (getProjectedOverlaps(tri, line, overlaps)) {\r\n                        compressEdgeOverlaps(overlaps);\r\n                    }\r\n                    // if we're hiding the edge entirely now then skip further checks\r\n                    if (overlaps.length !== 0) {\r\n                        const [d0, d1] = overlaps[overlaps.length - 1];\r\n                        return d0 === 0.0 && d1 === 1.0;\r\n                    }\r\n                    return false;\r\n                }\r\n            });\r\n            overlapsToLines(line, overlaps, finalEdges);\r\n        }\r\n        projection.geometry.dispose();\r\n        projection.geometry = edgesToGeometry(finalEdges, 0);\r\n    }\r\n}\r\n//# sourceMappingURL=edge-projection.js.map","import { Float32BufferAttribute, Line, Line3, MathUtils, Matrix4, PerspectiveCamera, Vector2 } from 'three';\r\nimport { ShapeCaster } from './shape-caster';\r\nexport var SelectionWindowMode;\r\n(function (SelectionWindowMode) {\r\n    SelectionWindowMode[SelectionWindowMode[\"lasso\"] = 0] = \"lasso\";\r\n    SelectionWindowMode[SelectionWindowMode[\"box\"] = 1] = \"box\";\r\n})(SelectionWindowMode || (SelectionWindowMode = {}));\r\nexport class SelectionWindow {\r\n    constructor(context) {\r\n        this.context = context;\r\n        this.toolMode = SelectionWindowMode.box;\r\n        this.selectionShape = new Line();\r\n        this.dragging = false;\r\n        this.selectionPoints = [];\r\n        this.selectionShapeNeedsUpdate = false;\r\n        this.selectionNeedsUpdate = false;\r\n        this.startX = -Infinity;\r\n        this.startY = -Infinity;\r\n        this.prevX = -Infinity;\r\n        this.prevY = -Infinity;\r\n        this.tempVec0 = new Vector2();\r\n        this.tempVec1 = new Vector2();\r\n        this.tempVec2 = new Vector2();\r\n        this.toScreenSpaceMatrix = new Matrix4();\r\n        this.lassoSegments = [];\r\n        this.caster = new ShapeCaster(this.toScreenSpaceMatrix, this.lassoSegments);\r\n        this.setupSelectionShape();\r\n        this.updateAll();\r\n    }\r\n    setupSelectionShape() {\r\n        this.selectionShape = new Line();\r\n        const mat = this.selectionShape.material;\r\n        mat.depthTest = false;\r\n        mat.color.set(0xff9800).convertSRGBToLinear();\r\n        this.selectionShape.renderOrder = 1;\r\n        this.selectionShape.position.z = -0.2;\r\n        this.selectionShape.scale.setScalar(1);\r\n        this.selectionShape.frustumCulled = false;\r\n        this.context.getCamera().add(this.selectionShape);\r\n    }\r\n    onDragStarted() {\r\n        this.prevX = this.context.mouse.rawPosition.x;\r\n        this.prevY = this.context.mouse.rawPosition.y;\r\n        this.startX = this.context.mouse.position.x;\r\n        this.startY = this.context.mouse.position.y;\r\n        this.selectionPoints.length = 0;\r\n        this.dragging = true;\r\n        const camera = this.context.getCamera();\r\n        if (!camera.parent) {\r\n            this.context.getScene().add(camera);\r\n        }\r\n        if (camera instanceof PerspectiveCamera) {\r\n            const tan = Math.tan((MathUtils.DEG2RAD * camera.fov) / 2);\r\n            const yScale = tan * this.selectionShape.position.z;\r\n            this.selectionShape.scale.set(-yScale * camera.aspect, -yScale, 1);\r\n        }\r\n    }\r\n    onDragFinished() {\r\n        this.dragging = false;\r\n        this.selectionShape.visible = false;\r\n        if (this.selectionPoints.length) {\r\n            this.selectionNeedsUpdate = true;\r\n        }\r\n        this.updateAll();\r\n    }\r\n    onDrag() {\r\n        if (!this.dragging)\r\n            return;\r\n        const ex = this.context.mouse.rawPosition.x;\r\n        const ey = this.context.mouse.rawPosition.y;\r\n        const nx = this.context.mouse.position.x;\r\n        const ny = this.context.mouse.position.y;\r\n        if (this.toolMode === SelectionWindowMode.box) {\r\n            // set points for the corner of the box\r\n            this.selectionPoints.length = 3 * 5;\r\n            this.selectionPoints[0] = this.startX;\r\n            this.selectionPoints[1] = this.startY;\r\n            this.selectionPoints[2] = 0;\r\n            this.selectionPoints[3] = nx;\r\n            this.selectionPoints[4] = this.startY;\r\n            this.selectionPoints[5] = 0;\r\n            this.selectionPoints[6] = nx;\r\n            this.selectionPoints[7] = ny;\r\n            this.selectionPoints[8] = 0;\r\n            this.selectionPoints[9] = this.startX;\r\n            this.selectionPoints[10] = ny;\r\n            this.selectionPoints[11] = 0;\r\n            this.selectionPoints[12] = this.startX;\r\n            this.selectionPoints[13] = this.startY;\r\n            this.selectionPoints[14] = 0;\r\n            if (ex !== this.prevX || ey !== this.prevY) {\r\n                this.selectionShapeNeedsUpdate = true;\r\n            }\r\n            this.prevX = ex;\r\n            this.prevY = ey;\r\n            this.selectionShape.visible = true;\r\n        }\r\n        else {\r\n            // If the mouse hasn't moved a lot since the last point\r\n            const mouseDidntMuchMuch = Math.abs(ex - this.prevX) >= 3 || Math.abs(ey - this.prevY) >= 3;\r\n            if (mouseDidntMuchMuch) {\r\n                // Check if the mouse moved in roughly the same direction as the previous point\r\n                // and replace it if so.\r\n                const i = this.selectionPoints.length / 3 - 1;\r\n                const i3 = i * 3;\r\n                let doReplace = false;\r\n                if (this.selectionPoints.length > 3) {\r\n                    // prev segment direction\r\n                    this.tempVec0.set(this.selectionPoints[i3 - 3], this.selectionPoints[i3 - 3 + 1]);\r\n                    this.tempVec1.set(this.selectionPoints[i3], this.selectionPoints[i3 + 1]);\r\n                    this.tempVec1.sub(this.tempVec0).normalize();\r\n                    // this segment direction\r\n                    this.tempVec0.set(this.selectionPoints[i3], this.selectionPoints[i3 + 1]);\r\n                    this.tempVec2.set(nx, ny);\r\n                    this.tempVec2.sub(this.tempVec0).normalize();\r\n                    const dot = this.tempVec1.dot(this.tempVec2);\r\n                    doReplace = dot > 0.99;\r\n                }\r\n                if (doReplace) {\r\n                    this.selectionPoints[i3] = nx;\r\n                    this.selectionPoints[i3 + 1] = ny;\r\n                }\r\n                else {\r\n                    this.selectionPoints.push(nx, ny, 0);\r\n                }\r\n                this.selectionShapeNeedsUpdate = true;\r\n                this.selectionShape.visible = true;\r\n                this.prevX = ex;\r\n                this.prevY = ey;\r\n            }\r\n        }\r\n        this.updateSelectionLasso();\r\n    }\r\n    updateSelectionLasso() {\r\n        if (this.selectionShapeNeedsUpdate) {\r\n            if (this.toolMode === SelectionWindowMode.lasso) {\r\n                const ogLength = this.selectionPoints.length;\r\n                this.selectionPoints.push(this.selectionPoints[0], this.selectionPoints[1], this.selectionPoints[2]);\r\n                this.selectionShape.geometry.setAttribute('position', new Float32BufferAttribute(this.selectionPoints, 3, false));\r\n                this.selectionPoints.length = ogLength;\r\n            }\r\n            else {\r\n                this.selectionShape.geometry.setAttribute('position', new Float32BufferAttribute(this.selectionPoints, 3, false));\r\n            }\r\n            this.selectionShapeNeedsUpdate = false;\r\n        }\r\n    }\r\n    updateAll() {\r\n        const models = this.context.items.pickableIfcModels;\r\n        models.forEach((model) => {\r\n            this.update(model);\r\n        });\r\n        this.selectionNeedsUpdate = false;\r\n    }\r\n    update(model) {\r\n        if (this.selectionNeedsUpdate && this.selectionPoints.length > 0) {\r\n            this.updateSelection(model);\r\n        }\r\n    }\r\n    updateSelection(model) {\r\n        // TODO: Possible improvements\r\n        // - Correctly handle the camera near clip\r\n        // - Improve line line intersect performance?\r\n        const camera = this.context.getCamera();\r\n        this.toScreenSpaceMatrix\r\n            .copy(model.matrixWorld)\r\n            .premultiply(camera.matrixWorldInverse)\r\n            .premultiply(camera.projectionMatrix);\r\n        // create scratch points and lines to use for selection\r\n        while (this.lassoSegments.length < this.selectionPoints.length) {\r\n            this.lassoSegments.push(new Line3());\r\n        }\r\n        this.lassoSegments.length = this.selectionPoints.length;\r\n        for (let s = 0, l = this.selectionPoints.length; s < l; s += 3) {\r\n            const line = this.lassoSegments[s];\r\n            const sNext = (s + 3) % l;\r\n            line.start.x = this.selectionPoints[s];\r\n            line.start.y = this.selectionPoints[s + 1];\r\n            line.end.x = this.selectionPoints[sNext];\r\n            line.end.y = this.selectionPoints[sNext + 1];\r\n        }\r\n        const indices = [];\r\n        this.caster.shapeCast(model, indices);\r\n        if (this.onSelected) {\r\n            this.onSelected(model, indices);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=selection-window.js.map","export class SelectionBoxMath {\r\n    // https://www.geeksforgeeks.org/convex-hull-set-2-graham-scan/\r\n    getConvexHull(points) {\r\n        // find the lowest point in 2d\r\n        let lowestY = Infinity;\r\n        let lowestIndex = -1;\r\n        for (let i = 0, l = points.length; i < l; i++) {\r\n            const p = points[i];\r\n            if (p.y < lowestY) {\r\n                lowestIndex = i;\r\n                lowestY = p.y;\r\n            }\r\n        }\r\n        // sort the points\r\n        const p0 = points[lowestIndex];\r\n        points[lowestIndex] = points[0];\r\n        points[0] = p0;\r\n        function orientation(p, q, r) {\r\n            const val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n            if (val === 0) {\r\n                return 0; // colinear\r\n            }\r\n            // clock or counterclock wise\r\n            return val > 0 ? 1 : 2;\r\n        }\r\n        function distSq(p1, p2) {\r\n            return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\r\n        }\r\n        function compare(p1, p2) {\r\n            // Find orientation\r\n            const o = orientation(p0, p1, p2);\r\n            if (o === 0)\r\n                return distSq(p0, p2) >= distSq(p0, p1) ? -1 : 1;\r\n            return o === 2 ? -1 : 1;\r\n        }\r\n        points = points.sort(compare);\r\n        // filter the points\r\n        let m = 1;\r\n        const n = points.length;\r\n        for (let i = 1; i < n; i++) {\r\n            while (i < n - 1 && orientation(p0, points[i], points[i + 1]) === 0) {\r\n                i++;\r\n            }\r\n            points[m] = points[i];\r\n            m++;\r\n        }\r\n        // early out if we don't have enough points for a hull\r\n        if (m < 3)\r\n            return null;\r\n        // generate the hull\r\n        const hull = [points[0], points[1], points[2]];\r\n        for (let i = 3; i < m; i++) {\r\n            while (orientation(hull[hull.length - 2], hull[hull.length - 1], points[i]) !== 2) {\r\n                hull.pop();\r\n            }\r\n            hull.push(points[i]);\r\n        }\r\n        return hull;\r\n    }\r\n    pointRayCrossesLine(point, line, prevDirection, thisDirection) {\r\n        const { start, end } = line;\r\n        const px = point.x;\r\n        const py = point.y;\r\n        const sy = start.y;\r\n        const ey = end.y;\r\n        if (sy === ey)\r\n            return false;\r\n        if (py > sy && py > ey)\r\n            return false; // above\r\n        if (py < sy && py < ey)\r\n            return false; // below\r\n        const sx = start.x;\r\n        const ex = end.x;\r\n        if (px > sx && px > ex)\r\n            return false; // right\r\n        if (px < sx && px < ex) {\r\n            // left\r\n            if (py === sy && prevDirection !== thisDirection) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        // check the side\r\n        const dx = ex - sx;\r\n        const dy = ey - sy;\r\n        const perpx = dy;\r\n        const perpy = -dx;\r\n        const pdx = px - sx;\r\n        const pdy = py - sy;\r\n        const dot = perpx * pdx + perpy * pdy;\r\n        if (Math.sign(dot) !== Math.sign(perpx)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    pointRayCrossesSegments(point, segments) {\r\n        let crossings = 0;\r\n        const firstSeg = segments[segments.length - 1];\r\n        let prevDirection = firstSeg.start.y > firstSeg.end.y;\r\n        for (let s = 0, l = segments.length; s < l; s++) {\r\n            const line = segments[s];\r\n            const thisDirection = line.start.y > line.end.y;\r\n            if (this.pointRayCrossesLine(point, line, prevDirection, thisDirection)) {\r\n                crossings++;\r\n            }\r\n            prevDirection = thisDirection;\r\n        }\r\n        return crossings;\r\n    }\r\n    // https://stackoverflow.com/questions/3838329/how-can-i-check-if-two-segments-intersect\r\n    lineCrossesLine(l1, l2) {\r\n        function ccw(A, B, C) {\r\n            return (C.y - A.y) * (B.x - A.x) > (B.y - A.y) * (C.x - A.x);\r\n        }\r\n        const A = l1.start;\r\n        const B = l1.end;\r\n        const C = l2.start;\r\n        const D = l2.end;\r\n        return ccw(A, C, D) !== ccw(B, C, D) && ccw(A, B, C) !== ccw(A, B, D);\r\n    }\r\n}\r\n//# sourceMappingURL=selection-window-math.js.map","import { CONTAINED, INTERSECTED, NOT_INTERSECTED } from 'three-mesh-bvh';\r\nimport { Line3, Vector3 } from 'three';\r\nimport { SelectionBoxMath } from './selection-window-math';\r\nexport class ShapeCaster {\r\n    constructor(toScreenSpaceMatrix, lassoSegments) {\r\n        this.toScreenSpaceMatrix = toScreenSpaceMatrix;\r\n        this.lassoSegments = lassoSegments;\r\n        this.boxPoints = new Array(8).fill(0).map(() => new Vector3());\r\n        this.boxLines = new Array(12).fill(0).map(() => new Line3());\r\n        this.perBoundsSegments = [];\r\n        this.math = new SelectionBoxMath();\r\n        this.selectModel = false;\r\n        this.useBoundsTree = true;\r\n        this.selectionMode = 'intersection';\r\n    }\r\n    shapeCast(mesh, indices) {\r\n        if (!mesh.geometry.boundsTree) {\r\n            throw new Error('Geometry must have BVH applied!');\r\n        }\r\n        mesh.geometry.boundsTree.shapecast({\r\n            intersectsBounds: (box, _isLeaf, _score, depth) => {\r\n                // Get the bounding box points\r\n                const { min, max } = box;\r\n                let index = 0;\r\n                let minY = Infinity;\r\n                let maxY = -Infinity;\r\n                let minX = Infinity;\r\n                for (let x = 0; x <= 1; x++) {\r\n                    for (let y = 0; y <= 1; y++) {\r\n                        for (let z = 0; z <= 1; z++) {\r\n                            const v = this.boxPoints[index];\r\n                            v.x = x === 0 ? min.x : max.x;\r\n                            v.y = y === 0 ? min.y : max.y;\r\n                            v.z = z === 0 ? min.z : max.z;\r\n                            // @ts-ignore\r\n                            v.w = 1;\r\n                            v.applyMatrix4(this.toScreenSpaceMatrix);\r\n                            index++;\r\n                            if (v.y < minY)\r\n                                minY = v.y;\r\n                            if (v.y > maxY)\r\n                                maxY = v.y;\r\n                            if (v.x < minX)\r\n                                minX = v.x;\r\n                        }\r\n                    }\r\n                }\r\n                // Find all the relevant segments here and cache them in the above array for\r\n                // subsequent child checks to use.\r\n                const parentSegments = this.perBoundsSegments[depth - 1] || this.lassoSegments;\r\n                const segmentsToCheck = this.perBoundsSegments[depth] || [];\r\n                segmentsToCheck.length = 0;\r\n                this.perBoundsSegments[depth] = segmentsToCheck;\r\n                for (let i = 0, l = parentSegments.length; i < l; i++) {\r\n                    const line = parentSegments[i];\r\n                    const sx = line.start.x;\r\n                    const sy = line.start.y;\r\n                    const ex = line.end.x;\r\n                    const ey = line.end.y;\r\n                    if (sx < minX && ex < minX)\r\n                        continue;\r\n                    const startAbove = sy > maxY;\r\n                    const endAbove = ey > maxY;\r\n                    if (startAbove && endAbove)\r\n                        continue;\r\n                    const startBelow = sy < minY;\r\n                    const endBelow = ey < minY;\r\n                    if (startBelow && endBelow)\r\n                        continue;\r\n                    segmentsToCheck.push(line);\r\n                }\r\n                if (segmentsToCheck.length === 0) {\r\n                    return NOT_INTERSECTED;\r\n                }\r\n                // Get the screen space hull lines\r\n                const hull = this.math.getConvexHull(this.boxPoints);\r\n                if (!hull)\r\n                    return NOT_INTERSECTED;\r\n                const lines = hull.map((p, i) => {\r\n                    const nextP = hull[(i + 1) % hull.length];\r\n                    const line = this.boxLines[i];\r\n                    line.start.copy(p);\r\n                    line.end.copy(nextP);\r\n                    return line;\r\n                });\r\n                // If a lasso point is inside the hull then it's intersected and cannot be contained\r\n                if (this.math.pointRayCrossesSegments(segmentsToCheck[0].start, lines) % 2 === 1) {\r\n                    return INTERSECTED;\r\n                }\r\n                // check if the screen space hull is in the lasso\r\n                let crossings = 0;\r\n                for (let i = 0, l = hull.length; i < l; i++) {\r\n                    const v = hull[i];\r\n                    const pCrossings = this.math.pointRayCrossesSegments(v, segmentsToCheck);\r\n                    if (i === 0) {\r\n                        crossings = pCrossings;\r\n                    }\r\n                    // if two points on the hull have different amounts of crossings then\r\n                    // it can only be intersected\r\n                    if (crossings !== pCrossings) {\r\n                        return INTERSECTED;\r\n                    }\r\n                }\r\n                // check if there are any intersections\r\n                for (let i = 0, l = lines.length; i < l; i++) {\r\n                    const boxLine = lines[i];\r\n                    for (let s = 0, ls = segmentsToCheck.length; s < ls; s++) {\r\n                        if (this.math.lineCrossesLine(boxLine, segmentsToCheck[s])) {\r\n                            return INTERSECTED;\r\n                        }\r\n                    }\r\n                }\r\n                return crossings % 2 === 0 ? NOT_INTERSECTED : CONTAINED;\r\n            },\r\n            intersectsTriangle: (tri, index, contained, depth) => {\r\n                const i3 = index * 3;\r\n                const a = i3;\r\n                const b = i3 + 1;\r\n                const c = i3 + 2;\r\n                // if the parent bounds were marked as contained\r\n                if (contained) {\r\n                    indices.push(a, b, c);\r\n                    return this.selectModel;\r\n                }\r\n                // check all the segments if using no bounds tree\r\n                const segmentsToCheck = this.useBoundsTree\r\n                    ? this.perBoundsSegments[depth]\r\n                    : this.lassoSegments;\r\n                if (this.selectionMode === 'centroid') {\r\n                    // get the center of the triangle\r\n                    const centroid = tri.a\r\n                        .add(tri.b)\r\n                        .add(tri.c)\r\n                        .multiplyScalar(1 / 3);\r\n                    centroid.applyMatrix4(this.toScreenSpaceMatrix);\r\n                    // counting the crossings\r\n                    const crossings = this.math.pointRayCrossesSegments(centroid, segmentsToCheck);\r\n                    if (crossings % 2 === 1) {\r\n                        indices.push(a, b, c);\r\n                        return this.selectModel;\r\n                    }\r\n                }\r\n                else if (this.selectionMode === 'intersection') {\r\n                    // get the projected vertices\r\n                    const vertices = [tri.a, tri.b, tri.c];\r\n                    for (let j = 0; j < 3; j++) {\r\n                        const v = vertices[j];\r\n                        v.applyMatrix4(this.toScreenSpaceMatrix);\r\n                        const crossings = this.math.pointRayCrossesSegments(v, segmentsToCheck);\r\n                        if (crossings % 2 === 1) {\r\n                            indices.push(a, b, c);\r\n                            return this.selectModel;\r\n                        }\r\n                    }\r\n                    // get the lines for the triangle\r\n                    const lines = [this.boxLines[0], this.boxLines[1], this.boxLines[2]];\r\n                    lines[0].start.copy(tri.a);\r\n                    lines[0].end.copy(tri.b);\r\n                    lines[1].start.copy(tri.b);\r\n                    lines[1].end.copy(tri.c);\r\n                    lines[2].start.copy(tri.c);\r\n                    lines[2].end.copy(tri.a);\r\n                    for (let i = 0; i < 3; i++) {\r\n                        const l = lines[i];\r\n                        for (let s = 0, sl = segmentsToCheck.length; s < sl; s++) {\r\n                            if (this.math.lineCrossesLine(l, segmentsToCheck[s])) {\r\n                                indices.push(a, b, c);\r\n                                return this.selectModel;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=shape-caster.js.map","import { IfcContext, IfcManager, IfcGrid, IfcAxes, IfcClipper, DropboxAPI, Edges, SectionFillManager, IfcDimensions, PlanManager } from './components';\r\nimport { GLTFManager } from './components/import-export/glTF';\r\nimport { ShadowDropper } from './components/display/shadow-dropper';\r\nimport { DXFWriter } from './components/import-export/dxf';\r\nimport { PDFWriter } from './components/import-export/pdf';\r\nimport { EdgeProjector } from './components/import-export/edges-vectorizer/edge-projection';\r\nimport { ClippingEdges } from './components/display/clipping-planes/clipping-edges';\r\nimport { SelectionWindow } from './components/selection/selection-window';\r\nexport class IfcViewerAPI {\r\n    constructor(options) {\r\n        /**\r\n         * @deprecated Use `IfcViewerAPI.clipper.createPlane()` instead.\r\n         * Adds a clipping plane on the face pointed to by the cursor.\r\n         */\r\n        this.addClippingPlane = () => {\r\n            this.clipper.createPlane();\r\n        };\r\n        /**\r\n         * @deprecated Use `IfcViewerAPI.clipper.deletePlane()` instead.\r\n         * Removes the clipping plane pointed by the cursor.\r\n         */\r\n        this.removeClippingPlane = () => {\r\n            this.clipper.deletePlane();\r\n        };\r\n        /**\r\n         * @deprecated Use `IfcViewerAPI.clipper.toggle()` instead.\r\n         * Turns on / off all clipping planes.\r\n         */\r\n        this.toggleClippingPlanes = () => {\r\n            this.clipper.toggle();\r\n        };\r\n        /**\r\n         * @deprecated Use `IfcViewerAPI.IFC.selector.prePickIfcItem()` instead.\r\n         * Highlights the item pointed by the cursor.\r\n         */\r\n        this.prePickIfcItem = () => {\r\n            this.IFC.selector.prePickIfcItem();\r\n        };\r\n        /**\r\n         * @deprecated Use `IfcViewerAPI.IFC.selector.pickIfcItem()` instead.\r\n         * Highlights the item pointed by the cursor and gets is properties.\r\n         */\r\n        this.pickIfcItem = () => {\r\n            return this.IFC.selector.pickIfcItem();\r\n        };\r\n        /**\r\n         * @deprecated Use `IfcViewerAPI.IFC.selector.pickIfcItemsByID()` instead.\r\n         * Highlights the item with the given ID.\r\n         * @modelID ID of the IFC model.\r\n         * @id Express ID of the item.\r\n         */\r\n        this.pickIfcItemsByID = (modelID, ids) => {\r\n            this.IFC.selector.pickIfcItemsByID(modelID, ids);\r\n        };\r\n        if (!options.container)\r\n            throw new Error('Could not get container element!');\r\n        this.context = new IfcContext(options);\r\n        this.IFC = new IfcManager(this.context);\r\n        this.grid = new IfcGrid(this.context);\r\n        this.axes = new IfcAxes(this.context);\r\n        this.clipper = new IfcClipper(this.context, this.IFC);\r\n        this.plans = new PlanManager(this.IFC, this.context, this.clipper);\r\n        this.filler = new SectionFillManager(this.IFC, this.context);\r\n        this.dimensions = new IfcDimensions(this.context);\r\n        this.edges = new Edges(this.context);\r\n        this.shadowDropper = new ShadowDropper(this.context, this.IFC);\r\n        this.edgesProjector = new EdgeProjector(this.context);\r\n        this.dxf = new DXFWriter();\r\n        this.pdf = new PDFWriter();\r\n        this.GLTF = new GLTFManager(this.context, this.IFC);\r\n        this.dropbox = new DropboxAPI(this.context, this.IFC);\r\n        this.selectionWindow = new SelectionWindow(this.context);\r\n        ClippingEdges.ifc = this.IFC;\r\n        ClippingEdges.context = this.context;\r\n    }\r\n    /**\r\n     * @deprecated Use `this.dropbox.loadDropboxIfc()` instead.\r\n     * Opens a dropbox window where the user can select their IFC models.\r\n     */\r\n    openDropboxWindow() {\r\n        this.dropbox.loadDropboxIfc();\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.loadIfc()` instead.\r\n     * Loads the given IFC in the current scene.\r\n     * @file IFC as File.\r\n     * @fitToFrame (optional) if true, brings the perspectiveCamera to the loaded IFC.\r\n     */\r\n    async loadIfc(file, fitToFrame = false) {\r\n        await this.IFC.loadIfc(file, fitToFrame);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.grid.setGrid()` instead.\r\n     * Adds a base [grid](https://threejs.org/docs/#api/en/helpers/GridHelper) to the scene.\r\n     * @size (optional) Size of the grid.\r\n     * @divisions (optional) Number of divisions in X and Y.\r\n     * @ColorCenterLine (optional) Color of the XY central lines of the grid.\r\n     * @colorGrid (optional) Color of the XY lines of the grid.\r\n     */\r\n    addGrid(size, divisions, colorCenterLine, colorGrid) {\r\n        this.grid.setGrid(size, divisions, colorCenterLine, colorGrid);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.axes.setAxes()` instead.\r\n     * Adds base [axes](https://threejs.org/docs/#api/en/helpers/AxesHelper) to the scene.\r\n     * @size (optional) Size of the axes.\r\n     */\r\n    addAxes(size) {\r\n        this.axes.setAxes(size);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.loadIfcUrl()` instead.\r\n     * Loads the given IFC in the current scene.\r\n     * @file IFC as URL.\r\n     * @fitToFrame (optional) if true, brings the perspectiveCamera to the loaded IFC.\r\n     */\r\n    async loadIfcUrl(url, fitToFrame = false) {\r\n        await this.IFC.loadIfcUrl(url, fitToFrame);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.setWasmPath()` instead.\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * `ifcLoader.setWasmPath(\"dist/wasmDir/\");`\r\n     *\r\n     * @path Relative path to web-ifc.wasm.\r\n     */\r\n    setWasmPath(path) {\r\n        this.IFC.setWasmPath(path);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.getSpatialStructure()` instead.\r\n     * Gets the spatial structure of the specified model.\r\n     * @modelID ID of the IFC model.\r\n     */\r\n    getSpatialStructure(modelID) {\r\n        return this.IFC.getSpatialStructure(modelID);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.getProperties()` instead.\r\n     * Gets the properties of the specified item.\r\n     * @modelID ID of the IFC model.\r\n     * @id Express ID of the item.\r\n     * @indirect If true, also returns psets, qsets and type properties.\r\n     */\r\n    getProperties(modelID, id, indirect) {\r\n        return this.IFC.getProperties(modelID, id, indirect);\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.getModelID()` instead.\r\n     * Gets the ID of the model pointed by the cursor.\r\n     */\r\n    getModelID() {\r\n        return this.IFC.getModelID();\r\n    }\r\n    /**\r\n     * @deprecated Use `IfcViewerAPI.IFC.getAllItemsOfType()` instead.\r\n     * Gets all the items of the specified type in the specified IFC model.\r\n     * @modelID ID of the IFC model.\r\n     * @type type of element. You can import the type from web-ifc.\r\n     * @verbose If true, also gets the properties for all the elements.\r\n     */\r\n    getAllItemsOfType(modelID, type, verbose = false) {\r\n        return this.IFC.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n    /**\r\n     * Releases all the memory allocated by IFC.js.\r\n     * Use this only when deleting the ifcViewerAPI instance.\r\n     * This is especially important when using libraries and frameworks that handle the lifecycle\r\n     * of objects automatically (e.g. React, Angular, etc). If you are using one of these and are\r\n     * instantiating webIfcViewer inside a component, make sure you use this method in the component\r\n     * destruction event.\r\n     */\r\n    async dispose() {\r\n        this.grid.dispose();\r\n        this.grid = null;\r\n        this.axes.dispose();\r\n        this.axes = null;\r\n        this.context.dispose();\r\n        this.context = null;\r\n        this.clipper.dispose();\r\n        this.clipper = null;\r\n        this.plans.dispose();\r\n        this.plans = null;\r\n        this.filler.dispose();\r\n        this.filler = null;\r\n        this.dimensions.dispose();\r\n        this.dimensions = null;\r\n        this.edges.dispose();\r\n        this.edges = null;\r\n        this.shadowDropper.dispose();\r\n        this.shadowDropper = null;\r\n        this.dxf.dispose();\r\n        this.dxf = null;\r\n        this.pdf.dispose();\r\n        this.pdf = null;\r\n        this.edgesProjector.dispose();\r\n        this.edgesProjector = null;\r\n        this.dropbox = null;\r\n        this.GLTF.dispose();\r\n        this.GLTF = null;\r\n        await this.IFC.dispose();\r\n        this.IFC = null;\r\n    }\r\n}\r\n//# sourceMappingURL=ifc-viewer-api.js.map","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __require = (x) => {\n  if (typeof require !== \"undefined\")\n    return require(x);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n};\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// (disabled):crypto\nvar require_crypto = __commonJS({\n  \"(disabled):crypto\"() {\n  }\n});\n\n// dist/web-ifc-mt.js\nvar require_web_ifc_mt = __commonJS({\n  \"dist/web-ifc-mt.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        function GROWABLE_HEAP_I8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP8;\n        }\n        function GROWABLE_HEAP_U8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU8;\n        }\n        function GROWABLE_HEAP_I16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP16;\n        }\n        function GROWABLE_HEAP_U16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU16;\n        }\n        function GROWABLE_HEAP_I32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP32;\n        }\n        function GROWABLE_HEAP_U32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU32;\n        }\n        function GROWABLE_HEAP_F32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF32;\n        }\n        function GROWABLE_HEAP_F64() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF64;\n        }\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        var ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        var ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        var ENVIRONMENT_IS_PTHREAD = Module[\"ENVIRONMENT_IS_PTHREAD\"] || false;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          readAsync = function readAsync2(filename, onload, onerror) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            nodeFS[\"readFile\"](filename, function(err2, data) {\n              if (err2)\n                onerror(err2);\n              else\n                onload(data.buffer);\n            });\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status, toThrow) {\n            if (keepRuntimeAlive()) {\n              process[\"exitCode\"] = status;\n              throw toThrow;\n            }\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n          var nodeWorkerThreads;\n          try {\n            nodeWorkerThreads = __require(\"worker_threads\");\n          } catch (e) {\n            console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');\n            throw e;\n          }\n          global.Worker = nodeWorkerThreads.Worker;\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          if (ENVIRONMENT_IS_NODE) {\n            read_ = function shell_read(filename, binary) {\n              if (!nodeFS)\n                nodeFS = __require(\"fs\");\n              if (!nodePath)\n                nodePath = __require(\"path\");\n              filename = nodePath[\"normalize\"](filename);\n              return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n            };\n            readBinary = function readBinary2(filename) {\n              var ret = read_(filename, true);\n              if (!ret.buffer) {\n                ret = new Uint8Array(ret);\n              }\n              assert(ret.buffer);\n              return ret;\n            };\n            readAsync = function readAsync2(filename, onload, onerror) {\n              if (!nodeFS)\n                nodeFS = __require(\"fs\");\n              if (!nodePath)\n                nodePath = __require(\"path\");\n              filename = nodePath[\"normalize\"](filename);\n              nodeFS[\"readFile\"](filename, function(err2, data) {\n                if (err2)\n                  onerror(err2);\n                else\n                  onload(data.buffer);\n              });\n            };\n          } else {\n            read_ = function(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        if (ENVIRONMENT_IS_NODE) {\n          if (typeof performance === \"undefined\") {\n            global.performance = __require(\"perf_hooks\").performance;\n          }\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        function warnOnce(text) {\n          if (!warnOnce.shown)\n            warnOnce.shown = {};\n          if (!warnOnce.shown[text]) {\n            warnOnce.shown[text] = 1;\n            err(text);\n          }\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var Atomics_load = Atomics.load;\n        var Atomics_store = Atomics.store;\n        var Atomics_compareExchange = Atomics.compareExchange;\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var wasmModule;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        function TextDecoderWrapper(encoding) {\n          var textDecoder = new TextDecoder(encoding);\n          this.decode = function(data) {\n            if (data.buffer instanceof SharedArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            return textDecoder.decode.call(textDecoder, data);\n          };\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoderWrapper(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoderWrapper(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && GROWABLE_HEAP_U16()[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(GROWABLE_HEAP_U8().subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = GROWABLE_HEAP_I16()[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            GROWABLE_HEAP_I16()[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          GROWABLE_HEAP_I16()[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = GROWABLE_HEAP_I32()[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            GROWABLE_HEAP_I32()[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          GROWABLE_HEAP_I32()[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          GROWABLE_HEAP_I8().set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            GROWABLE_HEAP_I8()[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            GROWABLE_HEAP_I8()[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          buffer = Module[\"buffer\"];\n        }\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          wasmMemory = Module[\"wasmMemory\"];\n          buffer = Module[\"buffer\"];\n        } else {\n          if (Module[\"wasmMemory\"]) {\n            wasmMemory = Module[\"wasmMemory\"];\n          } else {\n            wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536, \"shared\": true });\n            if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n              err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");\n              if (ENVIRONMENT_IS_NODE) {\n                console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\");\n              }\n              throw Error(\"bad memory\");\n            }\n          }\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATEXIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        var runtimeKeepaliveCounter = 0;\n        function keepRuntimeAlive() {\n          return noExitRuntime || runtimeKeepaliveCounter > 0;\n        }\n        function preRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          FS.ignorePermissions = false;\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          if (ENVIRONMENT_IS_PTHREAD)\n            console.error(\"Pthread aborting at \" + new Error().stack);\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return filename.startsWith(dataURIPrefix);\n        }\n        function isFileURI(filename) {\n          return filename.startsWith(\"file://\");\n        }\n        var wasmBinaryFile;\n        wasmBinaryFile = \"web-ifc-mt.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n          try {\n            if (file == wasmBinaryFile && wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(file);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n            if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                if (!response[\"ok\"]) {\n                  throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n                return response[\"arrayBuffer\"]();\n              }).catch(function() {\n                return getBinary(wasmBinaryFile);\n              });\n            } else {\n              if (readAsync) {\n                return new Promise(function(resolve, reject) {\n                  readAsync(wasmBinaryFile, function(response) {\n                    resolve(new Uint8Array(response));\n                  }, reject);\n                });\n              }\n            }\n          }\n          return Promise.resolve().then(function() {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"ta\"];\n            addOnInit(Module[\"asm\"][\"oa\"]);\n            PThread.tlsInitFunctions.push(Module[\"asm\"][\"sa\"]);\n            wasmModule = module2;\n            if (!ENVIRONMENT_IS_PTHREAD) {\n              var numWorkersToLoad = PThread.unusedWorkers.length;\n              PThread.unusedWorkers.forEach(function(w) {\n                PThread.loadWasmModuleToWorker(w, function() {\n                  if (!--numWorkersToLoad)\n                    removeRunDependency(\"wasm-instantiate\");\n                });\n              });\n            }\n          }\n          if (!ENVIRONMENT_IS_PTHREAD) {\n            addRunDependency(\"wasm-instantiate\");\n          }\n          function receiveInstantiationResult(result) {\n            receiveInstance(result[\"instance\"], result[\"module\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              var result = WebAssembly.instantiate(binary, info);\n              return result;\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiationResult);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        var ASM_CONSTS = { 44848: function() {\n          throw \"Canceled!\";\n        }, 44866: function($0, $1) {\n          setTimeout(function() {\n            __emscripten_do_dispatch_to_thread($0, $1);\n          }, 0);\n        } };\n        function initPthreadsJS() {\n          PThread.initRuntime();\n        }\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function _emscripten_futex_wake(addr, count) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true || count < 0)\n            return -28;\n          if (count == 0)\n            return 0;\n          if (count >= 2147483647)\n            count = Infinity;\n          var mainThreadWaitAddress = Atomics.load(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2);\n          var mainThreadWoken = 0;\n          if (mainThreadWaitAddress == addr) {\n            var loadedAddr = Atomics.compareExchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, mainThreadWaitAddress, 0);\n            if (loadedAddr == mainThreadWaitAddress) {\n              --count;\n              mainThreadWoken = 1;\n              if (count <= 0)\n                return 1;\n            }\n          }\n          var ret = Atomics.notify(GROWABLE_HEAP_I32(), addr >> 2, count);\n          if (ret >= 0)\n            return ret + mainThreadWoken;\n          throw \"Atomics.notify returned an unexpected value \" + ret;\n        }\n        Module[\"_emscripten_futex_wake\"] = _emscripten_futex_wake;\n        function killThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! killThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in killThread!\";\n          GROWABLE_HEAP_I32()[pthread_ptr + 12 >>> 2] = 0;\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.terminate();\n          PThread.freeThreadData(pthread);\n          PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker), 1);\n          pthread.worker.pthread = void 0;\n        }\n        function cancelThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cancelThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cancelThread!\";\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.postMessage({ \"cmd\": \"cancel\" });\n        }\n        function cleanupThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cleanupThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cleanupThread!\";\n          var pthread = PThread.pthreads[pthread_ptr];\n          if (pthread) {\n            GROWABLE_HEAP_I32()[pthread_ptr + 12 >>> 2] = 0;\n            var worker = pthread.worker;\n            PThread.returnWorkerToPool(worker);\n          }\n        }\n        var PThread = { unusedWorkers: [], runningWorkers: [], tlsInitFunctions: [], initMainThreadBlock: function() {\n          var pthreadPoolSize = navigator.hardwareConcurrency;\n          for (var i = 0; i < pthreadPoolSize; ++i) {\n            PThread.allocateUnusedWorker();\n          }\n        }, initRuntime: function() {\n          var tb = _malloc(228);\n          for (var i = 0; i < 228 / 4; ++i)\n            GROWABLE_HEAP_U32()[tb / 4 + i >>> 0] = 0;\n          GROWABLE_HEAP_I32()[tb + 12 >>> 2] = tb;\n          var headPtr = tb + 152;\n          GROWABLE_HEAP_I32()[headPtr >>> 2] = headPtr;\n          var tlsMemory = _malloc(512);\n          for (var i = 0; i < 128; ++i)\n            GROWABLE_HEAP_U32()[tlsMemory / 4 + i >>> 0] = 0;\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 100 >> 2, tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 40 >> 2, tb);\n          __emscripten_thread_init(tb, !ENVIRONMENT_IS_WORKER, 1);\n          _emscripten_register_main_browser_thread_id(tb);\n        }, initWorker: function() {\n        }, pthreads: {}, threadExitHandlers: [], runExitHandlers: function() {\n          while (PThread.threadExitHandlers.length > 0) {\n            PThread.threadExitHandlers.pop()();\n          }\n          ___pthread_tsd_run_dtors();\n        }, runExitHandlersAndDeinitThread: function(tb, exitCode) {\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 56 >> 2, 1);\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 60 >> 2, 0);\n          PThread.runExitHandlers();\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 4 >> 2, exitCode);\n          Atomics.store(GROWABLE_HEAP_U32(), tb + 0 >> 2, 1);\n          _emscripten_futex_wake(tb + 0, 2147483647);\n          __emscripten_thread_init(0, 0, 0);\n        }, setExitStatus: function(status) {\n          EXITSTATUS = status;\n        }, threadExit: function(exitCode) {\n          var tb = _pthread_self();\n          if (tb) {\n            PThread.runExitHandlersAndDeinitThread(tb, exitCode);\n            if (ENVIRONMENT_IS_PTHREAD) {\n              postMessage({ \"cmd\": \"exit\" });\n            }\n          }\n        }, threadCancel: function() {\n          PThread.runExitHandlersAndDeinitThread(_pthread_self(), -1);\n          postMessage({ \"cmd\": \"cancelDone\" });\n        }, terminateAllThreads: function() {\n          for (var t in PThread.pthreads) {\n            var pthread = PThread.pthreads[t];\n            if (pthread && pthread.worker) {\n              PThread.returnWorkerToPool(pthread.worker);\n            }\n          }\n          PThread.pthreads = {};\n          for (var i = 0; i < PThread.unusedWorkers.length; ++i) {\n            var worker = PThread.unusedWorkers[i];\n            worker.terminate();\n          }\n          PThread.unusedWorkers = [];\n          for (var i = 0; i < PThread.runningWorkers.length; ++i) {\n            var worker = PThread.runningWorkers[i];\n            var pthread = worker.pthread;\n            PThread.freeThreadData(pthread);\n            worker.terminate();\n          }\n          PThread.runningWorkers = [];\n        }, freeThreadData: function(pthread) {\n          if (!pthread)\n            return;\n          if (pthread.threadInfoStruct) {\n            var tlsMemory = GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 100 >>> 2];\n            GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 100 >>> 2] = 0;\n            _free(tlsMemory);\n            _free(pthread.threadInfoStruct);\n          }\n          pthread.threadInfoStruct = 0;\n          if (pthread.allocatedOwnStack && pthread.stackBase)\n            _free(pthread.stackBase);\n          pthread.stackBase = 0;\n          if (pthread.worker)\n            pthread.worker.pthread = null;\n        }, returnWorkerToPool: function(worker) {\n          PThread.runWithoutMainThreadQueuedCalls(function() {\n            delete PThread.pthreads[worker.pthread.threadInfoStruct];\n            PThread.unusedWorkers.push(worker);\n            PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n            PThread.freeThreadData(worker.pthread);\n            worker.pthread = void 0;\n          });\n        }, runWithoutMainThreadQueuedCalls: function(func) {\n          GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls >>> 2] = 0;\n          try {\n            func();\n          } finally {\n            GROWABLE_HEAP_I32()[__emscripten_allow_main_runtime_queued_calls >>> 2] = 1;\n          }\n        }, receiveObjectTransfer: function(data) {\n        }, threadInit: function() {\n          for (var i in PThread.tlsInitFunctions) {\n            PThread.tlsInitFunctions[i]();\n          }\n        }, loadWasmModuleToWorker: function(worker, onFinishedLoading) {\n          worker.onmessage = function(e) {\n            var d = e[\"data\"];\n            var cmd = d[\"cmd\"];\n            if (worker.pthread)\n              PThread.currentProxiedOperationCallerThread = worker.pthread.threadInfoStruct;\n            if (d[\"targetThread\"] && d[\"targetThread\"] != _pthread_self()) {\n              var thread = PThread.pthreads[d.targetThread];\n              if (thread) {\n                thread.worker.postMessage(e.data, d[\"transferList\"]);\n              } else {\n                console.error('Internal error! Worker sent a message \"' + cmd + '\" to target pthread ' + d[\"targetThread\"] + \", but that thread no longer exists!\");\n              }\n              PThread.currentProxiedOperationCallerThread = void 0;\n              return;\n            }\n            if (cmd === \"processQueuedMainThreadWork\") {\n              _emscripten_main_thread_process_queued_calls();\n            } else if (cmd === \"spawnThread\") {\n              spawnThread(e.data);\n            } else if (cmd === \"cleanupThread\") {\n              cleanupThread(d[\"thread\"]);\n            } else if (cmd === \"killThread\") {\n              killThread(d[\"thread\"]);\n            } else if (cmd === \"cancelThread\") {\n              cancelThread(d[\"thread\"]);\n            } else if (cmd === \"loaded\") {\n              worker.loaded = true;\n              if (onFinishedLoading)\n                onFinishedLoading(worker);\n              if (worker.runPthread) {\n                worker.runPthread();\n                delete worker.runPthread;\n              }\n            } else if (cmd === \"print\") {\n              out(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"printErr\") {\n              err(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"alert\") {\n              alert(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"exit\") {\n              var detached = worker.pthread && Atomics.load(GROWABLE_HEAP_U32(), worker.pthread.threadInfoStruct + 64 >> 2);\n              if (detached) {\n                PThread.returnWorkerToPool(worker);\n              }\n            } else if (cmd === \"exitProcess\") {\n              try {\n                exit(d[\"returnCode\"]);\n              } catch (e2) {\n                if (e2 instanceof ExitStatus)\n                  return;\n                throw e2;\n              }\n            } else if (cmd === \"cancelDone\") {\n              PThread.returnWorkerToPool(worker);\n            } else if (cmd === \"objectTransfer\") {\n              PThread.receiveObjectTransfer(e.data);\n            } else if (e.data.target === \"setimmediate\") {\n              worker.postMessage(e.data);\n            } else {\n              err(\"worker sent an unknown command \" + cmd);\n            }\n            PThread.currentProxiedOperationCallerThread = void 0;\n          };\n          worker.onerror = function(e) {\n            err(\"pthread sent an error! \" + e.filename + \":\" + e.lineno + \": \" + e.message);\n          };\n          if (ENVIRONMENT_IS_NODE) {\n            worker.on(\"message\", function(data) {\n              worker.onmessage({ data });\n            });\n            worker.on(\"error\", function(data) {\n              worker.onerror(data);\n            });\n            worker.on(\"exit\", function(data) {\n            });\n          }\n          worker.postMessage({ \"cmd\": \"load\", \"urlOrBlob\": Module[\"mainScriptUrlOrBlob\"] || _scriptDir, \"wasmMemory\": wasmMemory, \"wasmModule\": wasmModule });\n        }, allocateUnusedWorker: function() {\n          var pthreadMainJs = locateFile(\"web-ifc-mt.worker.js\");\n          PThread.unusedWorkers.push(new Worker(pthreadMainJs));\n        }, getNewWorker: function() {\n          if (PThread.unusedWorkers.length == 0) {\n            PThread.allocateUnusedWorker();\n            PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\n          }\n          return PThread.unusedWorkers.pop();\n        }, busySpinWait: function(msecs) {\n          var t = performance.now() + msecs;\n          while (performance.now() < t) {\n          }\n        } };\n        function establishStackSpace(stackTop, stackMax) {\n          _emscripten_stack_set_limits(stackTop, stackMax);\n          stackRestore(stackTop);\n        }\n        Module[\"establishStackSpace\"] = establishStackSpace;\n        function invokeEntryPoint(ptr, arg) {\n          return wasmTable.get(ptr)(arg);\n        }\n        Module[\"invokeEntryPoint\"] = invokeEntryPoint;\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (ENVIRONMENT_IS_PTHREAD) {\n          _emscripten_get_now = function() {\n            return performance.now() - Module[\"__performance_now_clock_drift\"];\n          };\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function setErrNo(value) {\n          GROWABLE_HEAP_I32()[___errno_location() >>> 2] = value;\n          return value;\n        }\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          GROWABLE_HEAP_I32()[tp >>> 2] = now / 1e3 | 0;\n          GROWABLE_HEAP_I32()[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + 16) + 16;\n        }\n        function _atexit(func, arg) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(1, 1, func, arg);\n        }\n        function ___cxa_thread_atexit(routine, arg) {\n          PThread.threadExitHandlers.push(function() {\n            wasmTable.get(routine)(arg);\n          });\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - 16;\n          this.set_type = function(type) {\n            GROWABLE_HEAP_I32()[this.ptr + 4 >>> 2] = type;\n          };\n          this.get_type = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + 4 >>> 2];\n          };\n          this.set_destructor = function(destructor) {\n            GROWABLE_HEAP_I32()[this.ptr + 8 >>> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + 8 >>> 2];\n          };\n          this.set_refcount = function(refcount) {\n            GROWABLE_HEAP_I32()[this.ptr >>> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + 12 >>> 0] = caught;\n          };\n          this.get_caught = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + 12 >>> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + 13 >>> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + 13 >>> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            Atomics.add(GROWABLE_HEAP_I32(), this.ptr + 0 >> 2, 1);\n          };\n          this.release_ref = function() {\n            var prev = Atomics.sub(GROWABLE_HEAP_I32(), this.ptr + 0 >> 2, 1);\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().includes(\"EOF\"))\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function zeroMemory(address, size) {\n          GROWABLE_HEAP_U8().fill(0, address, address + size);\n        }\n        function mmapAlloc(size) {\n          size = alignMemory(size, 65536);\n          var ptr = _memalign(65536, size);\n          if (!ptr)\n            return 0;\n          zeroMemory(ptr, size);\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n            parent.timestamp = node.timestamp;\n          }\n          return node;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n          } else {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n          }\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === GROWABLE_HEAP_I8().buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            GROWABLE_HEAP_I8().set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        function asyncLoad(url, onload, onerror, noRunDep) {\n          var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n          readAsync(url, function(arrayBuffer) {\n            assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n            onload(new Uint8Array(arrayBuffer));\n            if (dep)\n              removeRunDependency(dep);\n          }, function(event) {\n            if (onerror) {\n              onerror();\n            } else {\n              throw 'Loading data file \"' + url + '\" failed.';\n            }\n          });\n          if (dep)\n            addRunDependency(dep);\n        }\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.includes(\"r\") && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.includes(current.mount)) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          var proc_self = FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path, allowEmpty) {\n          if (path[0] === \"/\") {\n            return path;\n          }\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream)\n              throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n          }\n          if (path.length == 0) {\n            if (!allowEmpty) {\n              throw new FS.ErrnoError(44);\n            }\n            return dir;\n          }\n          return PATH.join2(dir, path);\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          GROWABLE_HEAP_I32()[buf >>> 2] = stat.dev;\n          GROWABLE_HEAP_I32()[buf + 4 >>> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 8 >>> 2] = stat.ino;\n          GROWABLE_HEAP_I32()[buf + 12 >>> 2] = stat.mode;\n          GROWABLE_HEAP_I32()[buf + 16 >>> 2] = stat.nlink;\n          GROWABLE_HEAP_I32()[buf + 20 >>> 2] = stat.uid;\n          GROWABLE_HEAP_I32()[buf + 24 >>> 2] = stat.gid;\n          GROWABLE_HEAP_I32()[buf + 28 >>> 2] = stat.rdev;\n          GROWABLE_HEAP_I32()[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 40 >>> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 44 >>> 2] = tempI64[1];\n          GROWABLE_HEAP_I32()[buf + 48 >>> 2] = 4096;\n          GROWABLE_HEAP_I32()[buf + 52 >>> 2] = stat.blocks;\n          GROWABLE_HEAP_I32()[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 60 >>> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 68 >>> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 80 >>> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = GROWABLE_HEAP_U8().slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = GROWABLE_HEAP_I8()[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          GROWABLE_HEAP_I8()[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >>> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >>> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = GROWABLE_HEAP_I32()[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_fcntl64(fd, cmd, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(2, 1, fd, cmd, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n              case 0: {\n                var arg = SYSCALLS.get();\n                if (arg < 0) {\n                  return -28;\n                }\n                var newStream;\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\n                return newStream.fd;\n              }\n              case 1:\n              case 2:\n                return 0;\n              case 3:\n                return stream.flags;\n              case 4: {\n                var arg = SYSCALLS.get();\n                stream.flags |= arg;\n                return 0;\n              }\n              case 12: {\n                var arg = SYSCALLS.get();\n                var offset = 0;\n                GROWABLE_HEAP_I16()[arg + offset >>> 1] = 2;\n                return 0;\n              }\n              case 13:\n              case 14:\n                return 0;\n              case 16:\n              case 8:\n                return -28;\n              case 9:\n                setErrNo(28);\n                return -1;\n              default: {\n                return -28;\n              }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_ioctl(fd, op, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(3, 1, fd, op, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                GROWABLE_HEAP_I32()[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(4, 1, path, flags, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = varargs ? SYSCALLS.get() : 0;\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](GROWABLE_HEAP_U32()[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function __embind_register_bigint(primitiveType, name2, size, minRange, maxRange) {\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (GROWABLE_HEAP_U8()[c >>> 0]) {\n            ret += embind_charCodes[GROWABLE_HEAP_U8()[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = GROWABLE_HEAP_I8();\n            } else if (size === 2) {\n              heap = GROWABLE_HEAP_I16();\n            } else if (size === 4) {\n              heap = GROWABLE_HEAP_I32();\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          var f = Module[\"dynCall_\" + sig];\n          return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.includes(\"j\")) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function getDynCaller(sig, ptr) {\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.includes(\"j\")) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(GROWABLE_HEAP_I32()[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (methodName.startsWith(\"@@\")) {\n              methodName = Symbol[methodName.substring(2)];\n            }\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I8() : GROWABLE_HEAP_U8();\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I16() : GROWABLE_HEAP_U16();\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I32() : GROWABLE_HEAP_U32();\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F32()[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F64()[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return GROWABLE_HEAP_I8()[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return GROWABLE_HEAP_U8()[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return GROWABLE_HEAP_I16()[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return GROWABLE_HEAP_U16()[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return GROWABLE_HEAP_I32()[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return GROWABLE_HEAP_U32()[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.includes(\"unsigned\");\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = GROWABLE_HEAP_U32();\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || GROWABLE_HEAP_U8()[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  GROWABLE_HEAP_U8()[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  GROWABLE_HEAP_U8()[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return GROWABLE_HEAP_U16();\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return GROWABLE_HEAP_U32();\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function __emscripten_notify_thread_queue(targetThreadId, mainThreadId) {\n          if (targetThreadId == mainThreadId) {\n            postMessage({ \"cmd\": \"processQueuedMainThreadWork\" });\n          } else if (ENVIRONMENT_IS_PTHREAD) {\n            postMessage({ \"targetThread\": targetThreadId, \"cmd\": \"processThreadQueue\" });\n          } else {\n            var pthread = PThread.pthreads[targetThreadId];\n            var worker = pthread && pthread.worker;\n            if (!worker) {\n              return;\n            }\n            worker.postMessage({ \"cmd\": \"processThreadQueue\" });\n          }\n          return 1;\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          GROWABLE_HEAP_I32()[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(GROWABLE_HEAP_I32()[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var readAsmConstArgsArray = [];\n        function readAsmConstArgs(sigPtr, buf) {\n          readAsmConstArgsArray.length = 0;\n          var ch;\n          buf >>= 2;\n          while (ch = GROWABLE_HEAP_U8()[sigPtr++ >>> 0]) {\n            var double = ch < 105;\n            if (double && buf & 1)\n              buf++;\n            readAsmConstArgsArray.push(double ? GROWABLE_HEAP_F64()[buf++ >>> 1] : GROWABLE_HEAP_I32()[buf >>> 0]);\n            ++buf;\n          }\n          return readAsmConstArgsArray;\n        }\n        function _emscripten_asm_const_int(code, sigPtr, argbuf) {\n          var args = readAsmConstArgs(sigPtr, argbuf);\n          return ASM_CONSTS[code].apply(null, args);\n        }\n        function _emscripten_check_blocking_allowed() {\n          if (ENVIRONMENT_IS_NODE)\n            return;\n          if (ENVIRONMENT_IS_WORKER)\n            return;\n          warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\n        }\n        function _emscripten_conditional_set_current_thread_status(expectedStatus, newStatus) {\n        }\n        function _emscripten_futex_wait(addr, val, timeout) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true)\n            return -28;\n          if (!ENVIRONMENT_IS_WEB) {\n            var ret = Atomics.wait(GROWABLE_HEAP_I32(), addr >> 2, val, timeout);\n            if (ret === \"timed-out\")\n              return -73;\n            if (ret === \"not-equal\")\n              return -6;\n            if (ret === \"ok\")\n              return 0;\n            throw \"Atomics.wait returned an unexpected value \" + ret;\n          } else {\n            if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n              return -6;\n            }\n            var tNow = performance.now();\n            var tEnd = tNow + timeout;\n            var lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, addr);\n            while (1) {\n              tNow = performance.now();\n              if (tNow > tEnd) {\n                lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, 0);\n                return -73;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, 0);\n              if (lastAddr == 0) {\n                break;\n              }\n              _emscripten_main_thread_process_queued_calls();\n              if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n                return -6;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), __emscripten_main_thread_futex >> 2, addr);\n            }\n            return 0;\n          }\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          GROWABLE_HEAP_U8().copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function _emscripten_proxy_to_main_thread_js(index, sync) {\n          var numCallArgs = arguments.length - 2;\n          var stack = stackSave();\n          var serializedNumCallArgs = numCallArgs;\n          var args = stackAlloc(serializedNumCallArgs * 8);\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            var arg = arguments[2 + i];\n            GROWABLE_HEAP_F64()[b + i >>> 0] = arg;\n          }\n          var ret = _emscripten_run_in_main_runtime_thread_js(index, serializedNumCallArgs, args, sync);\n          stackRestore(stack);\n          return ret;\n        }\n        var _emscripten_receive_on_main_thread_js_callArgs = [];\n        function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {\n          _emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            _emscripten_receive_on_main_thread_js_callArgs[i] = GROWABLE_HEAP_F64()[b + i >>> 0];\n          }\n          var isEmAsmConst = index < 0;\n          var func = !isEmAsmConst ? proxiedFunctionTable[index] : ASM_CONSTS[-index - 1];\n          return func.apply(null, _emscripten_receive_on_main_thread_js_callArgs);\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          var oldSize = GROWABLE_HEAP_U8().length;\n          requestedSize = requestedSize >>> 0;\n          if (requestedSize <= oldSize) {\n            return false;\n          }\n          var maxHeapSize = 4294901760;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var JSEvents = { inEventHandler: 0, removeAllEventListeners: function() {\n          for (var i = JSEvents.eventHandlers.length - 1; i >= 0; --i) {\n            JSEvents._removeHandler(i);\n          }\n          JSEvents.eventHandlers = [];\n          JSEvents.deferredCalls = [];\n        }, registerRemoveEventListeners: function() {\n          if (!JSEvents.removeEventListenersRegistered) {\n            __ATEXIT__.push(JSEvents.removeAllEventListeners);\n            JSEvents.removeEventListenersRegistered = true;\n          }\n        }, deferredCalls: [], deferCall: function(targetFunction, precedence, argsList) {\n          function arraysHaveEqualContent(arrA, arrB) {\n            if (arrA.length != arrB.length)\n              return false;\n            for (var i2 in arrA) {\n              if (arrA[i2] != arrB[i2])\n                return false;\n            }\n            return true;\n          }\n          for (var i in JSEvents.deferredCalls) {\n            var call = JSEvents.deferredCalls[i];\n            if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n              return;\n            }\n          }\n          JSEvents.deferredCalls.push({ targetFunction, precedence, argsList });\n          JSEvents.deferredCalls.sort(function(x, y) {\n            return x.precedence < y.precedence;\n          });\n        }, removeDeferredCalls: function(targetFunction) {\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n              JSEvents.deferredCalls.splice(i, 1);\n              --i;\n            }\n          }\n        }, canPerformEventHandlerRequests: function() {\n          return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n        }, runDeferredCalls: function() {\n          if (!JSEvents.canPerformEventHandlerRequests()) {\n            return;\n          }\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            var call = JSEvents.deferredCalls[i];\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n            call.targetFunction.apply(null, call.argsList);\n          }\n        }, eventHandlers: [], removeAllHandlersOnTarget: function(target, eventTypeString) {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == target && (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n              JSEvents._removeHandler(i--);\n            }\n          }\n        }, _removeHandler: function(i) {\n          var h = JSEvents.eventHandlers[i];\n          h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n          JSEvents.eventHandlers.splice(i, 1);\n        }, registerOrRemoveHandler: function(eventHandler) {\n          var jsEventHandler = function jsEventHandler2(event) {\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            JSEvents.runDeferredCalls();\n            eventHandler.handlerFunc(event);\n            JSEvents.runDeferredCalls();\n            --JSEvents.inEventHandler;\n          };\n          if (eventHandler.callbackfunc) {\n            eventHandler.eventListenerFunc = jsEventHandler;\n            eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n            JSEvents.eventHandlers.push(eventHandler);\n            JSEvents.registerRemoveEventListeners();\n          } else {\n            for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n              if (JSEvents.eventHandlers[i].target == eventHandler.target && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n                JSEvents._removeHandler(i--);\n              }\n            }\n          }\n        }, queueEventHandlerOnThread_iiii: function(targetThread, eventHandlerFunc, eventTypeId, eventData, userData) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          GROWABLE_HEAP_I32()[varargs >>> 2] = eventTypeId;\n          GROWABLE_HEAP_I32()[varargs + 4 >>> 2] = eventData;\n          GROWABLE_HEAP_I32()[varargs + 8 >>> 2] = userData;\n          __emscripten_call_on_thread(0, targetThread, 637534208, eventHandlerFunc, eventData, varargs);\n          stackRestore(stackTop);\n        }, getTargetThreadForEventCallback: function(targetThread) {\n          switch (targetThread) {\n            case 1:\n              return 0;\n            case 2:\n              return PThread.currentProxiedOperationCallerThread;\n            default:\n              return targetThread;\n          }\n        }, getNodeNameForTarget: function(target) {\n          if (!target)\n            return \"\";\n          if (target == window)\n            return \"#window\";\n          if (target == screen)\n            return \"#screen\";\n          return target && target.nodeName ? target.nodeName : \"\";\n        }, fullscreenEnabled: function() {\n          return document.fullscreenEnabled || document.webkitFullscreenEnabled;\n        } };\n        function stringToNewUTF8(jsString) {\n          var length = lengthBytesUTF8(jsString) + 1;\n          var cString = _malloc(length);\n          stringToUTF8(jsString, cString, length);\n          return cString;\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          var targetCanvasPtr = 0;\n          if (targetCanvas) {\n            targetCanvasPtr = stringToNewUTF8(targetCanvas);\n          }\n          GROWABLE_HEAP_I32()[varargs >>> 2] = targetCanvasPtr;\n          GROWABLE_HEAP_I32()[varargs + 4 >>> 2] = width;\n          GROWABLE_HEAP_I32()[varargs + 8 >>> 2] = height;\n          __emscripten_call_on_thread(0, targetThread, 657457152, 0, targetCanvasPtr, varargs);\n          stackRestore(stackTop);\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, targetCanvas, width, height) {\n          targetCanvas = targetCanvas ? UTF8ToString(targetCanvas) : \"\";\n          _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height);\n        }\n        function maybeCStringToJsString(cString) {\n          return cString > 2 ? UTF8ToString(cString) : cString;\n        }\n        var specialHTMLTargets = [0, typeof document !== \"undefined\" ? document : 0, typeof window !== \"undefined\" ? window : 0];\n        function findEventTarget(target) {\n          target = maybeCStringToJsString(target);\n          var domElement = specialHTMLTargets[target] || (typeof document !== \"undefined\" ? document.querySelector(target) : void 0);\n          return domElement;\n        }\n        function findCanvasEventTarget(target) {\n          return findEventTarget(target);\n        }\n        function _emscripten_set_canvas_element_size_calling_thread(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas)\n            return -4;\n          if (canvas.canvasSharedPtr) {\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr >>> 2] = width;\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 4 >>> 2] = height;\n          }\n          if (canvas.offscreenCanvas || !canvas.controlTransferredOffscreen) {\n            if (canvas.offscreenCanvas)\n              canvas = canvas.offscreenCanvas;\n            var autoResizeViewport = false;\n            if (canvas.GLctxObject && canvas.GLctxObject.GLctx) {\n              var prevViewport = canvas.GLctxObject.GLctx.getParameter(2978);\n              autoResizeViewport = prevViewport[0] === 0 && prevViewport[1] === 0 && prevViewport[2] === canvas.width && prevViewport[3] === canvas.height;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            if (autoResizeViewport) {\n              canvas.GLctxObject.GLctx.viewport(0, 0, width, height);\n            }\n          } else if (canvas.canvasSharedPtr) {\n            var targetThread = GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 8 >>> 2];\n            _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, target, width, height);\n            return 1;\n          } else {\n            return -4;\n          }\n          return 0;\n        }\n        function _emscripten_set_canvas_element_size_main_thread(target, width, height) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(5, 1, target, width, height);\n          return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n        }\n        function _emscripten_set_canvas_element_size(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (canvas) {\n            return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n          } else {\n            return _emscripten_set_canvas_element_size_main_thread(target, width, height);\n          }\n        }\n        function _emscripten_set_current_thread_status(newStatus) {\n        }\n        function __webgl_enable_ANGLE_instanced_arrays(ctx) {\n          var ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n          if (ext) {\n            ctx[\"vertexAttribDivisor\"] = function(index, divisor) {\n              ext[\"vertexAttribDivisorANGLE\"](index, divisor);\n            };\n            ctx[\"drawArraysInstanced\"] = function(mode, first, count, primcount) {\n              ext[\"drawArraysInstancedANGLE\"](mode, first, count, primcount);\n            };\n            ctx[\"drawElementsInstanced\"] = function(mode, count, type, indices, primcount) {\n              ext[\"drawElementsInstancedANGLE\"](mode, count, type, indices, primcount);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_OES_vertex_array_object(ctx) {\n          var ext = ctx.getExtension(\"OES_vertex_array_object\");\n          if (ext) {\n            ctx[\"createVertexArray\"] = function() {\n              return ext[\"createVertexArrayOES\"]();\n            };\n            ctx[\"deleteVertexArray\"] = function(vao) {\n              ext[\"deleteVertexArrayOES\"](vao);\n            };\n            ctx[\"bindVertexArray\"] = function(vao) {\n              ext[\"bindVertexArrayOES\"](vao);\n            };\n            ctx[\"isVertexArray\"] = function(vao) {\n              return ext[\"isVertexArrayOES\"](vao);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_draw_buffers(ctx) {\n          var ext = ctx.getExtension(\"WEBGL_draw_buffers\");\n          if (ext) {\n            ctx[\"drawBuffers\"] = function(n, bufs) {\n              ext[\"drawBuffersWEBGL\"](n, bufs);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_multi_draw(ctx) {\n          return !!(ctx.multiDrawWebgl = ctx.getExtension(\"WEBGL_multi_draw\"));\n        }\n        var GL = { counter: 1, buffers: [], programs: [], framebuffers: [], renderbuffers: [], textures: [], shaders: [], vaos: [], contexts: {}, offscreenCanvases: {}, queries: [], stringCache: {}, unpackAlignment: 4, recordError: function recordError(errorCode) {\n          if (!GL.lastError) {\n            GL.lastError = errorCode;\n          }\n        }, getNewId: function(table) {\n          var ret = GL.counter++;\n          for (var i = table.length; i < ret; i++) {\n            table[i] = null;\n          }\n          return ret;\n        }, getSource: function(shader, count, string, length) {\n          var source = \"\";\n          for (var i = 0; i < count; ++i) {\n            var len = length ? GROWABLE_HEAP_I32()[length + i * 4 >>> 2] : -1;\n            source += UTF8ToString(GROWABLE_HEAP_I32()[string + i * 4 >>> 2], len < 0 ? void 0 : len);\n          }\n          return source;\n        }, createContext: function(canvas, webGLContextAttributes) {\n          if (!canvas.getContextSafariWebGL2Fixed) {\n            canvas.getContextSafariWebGL2Fixed = canvas.getContext;\n            canvas.getContext = function(ver, attrs) {\n              var gl = canvas.getContextSafariWebGL2Fixed(ver, attrs);\n              return ver == \"webgl\" == gl instanceof WebGLRenderingContext ? gl : null;\n            };\n          }\n          var ctx = canvas.getContext(\"webgl\", webGLContextAttributes);\n          if (!ctx)\n            return 0;\n          var handle = GL.registerContext(ctx, webGLContextAttributes);\n          return handle;\n        }, registerContext: function(ctx, webGLContextAttributes) {\n          var handle = _malloc(8);\n          GROWABLE_HEAP_I32()[handle + 4 >>> 2] = _pthread_self();\n          var context = { handle, attributes: webGLContextAttributes, version: webGLContextAttributes.majorVersion, GLctx: ctx };\n          if (ctx.canvas)\n            ctx.canvas.GLctxObject = context;\n          GL.contexts[handle] = context;\n          if (typeof webGLContextAttributes.enableExtensionsByDefault === \"undefined\" || webGLContextAttributes.enableExtensionsByDefault) {\n            GL.initExtensions(context);\n          }\n          return handle;\n        }, makeContextCurrent: function(contextHandle) {\n          GL.currentContext = GL.contexts[contextHandle];\n          Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx;\n          return !(contextHandle && !GLctx);\n        }, getContext: function(contextHandle) {\n          return GL.contexts[contextHandle];\n        }, deleteContext: function(contextHandle) {\n          if (GL.currentContext === GL.contexts[contextHandle])\n            GL.currentContext = null;\n          if (typeof JSEvents === \"object\")\n            JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n          if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas)\n            GL.contexts[contextHandle].GLctx.canvas.GLctxObject = void 0;\n          _free(GL.contexts[contextHandle].handle);\n          GL.contexts[contextHandle] = null;\n        }, initExtensions: function(context) {\n          if (!context)\n            context = GL.currentContext;\n          if (context.initExtensionsDone)\n            return;\n          context.initExtensionsDone = true;\n          var GLctx2 = context.GLctx;\n          __webgl_enable_ANGLE_instanced_arrays(GLctx2);\n          __webgl_enable_OES_vertex_array_object(GLctx2);\n          __webgl_enable_WEBGL_draw_buffers(GLctx2);\n          {\n            GLctx2.disjointTimerQueryExt = GLctx2.getExtension(\"EXT_disjoint_timer_query\");\n          }\n          __webgl_enable_WEBGL_multi_draw(GLctx2);\n          var exts = GLctx2.getSupportedExtensions() || [];\n          exts.forEach(function(ext) {\n            if (!ext.includes(\"lose_context\") && !ext.includes(\"debug\")) {\n              GLctx2.getExtension(ext);\n            }\n          });\n        } };\n        var __emscripten_webgl_power_preferences = [\"default\", \"low-power\", \"high-performance\"];\n        function _emscripten_webgl_do_create_context(target, attributes) {\n          var a = attributes >> 2;\n          var powerPreference = GROWABLE_HEAP_I32()[a + (24 >> 2) >>> 0];\n          var contextAttributes = { \"alpha\": !!GROWABLE_HEAP_I32()[a + (0 >> 2) >>> 0], \"depth\": !!GROWABLE_HEAP_I32()[a + (4 >> 2) >>> 0], \"stencil\": !!GROWABLE_HEAP_I32()[a + (8 >> 2) >>> 0], \"antialias\": !!GROWABLE_HEAP_I32()[a + (12 >> 2) >>> 0], \"premultipliedAlpha\": !!GROWABLE_HEAP_I32()[a + (16 >> 2) >>> 0], \"preserveDrawingBuffer\": !!GROWABLE_HEAP_I32()[a + (20 >> 2) >>> 0], \"powerPreference\": __emscripten_webgl_power_preferences[powerPreference], \"failIfMajorPerformanceCaveat\": !!GROWABLE_HEAP_I32()[a + (28 >> 2) >>> 0], majorVersion: GROWABLE_HEAP_I32()[a + (32 >> 2) >>> 0], minorVersion: GROWABLE_HEAP_I32()[a + (36 >> 2) >>> 0], enableExtensionsByDefault: GROWABLE_HEAP_I32()[a + (40 >> 2) >>> 0], explicitSwapControl: GROWABLE_HEAP_I32()[a + (44 >> 2) >>> 0], proxyContextToMainThread: GROWABLE_HEAP_I32()[a + (48 >> 2) >>> 0], renderViaOffscreenBackBuffer: GROWABLE_HEAP_I32()[a + (52 >> 2) >>> 0] };\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas) {\n            return 0;\n          }\n          if (contextAttributes.explicitSwapControl) {\n            return 0;\n          }\n          var contextHandle = GL.createContext(canvas, contextAttributes);\n          return contextHandle;\n        }\n        function _emscripten_webgl_create_context(a0, a1) {\n          return _emscripten_webgl_do_create_context(a0, a1);\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              if (ENV[x] === void 0)\n                delete env[x];\n              else\n                env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(6, 1, __environ, environ_buf);\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              GROWABLE_HEAP_I32()[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(7, 1, penviron_count, penviron_buf_size);\n          try {\n            var strings = getEnvStrings();\n            GROWABLE_HEAP_I32()[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            GROWABLE_HEAP_I32()[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(8, 1, fd);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(9, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(10, 1, fd, offset_low, offset_high, whence, newOffset);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[newOffset >>> 2] = tempI64[0], GROWABLE_HEAP_I32()[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(11, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function spawnThread(threadParams) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! spawnThread() can only ever be called from main application thread!\";\n          var worker = PThread.getNewWorker();\n          if (!worker) {\n            return 6;\n          }\n          if (worker.pthread !== void 0)\n            throw \"Internal error!\";\n          if (!threadParams.pthread_ptr)\n            throw \"Internal error, no pthread ptr!\";\n          PThread.runningWorkers.push(worker);\n          var tlsMemory = _malloc(128 * 4);\n          for (var i = 0; i < 128; ++i) {\n            GROWABLE_HEAP_I32()[tlsMemory + i * 4 >>> 2] = 0;\n          }\n          var stackHigh = threadParams.stackBase + threadParams.stackSize;\n          var pthread = PThread.pthreads[threadParams.pthread_ptr] = { worker, stackBase: threadParams.stackBase, stackSize: threadParams.stackSize, allocatedOwnStack: threadParams.allocatedOwnStack, threadInfoStruct: threadParams.pthread_ptr };\n          var tis = pthread.threadInfoStruct >> 2;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (64 >> 2), threadParams.detached);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (100 >> 2), tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (40 >> 2), pthread.threadInfoStruct);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (80 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (76 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 + 8 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 + 12 >> 2), threadParams.detached);\n          var global_libc = _emscripten_get_global_libc();\n          var global_locale = global_libc + 40;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (172 >> 2), global_locale);\n          worker.pthread = pthread;\n          var msg = { \"cmd\": \"run\", \"start_routine\": threadParams.startRoutine, \"arg\": threadParams.arg, \"threadInfoStruct\": threadParams.pthread_ptr, \"stackBase\": threadParams.stackBase, \"stackSize\": threadParams.stackSize };\n          worker.runPthread = function() {\n            msg.time = performance.now();\n            worker.postMessage(msg, threadParams.transferList);\n          };\n          if (worker.loaded) {\n            worker.runPthread();\n            delete worker.runPthread;\n          }\n          return 0;\n        }\n        function _pthread_create(pthread_ptr, attr, start_routine, arg) {\n          if (typeof SharedArrayBuffer === \"undefined\") {\n            err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");\n            return 6;\n          }\n          if (!pthread_ptr) {\n            err(\"pthread_create called with a null thread pointer!\");\n            return 28;\n          }\n          var transferList = [];\n          var error = 0;\n          if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\n            return _emscripten_sync_run_in_main_thread_4(687865856, pthread_ptr, attr, start_routine, arg);\n          }\n          if (error)\n            return error;\n          var stackSize = 0;\n          var stackBase = 0;\n          var detached = 0;\n          if (attr && attr != -1) {\n            stackSize = GROWABLE_HEAP_I32()[attr >>> 2];\n            stackSize += 81920;\n            stackBase = GROWABLE_HEAP_I32()[attr + 8 >>> 2];\n            detached = GROWABLE_HEAP_I32()[attr + 12 >>> 2] !== 0;\n          } else {\n            stackSize = 2097152;\n          }\n          var allocatedOwnStack = stackBase == 0;\n          if (allocatedOwnStack) {\n            stackBase = _memalign(16, stackSize);\n          } else {\n            stackBase -= stackSize;\n            assert(stackBase > 0);\n          }\n          var threadInfoStruct = _malloc(228);\n          for (var i = 0; i < 228 >> 2; ++i)\n            GROWABLE_HEAP_U32()[(threadInfoStruct >> 2) + i >>> 0] = 0;\n          GROWABLE_HEAP_I32()[pthread_ptr >>> 2] = threadInfoStruct;\n          GROWABLE_HEAP_I32()[threadInfoStruct + 12 >>> 2] = threadInfoStruct;\n          var headPtr = threadInfoStruct + 152;\n          GROWABLE_HEAP_I32()[headPtr >>> 2] = headPtr;\n          var threadParams = { stackBase, stackSize, allocatedOwnStack, detached, startRoutine: start_routine, pthread_ptr: threadInfoStruct, arg, transferList };\n          if (ENVIRONMENT_IS_PTHREAD) {\n            threadParams.cmd = \"spawnThread\";\n            postMessage(threadParams, transferList);\n            return 0;\n          }\n          return spawnThread(threadParams);\n        }\n        function _setTempRet0(val) {\n          setTempRet0(val);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = GROWABLE_HEAP_I32()[tm + 40 >>> 2];\n          var date = { tm_sec: GROWABLE_HEAP_I32()[tm >>> 2], tm_min: GROWABLE_HEAP_I32()[tm + 4 >>> 2], tm_hour: GROWABLE_HEAP_I32()[tm + 8 >>> 2], tm_mday: GROWABLE_HEAP_I32()[tm + 12 >>> 2], tm_mon: GROWABLE_HEAP_I32()[tm + 16 >>> 2], tm_year: GROWABLE_HEAP_I32()[tm + 20 >>> 2], tm_wday: GROWABLE_HEAP_I32()[tm + 24 >>> 2], tm_yday: GROWABLE_HEAP_I32()[tm + 28 >>> 2], tm_isdst: GROWABLE_HEAP_I32()[tm + 32 >>> 2], tm_gmtoff: GROWABLE_HEAP_I32()[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.includes(rule)) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        if (!ENVIRONMENT_IS_PTHREAD)\n          PThread.initMainThreadBlock();\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        var GLctx;\n        var proxiedFunctionTable = [null, _atexit, ___sys_fcntl64, ___sys_ioctl, ___sys_open, _emscripten_set_canvas_element_size_main_thread, _environ_get, _environ_sizes_get, _fd_close, _fd_read, _fd_seek, _fd_write];\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        var asmLibraryArg = { \"l\": ___assert_fail, \"B\": ___cxa_allocate_exception, \"ka\": ___cxa_thread_atexit, \"A\": ___cxa_throw, \"D\": ___sys_fcntl64, \"V\": ___sys_ioctl, \"W\": ___sys_open, \"ma\": __embind_finalize_value_array, \"s\": __embind_finalize_value_object, \"O\": __embind_register_bigint, \"ia\": __embind_register_bool, \"v\": __embind_register_class, \"u\": __embind_register_class_constructor, \"c\": __embind_register_class_function, \"ha\": __embind_register_emval, \"la\": __embind_register_enum, \"y\": __embind_register_enum_value, \"J\": __embind_register_float, \"f\": __embind_register_function, \"p\": __embind_register_integer, \"k\": __embind_register_memory_view, \"K\": __embind_register_std_string, \"z\": __embind_register_std_wstring, \"na\": __embind_register_value_array, \"h\": __embind_register_value_array_element, \"t\": __embind_register_value_object, \"e\": __embind_register_value_object_field, \"ja\": __embind_register_void, \"ea\": __emscripten_notify_thread_queue, \"n\": __emval_as, \"L\": __emval_call, \"b\": __emval_decref, \"U\": __emval_get_global, \"o\": __emval_get_property, \"j\": __emval_incref, \"ca\": __emval_instanceof, \"M\": __emval_is_number, \"C\": __emval_new_array, \"g\": __emval_new_cstring, \"w\": __emval_new_object, \"m\": __emval_run_destructors, \"i\": __emval_set_property, \"d\": __emval_take_value, \"I\": _abort, \"T\": _clock_gettime, \"G\": _emscripten_asm_const_int, \"_\": _emscripten_check_blocking_allowed, \"F\": _emscripten_conditional_set_current_thread_status, \"r\": _emscripten_futex_wait, \"q\": _emscripten_futex_wake, \"x\": _emscripten_get_now, \"R\": _emscripten_memcpy_big, \"$\": _emscripten_receive_on_main_thread_js, \"S\": _emscripten_resize_heap, \"aa\": _emscripten_set_canvas_element_size, \"E\": _emscripten_set_current_thread_status, \"ba\": _emscripten_webgl_create_context, \"Y\": _environ_get, \"Z\": _environ_sizes_get, \"H\": _fd_close, \"ga\": _fd_read, \"N\": _fd_seek, \"fa\": _fd_write, \"Q\": initPthreadsJS, \"a\": wasmMemory || Module[\"wasmMemory\"], \"da\": _pthread_create, \"P\": _setTempRet0, \"X\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"oa\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"pa\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments);\n        };\n        var _emscripten_tls_init = Module[\"_emscripten_tls_init\"] = function() {\n          return (_emscripten_tls_init = Module[\"_emscripten_tls_init\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"va\"]).apply(null, arguments);\n        };\n        var _emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = function() {\n          return (_emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments);\n        };\n        var _emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = function() {\n          return (_emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments);\n        };\n        var __emscripten_do_dispatch_to_thread = Module[\"__emscripten_do_dispatch_to_thread\"] = function() {\n          return (__emscripten_do_dispatch_to_thread = Module[\"__emscripten_do_dispatch_to_thread\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = Module[\"asm\"][\"za\"]).apply(null, arguments);\n        };\n        var _emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = function() {\n          return (_emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments);\n        };\n        var _emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = function() {\n          return (_emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments);\n        };\n        var __emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = function() {\n          return (__emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments);\n        };\n        var __emscripten_thread_init = Module[\"__emscripten_thread_init\"] = function() {\n          return (__emscripten_thread_init = Module[\"__emscripten_thread_init\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments);\n        };\n        var _emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = function() {\n          return (_emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments);\n        };\n        var _pthread_self = Module[\"_pthread_self\"] = function() {\n          return (_pthread_self = Module[\"_pthread_self\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments);\n        };\n        var ___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = function() {\n          return (___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments);\n        };\n        var stackSave = Module[\"stackSave\"] = function() {\n          return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments);\n        };\n        var stackRestore = Module[\"stackRestore\"] = function() {\n          return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments);\n        };\n        var stackAlloc = Module[\"stackAlloc\"] = function() {\n          return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments);\n        };\n        var _emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = function() {\n          return (_emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = Module[\"asm\"][\"La\"]).apply(null, arguments);\n        };\n        var _memalign = Module[\"_memalign\"] = function() {\n          return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments);\n        };\n        var __emscripten_allow_main_runtime_queued_calls = Module[\"__emscripten_allow_main_runtime_queued_calls\"] = 44840;\n        var __emscripten_main_thread_futex = Module[\"__emscripten_main_thread_futex\"] = 48292;\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"keepRuntimeAlive\"] = keepRuntimeAlive;\n        Module[\"FS\"] = FS;\n        Module[\"PThread\"] = PThread;\n        Module[\"PThread\"] = PThread;\n        Module[\"wasmMemory\"] = wasmMemory;\n        Module[\"ExitStatus\"] = ExitStatus;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus || e == \"unwind\") {\n              return;\n            }\n            var toLog = e;\n            if (e && typeof e === \"object\" && e.stack) {\n              toLog = [e, e.stack];\n            }\n            err(\"exception thrown: \" + toLog);\n            quit_(1, e);\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          if (ENVIRONMENT_IS_PTHREAD) {\n            readyPromiseResolve(Module);\n            initRuntime();\n            postMessage({ \"cmd\": \"loaded\" });\n            return;\n          }\n          preRun();\n          if (runDependencies > 0) {\n            return;\n          }\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          EXITSTATUS = status;\n          if (!implicit) {\n            if (ENVIRONMENT_IS_PTHREAD) {\n              postMessage({ \"cmd\": \"exitProcess\", \"returnCode\": status });\n              throw new ExitStatus(status);\n            } else {\n            }\n          }\n          if (keepRuntimeAlive()) {\n          } else {\n            PThread.terminateAllThreads();\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          noExitRuntime = false;\n          PThread.initWorker();\n        }\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/web-ifc.js\nvar require_web_ifc = __commonJS({\n  \"dist/web-ifc.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        var ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        var ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          readAsync = function readAsync2(filename, onload, onerror) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            nodeFS[\"readFile\"](filename, function(err2, data) {\n              if (err2)\n                onerror(err2);\n              else\n                onload(data.buffer);\n            });\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status, toThrow) {\n            if (keepRuntimeAlive()) {\n              process[\"exitCode\"] = status;\n              throw toThrow;\n            }\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          {\n            read_ = function(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          HEAP16[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            HEAP32[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          HEAP32[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          HEAP8.set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            HEAP8[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        var runtimeKeepaliveCounter = 0;\n        function keepRuntimeAlive() {\n          return noExitRuntime || runtimeKeepaliveCounter > 0;\n        }\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          FS.ignorePermissions = false;\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n          __ATINIT__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return filename.startsWith(dataURIPrefix);\n        }\n        function isFileURI(filename) {\n          return filename.startsWith(\"file://\");\n        }\n        var wasmBinaryFile;\n        wasmBinaryFile = \"web-ifc.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n          try {\n            if (file == wasmBinaryFile && wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(file);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n            if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                if (!response[\"ok\"]) {\n                  throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n                return response[\"arrayBuffer\"]();\n              }).catch(function() {\n                return getBinary(wasmBinaryFile);\n              });\n            } else {\n              if (readAsync) {\n                return new Promise(function(resolve, reject) {\n                  readAsync(wasmBinaryFile, function(response) {\n                    resolve(new Uint8Array(response));\n                  }, reject);\n                });\n              }\n            }\n          }\n          return Promise.resolve().then(function() {\n            return getBinary(wasmBinaryFile);\n          });\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmMemory = Module[\"asm\"][\"$\"];\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            wasmTable = Module[\"asm\"][\"ha\"];\n            addOnInit(Module[\"asm\"][\"aa\"]);\n            removeRunDependency(\"wasm-instantiate\");\n          }\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiationResult(result) {\n            receiveInstance(result[\"instance\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              var result = WebAssembly.instantiate(binary, info);\n              return result;\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiationResult, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiationResult);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiationResult);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + 16) + 16;\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - 16;\n          this.set_type = function(type) {\n            HEAP32[this.ptr + 4 >>> 2] = type;\n          };\n          this.get_type = function() {\n            return HEAP32[this.ptr + 4 >>> 2];\n          };\n          this.set_destructor = function(destructor) {\n            HEAP32[this.ptr + 8 >>> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return HEAP32[this.ptr + 8 >>> 2];\n          };\n          this.set_refcount = function(refcount) {\n            HEAP32[this.ptr >>> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            HEAP8[this.ptr + 12 >>> 0] = caught;\n          };\n          this.get_caught = function() {\n            return HEAP8[this.ptr + 12 >>> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            HEAP8[this.ptr + 13 >>> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return HEAP8[this.ptr + 13 >>> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            var value = HEAP32[this.ptr >>> 2];\n            HEAP32[this.ptr >>> 2] = value + 1;\n          };\n          this.release_ref = function() {\n            var prev = HEAP32[this.ptr >>> 2];\n            HEAP32[this.ptr >>> 2] = prev - 1;\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        function setErrNo(value) {\n          HEAP32[___errno_location() >>> 2] = value;\n          return value;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().includes(\"EOF\"))\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          abort();\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n            parent.timestamp = node.timestamp;\n          }\n          return node;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n          } else {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n          }\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n          parent.timestamp = Date.now();\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          if (address !== 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            HEAP8.set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        function asyncLoad(url, onload, onerror, noRunDep) {\n          var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n          readAsync(url, function(arrayBuffer) {\n            assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n            onload(new Uint8Array(arrayBuffer));\n            if (dep)\n              removeRunDependency(dep);\n          }, function(event) {\n            if (onerror) {\n              onerror();\n            } else {\n              throw 'Loading data file \"' + url + '\" failed.';\n            }\n          });\n          if (dep)\n            addRunDependency(dep);\n        }\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.includes(\"r\") && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.includes(\"w\") && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.includes(\"x\") && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.includes(current.mount)) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          var proc_self = FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path, allowEmpty) {\n          if (path[0] === \"/\") {\n            return path;\n          }\n          var dir;\n          if (dirfd === -100) {\n            dir = FS.cwd();\n          } else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream)\n              throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n          }\n          if (path.length == 0) {\n            if (!allowEmpty) {\n              throw new FS.ErrnoError(44);\n            }\n            return dir;\n          }\n          return PATH.join2(dir, path);\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          HEAP32[buf >>> 2] = stat.dev;\n          HEAP32[buf + 4 >>> 2] = 0;\n          HEAP32[buf + 8 >>> 2] = stat.ino;\n          HEAP32[buf + 12 >>> 2] = stat.mode;\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\n          HEAP32[buf + 20 >>> 2] = stat.uid;\n          HEAP32[buf + 24 >>> 2] = stat.gid;\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\n          HEAP32[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\n          HEAP32[buf + 48 >>> 2] = 4096;\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          HEAP32[buf + 60 >>> 2] = 0;\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          HEAP32[buf + 68 >>> 2] = 0;\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          HEAP32[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = HEAPU8.slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = HEAP8[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          HEAP8[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_fcntl64(fd, cmd, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (cmd) {\n              case 0: {\n                var arg = SYSCALLS.get();\n                if (arg < 0) {\n                  return -28;\n                }\n                var newStream;\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\n                return newStream.fd;\n              }\n              case 1:\n              case 2:\n                return 0;\n              case 3:\n                return stream.flags;\n              case 4: {\n                var arg = SYSCALLS.get();\n                stream.flags |= arg;\n                return 0;\n              }\n              case 12: {\n                var arg = SYSCALLS.get();\n                var offset = 0;\n                HEAP16[arg + offset >>> 1] = 2;\n                return 0;\n              }\n              case 13:\n              case 14:\n                return 0;\n              case 16:\n              case 8:\n                return -28;\n              case 9:\n                setErrNo(28);\n                return -1;\n              default: {\n                return -28;\n              }\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                HEAP32[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = varargs ? SYSCALLS.get() : 0;\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function __embind_register_bigint(primitiveType, name2, size, minRange, maxRange) {\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (HEAPU8[c >>> 0]) {\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = HEAP8;\n            } else if (size === 2) {\n              heap = HEAP16;\n            } else if (size === 4) {\n              heap = HEAP32;\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          var f = Module[\"dynCall_\" + sig];\n          return args && args.length ? f.apply(null, [ptr].concat(args)) : f.call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.includes(\"j\")) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function getDynCaller(sig, ptr) {\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.includes(\"j\")) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (methodName.startsWith(\"@@\")) {\n              methodName = Symbol[methodName.substring(2)];\n            }\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? HEAP8 : HEAPU8;\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? HEAP16 : HEAPU16;\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? HEAP32 : HEAPU32;\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.includes(\"unsigned\");\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = HEAPU32;\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return HEAPU16;\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return HEAPU32;\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          HEAP32[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          var oldSize = HEAPU8.length;\n          requestedSize = requestedSize >>> 0;\n          var maxHeapSize = 4294901760;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              if (ENV[x] === void 0)\n                delete env[x];\n              else\n                env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          try {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _setTempRet0(val) {\n          setTempRet0(val);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = HEAP32[tm + 40 >>> 2];\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.includes(rule)) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        var asmLibraryArg = { \"y\": ___assert_fail, \"x\": ___cxa_allocate_exception, \"w\": ___cxa_throw, \"A\": ___sys_fcntl64, \"O\": ___sys_ioctl, \"P\": ___sys_open, \"Z\": __embind_finalize_value_array, \"o\": __embind_finalize_value_object, \"J\": __embind_register_bigint, \"W\": __embind_register_bool, \"r\": __embind_register_class, \"q\": __embind_register_class_constructor, \"b\": __embind_register_class_function, \"V\": __embind_register_emval, \"Y\": __embind_register_enum, \"t\": __embind_register_enum_value, \"D\": __embind_register_float, \"e\": __embind_register_function, \"n\": __embind_register_integer, \"j\": __embind_register_memory_view, \"E\": __embind_register_std_string, \"v\": __embind_register_std_wstring, \"_\": __embind_register_value_array, \"g\": __embind_register_value_array_element, \"p\": __embind_register_value_object, \"d\": __embind_register_value_object_field, \"X\": __embind_register_void, \"l\": __emval_as, \"F\": __emval_call, \"a\": __emval_decref, \"H\": __emval_get_global, \"m\": __emval_get_property, \"i\": __emval_incref, \"L\": __emval_instanceof, \"G\": __emval_is_number, \"z\": __emval_new_array, \"f\": __emval_new_cstring, \"s\": __emval_new_object, \"k\": __emval_run_destructors, \"h\": __emval_set_property, \"c\": __emval_take_value, \"C\": _abort, \"N\": _clock_gettime, \"M\": _emscripten_memcpy_big, \"u\": _emscripten_resize_heap, \"R\": _environ_get, \"S\": _environ_sizes_get, \"B\": _fd_close, \"U\": _fd_read, \"I\": _fd_seek, \"T\": _fd_write, \"K\": _setTempRet0, \"Q\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"la\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments);\n        };\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus || e == \"unwind\") {\n              return;\n            }\n            var toLog = e;\n            if (e && typeof e === \"object\" && e.stack) {\n              toLog = [e, e.stack];\n            }\n            err(\"exception thrown: \" + toLog);\n            quit_(1, e);\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0) {\n            return;\n          }\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          EXITSTATUS = status;\n          if (keepRuntimeAlive()) {\n          } else {\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/ifc2x4.ts\nvar IFCACTIONREQUEST = 3821786052;\nvar IFCACTOR = 2296667514;\nvar IFCACTORROLE = 3630933823;\nvar IFCACTUATOR = 4288193352;\nvar IFCACTUATORTYPE = 2874132201;\nvar IFCADDRESS = 618182010;\nvar IFCADVANCEDBREP = 1635779807;\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\nvar IFCADVANCEDFACE = 3406155212;\nvar IFCAIRTERMINAL = 1634111441;\nvar IFCAIRTERMINALBOX = 177149247;\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\nvar IFCAIRTERMINALTYPE = 3352864051;\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\nvar IFCALARM = 3087945054;\nvar IFCALARMTYPE = 3001207471;\nvar IFCALIGNMENT = 325726236;\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\nvar IFCALIGNMENT2DVERTICAL = 53199957;\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\nvar IFCALIGNMENTCURVE = 3512275521;\nvar IFCANNOTATION = 1674181508;\nvar IFCANNOTATIONFILLAREA = 669184980;\nvar IFCAPPLICATION = 639542469;\nvar IFCAPPLIEDVALUE = 411424972;\nvar IFCAPPROVAL = 130549933;\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\nvar IFCASSET = 3460190687;\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\nvar IFCAXIS1PLACEMENT = 4261334040;\nvar IFCAXIS2PLACEMENT2D = 3125803723;\nvar IFCAXIS2PLACEMENT3D = 2740243338;\nvar IFCBSPLINECURVE = 1967976161;\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\nvar IFCBSPLINESURFACE = 2887950389;\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\nvar IFCBEAM = 753842376;\nvar IFCBEAMSTANDARDCASE = 2906023776;\nvar IFCBEAMTYPE = 819618141;\nvar IFCBEARING = 4196446775;\nvar IFCBEARINGTYPE = 3649138523;\nvar IFCBLOBTEXTURE = 616511568;\nvar IFCBLOCK = 1334484129;\nvar IFCBOILER = 32344328;\nvar IFCBOILERTYPE = 231477066;\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\nvar IFCBOOLEANRESULT = 2736907675;\nvar IFCBOUNDARYCONDITION = 4037036970;\nvar IFCBOUNDARYCURVE = 1136057603;\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\nvar IFCBOUNDARYFACECONDITION = 3367102660;\nvar IFCBOUNDARYNODECONDITION = 1387855156;\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\nvar IFCBOUNDEDCURVE = 1260505505;\nvar IFCBOUNDEDSURFACE = 4182860854;\nvar IFCBOUNDINGBOX = 2581212453;\nvar IFCBOXEDHALFSPACE = 2713105998;\nvar IFCBRIDGE = 644574406;\nvar IFCBRIDGEPART = 963979645;\nvar IFCBUILDING = 4031249490;\nvar IFCBUILDINGELEMENT = 3299480353;\nvar IFCBUILDINGELEMENTPART = 2979338954;\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\nvar IFCBUILDINGSTOREY = 3124254112;\nvar IFCBUILDINGSYSTEM = 1177604601;\nvar IFCBURNER = 2938176219;\nvar IFCBURNERTYPE = 2188180465;\nvar IFCCSHAPEPROFILEDEF = 2898889636;\nvar IFCCABLECARRIERFITTING = 635142910;\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\nvar IFCCABLECARRIERSEGMENT = 3758799889;\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\nvar IFCCABLEFITTING = 1051757585;\nvar IFCCABLEFITTINGTYPE = 2674252688;\nvar IFCCABLESEGMENT = 4217484030;\nvar IFCCABLESEGMENTTYPE = 1285652485;\nvar IFCCAISSONFOUNDATION = 3999819293;\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\nvar IFCCARTESIANPOINT = 1123145078;\nvar IFCCARTESIANPOINTLIST = 574549367;\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\nvar IFCCHILLER = 3902619387;\nvar IFCCHILLERTYPE = 2951183804;\nvar IFCCHIMNEY = 3296154744;\nvar IFCCHIMNEYTYPE = 2197970202;\nvar IFCCIRCLE = 2611217952;\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\nvar IFCCIRCLEPROFILEDEF = 1383045692;\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\nvar IFCCIVILELEMENT = 1677625105;\nvar IFCCIVILELEMENTTYPE = 3893394355;\nvar IFCCLASSIFICATION = 747523909;\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\nvar IFCCLOSEDSHELL = 2205249479;\nvar IFCCOIL = 639361253;\nvar IFCCOILTYPE = 2301859152;\nvar IFCCOLOURRGB = 776857604;\nvar IFCCOLOURRGBLIST = 3285139300;\nvar IFCCOLOURSPECIFICATION = 3264961684;\nvar IFCCOLUMN = 843113511;\nvar IFCCOLUMNSTANDARDCASE = 905975707;\nvar IFCCOLUMNTYPE = 300633059;\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\nvar IFCCOMPLEXPROPERTY = 2542286263;\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\nvar IFCCOMPOSITECURVE = 3732776249;\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\nvar IFCCOMPRESSOR = 3571504051;\nvar IFCCOMPRESSORTYPE = 3850581409;\nvar IFCCONDENSER = 2272882330;\nvar IFCCONDENSERTYPE = 2816379211;\nvar IFCCONIC = 2510884976;\nvar IFCCONNECTEDFACESET = 370225590;\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\nvar IFCCONNECTIONGEOMETRY = 2859738748;\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\nvar IFCCONSTRAINT = 1959218052;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\nvar IFCCONTEXT = 3419103109;\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\nvar IFCCONTROL = 3293443760;\nvar IFCCONTROLLER = 25142252;\nvar IFCCONTROLLERTYPE = 578613899;\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\nvar IFCCOOLEDBEAM = 4136498852;\nvar IFCCOOLEDBEAMTYPE = 335055490;\nvar IFCCOOLINGTOWER = 3640358203;\nvar IFCCOOLINGTOWERTYPE = 2954562838;\nvar IFCCOORDINATEOPERATION = 1785450214;\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\nvar IFCCOSTITEM = 3895139033;\nvar IFCCOSTSCHEDULE = 1419761937;\nvar IFCCOSTVALUE = 602808272;\nvar IFCCOVERING = 1973544240;\nvar IFCCOVERINGTYPE = 1916426348;\nvar IFCCREWRESOURCE = 3295246426;\nvar IFCCREWRESOURCETYPE = 1815067380;\nvar IFCCSGPRIMITIVE3D = 2506170314;\nvar IFCCSGSOLID = 2147822146;\nvar IFCCURRENCYRELATIONSHIP = 539742890;\nvar IFCCURTAINWALL = 3495092785;\nvar IFCCURTAINWALLTYPE = 1457835157;\nvar IFCCURVE = 2601014836;\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\nvar IFCCURVESEGMENT2D = 1186437898;\nvar IFCCURVESTYLE = 3800577675;\nvar IFCCURVESTYLEFONT = 1105321065;\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\nvar IFCCYLINDRICALSURFACE = 1213902940;\nvar IFCDAMPER = 4074379575;\nvar IFCDAMPERTYPE = 3961806047;\nvar IFCDEEPFOUNDATION = 3426335179;\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\nvar IFCDERIVEDPROFILEDEF = 3632507154;\nvar IFCDERIVEDUNIT = 1765591967;\nvar IFCDERIVEDUNITELEMENT = 1045800335;\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\nvar IFCDIRECTION = 32440307;\nvar IFCDISCRETEACCESSORY = 1335981549;\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\nvar IFCDISTANCEEXPRESSION = 1945343521;\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\nvar IFCDISTRIBUTIONPORT = 3041715199;\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\nvar IFCDOCUMENTINFORMATION = 1154170062;\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\nvar IFCDOCUMENTREFERENCE = 3732053477;\nvar IFCDOOR = 395920057;\nvar IFCDOORLININGPROPERTIES = 2963535650;\nvar IFCDOORPANELPROPERTIES = 1714330368;\nvar IFCDOORSTANDARDCASE = 3242481149;\nvar IFCDOORSTYLE = 526551008;\nvar IFCDOORTYPE = 2323601079;\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\nvar IFCDUCTFITTING = 342316401;\nvar IFCDUCTFITTINGTYPE = 869906466;\nvar IFCDUCTSEGMENT = 3518393246;\nvar IFCDUCTSEGMENTTYPE = 3760055223;\nvar IFCDUCTSILENCER = 1360408905;\nvar IFCDUCTSILENCERTYPE = 2030761528;\nvar IFCEDGE = 3900360178;\nvar IFCEDGECURVE = 476780140;\nvar IFCEDGELOOP = 1472233963;\nvar IFCELECTRICAPPLIANCE = 1904799276;\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\nvar IFCELECTRICGENERATOR = 264262732;\nvar IFCELECTRICGENERATORTYPE = 1534661035;\nvar IFCELECTRICMOTOR = 402227799;\nvar IFCELECTRICMOTORTYPE = 1217240411;\nvar IFCELECTRICTIMECONTROL = 1003880860;\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\nvar IFCELEMENT = 1758889154;\nvar IFCELEMENTASSEMBLY = 4123344466;\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\nvar IFCELEMENTCOMPONENT = 1623761950;\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\nvar IFCELEMENTQUANTITY = 1883228015;\nvar IFCELEMENTTYPE = 339256511;\nvar IFCELEMENTARYSURFACE = 2777663545;\nvar IFCELLIPSE = 1704287377;\nvar IFCELLIPSEPROFILEDEF = 2835456948;\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\nvar IFCENGINE = 2814081492;\nvar IFCENGINETYPE = 132023988;\nvar IFCEVAPORATIVECOOLER = 3747195512;\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\nvar IFCEVAPORATOR = 484807127;\nvar IFCEVAPORATORTYPE = 3390157468;\nvar IFCEVENT = 4148101412;\nvar IFCEVENTTIME = 211053100;\nvar IFCEVENTTYPE = 4024345920;\nvar IFCEXTENDEDPROPERTIES = 297599258;\nvar IFCEXTERNALINFORMATION = 4294318154;\nvar IFCEXTERNALREFERENCE = 3200245327;\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\nvar IFCEXTRUDEDAREASOLID = 477187591;\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\nvar IFCFACE = 2556980723;\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\nvar IFCFACEBOUND = 1809719519;\nvar IFCFACEOUTERBOUND = 803316827;\nvar IFCFACESURFACE = 3008276851;\nvar IFCFACETEDBREP = 807026263;\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\nvar IFCFACILITY = 24185140;\nvar IFCFACILITYPART = 1310830890;\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\nvar IFCFAN = 3415622556;\nvar IFCFANTYPE = 346874300;\nvar IFCFASTENER = 647756555;\nvar IFCFASTENERTYPE = 2489546625;\nvar IFCFEATUREELEMENT = 2827207264;\nvar IFCFEATUREELEMENTADDITION = 2143335405;\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\nvar IFCFILLAREASTYLE = 738692330;\nvar IFCFILLAREASTYLEHATCHING = 374418227;\nvar IFCFILLAREASTYLETILES = 315944413;\nvar IFCFILTER = 819412036;\nvar IFCFILTERTYPE = 1810631287;\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\nvar IFCFLOWCONTROLLER = 2058353004;\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\nvar IFCFLOWFITTING = 4278956645;\nvar IFCFLOWFITTINGTYPE = 3198132628;\nvar IFCFLOWINSTRUMENT = 182646315;\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\nvar IFCFLOWMETER = 2188021234;\nvar IFCFLOWMETERTYPE = 3815607619;\nvar IFCFLOWMOVINGDEVICE = 3132237377;\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\nvar IFCFLOWSEGMENT = 987401354;\nvar IFCFLOWSEGMENTTYPE = 1834744321;\nvar IFCFLOWSTORAGEDEVICE = 707683696;\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\nvar IFCFLOWTERMINAL = 2223149337;\nvar IFCFLOWTERMINALTYPE = 2297155007;\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\nvar IFCFOOTING = 900683007;\nvar IFCFOOTINGTYPE = 1893162501;\nvar IFCFURNISHINGELEMENT = 263784265;\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\nvar IFCFURNITURE = 1509553395;\nvar IFCFURNITURETYPE = 1268542332;\nvar IFCGEOGRAPHICELEMENT = 3493046030;\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\nvar IFCGEOMETRICCURVESET = 987898635;\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\nvar IFCGEOMETRICSET = 3590301190;\nvar IFCGRID = 3009204131;\nvar IFCGRIDAXIS = 852622518;\nvar IFCGRIDPLACEMENT = 178086475;\nvar IFCGROUP = 2706460486;\nvar IFCHALFSPACESOLID = 812098782;\nvar IFCHEATEXCHANGER = 3319311131;\nvar IFCHEATEXCHANGERTYPE = 1251058090;\nvar IFCHUMIDIFIER = 2068733104;\nvar IFCHUMIDIFIERTYPE = 1806887404;\nvar IFCISHAPEPROFILEDEF = 1484403080;\nvar IFCIMAGETEXTURE = 3905492369;\nvar IFCINDEXEDCOLOURMAP = 3570813810;\nvar IFCINDEXEDPOLYCURVE = 2571569899;\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\nvar IFCINTERCEPTOR = 4175244083;\nvar IFCINTERCEPTORTYPE = 3946677679;\nvar IFCINTERSECTIONCURVE = 3113134337;\nvar IFCINVENTORY = 2391368822;\nvar IFCIRREGULARTIMESERIES = 3741457305;\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\nvar IFCJUNCTIONBOX = 2176052936;\nvar IFCJUNCTIONBOXTYPE = 4288270099;\nvar IFCLSHAPEPROFILEDEF = 572779678;\nvar IFCLABORRESOURCE = 3827777499;\nvar IFCLABORRESOURCETYPE = 428585644;\nvar IFCLAGTIME = 1585845231;\nvar IFCLAMP = 76236018;\nvar IFCLAMPTYPE = 1051575348;\nvar IFCLIBRARYINFORMATION = 2655187982;\nvar IFCLIBRARYREFERENCE = 3452421091;\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\nvar IFCLIGHTFIXTURE = 629592764;\nvar IFCLIGHTFIXTURETYPE = 1161773419;\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\nvar IFCLIGHTSOURCE = 1402838566;\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\nvar IFCLIGHTSOURCESPOT = 3422422726;\nvar IFCLINE = 1281925730;\nvar IFCLINESEGMENT2D = 3092502836;\nvar IFCLINEARPLACEMENT = 388784114;\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\nvar IFCLOCALPLACEMENT = 2624227202;\nvar IFCLOOP = 1008929658;\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\nvar IFCMAPCONVERSION = 3057273783;\nvar IFCMAPPEDITEM = 2347385850;\nvar IFCMATERIAL = 1838606355;\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\nvar IFCMATERIALCONSTITUENT = 3708119e3;\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\nvar IFCMATERIALDEFINITION = 760658860;\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\nvar IFCMATERIALLAYER = 248100487;\nvar IFCMATERIALLAYERSET = 3303938423;\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\nvar IFCMATERIALLIST = 2199411900;\nvar IFCMATERIALPROFILE = 2235152071;\nvar IFCMATERIALPROFILESET = 164193824;\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\nvar IFCMATERIALPROPERTIES = 3265635763;\nvar IFCMATERIALRELATIONSHIP = 853536259;\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\nvar IFCMEASUREWITHUNIT = 2597039031;\nvar IFCMECHANICALFASTENER = 377706215;\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\nvar IFCMEDICALDEVICE = 1437502449;\nvar IFCMEDICALDEVICETYPE = 1114901282;\nvar IFCMEMBER = 1073191201;\nvar IFCMEMBERSTANDARDCASE = 1911478936;\nvar IFCMEMBERTYPE = 3181161470;\nvar IFCMETRIC = 3368373690;\nvar IFCMIRROREDPROFILEDEF = 2998442950;\nvar IFCMONETARYUNIT = 2706619895;\nvar IFCMOTORCONNECTION = 2474470126;\nvar IFCMOTORCONNECTIONTYPE = 977012517;\nvar IFCNAMEDUNIT = 1918398963;\nvar IFCOBJECT = 3888040117;\nvar IFCOBJECTDEFINITION = 219451334;\nvar IFCOBJECTPLACEMENT = 3701648758;\nvar IFCOBJECTIVE = 2251480897;\nvar IFCOCCUPANT = 4143007308;\nvar IFCOFFSETCURVE = 590820931;\nvar IFCOFFSETCURVE2D = 3388369263;\nvar IFCOFFSETCURVE3D = 3505215534;\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\nvar IFCOPENSHELL = 2665983363;\nvar IFCOPENINGELEMENT = 3588315303;\nvar IFCOPENINGSTANDARDCASE = 3079942009;\nvar IFCORGANIZATION = 4251960020;\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\nvar IFCORIENTATIONEXPRESSION = 643959842;\nvar IFCORIENTEDEDGE = 1029017970;\nvar IFCOUTERBOUNDARYCURVE = 144952367;\nvar IFCOUTLET = 3694346114;\nvar IFCOUTLETTYPE = 2837617999;\nvar IFCOWNERHISTORY = 1207048766;\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\nvar IFCPATH = 2519244187;\nvar IFCPCURVE = 1682466193;\nvar IFCPERFORMANCEHISTORY = 2382730787;\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\nvar IFCPERMIT = 3327091369;\nvar IFCPERSON = 2077209135;\nvar IFCPERSONANDORGANIZATION = 101040310;\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\nvar IFCPHYSICALQUANTITY = 2483315170;\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\nvar IFCPILE = 1687234759;\nvar IFCPILETYPE = 1158309216;\nvar IFCPIPEFITTING = 310824031;\nvar IFCPIPEFITTINGTYPE = 804291784;\nvar IFCPIPESEGMENT = 3612865200;\nvar IFCPIPESEGMENTTYPE = 4231323485;\nvar IFCPIXELTEXTURE = 597895409;\nvar IFCPLACEMENT = 2004835150;\nvar IFCPLANARBOX = 603570806;\nvar IFCPLANAREXTENT = 1663979128;\nvar IFCPLANE = 220341763;\nvar IFCPLATE = 3171933400;\nvar IFCPLATESTANDARDCASE = 1156407060;\nvar IFCPLATETYPE = 4017108033;\nvar IFCPOINT = 2067069095;\nvar IFCPOINTONCURVE = 4022376103;\nvar IFCPOINTONSURFACE = 1423911732;\nvar IFCPOLYLOOP = 2924175390;\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\nvar IFCPOLYGONALFACESET = 2839578677;\nvar IFCPOLYLINE = 3724593414;\nvar IFCPORT = 3740093272;\nvar IFCPOSITIONINGELEMENT = 1946335990;\nvar IFCPOSTALADDRESS = 3355820592;\nvar IFCPREDEFINEDCOLOUR = 759155922;\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\nvar IFCPREDEFINEDITEM = 3727388367;\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\nvar IFCPRESENTATIONITEM = 677532197;\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\nvar IFCPRESENTATIONSTYLE = 3119450353;\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\nvar IFCPROCEDURE = 2744685151;\nvar IFCPROCEDURETYPE = 569719735;\nvar IFCPROCESS = 2945172077;\nvar IFCPRODUCT = 4208778838;\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\nvar IFCPRODUCTREPRESENTATION = 2095639259;\nvar IFCPROFILEDEF = 3958567839;\nvar IFCPROFILEPROPERTIES = 2802850158;\nvar IFCPROJECT = 103090709;\nvar IFCPROJECTLIBRARY = 653396225;\nvar IFCPROJECTORDER = 2904328755;\nvar IFCPROJECTEDCRS = 3843373140;\nvar IFCPROJECTIONELEMENT = 3651124850;\nvar IFCPROPERTY = 2598011224;\nvar IFCPROPERTYABSTRACTION = 986844984;\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\nvar IFCPROPERTYDEFINITION = 1680319473;\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\nvar IFCPROPERTYENUMERATION = 3710013099;\nvar IFCPROPERTYLISTVALUE = 2752243245;\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\nvar IFCPROPERTYSET = 1451395588;\nvar IFCPROPERTYSETDEFINITION = 3357820518;\nvar IFCPROPERTYSETTEMPLATE = 492091185;\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\nvar IFCPROPERTYTABLEVALUE = 110355661;\nvar IFCPROPERTYTEMPLATE = 3521284610;\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\nvar IFCPROTECTIVEDEVICE = 738039164;\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\nvar IFCPROXY = 3219374653;\nvar IFCPUMP = 90941305;\nvar IFCPUMPTYPE = 2250791053;\nvar IFCQUANTITYAREA = 2044713172;\nvar IFCQUANTITYCOUNT = 2093928680;\nvar IFCQUANTITYLENGTH = 931644368;\nvar IFCQUANTITYSET = 2090586900;\nvar IFCQUANTITYTIME = 3252649465;\nvar IFCQUANTITYVOLUME = 2405470396;\nvar IFCQUANTITYWEIGHT = 825690147;\nvar IFCRAILING = 2262370178;\nvar IFCRAILINGTYPE = 2893384427;\nvar IFCRAMP = 3024970846;\nvar IFCRAMPFLIGHT = 3283111854;\nvar IFCRAMPFLIGHTTYPE = 2324767716;\nvar IFCRAMPTYPE = 1469900589;\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\nvar IFCRECTANGULARPYRAMID = 2798486643;\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\nvar IFCRECURRENCEPATTERN = 3915482550;\nvar IFCREFERENCE = 2433181523;\nvar IFCREFERENT = 4021432810;\nvar IFCREGULARTIMESERIES = 3413951693;\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\nvar IFCREINFORCINGBAR = 979691226;\nvar IFCREINFORCINGBARTYPE = 2572171363;\nvar IFCREINFORCINGELEMENT = 3027567501;\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\nvar IFCREINFORCINGMESH = 2320036040;\nvar IFCREINFORCINGMESHTYPE = 2310774935;\nvar IFCRELAGGREGATES = 160246688;\nvar IFCRELASSIGNS = 3939117080;\nvar IFCRELASSIGNSTOACTOR = 1683148259;\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\nvar IFCRELASSIGNSTOGROUP = 1307041759;\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\nvar IFCRELASSIGNSTORESOURCE = 205026976;\nvar IFCRELASSOCIATES = 1865459582;\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\nvar IFCRELCONNECTS = 826625072;\nvar IFCRELCONNECTSELEMENTS = 1204542856;\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\nvar IFCRELCONNECTSPORTS = 3190031847;\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\nvar IFCRELCOVERSSPACES = 2802773753;\nvar IFCRELDECLARES = 2565941209;\nvar IFCRELDECOMPOSES = 2551354335;\nvar IFCRELDEFINES = 693640335;\nvar IFCRELDEFINESBYOBJECT = 1462361463;\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\nvar IFCRELDEFINESBYTYPE = 781010003;\nvar IFCRELFILLSELEMENT = 3940055652;\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\nvar IFCRELINTERFERESELEMENTS = 427948657;\nvar IFCRELNESTS = 3268803585;\nvar IFCRELPOSITIONS = 1441486842;\nvar IFCRELPROJECTSELEMENT = 750771296;\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\nvar IFCRELSEQUENCE = 4122056220;\nvar IFCRELSERVICESBUILDINGS = 366585022;\nvar IFCRELSPACEBOUNDARY = 3451746338;\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\nvar IFCRELVOIDSELEMENT = 1401173127;\nvar IFCRELATIONSHIP = 478536968;\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\nvar IFCREPRESENTATION = 1076942058;\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\nvar IFCREPRESENTATIONITEM = 3008791417;\nvar IFCREPRESENTATIONMAP = 1660063152;\nvar IFCRESOURCE = 2914609552;\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\nvar IFCRESOURCETIME = 1042787934;\nvar IFCREVOLVEDAREASOLID = 1856042241;\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\nvar IFCRIGHTCIRCULARCONE = 4158566097;\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\nvar IFCROOF = 2016517767;\nvar IFCROOFTYPE = 2781568857;\nvar IFCROOT = 2341007311;\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\nvar IFCSIUNIT = 448429030;\nvar IFCSANITARYTERMINAL = 3053780830;\nvar IFCSANITARYTERMINALTYPE = 1768891740;\nvar IFCSCHEDULINGTIME = 1054537805;\nvar IFCSEAMCURVE = 2157484638;\nvar IFCSECTIONPROPERTIES = 2042790032;\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\nvar IFCSECTIONEDSOLID = 1862484736;\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\nvar IFCSECTIONEDSPINE = 1509187699;\nvar IFCSENSOR = 4086658281;\nvar IFCSENSORTYPE = 1783015770;\nvar IFCSHADINGDEVICE = 1329646415;\nvar IFCSHADINGDEVICETYPE = 4074543187;\nvar IFCSHAPEASPECT = 867548509;\nvar IFCSHAPEMODEL = 3982875396;\nvar IFCSHAPEREPRESENTATION = 4240577450;\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\nvar IFCSIMPLEPROPERTY = 3692461612;\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\nvar IFCSITE = 4097777520;\nvar IFCSLAB = 1529196076;\nvar IFCSLABELEMENTEDCASE = 3127900445;\nvar IFCSLABSTANDARDCASE = 3027962421;\nvar IFCSLABTYPE = 2533589738;\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\nvar IFCSOLARDEVICE = 3420628829;\nvar IFCSOLARDEVICETYPE = 1072016465;\nvar IFCSOLIDMODEL = 723233188;\nvar IFCSPACE = 3856911033;\nvar IFCSPACEHEATER = 1999602285;\nvar IFCSPACEHEATERTYPE = 1305183839;\nvar IFCSPACETYPE = 3812236995;\nvar IFCSPATIALELEMENT = 1412071761;\nvar IFCSPATIALELEMENTTYPE = 710998568;\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\nvar IFCSPATIALZONE = 463610769;\nvar IFCSPATIALZONETYPE = 2481509218;\nvar IFCSPHERE = 451544542;\nvar IFCSPHERICALSURFACE = 4015995234;\nvar IFCSTACKTERMINAL = 1404847402;\nvar IFCSTACKTERMINALTYPE = 3112655638;\nvar IFCSTAIR = 331165859;\nvar IFCSTAIRFLIGHT = 4252922144;\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\nvar IFCSTAIRTYPE = 338393293;\nvar IFCSTRUCTURALACTION = 682877961;\nvar IFCSTRUCTURALACTIVITY = 3544373492;\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\nvar IFCSTRUCTURALCONNECTION = 1179482911;\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\nvar IFCSTRUCTURALITEM = 3136571912;\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\nvar IFCSTRUCTURALLOAD = 2162789131;\nvar IFCSTRUCTURALLOADCASE = 385403989;\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\nvar IFCSTRUCTURALMEMBER = 530289379;\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\nvar IFCSTRUCTURALREACTION = 3689010777;\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\nvar IFCSTYLEMODEL = 2830218821;\nvar IFCSTYLEDITEM = 3958052878;\nvar IFCSTYLEDREPRESENTATION = 3049322572;\nvar IFCSUBCONTRACTRESOURCE = 148013059;\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\nvar IFCSUBEDGE = 2233826070;\nvar IFCSURFACE = 2513912981;\nvar IFCSURFACECURVE = 699246055;\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\nvar IFCSURFACEFEATURE = 3101698114;\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\nvar IFCSURFACEOFREVOLUTION = 4124788165;\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\nvar IFCSURFACESTYLE = 1300840506;\nvar IFCSURFACESTYLELIGHTING = 3303107099;\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\nvar IFCSURFACESTYLERENDERING = 1878645084;\nvar IFCSURFACESTYLESHADING = 846575682;\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\nvar IFCSURFACETEXTURE = 626085974;\nvar IFCSWEPTAREASOLID = 2247615214;\nvar IFCSWEPTDISKSOLID = 1260650574;\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\nvar IFCSWEPTSURFACE = 230924584;\nvar IFCSWITCHINGDEVICE = 1162798199;\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\nvar IFCSYSTEM = 2254336722;\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\nvar IFCTSHAPEPROFILEDEF = 3071757647;\nvar IFCTABLE = 985171141;\nvar IFCTABLECOLUMN = 2043862942;\nvar IFCTABLEROW = 531007025;\nvar IFCTANK = 812556717;\nvar IFCTANKTYPE = 5716631;\nvar IFCTASK = 3473067441;\nvar IFCTASKTIME = 1549132990;\nvar IFCTASKTIMERECURRING = 2771591690;\nvar IFCTASKTYPE = 3206491090;\nvar IFCTELECOMADDRESS = 912023232;\nvar IFCTENDON = 3824725483;\nvar IFCTENDONANCHOR = 2347447852;\nvar IFCTENDONANCHORTYPE = 3081323446;\nvar IFCTENDONCONDUIT = 3663046924;\nvar IFCTENDONCONDUITTYPE = 2281632017;\nvar IFCTENDONTYPE = 2415094496;\nvar IFCTESSELLATEDFACESET = 2387106220;\nvar IFCTESSELLATEDITEM = 901063453;\nvar IFCTEXTLITERAL = 4282788508;\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\nvar IFCTEXTSTYLE = 1447204868;\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\nvar IFCTEXTURECOORDINATE = 280115917;\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\nvar IFCTEXTUREMAP = 2552916305;\nvar IFCTEXTUREVERTEX = 1210645708;\nvar IFCTEXTUREVERTEXLIST = 3611470254;\nvar IFCTIMEPERIOD = 1199560280;\nvar IFCTIMESERIES = 3101149627;\nvar IFCTIMESERIESVALUE = 581633288;\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\nvar IFCTOROIDALSURFACE = 1935646853;\nvar IFCTRANSFORMER = 3825984169;\nvar IFCTRANSFORMERTYPE = 1692211062;\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\nvar IFCTRANSPORTELEMENT = 1620046519;\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\nvar IFCTRIANGULATEDFACESET = 2916149573;\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\nvar IFCTRIMMEDCURVE = 3593883385;\nvar IFCTUBEBUNDLE = 3026737570;\nvar IFCTUBEBUNDLETYPE = 1600972822;\nvar IFCTYPEOBJECT = 1628702193;\nvar IFCTYPEPROCESS = 3736923433;\nvar IFCTYPEPRODUCT = 2347495698;\nvar IFCTYPERESOURCE = 3698973494;\nvar IFCUSHAPEPROFILEDEF = 427810014;\nvar IFCUNITASSIGNMENT = 180925521;\nvar IFCUNITARYCONTROLELEMENT = 630975310;\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\nvar IFCUNITARYEQUIPMENT = 4292641817;\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\nvar IFCVALVE = 4207607924;\nvar IFCVALVETYPE = 728799441;\nvar IFCVECTOR = 1417489154;\nvar IFCVERTEX = 2799835756;\nvar IFCVERTEXLOOP = 2759199220;\nvar IFCVERTEXPOINT = 1907098498;\nvar IFCVIBRATIONDAMPER = 1530820697;\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\nvar IFCVIBRATIONISOLATOR = 2391383451;\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\nvar IFCVIRTUALELEMENT = 2769231204;\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\nvar IFCVOIDINGFEATURE = 926996030;\nvar IFCWALL = 2391406946;\nvar IFCWALLELEMENTEDCASE = 4156078855;\nvar IFCWALLSTANDARDCASE = 3512223829;\nvar IFCWALLTYPE = 1898987631;\nvar IFCWASTETERMINAL = 4237592921;\nvar IFCWASTETERMINALTYPE = 1133259667;\nvar IFCWINDOW = 3304561284;\nvar IFCWINDOWLININGPROPERTIES = 336235671;\nvar IFCWINDOWPANELPROPERTIES = 512836454;\nvar IFCWINDOWSTANDARDCASE = 486154966;\nvar IFCWINDOWSTYLE = 1299126871;\nvar IFCWINDOWTYPE = 4009809668;\nvar IFCWORKCALENDAR = 4088093105;\nvar IFCWORKCONTROL = 1028945134;\nvar IFCWORKPLAN = 4218914973;\nvar IFCWORKSCHEDULE = 3342526732;\nvar IFCWORKTIME = 1236880293;\nvar IFCZSHAPEPROFILEDEF = 2543172580;\nvar IFCZONE = 1033361043;\nvar IfcElements = [\n  IFCACTUATOR,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCALARM,\n  IFCALIGNMENT,\n  IFCANNOTATION,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEARING,\n  IFCBOILER,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGSTOREY,\n  IFCBURNER,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLEFITTING,\n  IFCCABLESEGMENT,\n  IFCCAISSONFOUNDATION,\n  IFCCHILLER,\n  IFCCHIMNEY,\n  IFCCIVILELEMENT,\n  IFCCOIL,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMPRESSOR,\n  IFCCONDENSER,\n  IFCCONTROLLER,\n  IFCCOOLEDBEAM,\n  IFCCOOLINGTOWER,\n  IFCCOVERING,\n  IFCCURTAINWALL,\n  IFCDAMPER,\n  IFCDEEPFOUNDATION,\n  IFCDISCRETEACCESSORY,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONPORT,\n  IFCDOOR,\n  IFCDOORSTANDARDCASE,\n  IFCDUCTFITTING,\n  IFCDUCTSEGMENT,\n  IFCDUCTSILENCER,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICMOTOR,\n  IFCELECTRICTIMECONTROL,\n  IFCELEMENT,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTCOMPONENT,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENGINE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATOR,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAN,\n  IFCFASTENER,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILTER,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFLOWCONTROLLER,\n  IFCFLOWFITTING,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWMETER,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFOOTING,\n  IFCFURNISHINGELEMENT,\n  IFCFURNITURE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGRID,\n  IFCHEATEXCHANGER,\n  IFCHUMIDIFIER,\n  IFCINTERCEPTOR,\n  IFCJUNCTIONBOX,\n  IFCLAMP,\n  IFCLIGHTFIXTURE,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCMECHANICALFASTENER,\n  IFCMEDICALDEVICE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMOTORCONNECTION,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOUTLET,\n  IFCPILE,\n  IFCPIPEFITTING,\n  IFCPIPESEGMENT,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPROJECTIONELEMENT,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROXY,\n  IFCPUMP,\n  IFCRAILING,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCREFERENT,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGMESH,\n  IFCROOF,\n  IFCSANITARYTERMINAL,\n  IFCSENSOR,\n  IFCSHADINGDEVICE,\n  IFCSITE,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSOLARDEVICE,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPATIALELEMENT,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALZONE,\n  IFCSTACKTERMINAL,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSURFACEFEATURE,\n  IFCSWITCHINGDEVICE,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCTANK,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONCONDUIT,\n  IFCTRANSFORMER,\n  IFCTRANSPORTELEMENT,\n  IFCTUBEBUNDLE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYEQUIPMENT,\n  IFCVALVE,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONISOLATOR,\n  IFCVIRTUALELEMENT,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWASTETERMINAL,\n  IFCWINDOW,\n  IFCWINDOWSTANDARDCASE\n];\n\n// dist/ifc2x4_helper.ts\nvar FromRawLineData = {};\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTOR] = (d) => {\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTORROLE] = (d) => {\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATOR] = (d) => {\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADDRESS] = (d) => {\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARM] = (d) => {\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARMTYPE] = (d) => {\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT] = (d) => {\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATION] = (d) => {\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLICATION] = (d) => {\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVAL] = (d) => {\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASSET] = (d) => {\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAM] = (d) => {\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMTYPE] = (d) => {\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARING] = (d) => {\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOCK] = (d) => {\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILER] = (d) => {\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILERTYPE] = (d) => {\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGE] = (d) => {\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGEPART] = (d) => {\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDING] = (d) => {\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNER] = (d) => {\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNERTYPE] = (d) => {\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTING] = (d) => {\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLER] = (d) => {\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEY] = (d) => {\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLE] = (d) => {\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOIL] = (d) => {\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOILTYPE] = (d) => {\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGB] = (d) => {\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMN] = (d) => {\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSER] = (d) => {\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONIC] = (d) => {\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRAINT] = (d) => {\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXT] = (d) => {\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROL] = (d) => {\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLER] = (d) => {\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTITEM] = (d) => {\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTVALUE] = (d) => {\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERING] = (d) => {\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGSOLID] = (d) => {\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALL] = (d) => {\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVE] = (d) => {\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLE] = (d) => {\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPER] = (d) => {\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIRECTION] = (d) => {\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOOR] = (d) => {\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTYLE] = (d) => {\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORTYPE] = (d) => {\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTING] = (d) => {\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGE] = (d) => {\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGECURVE] = (d) => {\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGELOOP] = (d) => {\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENT] = (d) => {\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSE] = (d) => {\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINE] = (d) => {\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINETYPE] = (d) => {\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATOR] = (d) => {\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENT] = (d) => {\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTIME] = (d) => {\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTYPE] = (d) => {\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACE] = (d) => {\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBOUND] = (d) => {\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACESURFACE] = (d) => {\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREP] = (d) => {\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITY] = (d) => {\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITYPART] = (d) => {\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAN] = (d) => {\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFANTYPE] = (d) => {\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENER] = (d) => {\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTER] = (d) => {\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTERTYPE] = (d) => {\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTING] = (d) => {\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETER] = (d) => {\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTING] = (d) => {\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURE] = (d) => {\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRID] = (d) => {\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDAXIS] = (d) => {\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGROUP] = (d) => {\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINVENTORY] = (d) => {\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAGTIME] = (d) => {\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMP] = (d) => {\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMPTYPE] = (d) => {\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINE] = (d) => {\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOOP] = (d) => {\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIAL] = (d) => {\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLIST] = (d) => {\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBER] = (d) => {\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMETRIC] = (d) => {\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECT] = (d) => {\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTIVE] = (d) => {\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOCCUPANT] = (d) => {\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENSHELL] = (d) => {\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATION] = (d) => {\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLET] = (d) => {\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPATH] = (d) => {\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPCURVE] = (d) => {\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMIT] = (d) => {\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSON] = (d) => {\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILE] = (d) => {\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILETYPE] = (d) => {\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTING] = (d) => {\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLACEMENT] = (d) => {\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANARBOX] = (d) => {\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANE] = (d) => {\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATE] = (d) => {\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATETYPE] = (d) => {\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINT] = (d) => {\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLOOP] = (d) => {\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLINE] = (d) => {\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPORT] = (d) => {\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURE] = (d) => {\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCESS] = (d) => {\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCT] = (d) => {\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEDEF] = (d) => {\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECT] = (d) => {\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTORDER] = (d) => {\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTY] = (d) => {\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSET] = (d) => {\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROXY] = (d) => {\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMP] = (d) => {\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMPTYPE] = (d) => {\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYSET] = (d) => {\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILING] = (d) => {\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMP] = (d) => {\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPTYPE] = (d) => {\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENCE] = (d) => {\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENT] = (d) => {\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNS] = (d) => {\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTS] = (d) => {\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECLARES] = (d) => {\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINES] = (d) => {\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELNESTS] = (d) => {\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATION] = (d) => {\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCE] = (d) => {\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCETIME] = (d) => {\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOF] = (d) => {\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOFTYPE] = (d) => {\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOT] = (d) => {\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIUNIT] = (d) => {\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSEAMCURVE] = (d) => {\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSOR] = (d) => {\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSORTYPE] = (d) => {\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSITE] = (d) => {\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLAB] = (d) => {\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABTYPE] = (d) => {\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACE] = (d) => {\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATER] = (d) => {\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACETYPE] = (d) => {\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONE] = (d) => {\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERE] = (d) => {\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIR] = (d) => {\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBEDGE] = (d) => {\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACE] = (d) => {\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVE] = (d) => {\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEM] = (d) => {\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLE] = (d) => {\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLEROW] = (d) => {\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANK] = (d) => {\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANKTYPE] = (d) => {\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASK] = (d) => {\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIME] = (d) => {\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTYPE] = (d) => {\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDON] = (d) => {\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONTYPE] = (d) => {\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIES] = (d) => {\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMER] = (d) => {\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVE] = (d) => {\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVETYPE] = (d) => {\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVECTOR] = (d) => {\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEX] = (d) => {\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALL] = (d) => {\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLTYPE] = (d) => {\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOW] = (d) => {\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCONTROL] = (d) => {\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKPLAN] = (d) => {\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKTIME] = (d) => {\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZONE] = (d) => {\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\n};\nvar Handle = class {\n  constructor(id) {\n    this.value = id;\n  }\n  toTape(args) {\n    args.push({ type: 5, value: this.value });\n  }\n};\nfunction Value(type, value) {\n  return { t: type, v: value };\n}\nvar IfcAbsorbedDoseMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAccelerationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAmountOfSubstanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAngularVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBinary = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoolean = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoxAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCardinalPointReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcContextDependentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCountMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCurvatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDate = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDateTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInMonthNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInWeekNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDescriptiveMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDimensionCount = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDoseEquivalentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDuration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDynamicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCapacitanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricChargeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricConductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCurrentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricVoltageMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcEnergyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontVariant = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontWeight = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcGloballyUniqueId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatingValueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIdentifier = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIlluminanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIntegerCountRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIonConcentrationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIsothermalMoistureCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcKinematicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLabel = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLanguageId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLogical = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityDistributionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassPerLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfElasticityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMoistureDiffusivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMolecularWeightMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMomentOfInertiaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonetaryMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonthInYearNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNonNegativeLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNormalisedRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNumericMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPHMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcParameterValue = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlanarForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositivePlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPresentableText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRadioActivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcReal = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionalAreaIntegralMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcShearModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSolidAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecificHeatCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularExponent = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularRoughness = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureGradientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureRateOfChangeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextDecoration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextFontName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextTransformation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalAdmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalConductivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalExpansionCoefficientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalTransmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermodynamicTemperatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeStamp = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTorqueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcURIReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVaporPermeabilityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumetricFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingConstantMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcActionRequestTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\nIfcActionRequestTypeEnum.FAX = \"FAX\";\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\nIfcActionRequestTypeEnum.POST = \"POST\";\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionSourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\nIfcActionSourceTypeEnum.ICE = \"ICE\";\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActuatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAddressTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\nIfcAddressTypeEnum.SITE = \"SITE\";\nIfcAddressTypeEnum.HOME = \"HOME\";\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcAirTerminalBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlarmTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlarmTypeEnum.BELL = \"BELL\";\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlignmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisModelTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisTheoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcArithmeticOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\nvar IfcAssemblyPlaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAudioVisualApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBSplineCurveForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBSplineSurfaceForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBeamTypeEnum.BEAM = \"BEAM\";\nIfcBeamTypeEnum.JOIST = \"JOIST\";\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeDisplacementEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\nIfcBearingTypeEnum.POT = \"POT\";\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\nIfcBearingTypeEnum.DISK = \"DISK\";\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBenchmarkEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\nvar IfcBoilerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBoilerTypeEnum.WATER = \"WATER\";\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBooleanOperator = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBooleanOperator.UNION = \"UNION\";\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\nvar IfcBridgePartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcBridgePartTypeEnum.DECK = \"DECK\";\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBridgePartTypeEnum.PIER = \"PIER\";\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBridgeTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementPartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementProxyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingSystemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBurnerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCaissonFoundationTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChangeActionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\nIfcChangeActionEnum.ADDED = \"ADDED\";\nIfcChangeActionEnum.DELETED = \"DELETED\";\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChillerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChimneyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoilTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcColumnTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCommunicationsApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcComplexPropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\nvar IfcCompressorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCondenserTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstraintEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstraintEnum.HARD = \"HARD\";\nIfcConstraintEnum.SOFT = \"SOFT\";\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionEquipmentResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionMaterialResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcConstructionProductResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcControllerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCooledBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoolingTowerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostItemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoveringTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\nIfcCoveringTypeEnum.COPING = \"COPING\";\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCrewResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurtainWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurveInterpolationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDataOriginEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDerivedUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcDirectionSenseEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\nvar IfcDiscreteAccessoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionChamberElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionPortTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionSystemEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\nIfcDistributionSystemEnum.DATA = \"DATA\";\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\nIfcDistributionSystemEnum.GAS = \"GAS\";\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\nIfcDistributionSystemEnum.OIL = \"OIL\";\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\nIfcDistributionSystemEnum.TV = \"TV\";\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\nIfcDistributionSystemEnum.VENT = \"VENT\";\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentConfidentialityEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentStatusEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeEnum.DOOR = \"DOOR\";\nIfcDoorTypeEnum.GATE = \"GATE\";\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSilencerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricDistributionBoardTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricGeneratorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricMotorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricMotorTypeEnum.DC = \"DC\";\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricTimeControlTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementAssemblyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementCompositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\nvar IfcEngineTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporativeCoolerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTriggerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcExternalSpatialElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\nIfcFastenerTypeEnum.WELD = \"WELD\";\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFilterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFireSuppressionTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\nIfcFlowDirectionEnum.SINK = \"SINK\";\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowInstrumentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowMeterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFootingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFurnitureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\nIfcFurnitureTypeEnum.DESK = \"DESK\";\nIfcFurnitureTypeEnum.BED = \"BED\";\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeographicElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeometricProjectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGlobalOrLocalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\nvar IfcGridTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHeatExchangerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHumidifierTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInterceptorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\nIfcInterceptorTypeEnum.OIL = \"OIL\";\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInternalOrExternalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInventoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcJunctionBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcKnotType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcLaborResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLampTypeEnum.LED = \"LED\";\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\nIfcLampTypeEnum.OLED = \"OLED\";\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLayerSetDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\nvar IfcLightDistributionCurveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightEmissionSourceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightFixtureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLoadGroupTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLogicalOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\nvar IfcMechanicalFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMedicalDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMemberTypeEnum.BRACE = \"BRACE\";\nIfcMemberTypeEnum.CHORD = \"CHORD\";\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\nIfcMemberTypeEnum.MULLION = \"MULLION\";\nIfcMemberTypeEnum.PLATE = \"PLATE\";\nIfcMemberTypeEnum.POST = \"POST\";\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\nIfcMemberTypeEnum.STRUT = \"STRUT\";\nIfcMemberTypeEnum.STUD = \"STUD\";\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMotorConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcNullStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcNullStyle.NULL = \"NULL\";\nvar IfcObjectTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\nIfcObjectTypeEnum.GROUP = \"GROUP\";\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcObjectiveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOccupantTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOpeningElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOutletTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPerformanceHistoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermeableCoveringOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\nIfcPermitTypeEnum.WORK = \"WORK\";\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPhysicalOrVirtualEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileTypeEnum.BORED = \"BORED\";\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\nIfcPileTypeEnum.COHESION = \"COHESION\";\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPlateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\nIfcPlateTypeEnum.SHEET = \"SHEET\";\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPreferredSurfaceCurveRepresentation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\nvar IfcProcedureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProfileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProfileTypeEnum.CURVE = \"CURVE\";\nIfcProfileTypeEnum.AREA = \"AREA\";\nvar IfcProjectOrderTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProjectedOrTrueLengthEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\nvar IfcProjectionElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPropertySetTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPumpTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRailingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRecurrenceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\nvar IfcReferentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\nIfcReferentTypeEnum.STATION = \"STATION\";\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReflectanceMethodEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\nIfcReflectanceMethodEnum.MATT = \"MATT\";\nIfcReflectanceMethodEnum.METAL = \"METAL\";\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\nIfcReinforcingBarRoleEnum.RING = \"RING\";\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarSurfaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\nvar IfcReinforcingBarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarTypeEnum.RING = \"RING\";\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingMeshTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\nIfcRoleEnum.CLIENT = \"CLIENT\";\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\nIfcRoleEnum.OWNER = \"OWNER\";\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\nIfcRoleEnum.RESELLER = \"RESELLER\";\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcRoofTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSIPrefix = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIPrefix.EXA = \"EXA\";\nIfcSIPrefix.PETA = \"PETA\";\nIfcSIPrefix.TERA = \"TERA\";\nIfcSIPrefix.GIGA = \"GIGA\";\nIfcSIPrefix.MEGA = \"MEGA\";\nIfcSIPrefix.KILO = \"KILO\";\nIfcSIPrefix.HECTO = \"HECTO\";\nIfcSIPrefix.DECA = \"DECA\";\nIfcSIPrefix.DECI = \"DECI\";\nIfcSIPrefix.CENTI = \"CENTI\";\nIfcSIPrefix.MILLI = \"MILLI\";\nIfcSIPrefix.MICRO = \"MICRO\";\nIfcSIPrefix.NANO = \"NANO\";\nIfcSIPrefix.PICO = \"PICO\";\nIfcSIPrefix.FEMTO = \"FEMTO\";\nIfcSIPrefix.ATTO = \"ATTO\";\nvar IfcSIUnitName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIUnitName.AMPERE = \"AMPERE\";\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\nIfcSIUnitName.CANDELA = \"CANDELA\";\nIfcSIUnitName.COULOMB = \"COULOMB\";\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\nIfcSIUnitName.FARAD = \"FARAD\";\nIfcSIUnitName.GRAM = \"GRAM\";\nIfcSIUnitName.GRAY = \"GRAY\";\nIfcSIUnitName.HENRY = \"HENRY\";\nIfcSIUnitName.HERTZ = \"HERTZ\";\nIfcSIUnitName.JOULE = \"JOULE\";\nIfcSIUnitName.KELVIN = \"KELVIN\";\nIfcSIUnitName.LUMEN = \"LUMEN\";\nIfcSIUnitName.LUX = \"LUX\";\nIfcSIUnitName.METRE = \"METRE\";\nIfcSIUnitName.MOLE = \"MOLE\";\nIfcSIUnitName.NEWTON = \"NEWTON\";\nIfcSIUnitName.OHM = \"OHM\";\nIfcSIUnitName.PASCAL = \"PASCAL\";\nIfcSIUnitName.RADIAN = \"RADIAN\";\nIfcSIUnitName.SECOND = \"SECOND\";\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\nIfcSIUnitName.TESLA = \"TESLA\";\nIfcSIUnitName.VOLT = \"VOLT\";\nIfcSIUnitName.WATT = \"WATT\";\nIfcSIUnitName.WEBER = \"WEBER\";\nvar IfcSanitaryTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\nvar IfcSensorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSequenceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSequenceEnum.START_START = \"START_START\";\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcShadingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSimplePropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\nvar IfcSlabTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\nIfcSlabTypeEnum.ROOF = \"ROOF\";\nIfcSlabTypeEnum.LANDING = \"LANDING\";\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\nIfcSlabTypeEnum.PAVING = \"PAVING\";\nIfcSlabTypeEnum.WEARING = \"WEARING\";\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSolarDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceHeaterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\nIfcSpaceTypeEnum.GFA = \"GFA\";\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpatialZoneTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStackTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStateEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStateEnum.READWRITE = \"READWRITE\";\nIfcStateEnum.READONLY = \"READONLY\";\nIfcStateEnum.LOCKED = \"LOCKED\";\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\nvar IfcStructuralCurveActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralCurveMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSubContractResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceSide = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\nIfcSurfaceSide.BOTH = \"BOTH\";\nvar IfcSwitchingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSystemFurnitureElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTankTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTankTypeEnum.BASIN = \"BASIN\";\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskDurationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\nIfcTaskTypeEnum.MOVE = \"MOVE\";\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonAnchorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonConduitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonTypeEnum.BAR = \"BAR\";\nIfcTendonTypeEnum.COATED = \"COATED\";\nIfcTendonTypeEnum.STRAND = \"STRAND\";\nIfcTendonTypeEnum.WIRE = \"WIRE\";\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTextPath = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTextPath.LEFT = \"LEFT\";\nIfcTextPath.RIGHT = \"RIGHT\";\nIfcTextPath.UP = \"UP\";\nIfcTextPath.DOWN = \"DOWN\";\nvar IfcTimeSeriesDataTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransformerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransitionCode = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\nvar IfcTransitionCurveType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\nvar IfcTransportElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTrimmingPreference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcTubeBundleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcUnitaryControlElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitaryEquipmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcValveTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\nIfcValveTypeEnum.CHECK = \"CHECK\";\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\nIfcValveTypeEnum.MIXING = \"MIXING\";\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationIsolatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVoidingFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWasteTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypePartitioningEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkCalendarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkPlanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionRequest = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    return args;\n  }\n};\nvar IfcActorRole = class {\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Role = Role;\n    this.UserDefinedRole = UserDefinedRole;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Role = tape[ptr++];\n    let UserDefinedRole = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Role);\n    ;\n    args.push(this.UserDefinedRole);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcActuator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcActuatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcAdvancedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedFace = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecovery = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecoveryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarm = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarmType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontal = class {\n  constructor(expressID, type, StartDistAlong, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartDistAlong = StartDistAlong;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartDistAlong = tape[ptr++];\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.CurveGeometry = CurveGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let CurveGeometry = tape[ptr++];\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.CurveGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegCircularArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.Radius = Radius;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegLine = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegParabolicArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.ParabolaConstant = ParabolaConstant;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let ParabolaConstant = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.ParabolaConstant);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVertical = class {\n  constructor(expressID, type, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DVertical(expressID, type, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerticalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignmentCurve = class {\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Horizontal = Horizontal;\n    this.Vertical = Vertical;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Horizontal = tape[ptr++];\n    let Vertical = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Horizontal);\n    ;\n    args.push(this.Vertical);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotationFillArea = class {\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcApplication = class {\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ApplicationDeveloper = ApplicationDeveloper;\n    this.Version = Version;\n    this.ApplicationFullName = ApplicationFullName;\n    this.ApplicationIdentifier = ApplicationIdentifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ApplicationDeveloper = tape[ptr++];\n    let Version = tape[ptr++];\n    let ApplicationFullName = tape[ptr++];\n    let ApplicationIdentifier = tape[ptr++];\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ApplicationDeveloper);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.ApplicationFullName);\n    ;\n    args.push(this.ApplicationIdentifier);\n    ;\n    return args;\n  }\n};\nvar IfcAppliedValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcApproval = class {\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.TimeOfApproval = TimeOfApproval;\n    this.Status = Status;\n    this.Level = Level;\n    this.Qualifier = Qualifier;\n    this.RequestingApproval = RequestingApproval;\n    this.GivingApproval = GivingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TimeOfApproval = tape[ptr++];\n    let Status = tape[ptr++];\n    let Level = tape[ptr++];\n    let Qualifier = tape[ptr++];\n    let RequestingApproval = tape[ptr++];\n    let GivingApproval = tape[ptr++];\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TimeOfApproval);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.Level);\n    ;\n    args.push(this.Qualifier);\n    ;\n    args.push(this.RequestingApproval);\n    ;\n    args.push(this.GivingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingApproval = RelatingApproval;\n    this.RelatedApprovals = RelatedApprovals;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    let RelatedApprovals = tape[ptr++];\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    args.push(this.RelatedApprovals);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryClosedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryOpenProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryProfileDefWithVoids = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n    this.InnerCurves = InnerCurves;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    let InnerCurves = tape[ptr++];\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    args.push(this.InnerCurves);\n    ;\n    return args;\n  }\n};\nvar IfcAsset = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.OriginalValue = OriginalValue;\n    this.CurrentValue = CurrentValue;\n    this.TotalReplacementCost = TotalReplacementCost;\n    this.Owner = Owner;\n    this.User = User;\n    this.ResponsiblePerson = ResponsiblePerson;\n    this.IncorporationDate = IncorporationDate;\n    this.DepreciatedValue = DepreciatedValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let TotalReplacementCost = tape[ptr++];\n    let Owner = tape[ptr++];\n    let User = tape[ptr++];\n    let ResponsiblePerson = tape[ptr++];\n    let IncorporationDate = tape[ptr++];\n    let DepreciatedValue = tape[ptr++];\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.TotalReplacementCost);\n    ;\n    args.push(this.Owner);\n    ;\n    args.push(this.User);\n    ;\n    args.push(this.ResponsiblePerson);\n    ;\n    args.push(this.IncorporationDate);\n    ;\n    args.push(this.DepreciatedValue);\n    ;\n    return args;\n  }\n};\nvar IfcAsymmetricIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomFlangeWidth = BottomFlangeWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.BottomFlangeThickness = BottomFlangeThickness;\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\n    this.TopFlangeWidth = TopFlangeWidth;\n    this.TopFlangeThickness = TopFlangeThickness;\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\n    this.BottomFlangeSlope = BottomFlangeSlope;\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\n    this.TopFlangeSlope = TopFlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomFlangeWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let BottomFlangeThickness = tape[ptr++];\n    let BottomFlangeFilletRadius = tape[ptr++];\n    let TopFlangeWidth = tape[ptr++];\n    let TopFlangeThickness = tape[ptr++];\n    let TopFlangeFilletRadius = tape[ptr++];\n    let BottomFlangeEdgeRadius = tape[ptr++];\n    let BottomFlangeSlope = tape[ptr++];\n    let TopFlangeEdgeRadius = tape[ptr++];\n    let TopFlangeSlope = tape[ptr++];\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomFlangeWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.BottomFlangeThickness);\n    ;\n    args.push(this.BottomFlangeFilletRadius);\n    ;\n    args.push(this.TopFlangeWidth);\n    ;\n    args.push(this.TopFlangeThickness);\n    ;\n    args.push(this.TopFlangeFilletRadius);\n    ;\n    args.push(this.BottomFlangeEdgeRadius);\n    ;\n    args.push(this.BottomFlangeSlope);\n    ;\n    args.push(this.TopFlangeEdgeRadius);\n    ;\n    args.push(this.TopFlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAxis1Placement = class {\n  constructor(expressID, type, Location, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement2D = class {\n  constructor(expressID, type, Location, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement3D = class {\n  constructor(expressID, type, Location, Axis, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurve = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurface = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBlobTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.RasterFormat = RasterFormat;\n    this.RasterCode = RasterCode;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let RasterFormat = tape[ptr++];\n    let RasterCode = tape[ptr++];\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.RasterFormat);\n    ;\n    args.push(this.RasterCode);\n    ;\n    return args;\n  }\n};\nvar IfcBlock = class {\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.ZLength = ZLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let ZLength = tape[ptr++];\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.ZLength);\n    ;\n    return args;\n  }\n};\nvar IfcBoiler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBoilerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanClippingResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcBoundaryCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryEdgeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByLengthX = tape[ptr++];\n    let TranslationalStiffnessByLengthY = tape[ptr++];\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\n    let RotationalStiffnessByLengthX = tape[ptr++];\n    let RotationalStiffnessByLengthY = tape[ptr++];\n    let RotationalStiffnessByLengthZ = tape[ptr++];\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByLengthX);\n    ;\n    args.push(this.TranslationalStiffnessByLengthY);\n    ;\n    args.push(this.TranslationalStiffnessByLengthZ);\n    ;\n    args.push(this.RotationalStiffnessByLengthX);\n    ;\n    args.push(this.RotationalStiffnessByLengthY);\n    ;\n    args.push(this.RotationalStiffnessByLengthZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryFaceCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByAreaX = tape[ptr++];\n    let TranslationalStiffnessByAreaY = tape[ptr++];\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByAreaX);\n    ;\n    args.push(this.TranslationalStiffnessByAreaY);\n    ;\n    args.push(this.TranslationalStiffnessByAreaZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeConditionWarping = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n    this.WarpingStiffness = WarpingStiffness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    let WarpingStiffness = tape[ptr++];\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    args.push(this.WarpingStiffness);\n    ;\n    return args;\n  }\n};\nvar IfcBoundedCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundedSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundingBox = class {\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Corner = Corner;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.ZDim = ZDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Corner = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let ZDim = tape[ptr++];\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Corner);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.ZDim);\n    ;\n    return args;\n  }\n};\nvar IfcBoxedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Enclosure = Enclosure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Enclosure = tape[ptr++];\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Enclosure);\n    ;\n    return args;\n  }\n};\nvar IfcBridge = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBridgePart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuilding = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\n    this.ElevationOfTerrain = ElevationOfTerrain;\n    this.BuildingAddress = BuildingAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let ElevationOfRefHeight = tape[ptr++];\n    let ElevationOfTerrain = tape[ptr++];\n    let BuildingAddress = tape[ptr++];\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.ElevationOfRefHeight);\n    ;\n    args.push(this.ElevationOfTerrain);\n    ;\n    args.push(this.BuildingAddress);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPartType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingStorey = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.Elevation = Elevation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let Elevation = tape[ptr++];\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.Elevation);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcBurner = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBurnerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.WallThickness = WallThickness;\n    this.Girth = Girth;\n    this.InternalFilletRadius = InternalFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let Girth = tape[ptr++];\n    let InternalFilletRadius = tape[ptr++];\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.Girth);\n    ;\n    args.push(this.InternalFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPoint = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcCartesianPoint(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCartesianPointList(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCartesianPointList2D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList3D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Scale2 = Scale2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Scale2);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n    this.Scale2 = Scale2;\n    this.Scale3 = Scale3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    let Scale3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    args.push(this.Scale2);\n    ;\n    args.push(this.Scale3);\n    ;\n    return args;\n  }\n};\nvar IfcCenterLineProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcChiller = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChillerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimney = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimneyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCircle = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircle(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.WallThickness = WallThickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.WallThickness);\n    ;\n    return args;\n  }\n};\nvar IfcCircleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircularArcSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.Radius = Radius;\n    this.IsCCW = IsCCW;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsCCW = tape[ptr++];\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsCCW);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcClassification = class {\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Source = Source;\n    this.Edition = Edition;\n    this.EditionDate = EditionDate;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.ReferenceTokens = ReferenceTokens;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Source = tape[ptr++];\n    let Edition = tape[ptr++];\n    let EditionDate = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let ReferenceTokens = tape[ptr++];\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Source);\n    ;\n    args.push(this.Edition);\n    ;\n    args.push(this.EditionDate);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.ReferenceTokens);\n    ;\n    return args;\n  }\n};\nvar IfcClassificationReference = class {\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.ReferencedSource = ReferencedSource;\n    this.Description = Description;\n    this.Sort = Sort;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let ReferencedSource = tape[ptr++];\n    let Description = tape[ptr++];\n    let Sort = tape[ptr++];\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ReferencedSource);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Sort);\n    ;\n    return args;\n  }\n};\nvar IfcClosedShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcClosedShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcCoil = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoilType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgb = class {\n  constructor(expressID, type, Name, Red, Green, Blue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Red = Red;\n    this.Green = Green;\n    this.Blue = Blue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Red = tape[ptr++];\n    let Green = tape[ptr++];\n    let Blue = tape[ptr++];\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Red);\n    ;\n    args.push(this.Green);\n    ;\n    args.push(this.Blue);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgbList = class {\n  constructor(expressID, type, ColourList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ColourList = ColourList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ColourList = tape[ptr++];\n    return new IfcColourRgbList(expressID, type, ColourList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ColourList);\n    ;\n    return args;\n  }\n};\nvar IfcColourSpecification = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcColourSpecification(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcColumn = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcComplexProperty = class {\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcComplexPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.TemplateType = TemplateType;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveOnSurface = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Profiles = Profiles;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Profiles = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Profiles);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcCompressor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCompressorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenser = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenserType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConic = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcConic(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcConnectedFaceSet = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionCurveGeometry = class {\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CurveOnRelatingElement = tape[ptr++];\n    let CurveOnRelatedElement = tape[ptr++];\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CurveOnRelatingElement);\n    ;\n    args.push(this.CurveOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionGeometry = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcConnectionGeometry(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcConnectionPointEccentricity = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n    this.EccentricityInX = EccentricityInX;\n    this.EccentricityInY = EccentricityInY;\n    this.EccentricityInZ = EccentricityInZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    let EccentricityInX = tape[ptr++];\n    let EccentricityInY = tape[ptr++];\n    let EccentricityInZ = tape[ptr++];\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    args.push(this.EccentricityInX);\n    ;\n    args.push(this.EccentricityInY);\n    ;\n    args.push(this.EccentricityInZ);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionPointGeometry = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionSurfaceGeometry = class {\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceOnRelatingElement = tape[ptr++];\n    let SurfaceOnRelatedElement = tape[ptr++];\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceOnRelatingElement);\n    ;\n    args.push(this.SurfaceOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionVolumeGeometry = class {\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VolumeOnRelatingElement = tape[ptr++];\n    let VolumeOnRelatedElement = tape[ptr++];\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VolumeOnRelatingElement);\n    ;\n    args.push(this.VolumeOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConstraint = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcContext = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcContextDependentUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    return args;\n  }\n};\nvar IfcController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnitWithOffset = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n    this.ConversionOffset = ConversionOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    let ConversionOffset = tape[ptr++];\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    args.push(this.ConversionOffset);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTower = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTowerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateOperation = class {\n  constructor(expressID, type, SourceCRS, TargetCRS) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateReferenceSystem = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    return args;\n  }\n};\nvar IfcCostItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.CostValues = CostValues;\n    this.CostQuantities = CostQuantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let CostValues = tape[ptr++];\n    let CostQuantities = tape[ptr++];\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.CostValues);\n    ;\n    args.push(this.CostQuantities);\n    ;\n    return args;\n  }\n};\nvar IfcCostSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.SubmittedOn = SubmittedOn;\n    this.UpdateDate = UpdateDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let SubmittedOn = tape[ptr++];\n    let UpdateDate = tape[ptr++];\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.SubmittedOn);\n    ;\n    args.push(this.UpdateDate);\n    ;\n    return args;\n  }\n};\nvar IfcCostValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcCovering = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoveringType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCsgPrimitive3D = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcCsgPrimitive3D(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcCsgSolid = class {\n  constructor(expressID, type, TreeRootExpression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TreeRootExpression = TreeRootExpression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TreeRootExpression = tape[ptr++];\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TreeRootExpression);\n    ;\n    return args;\n  }\n};\nvar IfcCurrencyRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\n    this.ExchangeRate = ExchangeRate;\n    this.RateDateTime = RateDateTime;\n    this.RateSource = RateSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMonetaryUnit = tape[ptr++];\n    let RelatedMonetaryUnit = tape[ptr++];\n    let ExchangeRate = tape[ptr++];\n    let RateDateTime = tape[ptr++];\n    let RateSource = tape[ptr++];\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMonetaryUnit);\n    ;\n    args.push(this.RelatedMonetaryUnit);\n    ;\n    args.push(this.ExchangeRate);\n    ;\n    args.push(this.RateDateTime);\n    ;\n    args.push(this.RateSource);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCurveBoundedPlane = class {\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcCurveBoundedSurface = class {\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.Boundaries = Boundaries;\n    this.ImplicitOuter = ImplicitOuter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let Boundaries = tape[ptr++];\n    let ImplicitOuter = tape[ptr++];\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.Boundaries);\n    ;\n    args.push(this.ImplicitOuter);\n    ;\n    return args;\n  }\n};\nvar IfcCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyle = class {\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveWidth = CurveWidth;\n    this.CurveColour = CurveColour;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveWidth = tape[ptr++];\n    let CurveColour = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveWidth);\n    ;\n    args.push(this.CurveColour);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFont = class {\n  constructor(expressID, type, Name, PatternList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PatternList = PatternList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PatternList = tape[ptr++];\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PatternList);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontAndScaling = class {\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveFontScaling = CurveFontScaling;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveFontScaling = tape[ptr++];\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveFontScaling);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontPattern = class {\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VisibleSegmentLength = VisibleSegmentLength;\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VisibleSegmentLength = tape[ptr++];\n    let InvisibleSegmentLength = tape[ptr++];\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VisibleSegmentLength);\n    ;\n    args.push(this.InvisibleSegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCylindricalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnit = class {\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n    this.UnitType = UnitType;\n    this.UserDefinedType = UserDefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let UserDefinedType = tape[ptr++];\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.UserDefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnitElement = class {\n  constructor(expressID, type, Unit, Exponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Unit = Unit;\n    this.Exponent = Exponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Unit = tape[ptr++];\n    let Exponent = tape[ptr++];\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Unit);\n    ;\n    args.push(this.Exponent);\n    ;\n    return args;\n  }\n};\nvar IfcDimensionalExponents = class {\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LengthExponent = LengthExponent;\n    this.MassExponent = MassExponent;\n    this.TimeExponent = TimeExponent;\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LengthExponent = tape[ptr++];\n    let MassExponent = tape[ptr++];\n    let TimeExponent = tape[ptr++];\n    let ElectricCurrentExponent = tape[ptr++];\n    let ThermodynamicTemperatureExponent = tape[ptr++];\n    let AmountOfSubstanceExponent = tape[ptr++];\n    let LuminousIntensityExponent = tape[ptr++];\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LengthExponent);\n    ;\n    args.push(this.MassExponent);\n    ;\n    args.push(this.TimeExponent);\n    ;\n    args.push(this.ElectricCurrentExponent);\n    ;\n    args.push(this.ThermodynamicTemperatureExponent);\n    ;\n    args.push(this.AmountOfSubstanceExponent);\n    ;\n    args.push(this.LuminousIntensityExponent);\n    ;\n    return args;\n  }\n};\nvar IfcDirection = class {\n  constructor(expressID, type, DirectionRatios) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DirectionRatios = DirectionRatios;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DirectionRatios = tape[ptr++];\n    return new IfcDirection(expressID, type, DirectionRatios);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DirectionRatios);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessoryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistanceExpression = class {\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DistanceAlong = DistanceAlong;\n    this.OffsetLateral = OffsetLateral;\n    this.OffsetVertical = OffsetVertical;\n    this.OffsetLongitudinal = OffsetLongitudinal;\n    this.AlongHorizontal = AlongHorizontal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DistanceAlong = tape[ptr++];\n    let OffsetLateral = tape[ptr++];\n    let OffsetVertical = tape[ptr++];\n    let OffsetLongitudinal = tape[ptr++];\n    let AlongHorizontal = tape[ptr++];\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DistanceAlong);\n    ;\n    args.push(this.OffsetLateral);\n    ;\n    args.push(this.OffsetVertical);\n    ;\n    args.push(this.OffsetLongitudinal);\n    ;\n    args.push(this.AlongHorizontal);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionCircuit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.FlowDirection = FlowDirection;\n    this.PredefinedType = PredefinedType;\n    this.SystemType = SystemType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let FlowDirection = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let SystemType = tape[ptr++];\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.FlowDirection);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.SystemType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformation = class {\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.Purpose = Purpose;\n    this.IntendedUse = IntendedUse;\n    this.Scope = Scope;\n    this.Revision = Revision;\n    this.DocumentOwner = DocumentOwner;\n    this.Editors = Editors;\n    this.CreationTime = CreationTime;\n    this.LastRevisionTime = LastRevisionTime;\n    this.ElectronicFormat = ElectronicFormat;\n    this.ValidFrom = ValidFrom;\n    this.ValidUntil = ValidUntil;\n    this.Confidentiality = Confidentiality;\n    this.Status = Status;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let IntendedUse = tape[ptr++];\n    let Scope = tape[ptr++];\n    let Revision = tape[ptr++];\n    let DocumentOwner = tape[ptr++];\n    let Editors = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let LastRevisionTime = tape[ptr++];\n    let ElectronicFormat = tape[ptr++];\n    let ValidFrom = tape[ptr++];\n    let ValidUntil = tape[ptr++];\n    let Confidentiality = tape[ptr++];\n    let Status = tape[ptr++];\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.IntendedUse);\n    ;\n    args.push(this.Scope);\n    ;\n    args.push(this.Revision);\n    ;\n    args.push(this.DocumentOwner);\n    ;\n    args.push(this.Editors);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.LastRevisionTime);\n    ;\n    args.push(this.ElectronicFormat);\n    ;\n    args.push(this.ValidFrom);\n    ;\n    args.push(this.ValidUntil);\n    ;\n    args.push(this.Confidentiality);\n    ;\n    args.push(this.Status);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingDocument = RelatingDocument;\n    this.RelatedDocuments = RelatedDocuments;\n    this.RelationshipType = RelationshipType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    let RelatedDocuments = tape[ptr++];\n    let RelationshipType = tape[ptr++];\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    args.push(this.RelatedDocuments);\n    ;\n    args.push(this.RelationshipType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.ReferencedDocument = ReferencedDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ReferencedDocument = tape[ptr++];\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ReferencedDocument);\n    ;\n    return args;\n  }\n};\nvar IfcDoor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.ThresholdDepth = ThresholdDepth;\n    this.ThresholdThickness = ThresholdThickness;\n    this.TransomThickness = TransomThickness;\n    this.TransomOffset = TransomOffset;\n    this.LiningOffset = LiningOffset;\n    this.ThresholdOffset = ThresholdOffset;\n    this.CasingThickness = CasingThickness;\n    this.CasingDepth = CasingDepth;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let ThresholdDepth = tape[ptr++];\n    let ThresholdThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let TransomOffset = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let ThresholdOffset = tape[ptr++];\n    let CasingThickness = tape[ptr++];\n    let CasingDepth = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.ThresholdDepth);\n    ;\n    args.push(this.ThresholdThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.TransomOffset);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.ThresholdOffset);\n    ;\n    args.push(this.CasingThickness);\n    ;\n    args.push(this.CasingDepth);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcDoorPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.PanelDepth = PanelDepth;\n    this.PanelOperation = PanelOperation;\n    this.PanelWidth = PanelWidth;\n    this.PanelPosition = PanelPosition;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let PanelDepth = tape[ptr++];\n    let PanelOperation = tape[ptr++];\n    let PanelWidth = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.PanelDepth);\n    ;\n    args.push(this.PanelOperation);\n    ;\n    args.push(this.PanelWidth);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.OperationType = OperationType;\n    this.ConstructionType = ConstructionType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcDoorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeCurve = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeGeometry = EdgeGeometry;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeGeometry = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeGeometry);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeLoop = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcEdgeLoop(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcElectricAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoard = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoardType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGenerator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGeneratorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControlType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssembly = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssemblyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementQuantity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.MethodOfMeasurement = MethodOfMeasurement;\n    this.Quantities = Quantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MethodOfMeasurement = tape[ptr++];\n    let Quantities = tape[ptr++];\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MethodOfMeasurement);\n    ;\n    args.push(this.Quantities);\n    ;\n    return args;\n  }\n};\nvar IfcElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementarySurface = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcElementarySurface(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcEllipse = class {\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEllipseProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcEngine = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEngineType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCooler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCoolerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n    this.EventOccurenceTime = EventOccurenceTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    let EventOccurenceTime = tape[ptr++];\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    args.push(this.EventOccurenceTime);\n    ;\n    return args;\n  }\n};\nvar IfcEventTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ActualDate = ActualDate;\n    this.EarlyDate = EarlyDate;\n    this.LateDate = LateDate;\n    this.ScheduleDate = ScheduleDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ActualDate = tape[ptr++];\n    let EarlyDate = tape[ptr++];\n    let LateDate = tape[ptr++];\n    let ScheduleDate = tape[ptr++];\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ActualDate);\n    ;\n    args.push(this.EarlyDate);\n    ;\n    args.push(this.LateDate);\n    ;\n    args.push(this.ScheduleDate);\n    ;\n    return args;\n  }\n};\nvar IfcEventType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    return args;\n  }\n};\nvar IfcExtendedProperties = class {\n  constructor(expressID, type, Name, Description, Properties2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    return args;\n  }\n};\nvar IfcExternalInformation = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcExternalInformation(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcExternalReference = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternalReferenceRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingReference = RelatingReference;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingReference = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingReference);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedHatchStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedSurfaceStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedTextFont = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcFace = class {\n  constructor(expressID, type, Bounds) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    return new IfcFace(expressID, type, Bounds);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBasedSurfaceModel = class {\n  constructor(expressID, type, FbsmFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.FbsmFaces = FbsmFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let FbsmFaces = tape[ptr++];\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.FbsmFaces);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceOuterBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceSurface = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcFacetedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcFacility = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFacilityPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFailureConnectionCondition = class {\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TensionFailureX = TensionFailureX;\n    this.TensionFailureY = TensionFailureY;\n    this.TensionFailureZ = TensionFailureZ;\n    this.CompressionFailureX = CompressionFailureX;\n    this.CompressionFailureY = CompressionFailureY;\n    this.CompressionFailureZ = CompressionFailureZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TensionFailureX = tape[ptr++];\n    let TensionFailureY = tape[ptr++];\n    let TensionFailureZ = tape[ptr++];\n    let CompressionFailureX = tape[ptr++];\n    let CompressionFailureY = tape[ptr++];\n    let CompressionFailureZ = tape[ptr++];\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TensionFailureX);\n    ;\n    args.push(this.TensionFailureY);\n    ;\n    args.push(this.TensionFailureZ);\n    ;\n    args.push(this.CompressionFailureX);\n    ;\n    args.push(this.CompressionFailureY);\n    ;\n    args.push(this.CompressionFailureZ);\n    ;\n    return args;\n  }\n};\nvar IfcFan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFanType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementAddition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementSubtraction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyle = class {\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FillStyles = FillStyles;\n    this.ModelorDraughting = ModelorDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FillStyles = tape[ptr++];\n    let ModelorDraughting = tape[ptr++];\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FillStyles);\n    ;\n    args.push(this.ModelorDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleHatching = class {\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.HatchLineAppearance = HatchLineAppearance;\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\n    this.PatternStart = PatternStart;\n    this.HatchLineAngle = HatchLineAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let HatchLineAppearance = tape[ptr++];\n    let StartOfNextHatchLine = tape[ptr++];\n    let PointOfReferenceHatchLine = tape[ptr++];\n    let PatternStart = tape[ptr++];\n    let HatchLineAngle = tape[ptr++];\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.HatchLineAppearance);\n    ;\n    args.push(this.StartOfNextHatchLine);\n    ;\n    args.push(this.PointOfReferenceHatchLine);\n    ;\n    args.push(this.PatternStart);\n    ;\n    args.push(this.HatchLineAngle);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleTiles = class {\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TilingPattern = TilingPattern;\n    this.Tiles = Tiles;\n    this.TilingScale = TilingScale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TilingPattern = tape[ptr++];\n    let Tiles = tape[ptr++];\n    let TilingScale = tape[ptr++];\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TilingPattern);\n    ;\n    args.push(this.Tiles);\n    ;\n    args.push(this.TilingScale);\n    ;\n    return args;\n  }\n};\nvar IfcFilter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFilterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFixedReferenceSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FixedReference = FixedReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FixedReference = tape[ptr++];\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FixedReference);\n    ;\n    return args;\n  }\n};\nvar IfcFlowController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrumentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFooting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFootingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFurniture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnitureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricCurveSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricCurveSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcGeometricRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcGeometricRepresentationSubContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n    this.ParentContext = ParentContext;\n    this.TargetScale = TargetScale;\n    this.TargetView = TargetView;\n    this.UserDefinedTargetView = UserDefinedTargetView;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    let ParentContext = tape[ptr++];\n    let TargetScale = tape[ptr++];\n    let TargetView = tape[ptr++];\n    let UserDefinedTargetView = tape[ptr++];\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    args.push(this.ParentContext);\n    ;\n    args.push(this.TargetScale);\n    ;\n    args.push(this.TargetView);\n    ;\n    args.push(this.UserDefinedTargetView);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGrid = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.UAxes = UAxes;\n    this.VAxes = VAxes;\n    this.WAxes = WAxes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let UAxes = tape[ptr++];\n    let VAxes = tape[ptr++];\n    let WAxes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.UAxes);\n    ;\n    args.push(this.VAxes);\n    ;\n    args.push(this.WAxes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGridAxis = class {\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.AxisTag = AxisTag;\n    this.AxisCurve = AxisCurve;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let AxisTag = tape[ptr++];\n    let AxisCurve = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.AxisTag);\n    ;\n    args.push(this.AxisCurve);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcGridPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementLocation = PlacementLocation;\n    this.PlacementRefDirection = PlacementRefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementLocation = tape[ptr++];\n    let PlacementRefDirection = tape[ptr++];\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementLocation);\n    ;\n    args.push(this.PlacementRefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcHalfSpaceSolid = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchanger = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchangerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifier = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifierType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.OverallWidth = OverallWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcImageTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.URLReference = URLReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let URLReference = tape[ptr++];\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.URLReference);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedColourMap = class {\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappedTo = MappedTo;\n    this.Opacity = Opacity;\n    this.Colours = Colours;\n    this.ColourIndex = ColourIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappedTo = tape[ptr++];\n    let Opacity = tape[ptr++];\n    let Colours = tape[ptr++];\n    let ColourIndex = tape[ptr++];\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappedTo);\n    ;\n    args.push(this.Opacity);\n    ;\n    args.push(this.Colours);\n    ;\n    args.push(this.ColourIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolyCurve = class {\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFace = class {\n  constructor(expressID, type, CoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFaceWithVoids = class {\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n    this.InnerCoordIndices = InnerCoordIndices;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    let InnerCoordIndices = tape[ptr++];\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.InnerCoordIndices);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTriangleTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n    this.TexCoordIndex = TexCoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    let TexCoordIndex = tape[ptr++];\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    args.push(this.TexCoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIntersectionCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcInventory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.Jurisdiction = Jurisdiction;\n    this.ResponsiblePersons = ResponsiblePersons;\n    this.LastUpdateDate = LastUpdateDate;\n    this.CurrentValue = CurrentValue;\n    this.OriginalValue = OriginalValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Jurisdiction = tape[ptr++];\n    let ResponsiblePersons = tape[ptr++];\n    let LastUpdateDate = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Jurisdiction);\n    ;\n    args.push(this.ResponsiblePersons);\n    ;\n    args.push(this.LastUpdateDate);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeriesValue = class {\n  constructor(expressID, type, TimeStamp, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TimeStamp = TimeStamp;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TimeStamp = tape[ptr++];\n    let ListValues = tape[ptr++];\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TimeStamp);\n    ;\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.Thickness = Thickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.LegSlope = LegSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let Thickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let LegSlope = tape[ptr++];\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Thickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.LegSlope);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLagTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.LagValue = LagValue;\n    this.DurationType = DurationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let LagValue = tape[ptr++];\n    let DurationType = tape[ptr++];\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.LagValue);\n    ;\n    args.push(this.DurationType);\n    ;\n    return args;\n  }\n};\nvar IfcLamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryInformation = class {\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Version = Version;\n    this.Publisher = Publisher;\n    this.VersionDate = VersionDate;\n    this.Location = Location;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Version = tape[ptr++];\n    let Publisher = tape[ptr++];\n    let VersionDate = tape[ptr++];\n    let Location = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.Publisher);\n    ;\n    args.push(this.VersionDate);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Language = Language;\n    this.ReferencedLibrary = ReferencedLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Language = tape[ptr++];\n    let ReferencedLibrary = tape[ptr++];\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Language);\n    ;\n    args.push(this.ReferencedLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcLightDistributionData = class {\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MainPlaneAngle = MainPlaneAngle;\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\n    this.LuminousIntensity = LuminousIntensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MainPlaneAngle = tape[ptr++];\n    let SecondaryPlaneAngle = tape[ptr++];\n    let LuminousIntensity = tape[ptr++];\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MainPlaneAngle);\n    ;\n    args.push(this.SecondaryPlaneAngle);\n    ;\n    args.push(this.LuminousIntensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixtureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightIntensityDistribution = class {\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LightDistributionCurve = LightDistributionCurve;\n    this.DistributionData = DistributionData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LightDistributionCurve = tape[ptr++];\n    let DistributionData = tape[ptr++];\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LightDistributionCurve);\n    ;\n    args.push(this.DistributionData);\n    ;\n    return args;\n  }\n};\nvar IfcLightSource = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceAmbient = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceDirectional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceGoniometric = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.ColourAppearance = ColourAppearance;\n    this.ColourTemperature = ColourTemperature;\n    this.LuminousFlux = LuminousFlux;\n    this.LightEmissionSource = LightEmissionSource;\n    this.LightDistributionDataSource = LightDistributionDataSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let ColourAppearance = tape[ptr++];\n    let ColourTemperature = tape[ptr++];\n    let LuminousFlux = tape[ptr++];\n    let LightEmissionSource = tape[ptr++];\n    let LightDistributionDataSource = tape[ptr++];\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ColourAppearance);\n    ;\n    args.push(this.ColourTemperature);\n    ;\n    args.push(this.LuminousFlux);\n    ;\n    args.push(this.LightEmissionSource);\n    ;\n    args.push(this.LightDistributionDataSource);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourcePositional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceSpot = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n    this.Orientation = Orientation;\n    this.ConcentrationExponent = ConcentrationExponent;\n    this.SpreadAngle = SpreadAngle;\n    this.BeamWidthAngle = BeamWidthAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let ConcentrationExponent = tape[ptr++];\n    let SpreadAngle = tape[ptr++];\n    let BeamWidthAngle = tape[ptr++];\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.ConcentrationExponent);\n    ;\n    args.push(this.SpreadAngle);\n    ;\n    args.push(this.BeamWidthAngle);\n    ;\n    return args;\n  }\n};\nvar IfcLine = class {\n  constructor(expressID, type, Pnt, Dir) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Pnt = Pnt;\n    this.Dir = Dir;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Pnt = tape[ptr++];\n    let Dir = tape[ptr++];\n    return new IfcLine(expressID, type, Pnt, Dir);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Pnt);\n    ;\n    args.push(this.Dir);\n    ;\n    return args;\n  }\n};\nvar IfcLineSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\n    this.Distance = Distance;\n    this.Orientation = Orientation;\n    this.CartesianPosition = CartesianPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementMeasuredAlong = tape[ptr++];\n    let Distance = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let CartesianPosition = tape[ptr++];\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementMeasuredAlong);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.CartesianPosition);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcLocalPlacement = class {\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.RelativePlacement = RelativePlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let RelativePlacement = tape[ptr++];\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.RelativePlacement);\n    ;\n    return args;\n  }\n};\nvar IfcLoop = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcLoop(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcManifoldSolidBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcMapConversion = class {\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n    this.Eastings = Eastings;\n    this.Northings = Northings;\n    this.OrthogonalHeight = OrthogonalHeight;\n    this.XAxisAbscissa = XAxisAbscissa;\n    this.XAxisOrdinate = XAxisOrdinate;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    let Eastings = tape[ptr++];\n    let Northings = tape[ptr++];\n    let OrthogonalHeight = tape[ptr++];\n    let XAxisAbscissa = tape[ptr++];\n    let XAxisOrdinate = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    args.push(this.Eastings);\n    ;\n    args.push(this.Northings);\n    ;\n    args.push(this.OrthogonalHeight);\n    ;\n    args.push(this.XAxisAbscissa);\n    ;\n    args.push(this.XAxisOrdinate);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcMappedItem = class {\n  constructor(expressID, type, MappingSource, MappingTarget) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingSource = MappingSource;\n    this.MappingTarget = MappingTarget;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingSource = tape[ptr++];\n    let MappingTarget = tape[ptr++];\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingSource);\n    ;\n    args.push(this.MappingTarget);\n    ;\n    return args;\n  }\n};\nvar IfcMaterial = class {\n  constructor(expressID, type, Name, Description, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterial(expressID, type, Name, Description, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialClassificationRelationship = class {\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialClassifications = MaterialClassifications;\n    this.ClassifiedMaterial = ClassifiedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialClassifications = tape[ptr++];\n    let ClassifiedMaterial = tape[ptr++];\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialClassifications);\n    ;\n    args.push(this.ClassifiedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituent = class {\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Fraction = Fraction;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Fraction = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Fraction);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituentSet = class {\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialConstituents = MaterialConstituents;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialConstituents = tape[ptr++];\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialConstituents);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMaterialDefinitionRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n    this.RepresentedMaterial = RepresentedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    let RepresentedMaterial = tape[ptr++];\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    args.push(this.RepresentedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayer = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSet = class {\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialLayers = MaterialLayers;\n    this.LayerSetName = LayerSetName;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialLayers = tape[ptr++];\n    let LayerSetName = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialLayers);\n    ;\n    args.push(this.LayerSetName);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSetUsage = class {\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForLayerSet = ForLayerSet;\n    this.LayerSetDirection = LayerSetDirection;\n    this.DirectionSense = DirectionSense;\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForLayerSet = tape[ptr++];\n    let LayerSetDirection = tape[ptr++];\n    let DirectionSense = tape[ptr++];\n    let OffsetFromReferenceLine = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForLayerSet);\n    ;\n    args.push(this.LayerSetDirection);\n    ;\n    args.push(this.DirectionSense);\n    ;\n    args.push(this.OffsetFromReferenceLine);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerWithOffsets = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n    this.OffsetDirection = OffsetDirection;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    let OffsetDirection = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.OffsetDirection);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialList = class {\n  constructor(expressID, type, Materials) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Materials = Materials;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Materials = tape[ptr++];\n    return new IfcMaterialList(expressID, type, Materials);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Materials);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfile = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSet = class {\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialProfiles = MaterialProfiles;\n    this.CompositeProfile = CompositeProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialProfiles = tape[ptr++];\n    let CompositeProfile = tape[ptr++];\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialProfiles);\n    ;\n    args.push(this.CompositeProfile);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsage = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsageTapering = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n    this.ForProfileEndSet = ForProfileEndSet;\n    this.CardinalEndPoint = CardinalEndPoint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    let ForProfileEndSet = tape[ptr++];\n    let CardinalEndPoint = tape[ptr++];\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    args.push(this.ForProfileEndSet);\n    ;\n    args.push(this.CardinalEndPoint);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileWithOffsets = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, Material) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.Material = Material;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let Material = tape[ptr++];\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties2, Material);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.Material);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMaterial = RelatingMaterial;\n    this.RelatedMaterials = RelatedMaterials;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    let RelatedMaterials = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    args.push(this.RelatedMaterials);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialUsageDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialUsageDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMeasureWithUnit = class {\n  constructor(expressID, type, ValueComponent, UnitComponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ValueComponent = ValueComponent;\n    this.UnitComponent = UnitComponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ValueComponent = tape[ptr++];\n    let UnitComponent = tape[ptr++];\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ValueComponent);\n    ;\n    args.push(this.UnitComponent);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMetric = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.Benchmark = Benchmark;\n    this.ValueSource = ValueSource;\n    this.DataValue = DataValue;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let Benchmark = tape[ptr++];\n    let ValueSource = tape[ptr++];\n    let DataValue = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.Benchmark);\n    ;\n    args.push(this.ValueSource);\n    ;\n    args.push(this.DataValue);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcMirroredProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcMonetaryUnit = class {\n  constructor(expressID, type, Currency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Currency = Currency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Currency = tape[ptr++];\n    return new IfcMonetaryUnit(expressID, type, Currency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Currency);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnectionType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcNamedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    return args;\n  }\n};\nvar IfcObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcObjectDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcObjectPlacement = class {\n  constructor(expressID, type, PlacementRelTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    return args;\n  }\n};\nvar IfcObjective = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.BenchmarkValues = BenchmarkValues;\n    this.LogicalAggregator = LogicalAggregator;\n    this.ObjectiveQualifier = ObjectiveQualifier;\n    this.UserDefinedQualifier = UserDefinedQualifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let BenchmarkValues = tape[ptr++];\n    let LogicalAggregator = tape[ptr++];\n    let ObjectiveQualifier = tape[ptr++];\n    let UserDefinedQualifier = tape[ptr++];\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.BenchmarkValues);\n    ;\n    args.push(this.LogicalAggregator);\n    ;\n    args.push(this.ObjectiveQualifier);\n    ;\n    args.push(this.UserDefinedQualifier);\n    ;\n    return args;\n  }\n};\nvar IfcOccupant = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve = class {\n  constructor(expressID, type, BasisCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve2D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve3D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurveByDistances = class {\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.OffsetValues = OffsetValues;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcOpenShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcOpenShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOrganization = class {\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcOrganizationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOrganization = RelatingOrganization;\n    this.RelatedOrganizations = RelatedOrganizations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOrganization = tape[ptr++];\n    let RelatedOrganizations = tape[ptr++];\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOrganization);\n    ;\n    args.push(this.RelatedOrganizations);\n    ;\n    return args;\n  }\n};\nvar IfcOrientationExpression = class {\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LateralAxisDirection = LateralAxisDirection;\n    this.VerticalAxisDirection = VerticalAxisDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LateralAxisDirection = tape[ptr++];\n    let VerticalAxisDirection = tape[ptr++];\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LateralAxisDirection);\n    ;\n    args.push(this.VerticalAxisDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOrientedEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeElement = EdgeElement;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeElement = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeElement);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcOuterBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOutlet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOutletType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOwnerHistory = class {\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OwningUser = OwningUser;\n    this.OwningApplication = OwningApplication;\n    this.State = State;\n    this.ChangeAction = ChangeAction;\n    this.LastModifiedDate = LastModifiedDate;\n    this.LastModifyingUser = LastModifyingUser;\n    this.LastModifyingApplication = LastModifyingApplication;\n    this.CreationDate = CreationDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OwningUser = tape[ptr++];\n    let OwningApplication = tape[ptr++];\n    let State = tape[ptr++];\n    let ChangeAction = tape[ptr++];\n    let LastModifiedDate = tape[ptr++];\n    let LastModifyingUser = tape[ptr++];\n    let LastModifyingApplication = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OwningUser);\n    ;\n    args.push(this.OwningApplication);\n    ;\n    args.push(this.State);\n    ;\n    args.push(this.ChangeAction);\n    ;\n    args.push(this.LastModifiedDate);\n    ;\n    args.push(this.LastModifyingUser);\n    ;\n    args.push(this.LastModifyingApplication);\n    ;\n    args.push(this.CreationDate);\n    ;\n    return args;\n  }\n};\nvar IfcParameterizedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPath = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcPath(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcPcurve = class {\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.ReferenceCurve = ReferenceCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let ReferenceCurve = tape[ptr++];\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.ReferenceCurve);\n    ;\n    return args;\n  }\n};\nvar IfcPerformanceHistory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LifeCyclePhase = LifeCyclePhase;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LifeCyclePhase = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LifeCyclePhase);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPermeableCoveringProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcPermit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcPerson = class {\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.FamilyName = FamilyName;\n    this.GivenName = GivenName;\n    this.MiddleNames = MiddleNames;\n    this.PrefixTitles = PrefixTitles;\n    this.SuffixTitles = SuffixTitles;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let FamilyName = tape[ptr++];\n    let GivenName = tape[ptr++];\n    let MiddleNames = tape[ptr++];\n    let PrefixTitles = tape[ptr++];\n    let SuffixTitles = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.FamilyName);\n    ;\n    args.push(this.GivenName);\n    ;\n    args.push(this.MiddleNames);\n    ;\n    args.push(this.PrefixTitles);\n    ;\n    args.push(this.SuffixTitles);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcPersonAndOrganization = class {\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ThePerson = ThePerson;\n    this.TheOrganization = TheOrganization;\n    this.Roles = Roles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ThePerson = tape[ptr++];\n    let TheOrganization = tape[ptr++];\n    let Roles = tape[ptr++];\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ThePerson);\n    ;\n    args.push(this.TheOrganization);\n    ;\n    args.push(this.Roles);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalComplexQuantity = class {\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasQuantities = HasQuantities;\n    this.Discrimination = Discrimination;\n    this.Quality = Quality;\n    this.Usage = Usage;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasQuantities = tape[ptr++];\n    let Discrimination = tape[ptr++];\n    let Quality = tape[ptr++];\n    let Usage = tape[ptr++];\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasQuantities);\n    ;\n    args.push(this.Discrimination);\n    ;\n    args.push(this.Quality);\n    ;\n    args.push(this.Usage);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalQuantity = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalSimpleQuantity = class {\n  constructor(expressID, type, Name, Description, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPile = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n    this.ConstructionType = ConstructionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    return args;\n  }\n};\nvar IfcPileType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPixelTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.Width = Width;\n    this.Height = Height;\n    this.ColourComponents = ColourComponents;\n    this.Pixel = Pixel;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let Width = tape[ptr++];\n    let Height = tape[ptr++];\n    let ColourComponents = tape[ptr++];\n    let Pixel = tape[ptr++];\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.ColourComponents);\n    ;\n    args.push(this.Pixel);\n    ;\n    return args;\n  }\n};\nvar IfcPlacement = class {\n  constructor(expressID, type, Location) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    return new IfcPlacement(expressID, type, Location);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarBox = class {\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n    this.Placement = Placement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    let Placement = tape[ptr++];\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    args.push(this.Placement);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarExtent = class {\n  constructor(expressID, type, SizeInX, SizeInY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    return args;\n  }\n};\nvar IfcPlane = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcPlane(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPlate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPoint = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPoint(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPointOnCurve = class {\n  constructor(expressID, type, BasisCurve, PointParameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.PointParameter = PointParameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let PointParameter = tape[ptr++];\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.PointParameter);\n    ;\n    return args;\n  }\n};\nvar IfcPointOnSurface = class {\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.PointParameterU = PointParameterU;\n    this.PointParameterV = PointParameterV;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let PointParameterU = tape[ptr++];\n    let PointParameterV = tape[ptr++];\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.PointParameterU);\n    ;\n    args.push(this.PointParameterV);\n    ;\n    return args;\n  }\n};\nvar IfcPolyLoop = class {\n  constructor(expressID, type, Polygon) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Polygon = Polygon;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Polygon = tape[ptr++];\n    return new IfcPolyLoop(expressID, type, Polygon);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Polygon);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalBoundedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Position = Position;\n    this.PolygonalBoundary = PolygonalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Position = tape[ptr++];\n    let PolygonalBoundary = tape[ptr++];\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.PolygonalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalFaceSet = class {\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Closed = Closed;\n    this.Faces = Faces;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Closed = tape[ptr++];\n    let Faces = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.Faces);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcPolyline = class {\n  constructor(expressID, type, Points) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    return new IfcPolyline(expressID, type, Points);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    return args;\n  }\n};\nvar IfcPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPostalAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.InternalLocation = InternalLocation;\n    this.AddressLines = AddressLines;\n    this.PostalBox = PostalBox;\n    this.Town = Town;\n    this.Region = Region;\n    this.PostalCode = PostalCode;\n    this.Country = Country;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let InternalLocation = tape[ptr++];\n    let AddressLines = tape[ptr++];\n    let PostalBox = tape[ptr++];\n    let Town = tape[ptr++];\n    let Region = tape[ptr++];\n    let PostalCode = tape[ptr++];\n    let Country = tape[ptr++];\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.InternalLocation);\n    ;\n    args.push(this.AddressLines);\n    ;\n    args.push(this.PostalBox);\n    ;\n    args.push(this.Town);\n    ;\n    args.push(this.Region);\n    ;\n    args.push(this.PostalCode);\n    ;\n    args.push(this.Country);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedItem = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedItem(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedProperties = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPreDefinedProperties(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPreDefinedPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedTextFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedTextFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPresentationLayerAssignment = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationLayerWithStyle = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n    this.LayerOn = LayerOn;\n    this.LayerFrozen = LayerFrozen;\n    this.LayerBlocked = LayerBlocked;\n    this.LayerStyles = LayerStyles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    let LayerOn = tape[ptr++];\n    let LayerFrozen = tape[ptr++];\n    let LayerBlocked = tape[ptr++];\n    let LayerStyles = tape[ptr++];\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    args.push(this.LayerOn);\n    ;\n    args.push(this.LayerFrozen);\n    ;\n    args.push(this.LayerBlocked);\n    ;\n    args.push(this.LayerStyles);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyle = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPresentationStyle(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyleAssignment = class {\n  constructor(expressID, type, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Styles = tape[ptr++];\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcProcedure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcedureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcProductDefinitionShape = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProductRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    return args;\n  }\n};\nvar IfcProfileProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, ProfileDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.ProfileDefinition = ProfileDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let ProfileDefinition = tape[ptr++];\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties2, ProfileDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.ProfileDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcProject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectOrder = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProjectedCRS = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n    this.MapProjection = MapProjection;\n    this.MapZone = MapZone;\n    this.MapUnit = MapUnit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    let MapProjection = tape[ptr++];\n    let MapZone = tape[ptr++];\n    let MapUnit = tape[ptr++];\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    args.push(this.MapProjection);\n    ;\n    args.push(this.MapZone);\n    ;\n    args.push(this.MapUnit);\n    ;\n    return args;\n  }\n};\nvar IfcProjectionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyAbstraction = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPropertyAbstraction(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPropertyBoundedValue = class {\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UpperBoundValue = UpperBoundValue;\n    this.LowerBoundValue = LowerBoundValue;\n    this.Unit = Unit;\n    this.SetPointValue = SetPointValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UpperBoundValue = tape[ptr++];\n    let LowerBoundValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    let SetPointValue = tape[ptr++];\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UpperBoundValue);\n    ;\n    args.push(this.LowerBoundValue);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.SetPointValue);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDependencyRelationship = class {\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DependingProperty = DependingProperty;\n    this.DependantProperty = DependantProperty;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DependingProperty = tape[ptr++];\n    let DependantProperty = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DependingProperty);\n    ;\n    args.push(this.DependantProperty);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeratedValue = class {\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.EnumerationValues = EnumerationValues;\n    this.EnumerationReference = EnumerationReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let EnumerationReference = tape[ptr++];\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.EnumerationReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeration = class {\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.EnumerationValues = EnumerationValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyListValue = class {\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ListValues = ListValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ListValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ListValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyReferenceValue = class {\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.PropertyReference = PropertyReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let PropertyReference = tape[ptr++];\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.PropertyReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.ApplicableEntity = ApplicableEntity;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let ApplicableEntity = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.ApplicableEntity);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySingleValue = class {\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.NominalValue = NominalValue;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let NominalValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.NominalValue);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTableValue = class {\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefiningValues = DefiningValues;\n    this.DefinedValues = DefinedValues;\n    this.Expression = Expression;\n    this.DefiningUnit = DefiningUnit;\n    this.DefinedUnit = DefinedUnit;\n    this.CurveInterpolation = CurveInterpolation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefiningValues = tape[ptr++];\n    let DefinedValues = tape[ptr++];\n    let Expression = tape[ptr++];\n    let DefiningUnit = tape[ptr++];\n    let DefinedUnit = tape[ptr++];\n    let CurveInterpolation = tape[ptr++];\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefiningValues);\n    ;\n    args.push(this.DefinedValues);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.DefiningUnit);\n    ;\n    args.push(this.DefinedUnit);\n    ;\n    args.push(this.CurveInterpolation);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplateDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.ProxyType = ProxyType;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let ProxyType = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.ProxyType);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcPump = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPumpType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityArea = class {\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.AreaValue = AreaValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let AreaValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.AreaValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityCount = class {\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.CountValue = CountValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let CountValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.CountValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityLength = class {\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.LengthValue = LengthValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let LengthValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.LengthValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantitySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityTime = class {\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.TimeValue = TimeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityVolume = class {\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.VolumeValue = VolumeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let VolumeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.VolumeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityWeight = class {\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.WeightValue = WeightValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let WeightValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.WeightValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcRailing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRailingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.WallThickness = WallThickness;\n    this.InnerFilletRadius = InnerFilletRadius;\n    this.OuterFilletRadius = OuterFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let InnerFilletRadius = tape[ptr++];\n    let OuterFilletRadius = tape[ptr++];\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.InnerFilletRadius);\n    ;\n    args.push(this.OuterFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularPyramid = class {\n  constructor(expressID, type, Position, XLength, YLength, Height) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.Height = Height;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let Height = tape[ptr++];\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.Height);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularTrimmedSurface = class {\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.U1 = U1;\n    this.V1 = V1;\n    this.U2 = U2;\n    this.V2 = V2;\n    this.Usense = Usense;\n    this.Vsense = Vsense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let U1 = tape[ptr++];\n    let V1 = tape[ptr++];\n    let U2 = tape[ptr++];\n    let V2 = tape[ptr++];\n    let Usense = tape[ptr++];\n    let Vsense = tape[ptr++];\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.U1);\n    ;\n    args.push(this.V1);\n    ;\n    args.push(this.U2);\n    ;\n    args.push(this.V2);\n    ;\n    args.push(this.Usense);\n    ;\n    args.push(this.Vsense);\n    ;\n    return args;\n  }\n};\nvar IfcRecurrencePattern = class {\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RecurrenceType = RecurrenceType;\n    this.DayComponent = DayComponent;\n    this.WeekdayComponent = WeekdayComponent;\n    this.MonthComponent = MonthComponent;\n    this.Position = Position;\n    this.Interval = Interval;\n    this.Occurrences = Occurrences;\n    this.TimePeriods = TimePeriods;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RecurrenceType = tape[ptr++];\n    let DayComponent = tape[ptr++];\n    let WeekdayComponent = tape[ptr++];\n    let MonthComponent = tape[ptr++];\n    let Position = tape[ptr++];\n    let Interval = tape[ptr++];\n    let Occurrences = tape[ptr++];\n    let TimePeriods = tape[ptr++];\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RecurrenceType);\n    ;\n    args.push(this.DayComponent);\n    ;\n    args.push(this.WeekdayComponent);\n    ;\n    args.push(this.MonthComponent);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Interval);\n    ;\n    args.push(this.Occurrences);\n    ;\n    args.push(this.TimePeriods);\n    ;\n    return args;\n  }\n};\nvar IfcReference = class {\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TypeIdentifier = TypeIdentifier;\n    this.AttributeIdentifier = AttributeIdentifier;\n    this.InstanceName = InstanceName;\n    this.ListPositions = ListPositions;\n    this.InnerReference = InnerReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TypeIdentifier = tape[ptr++];\n    let AttributeIdentifier = tape[ptr++];\n    let InstanceName = tape[ptr++];\n    let ListPositions = tape[ptr++];\n    let InnerReference = tape[ptr++];\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TypeIdentifier);\n    ;\n    args.push(this.AttributeIdentifier);\n    ;\n    args.push(this.InstanceName);\n    ;\n    args.push(this.ListPositions);\n    ;\n    args.push(this.InnerReference);\n    ;\n    return args;\n  }\n};\nvar IfcReferent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.RestartDistance = RestartDistance;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let RestartDistance = tape[ptr++];\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.RestartDistance);\n    ;\n    return args;\n  }\n};\nvar IfcRegularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.TimeStep = TimeStep;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeStep = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeStep);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementBarProperties = class {\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\n    this.SteelGrade = SteelGrade;\n    this.BarSurface = BarSurface;\n    this.EffectiveDepth = EffectiveDepth;\n    this.NominalBarDiameter = NominalBarDiameter;\n    this.BarCount = BarCount;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TotalCrossSectionArea = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let EffectiveDepth = tape[ptr++];\n    let NominalBarDiameter = tape[ptr++];\n    let BarCount = tape[ptr++];\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TotalCrossSectionArea);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.EffectiveDepth);\n    ;\n    args.push(this.NominalBarDiameter);\n    ;\n    args.push(this.BarCount);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementDefinitionProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefinitionType = DefinitionType;\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefinitionType = tape[ptr++];\n    let ReinforcementSectionDefinitions = tape[ptr++];\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefinitionType);\n    ;\n    args.push(this.ReinforcementSectionDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.PredefinedType = PredefinedType;\n    this.BarSurface = BarSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.BarSurface);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBarType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.BarSurface = BarSurface;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMesh = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMeshType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcRelAggregates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssigns = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingActor = RelatingActor;\n    this.ActingRole = ActingRole;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingActor = tape[ptr++];\n    let ActingRole = tape[ptr++];\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingActor);\n    ;\n    args.push(this.ActingRole);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingControl = RelatingControl;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingControl = tape[ptr++];\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingControl);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroupByFactor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n    this.Factor = Factor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    let Factor = tape[ptr++];\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    args.push(this.Factor);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProcess = RelatingProcess;\n    this.QuantityInProcess = QuantityInProcess;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let QuantityInProcess = tape[ptr++];\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.QuantityInProcess);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProduct = RelatingProduct;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProduct = tape[ptr++];\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProduct);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingResource = RelatingResource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingResource = tape[ptr++];\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingResource);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesApproval = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesClassification = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingClassification = RelatingClassification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingClassification = tape[ptr++];\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingClassification);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesConstraint = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.Intent = Intent;\n    this.RelatingConstraint = RelatingConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let Intent = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.Intent);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesDocument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingDocument = RelatingDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingLibrary = RelatingLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingLibrary = tape[ptr++];\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesMaterial = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingMaterial = RelatingMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnects = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPathElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RelatingPriorities = RelatingPriorities;\n    this.RelatedPriorities = RelatedPriorities;\n    this.RelatedConnectionType = RelatedConnectionType;\n    this.RelatingConnectionType = RelatingConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RelatingPriorities = tape[ptr++];\n    let RelatedPriorities = tape[ptr++];\n    let RelatedConnectionType = tape[ptr++];\n    let RelatingConnectionType = tape[ptr++];\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RelatingPriorities);\n    ;\n    args.push(this.RelatedPriorities);\n    ;\n    args.push(this.RelatedConnectionType);\n    ;\n    args.push(this.RelatingConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPortToElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPorts = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedPort = RelatedPort;\n    this.RealizingElement = RealizingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedPort = tape[ptr++];\n    let RealizingElement = tape[ptr++];\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedPort);\n    ;\n    args.push(this.RealizingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedStructuralActivity = tape[ptr++];\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedStructuralActivity);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithEccentricity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n    this.ConnectionConstraint = ConnectionConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    let ConnectionConstraint = tape[ptr++];\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    args.push(this.ConnectionConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithRealizingElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RealizingElements = RealizingElements;\n    this.ConnectionType = ConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RealizingElements = tape[ptr++];\n    let ConnectionType = tape[ptr++];\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RealizingElements);\n    ;\n    args.push(this.ConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelContainedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversBldgElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversSpaces = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelDeclares = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingContext = RelatingContext;\n    this.RelatedDefinitions = RelatedDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingContext = tape[ptr++];\n    let RelatedDefinitions = tape[ptr++];\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingContext);\n    ;\n    args.push(this.RelatedDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcRelDecomposes = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefines = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingObject = RelatingObject;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingPropertyDefinition = tape[ptr++];\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingPropertyDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedPropertySets = RelatedPropertySets;\n    this.RelatingTemplate = RelatingTemplate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedPropertySets = tape[ptr++];\n    let RelatingTemplate = tape[ptr++];\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedPropertySets);\n    ;\n    args.push(this.RelatingTemplate);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingType = RelatingType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingType = tape[ptr++];\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingType);\n    ;\n    return args;\n  }\n};\nvar IfcRelFillsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOpeningElement = RelatingOpeningElement;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOpeningElement = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOpeningElement);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelFlowControlElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedControlElements = RelatedControlElements;\n    this.RelatingFlowElement = RelatingFlowElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedControlElements = tape[ptr++];\n    let RelatingFlowElement = tape[ptr++];\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedControlElements);\n    ;\n    args.push(this.RelatingFlowElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelInterferesElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.InterferenceGeometry = InterferenceGeometry;\n    this.InterferenceType = InterferenceType;\n    this.ImpliedOrder = ImpliedOrder;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let InterferenceGeometry = tape[ptr++];\n    let InterferenceType = tape[ptr++];\n    let ImpliedOrder = tape[ptr++];\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.InterferenceGeometry);\n    ;\n    args.push(this.InterferenceType);\n    ;\n    args.push(this.ImpliedOrder);\n    ;\n    return args;\n  }\n};\nvar IfcRelNests = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelPositions = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPositioningElement = RelatingPositioningElement;\n    this.RelatedProducts = RelatedProducts;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPositioningElement = tape[ptr++];\n    let RelatedProducts = tape[ptr++];\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPositioningElement);\n    ;\n    args.push(this.RelatedProducts);\n    ;\n    return args;\n  }\n};\nvar IfcRelProjectsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedFeatureElement = RelatedFeatureElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedFeatureElement = tape[ptr++];\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedFeatureElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelReferencedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelSequence = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingProcess = RelatingProcess;\n    this.RelatedProcess = RelatedProcess;\n    this.TimeLag = TimeLag;\n    this.SequenceType = SequenceType;\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let RelatedProcess = tape[ptr++];\n    let TimeLag = tape[ptr++];\n    let SequenceType = tape[ptr++];\n    let UserDefinedSequenceType = tape[ptr++];\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.RelatedProcess);\n    ;\n    args.push(this.TimeLag);\n    ;\n    args.push(this.SequenceType);\n    ;\n    args.push(this.UserDefinedSequenceType);\n    ;\n    return args;\n  }\n};\nvar IfcRelServicesBuildings = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSystem = RelatingSystem;\n    this.RelatedBuildings = RelatedBuildings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSystem = tape[ptr++];\n    let RelatedBuildings = tape[ptr++];\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSystem);\n    ;\n    args.push(this.RelatedBuildings);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary1stLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary2ndLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n    this.CorrespondingBoundary = CorrespondingBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    let CorrespondingBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    args.push(this.CorrespondingBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelVoidsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedOpeningElement = RelatedOpeningElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedOpeningElement = tape[ptr++];\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedOpeningElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelationship = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcReparametrisedCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n    this.ParamLength = ParamLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    let ParamLength = tape[ptr++];\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    args.push(this.ParamLength);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcRepresentationMap = class {\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingOrigin = MappingOrigin;\n    this.MappedRepresentation = MappedRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingOrigin = tape[ptr++];\n    let MappedRepresentation = tape[ptr++];\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingOrigin);\n    ;\n    args.push(this.MappedRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcResourceApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcResourceConstraintRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingConstraint = RelatingConstraint;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcResourceLevelRelationship = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcResourceTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ScheduleWork = ScheduleWork;\n    this.ScheduleUsage = ScheduleUsage;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.ScheduleContour = ScheduleContour;\n    this.LevelingDelay = LevelingDelay;\n    this.IsOverAllocated = IsOverAllocated;\n    this.StatusTime = StatusTime;\n    this.ActualWork = ActualWork;\n    this.ActualUsage = ActualUsage;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingWork = RemainingWork;\n    this.RemainingUsage = RemainingUsage;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ScheduleWork = tape[ptr++];\n    let ScheduleUsage = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let ScheduleContour = tape[ptr++];\n    let LevelingDelay = tape[ptr++];\n    let IsOverAllocated = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualWork = tape[ptr++];\n    let ActualUsage = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingWork = tape[ptr++];\n    let RemainingUsage = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ScheduleWork);\n    ;\n    args.push(this.ScheduleUsage);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.ScheduleContour);\n    ;\n    args.push(this.LevelingDelay);\n    ;\n    args.push(this.IsOverAllocated);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualWork);\n    ;\n    args.push(this.ActualUsage);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingWork);\n    ;\n    args.push(this.RemainingUsage);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCone = class {\n  constructor(expressID, type, Position, Height, BottomRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.BottomRadius = BottomRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let BottomRadius = tape[ptr++];\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.BottomRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCylinder = class {\n  constructor(expressID, type, Position, Height, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcRoof = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoofType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoot = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRoundedRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.RoundingRadius = RoundingRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let RoundingRadius = tape[ptr++];\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.RoundingRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSIUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Prefix = Prefix;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Prefix = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Prefix);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSchedulingTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    return args;\n  }\n};\nvar IfcSeamCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSectionProperties = class {\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SectionType = SectionType;\n    this.StartProfile = StartProfile;\n    this.EndProfile = EndProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SectionType = tape[ptr++];\n    let StartProfile = tape[ptr++];\n    let EndProfile = tape[ptr++];\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SectionType);\n    ;\n    args.push(this.StartProfile);\n    ;\n    args.push(this.EndProfile);\n    ;\n    return args;\n  }\n};\nvar IfcSectionReinforcementProperties = class {\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\n    this.TransversePosition = TransversePosition;\n    this.ReinforcementRole = ReinforcementRole;\n    this.SectionDefinition = SectionDefinition;\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LongitudinalStartPosition = tape[ptr++];\n    let LongitudinalEndPosition = tape[ptr++];\n    let TransversePosition = tape[ptr++];\n    let ReinforcementRole = tape[ptr++];\n    let SectionDefinition = tape[ptr++];\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LongitudinalStartPosition);\n    ;\n    args.push(this.LongitudinalEndPosition);\n    ;\n    args.push(this.TransversePosition);\n    ;\n    args.push(this.ReinforcementRole);\n    ;\n    args.push(this.SectionDefinition);\n    ;\n    args.push(this.CrossSectionReinforcementDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolid = class {\n  constructor(expressID, type, Directrix, CrossSections) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolidHorizontal = class {\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n    this.FixedAxisVertical = FixedAxisVertical;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    let FixedAxisVertical = tape[ptr++];\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    args.push(this.FixedAxisVertical);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSpine = class {\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SpineCurve = SpineCurve;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SpineCurve = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SpineCurve);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    return args;\n  }\n};\nvar IfcSensor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSensorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShapeAspect = class {\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ShapeRepresentations = ShapeRepresentations;\n    this.Name = Name;\n    this.Description = Description;\n    this.ProductDefinitional = ProductDefinitional;\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ShapeRepresentations = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ProductDefinitional = tape[ptr++];\n    let PartOfProductDefinitionShape = tape[ptr++];\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ShapeRepresentations);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ProductDefinitional);\n    ;\n    args.push(this.PartOfProductDefinitionShape);\n    ;\n    return args;\n  }\n};\nvar IfcShapeModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShapeRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShellBasedSurfaceModel = class {\n  constructor(expressID, type, SbsmBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SbsmBoundary = SbsmBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SbsmBoundary = tape[ptr++];\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SbsmBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcSimpleProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcSimpleProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcSimplePropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.PrimaryMeasureType = PrimaryMeasureType;\n    this.SecondaryMeasureType = SecondaryMeasureType;\n    this.Enumerators = Enumerators;\n    this.PrimaryUnit = PrimaryUnit;\n    this.SecondaryUnit = SecondaryUnit;\n    this.Expression = Expression;\n    this.AccessState = AccessState;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let PrimaryMeasureType = tape[ptr++];\n    let SecondaryMeasureType = tape[ptr++];\n    let Enumerators = tape[ptr++];\n    let PrimaryUnit = tape[ptr++];\n    let SecondaryUnit = tape[ptr++];\n    let Expression = tape[ptr++];\n    let AccessState = tape[ptr++];\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.PrimaryMeasureType);\n    ;\n    args.push(this.SecondaryMeasureType);\n    ;\n    args.push(this.Enumerators);\n    ;\n    args.push(this.PrimaryUnit);\n    ;\n    args.push(this.SecondaryUnit);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.AccessState);\n    ;\n    return args;\n  }\n};\nvar IfcSite = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.RefLatitude = RefLatitude;\n    this.RefLongitude = RefLongitude;\n    this.RefElevation = RefElevation;\n    this.LandTitleNumber = LandTitleNumber;\n    this.SiteAddress = SiteAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let RefLatitude = tape[ptr++];\n    let RefLongitude = tape[ptr++];\n    let RefElevation = tape[ptr++];\n    let LandTitleNumber = tape[ptr++];\n    let SiteAddress = tape[ptr++];\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.RefLatitude);\n    ;\n    args.push(this.RefLongitude);\n    ;\n    args.push(this.RefElevation);\n    ;\n    args.push(this.LandTitleNumber);\n    ;\n    args.push(this.SiteAddress);\n    ;\n    return args;\n  }\n};\nvar IfcSlab = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlippageConnectionCondition = class {\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SlippageX = SlippageX;\n    this.SlippageY = SlippageY;\n    this.SlippageZ = SlippageZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SlippageX = tape[ptr++];\n    let SlippageY = tape[ptr++];\n    let SlippageZ = tape[ptr++];\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SlippageX);\n    ;\n    args.push(this.SlippageY);\n    ;\n    args.push(this.SlippageZ);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolidModel = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSolidModel(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSpace = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n    this.ElevationWithFlooring = ElevationWithFlooring;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ElevationWithFlooring = tape[ptr++];\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ElevationWithFlooring);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeater = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeaterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZoneType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSphere = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphere(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcSphericalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStair = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NumberOfRisers = NumberOfRisers;\n    this.NumberOfTreads = NumberOfTreads;\n    this.RiserHeight = RiserHeight;\n    this.TreadLength = TreadLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NumberOfRisers = tape[ptr++];\n    let NumberOfTreads = tape[ptr++];\n    let RiserHeight = tape[ptr++];\n    let TreadLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NumberOfRisers);\n    ;\n    args.push(this.NumberOfTreads);\n    ;\n    args.push(this.RiserHeight);\n    ;\n    args.push(this.TreadLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAnalysisModel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\n    this.LoadedBy = LoadedBy;\n    this.HasResults = HasResults;\n    this.SharedPlacement = SharedPlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OrientationOf2DPlane = tape[ptr++];\n    let LoadedBy = tape[ptr++];\n    let HasResults = tape[ptr++];\n    let SharedPlacement = tape[ptr++];\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OrientationOf2DPlane);\n    ;\n    args.push(this.LoadedBy);\n    ;\n    args.push(this.HasResults);\n    ;\n    args.push(this.SharedPlacement);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnectionCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLinearAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoad = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoad(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let SelfWeightCoefficients = tape[ptr++];\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.SelfWeightCoefficients);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadConfiguration = class {\n  constructor(expressID, type, Name, Values, Locations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Values = Values;\n    this.Locations = Locations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Values = tape[ptr++];\n    let Locations = tape[ptr++];\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Values);\n    ;\n    args.push(this.Locations);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadLinearForce = class {\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LinearForceX = LinearForceX;\n    this.LinearForceY = LinearForceY;\n    this.LinearForceZ = LinearForceZ;\n    this.LinearMomentX = LinearMomentX;\n    this.LinearMomentY = LinearMomentY;\n    this.LinearMomentZ = LinearMomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LinearForceX = tape[ptr++];\n    let LinearForceY = tape[ptr++];\n    let LinearForceZ = tape[ptr++];\n    let LinearMomentX = tape[ptr++];\n    let LinearMomentY = tape[ptr++];\n    let LinearMomentZ = tape[ptr++];\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LinearForceX);\n    ;\n    args.push(this.LinearForceY);\n    ;\n    args.push(this.LinearForceZ);\n    ;\n    args.push(this.LinearMomentX);\n    ;\n    args.push(this.LinearMomentY);\n    ;\n    args.push(this.LinearMomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadOrResult = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadPlanarForce = class {\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PlanarForceX = PlanarForceX;\n    this.PlanarForceY = PlanarForceY;\n    this.PlanarForceZ = PlanarForceZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PlanarForceX = tape[ptr++];\n    let PlanarForceY = tape[ptr++];\n    let PlanarForceZ = tape[ptr++];\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PlanarForceX);\n    ;\n    args.push(this.PlanarForceY);\n    ;\n    args.push(this.PlanarForceZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacement = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n    this.Distortion = Distortion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    let Distortion = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    args.push(this.Distortion);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForce = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForceWarping = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n    this.WarpingMoment = WarpingMoment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    let WarpingMoment = tape[ptr++];\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    args.push(this.WarpingMoment);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadStatic = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadStatic(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadTemperature = class {\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DeltaTConstant = DeltaTConstant;\n    this.DeltaTY = DeltaTY;\n    this.DeltaTZ = DeltaTZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DeltaTConstant = tape[ptr++];\n    let DeltaTY = tape[ptr++];\n    let DeltaTZ = tape[ptr++];\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DeltaTConstant);\n    ;\n    args.push(this.DeltaTY);\n    ;\n    args.push(this.DeltaTZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPlanarAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralResultGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheoryType = TheoryType;\n    this.ResultForLoadGroup = ResultForLoadGroup;\n    this.IsLinear = IsLinear;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheoryType = tape[ptr++];\n    let ResultForLoadGroup = tape[ptr++];\n    let IsLinear = tape[ptr++];\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheoryType);\n    ;\n    args.push(this.ResultForLoadGroup);\n    ;\n    args.push(this.IsLinear);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStyleModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcStyledItem = class {\n  constructor(expressID, type, Item, Styles, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Item = Item;\n    this.Styles = Styles;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Item = tape[ptr++];\n    let Styles = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Item);\n    ;\n    args.push(this.Styles);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStyledRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubedge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.ParentEdge = ParentEdge;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let ParentEdge = tape[ptr++];\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.ParentEdge);\n    ;\n    return args;\n  }\n};\nvar IfcSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSurfaceCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceCurveSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.ReferenceSurface = ReferenceSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let ReferenceSurface = tape[ptr++];\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.ReferenceSurface);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfLinearExtrusion = class {\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfRevolution = class {\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.AxisPosition = AxisPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let AxisPosition = tape[ptr++];\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.AxisPosition);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceReinforcementArea = class {\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\n    this.ShearReinforcement = ShearReinforcement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SurfaceReinforcement1 = tape[ptr++];\n    let SurfaceReinforcement2 = tape[ptr++];\n    let ShearReinforcement = tape[ptr++];\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SurfaceReinforcement1);\n    ;\n    args.push(this.SurfaceReinforcement2);\n    ;\n    args.push(this.ShearReinforcement);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyle = class {\n  constructor(expressID, type, Name, Side, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Side = Side;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Side = tape[ptr++];\n    let Styles = tape[ptr++];\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Side);\n    ;\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleLighting = class {\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\n    this.TransmissionColour = TransmissionColour;\n    this.ReflectanceColour = ReflectanceColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DiffuseTransmissionColour = tape[ptr++];\n    let DiffuseReflectionColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let ReflectanceColour = tape[ptr++];\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.DiffuseReflectionColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.ReflectanceColour);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRefraction = class {\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RefractionIndex = RefractionIndex;\n    this.DispersionFactor = DispersionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RefractionIndex = tape[ptr++];\n    let DispersionFactor = tape[ptr++];\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RefractionIndex);\n    ;\n    args.push(this.DispersionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRendering = class {\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n    this.DiffuseColour = DiffuseColour;\n    this.TransmissionColour = TransmissionColour;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.ReflectionColour = ReflectionColour;\n    this.SpecularColour = SpecularColour;\n    this.SpecularHighlight = SpecularHighlight;\n    this.ReflectanceMethod = ReflectanceMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    let DiffuseColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let DiffuseTransmissionColour = tape[ptr++];\n    let ReflectionColour = tape[ptr++];\n    let SpecularColour = tape[ptr++];\n    let SpecularHighlight = tape[ptr++];\n    let ReflectanceMethod = tape[ptr++];\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    args.push(this.DiffuseColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.ReflectionColour);\n    ;\n    args.push(this.SpecularColour);\n    ;\n    args.push(this.SpecularHighlight);\n    ;\n    args.push(this.ReflectanceMethod);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleShading = class {\n  constructor(expressID, type, SurfaceColour, Transparency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleWithTextures = class {\n  constructor(expressID, type, Textures) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Textures = Textures;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Textures = tape[ptr++];\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Textures);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolid = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolidPolygonal = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FilletRadius = FilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSweptSurface = class {\n  constructor(expressID, type, SweptCurve, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.WebEdgeRadius = WebEdgeRadius;\n    this.WebSlope = WebSlope;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let WebEdgeRadius = tape[ptr++];\n    let WebSlope = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.WebEdgeRadius);\n    ;\n    args.push(this.WebSlope);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcTable = class {\n  constructor(expressID, type, Name, Rows, Columns) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Rows = Rows;\n    this.Columns = Columns;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Rows = tape[ptr++];\n    let Columns = tape[ptr++];\n    return new IfcTable(expressID, type, Name, Rows, Columns);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Rows);\n    ;\n    args.push(this.Columns);\n    ;\n    return args;\n  }\n};\nvar IfcTableColumn = class {\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcTableRow = class {\n  constructor(expressID, type, RowCells, IsHeading) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RowCells = RowCells;\n    this.IsHeading = IsHeading;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RowCells = tape[ptr++];\n    let IsHeading = tape[ptr++];\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RowCells);\n    ;\n    args.push(this.IsHeading);\n    ;\n    return args;\n  }\n};\nvar IfcTank = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTankType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTask = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Status = Status;\n    this.WorkMethod = WorkMethod;\n    this.IsMilestone = IsMilestone;\n    this.Priority = Priority;\n    this.TaskTime = TaskTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Status = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    let IsMilestone = tape[ptr++];\n    let Priority = tape[ptr++];\n    let TaskTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    args.push(this.IsMilestone);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.TaskTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTimeRecurring = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n    this.Recurrence = Recurrence;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    let Recurrence = tape[ptr++];\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    args.push(this.Recurrence);\n    ;\n    return args;\n  }\n};\nvar IfcTaskType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.WorkMethod = WorkMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    return args;\n  }\n};\nvar IfcTelecomAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.TelephoneNumbers = TelephoneNumbers;\n    this.FacsimileNumbers = FacsimileNumbers;\n    this.PagerNumber = PagerNumber;\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\n    this.WWWHomePageURL = WWWHomePageURL;\n    this.MessagingIDs = MessagingIDs;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let TelephoneNumbers = tape[ptr++];\n    let FacsimileNumbers = tape[ptr++];\n    let PagerNumber = tape[ptr++];\n    let ElectronicMailAddresses = tape[ptr++];\n    let WWWHomePageURL = tape[ptr++];\n    let MessagingIDs = tape[ptr++];\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.TelephoneNumbers);\n    ;\n    args.push(this.FacsimileNumbers);\n    ;\n    args.push(this.PagerNumber);\n    ;\n    args.push(this.ElectronicMailAddresses);\n    ;\n    args.push(this.WWWHomePageURL);\n    ;\n    args.push(this.MessagingIDs);\n    ;\n    return args;\n  }\n};\nvar IfcTendon = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.TensionForce = TensionForce;\n    this.PreStress = PreStress;\n    this.FrictionCoefficient = FrictionCoefficient;\n    this.AnchorageSlip = AnchorageSlip;\n    this.MinCurvatureRadius = MinCurvatureRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let TensionForce = tape[ptr++];\n    let PreStress = tape[ptr++];\n    let FrictionCoefficient = tape[ptr++];\n    let AnchorageSlip = tape[ptr++];\n    let MinCurvatureRadius = tape[ptr++];\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.TensionForce);\n    ;\n    args.push(this.PreStress);\n    ;\n    args.push(this.FrictionCoefficient);\n    ;\n    args.push(this.AnchorageSlip);\n    ;\n    args.push(this.MinCurvatureRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.SheathDiameter = SheathDiameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let SheathDiameter = tape[ptr++];\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.SheathDiameter);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedFaceSet = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTessellatedItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTextLiteral = class {\n  constructor(expressID, type, Literal, Placement, Path) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    return args;\n  }\n};\nvar IfcTextLiteralWithExtent = class {\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n    this.Extent = Extent;\n    this.BoxAlignment = BoxAlignment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    let Extent = tape[ptr++];\n    let BoxAlignment = tape[ptr++];\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    args.push(this.Extent);\n    ;\n    args.push(this.BoxAlignment);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyle = class {\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TextCharacterAppearance = TextCharacterAppearance;\n    this.TextStyle = TextStyle;\n    this.TextFontStyle = TextFontStyle;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TextCharacterAppearance = tape[ptr++];\n    let TextStyle = tape[ptr++];\n    let TextFontStyle = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TextCharacterAppearance);\n    ;\n    args.push(this.TextStyle);\n    ;\n    args.push(this.TextFontStyle);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleFontModel = class {\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FontFamily = FontFamily;\n    this.FontStyle = FontStyle;\n    this.FontVariant = FontVariant;\n    this.FontWeight = FontWeight;\n    this.FontSize = FontSize;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FontFamily = tape[ptr++];\n    let FontStyle = tape[ptr++];\n    let FontVariant = tape[ptr++];\n    let FontWeight = tape[ptr++];\n    let FontSize = tape[ptr++];\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FontFamily);\n    ;\n    args.push(this.FontStyle);\n    ;\n    args.push(this.FontVariant);\n    ;\n    args.push(this.FontWeight);\n    ;\n    args.push(this.FontSize);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleForDefinedFont = class {\n  constructor(expressID, type, Colour, BackgroundColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Colour = Colour;\n    this.BackgroundColour = BackgroundColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Colour = tape[ptr++];\n    let BackgroundColour = tape[ptr++];\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Colour);\n    ;\n    args.push(this.BackgroundColour);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleTextModel = class {\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TextIndent = TextIndent;\n    this.TextAlign = TextAlign;\n    this.TextDecoration = TextDecoration;\n    this.LetterSpacing = LetterSpacing;\n    this.WordSpacing = WordSpacing;\n    this.TextTransform = TextTransform;\n    this.LineHeight = LineHeight;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TextIndent = tape[ptr++];\n    let TextAlign = tape[ptr++];\n    let TextDecoration = tape[ptr++];\n    let LetterSpacing = tape[ptr++];\n    let WordSpacing = tape[ptr++];\n    let TextTransform = tape[ptr++];\n    let LineHeight = tape[ptr++];\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TextIndent);\n    ;\n    args.push(this.TextAlign);\n    ;\n    args.push(this.TextDecoration);\n    ;\n    args.push(this.LetterSpacing);\n    ;\n    args.push(this.WordSpacing);\n    ;\n    args.push(this.TextTransform);\n    ;\n    args.push(this.LineHeight);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinate = class {\n  constructor(expressID, type, Maps) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    return new IfcTextureCoordinate(expressID, type, Maps);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinateGenerator = class {\n  constructor(expressID, type, Maps, Mode, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Mode = Mode;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Mode = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcTextureMap = class {\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Vertices = Vertices;\n    this.MappedTo = MappedTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Vertices = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Vertices);\n    ;\n    args.push(this.MappedTo);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertex = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTextureVertex(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertexList = class {\n  constructor(expressID, type, TexCoordsList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TexCoordsList = TexCoordsList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TexCoordsList = tape[ptr++];\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TexCoordsList);\n    ;\n    return args;\n  }\n};\nvar IfcTimePeriod = class {\n  constructor(expressID, type, StartTime, EndTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeriesValue = class {\n  constructor(expressID, type, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ListValues = tape[ptr++];\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcTopologicalRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTopologicalRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTopologyRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcToroidalSurface = class {\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.MajorRadius = MajorRadius;\n    this.MinorRadius = MinorRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let MajorRadius = tape[ptr++];\n    let MinorRadius = tape[ptr++];\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.MajorRadius);\n    ;\n    args.push(this.MinorRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTransformer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransformerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransitionCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.StartRadius = StartRadius;\n    this.EndRadius = EndRadius;\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\n    this.TransitionCurveType = TransitionCurveType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let StartRadius = tape[ptr++];\n    let EndRadius = tape[ptr++];\n    let IsStartRadiusCCW = tape[ptr++];\n    let IsEndRadiusCCW = tape[ptr++];\n    let TransitionCurveType = tape[ptr++];\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.StartRadius);\n    ;\n    args.push(this.EndRadius);\n    ;\n    args.push(this.IsStartRadiusCCW);\n    ;\n    args.push(this.IsEndRadiusCCW);\n    ;\n    args.push(this.TransitionCurveType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTrapeziumProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomXDim = BottomXDim;\n    this.TopXDim = TopXDim;\n    this.YDim = YDim;\n    this.TopXOffset = TopXOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomXDim = tape[ptr++];\n    let TopXDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let TopXOffset = tape[ptr++];\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomXDim);\n    ;\n    args.push(this.TopXDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.TopXOffset);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedFaceSet = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedIrregularNetwork = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n    this.Flags = Flags;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    let Flags = tape[ptr++];\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    args.push(this.Flags);\n    ;\n    return args;\n  }\n};\nvar IfcTrimmedCurve = class {\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Trim1 = Trim1;\n    this.Trim2 = Trim2;\n    this.SenseAgreement = SenseAgreement;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Trim1 = tape[ptr++];\n    let Trim2 = tape[ptr++];\n    let SenseAgreement = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Trim1);\n    ;\n    args.push(this.Trim2);\n    ;\n    args.push(this.SenseAgreement);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundleType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcTypeResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    return args;\n  }\n};\nvar IfcUShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcUnitAssignment = class {\n  constructor(expressID, type, Units) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Units = Units;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Units = tape[ptr++];\n    return new IfcUnitAssignment(expressID, type, Units);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Units);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValve = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValveType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVector = class {\n  constructor(expressID, type, Orientation, Magnitude) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Orientation = Orientation;\n    this.Magnitude = Magnitude;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Orientation = tape[ptr++];\n    let Magnitude = tape[ptr++];\n    return new IfcVector(expressID, type, Orientation, Magnitude);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Orientation);\n    ;\n    args.push(this.Magnitude);\n    ;\n    return args;\n  }\n};\nvar IfcVertex = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcVertex(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcVertexLoop = class {\n  constructor(expressID, type, LoopVertex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LoopVertex = LoopVertex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LoopVertex = tape[ptr++];\n    return new IfcVertexLoop(expressID, type, LoopVertex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LoopVertex);\n    ;\n    return args;\n  }\n};\nvar IfcVertexPoint = class {\n  constructor(expressID, type, VertexGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VertexGeometry = VertexGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VertexGeometry = tape[ptr++];\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VertexGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualGridIntersection = class {\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\n    this.expressID = expressID;\n    this.type = type;\n    this.IntersectingAxes = IntersectingAxes;\n    this.OffsetDistances = OffsetDistances;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let IntersectingAxes = tape[ptr++];\n    let OffsetDistances = tape[ptr++];\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.IntersectingAxes);\n    ;\n    args.push(this.OffsetDistances);\n    ;\n    return args;\n  }\n};\nvar IfcVoidingFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWindow = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.TransomThickness = TransomThickness;\n    this.MullionThickness = MullionThickness;\n    this.FirstTransomOffset = FirstTransomOffset;\n    this.SecondTransomOffset = SecondTransomOffset;\n    this.FirstMullionOffset = FirstMullionOffset;\n    this.SecondMullionOffset = SecondMullionOffset;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningOffset = LiningOffset;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let MullionThickness = tape[ptr++];\n    let FirstTransomOffset = tape[ptr++];\n    let SecondTransomOffset = tape[ptr++];\n    let FirstMullionOffset = tape[ptr++];\n    let SecondMullionOffset = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.MullionThickness);\n    ;\n    args.push(this.FirstTransomOffset);\n    ;\n    args.push(this.SecondTransomOffset);\n    ;\n    args.push(this.FirstMullionOffset);\n    ;\n    args.push(this.SecondMullionOffset);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcWindowPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ConstructionType = ConstructionType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcWindowType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkCalendar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.WorkingTimes = WorkingTimes;\n    this.ExceptionTimes = ExceptionTimes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let WorkingTimes = tape[ptr++];\n    let ExceptionTimes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.WorkingTimes);\n    ;\n    args.push(this.ExceptionTimes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    return args;\n  }\n};\nvar IfcWorkPlan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.RecurrencePattern = RecurrencePattern;\n    this.Start = Start;\n    this.Finish = Finish;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let RecurrencePattern = tape[ptr++];\n    let Start = tape[ptr++];\n    let Finish = tape[ptr++];\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.RecurrencePattern);\n    ;\n    args.push(this.Start);\n    ;\n    args.push(this.Finish);\n    ;\n    return args;\n  }\n};\nvar IfcZShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    return args;\n  }\n};\nvar IfcZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\n\n// dist/helpers/ifc-elements.ts\nvar IfcElements2 = {\n  103090709: \"IFCPROJECT\",\n  4097777520: \"IFCSITE\",\n  4031249490: \"IFCBUILDING\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  3856911033: \"IFCSPACE\",\n  1674181508: \"IFCANNOTATION\",\n  25142252: \"IFCCONTROLLER\",\n  32344328: \"IFCBOILER\",\n  76236018: \"IFCLAMP\",\n  90941305: \"IFCPUMP\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  310824031: \"IFCPIPEFITTING\",\n  331165859: \"IFCSTAIR\",\n  342316401: \"IFCDUCTFITTING\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  395920057: \"IFCDOOR\",\n  402227799: \"IFCELECTRICMOTOR\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  484807127: \"IFCEVAPORATOR\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  639361253: \"IFCCOIL\",\n  647756555: \"IFCFASTENER\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  753842376: \"IFCBEAM\",\n  812556717: \"IFCTANK\",\n  819412036: \"IFCFILTER\",\n  843113511: \"IFCCOLUMN\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  900683007: \"IFCFOOTING\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  979691226: \"IFCREINFORCINGBAR\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  1051757585: \"IFCCABLEFITTING\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  1073191201: \"IFCMEMBER\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  1360408905: \"IFCDUCTSILENCER\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1509553395: \"IFCFURNITURE\",\n  1529196076: \"IFCSLAB\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  1634111441: \"IFCAIRTERMINAL\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  1677625105: \"IFCCIVILELEMENT\",\n  1687234759: \"IFCPILE\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  1973544240: \"IFCCOVERING\",\n  1999602285: \"IFCSPACEHEATER\",\n  2016517767: \"IFCROOF\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  2068733104: \"IFCHUMIDIFIER\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  2188021234: \"IFCFLOWMETER\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2262370178: \"IFCRAILING\",\n  2272882330: \"IFCCONDENSER\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2347447852: \"IFCTENDONANCHOR\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  2391406946: \"IFCWALL\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  2814081492: \"IFCENGINE\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  2938176219: \"IFCBURNER\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  3024970846: \"IFCRAMP\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  3087945054: \"IFCALARM\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  3171933400: \"IFCPLATE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  3296154744: \"IFCCHIMNEY\",\n  3304561284: \"IFCWINDOW\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  3415622556: \"IFCFAN\",\n  3420628829: \"IFCSOLARDEVICE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  3495092785: \"IFCCURTAINWALL\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3612865200: \"IFCPIPESEGMENT\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  3694346114: \"IFCOUTLET\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3824725483: \"IFCTENDON\",\n  3825984169: \"IFCTRANSFORMER\",\n  3902619387: \"IFCCHILLER\",\n  4074379575: \"IFCDAMPER\",\n  4086658281: \"IFCSENSOR\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  4175244083: \"IFCINTERCEPTOR\",\n  4207607924: \"IFCVALVE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  4237592921: \"IFCWASTETERMINAL\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  4278956645: \"IFCFLOWFITTING\",\n  4288193352: \"IFCACTUATOR\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  3009204131: \"IFCGRID\"\n};\n\n// dist/helpers/types-map.ts\nvar IfcTypesMap = {\n  3821786052: \"IFCACTIONREQUEST\",\n  2296667514: \"IFCACTOR\",\n  3630933823: \"IFCACTORROLE\",\n  4288193352: \"IFCACTUATOR\",\n  2874132201: \"IFCACTUATORTYPE\",\n  618182010: \"IFCADDRESS\",\n  1635779807: \"IFCADVANCEDBREP\",\n  2603310189: \"IFCADVANCEDBREPWITHVOIDS\",\n  3406155212: \"IFCADVANCEDFACE\",\n  1634111441: \"IFCAIRTERMINAL\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  1411407467: \"IFCAIRTERMINALBOXTYPE\",\n  3352864051: \"IFCAIRTERMINALTYPE\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  1871374353: \"IFCAIRTOAIRHEATRECOVERYTYPE\",\n  3087945054: \"IFCALARM\",\n  3001207471: \"IFCALARMTYPE\",\n  325726236: \"IFCALIGNMENT\",\n  749761778: \"IFCALIGNMENT2DHORIZONTAL\",\n  3199563722: \"IFCALIGNMENT2DHORIZONTALSEGMENT\",\n  2483840362: \"IFCALIGNMENT2DSEGMENT\",\n  3379348081: \"IFCALIGNMENT2DVERSEGCIRCULARARC\",\n  3239324667: \"IFCALIGNMENT2DVERSEGLINE\",\n  4263986512: \"IFCALIGNMENT2DVERSEGPARABOLICARC\",\n  53199957: \"IFCALIGNMENT2DVERTICAL\",\n  2029264950: \"IFCALIGNMENT2DVERTICALSEGMENT\",\n  3512275521: \"IFCALIGNMENTCURVE\",\n  1674181508: \"IFCANNOTATION\",\n  669184980: \"IFCANNOTATIONFILLAREA\",\n  639542469: \"IFCAPPLICATION\",\n  411424972: \"IFCAPPLIEDVALUE\",\n  130549933: \"IFCAPPROVAL\",\n  3869604511: \"IFCAPPROVALRELATIONSHIP\",\n  3798115385: \"IFCARBITRARYCLOSEDPROFILEDEF\",\n  1310608509: \"IFCARBITRARYOPENPROFILEDEF\",\n  2705031697: \"IFCARBITRARYPROFILEDEFWITHVOIDS\",\n  3460190687: \"IFCASSET\",\n  3207858831: \"IFCASYMMETRICISHAPEPROFILEDEF\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  1532957894: \"IFCAUDIOVISUALAPPLIANCETYPE\",\n  4261334040: \"IFCAXIS1PLACEMENT\",\n  3125803723: \"IFCAXIS2PLACEMENT2D\",\n  2740243338: \"IFCAXIS2PLACEMENT3D\",\n  1967976161: \"IFCBSPLINECURVE\",\n  2461110595: \"IFCBSPLINECURVEWITHKNOTS\",\n  2887950389: \"IFCBSPLINESURFACE\",\n  167062518: \"IFCBSPLINESURFACEWITHKNOTS\",\n  753842376: \"IFCBEAM\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  819618141: \"IFCBEAMTYPE\",\n  4196446775: \"IFCBEARING\",\n  3649138523: \"IFCBEARINGTYPE\",\n  616511568: \"IFCBLOBTEXTURE\",\n  1334484129: \"IFCBLOCK\",\n  32344328: \"IFCBOILER\",\n  231477066: \"IFCBOILERTYPE\",\n  3649129432: \"IFCBOOLEANCLIPPINGRESULT\",\n  2736907675: \"IFCBOOLEANRESULT\",\n  4037036970: \"IFCBOUNDARYCONDITION\",\n  1136057603: \"IFCBOUNDARYCURVE\",\n  1560379544: \"IFCBOUNDARYEDGECONDITION\",\n  3367102660: \"IFCBOUNDARYFACECONDITION\",\n  1387855156: \"IFCBOUNDARYNODECONDITION\",\n  2069777674: \"IFCBOUNDARYNODECONDITIONWARPING\",\n  1260505505: \"IFCBOUNDEDCURVE\",\n  4182860854: \"IFCBOUNDEDSURFACE\",\n  2581212453: \"IFCBOUNDINGBOX\",\n  2713105998: \"IFCBOXEDHALFSPACE\",\n  644574406: \"IFCBRIDGE\",\n  963979645: \"IFCBRIDGEPART\",\n  4031249490: \"IFCBUILDING\",\n  3299480353: \"IFCBUILDINGELEMENT\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  39481116: \"IFCBUILDINGELEMENTPARTTYPE\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1909888760: \"IFCBUILDINGELEMENTPROXYTYPE\",\n  1950629157: \"IFCBUILDINGELEMENTTYPE\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  1177604601: \"IFCBUILDINGSYSTEM\",\n  2938176219: \"IFCBURNER\",\n  2188180465: \"IFCBURNERTYPE\",\n  2898889636: \"IFCCSHAPEPROFILEDEF\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  395041908: \"IFCCABLECARRIERFITTINGTYPE\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3293546465: \"IFCCABLECARRIERSEGMENTTYPE\",\n  1051757585: \"IFCCABLEFITTING\",\n  2674252688: \"IFCCABLEFITTINGTYPE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  1285652485: \"IFCCABLESEGMENTTYPE\",\n  3999819293: \"IFCCAISSONFOUNDATION\",\n  3203706013: \"IFCCAISSONFOUNDATIONTYPE\",\n  1123145078: \"IFCCARTESIANPOINT\",\n  574549367: \"IFCCARTESIANPOINTLIST\",\n  1675464909: \"IFCCARTESIANPOINTLIST2D\",\n  2059837836: \"IFCCARTESIANPOINTLIST3D\",\n  59481748: \"IFCCARTESIANTRANSFORMATIONOPERATOR\",\n  3749851601: \"IFCCARTESIANTRANSFORMATIONOPERATOR2D\",\n  3486308946: \"IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM\",\n  3331915920: \"IFCCARTESIANTRANSFORMATIONOPERATOR3D\",\n  1416205885: \"IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM\",\n  3150382593: \"IFCCENTERLINEPROFILEDEF\",\n  3902619387: \"IFCCHILLER\",\n  2951183804: \"IFCCHILLERTYPE\",\n  3296154744: \"IFCCHIMNEY\",\n  2197970202: \"IFCCHIMNEYTYPE\",\n  2611217952: \"IFCCIRCLE\",\n  2937912522: \"IFCCIRCLEHOLLOWPROFILEDEF\",\n  1383045692: \"IFCCIRCLEPROFILEDEF\",\n  1062206242: \"IFCCIRCULARARCSEGMENT2D\",\n  1677625105: \"IFCCIVILELEMENT\",\n  3893394355: \"IFCCIVILELEMENTTYPE\",\n  747523909: \"IFCCLASSIFICATION\",\n  647927063: \"IFCCLASSIFICATIONREFERENCE\",\n  2205249479: \"IFCCLOSEDSHELL\",\n  639361253: \"IFCCOIL\",\n  2301859152: \"IFCCOILTYPE\",\n  776857604: \"IFCCOLOURRGB\",\n  3285139300: \"IFCCOLOURRGBLIST\",\n  3264961684: \"IFCCOLOURSPECIFICATION\",\n  843113511: \"IFCCOLUMN\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  300633059: \"IFCCOLUMNTYPE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  400855858: \"IFCCOMMUNICATIONSAPPLIANCETYPE\",\n  2542286263: \"IFCCOMPLEXPROPERTY\",\n  3875453745: \"IFCCOMPLEXPROPERTYTEMPLATE\",\n  3732776249: \"IFCCOMPOSITECURVE\",\n  15328376: \"IFCCOMPOSITECURVEONSURFACE\",\n  2485617015: \"IFCCOMPOSITECURVESEGMENT\",\n  1485152156: \"IFCCOMPOSITEPROFILEDEF\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3850581409: \"IFCCOMPRESSORTYPE\",\n  2272882330: \"IFCCONDENSER\",\n  2816379211: \"IFCCONDENSERTYPE\",\n  2510884976: \"IFCCONIC\",\n  370225590: \"IFCCONNECTEDFACESET\",\n  1981873012: \"IFCCONNECTIONCURVEGEOMETRY\",\n  2859738748: \"IFCCONNECTIONGEOMETRY\",\n  45288368: \"IFCCONNECTIONPOINTECCENTRICITY\",\n  2614616156: \"IFCCONNECTIONPOINTGEOMETRY\",\n  2732653382: \"IFCCONNECTIONSURFACEGEOMETRY\",\n  775493141: \"IFCCONNECTIONVOLUMEGEOMETRY\",\n  1959218052: \"IFCCONSTRAINT\",\n  3898045240: \"IFCCONSTRUCTIONEQUIPMENTRESOURCE\",\n  2185764099: \"IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE\",\n  1060000209: \"IFCCONSTRUCTIONMATERIALRESOURCE\",\n  4105962743: \"IFCCONSTRUCTIONMATERIALRESOURCETYPE\",\n  488727124: \"IFCCONSTRUCTIONPRODUCTRESOURCE\",\n  1525564444: \"IFCCONSTRUCTIONPRODUCTRESOURCETYPE\",\n  2559216714: \"IFCCONSTRUCTIONRESOURCE\",\n  2574617495: \"IFCCONSTRUCTIONRESOURCETYPE\",\n  3419103109: \"IFCCONTEXT\",\n  3050246964: \"IFCCONTEXTDEPENDENTUNIT\",\n  3293443760: \"IFCCONTROL\",\n  25142252: \"IFCCONTROLLER\",\n  578613899: \"IFCCONTROLLERTYPE\",\n  2889183280: \"IFCCONVERSIONBASEDUNIT\",\n  2713554722: \"IFCCONVERSIONBASEDUNITWITHOFFSET\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  335055490: \"IFCCOOLEDBEAMTYPE\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  2954562838: \"IFCCOOLINGTOWERTYPE\",\n  1785450214: \"IFCCOORDINATEOPERATION\",\n  1466758467: \"IFCCOORDINATEREFERENCESYSTEM\",\n  3895139033: \"IFCCOSTITEM\",\n  1419761937: \"IFCCOSTSCHEDULE\",\n  602808272: \"IFCCOSTVALUE\",\n  1973544240: \"IFCCOVERING\",\n  1916426348: \"IFCCOVERINGTYPE\",\n  3295246426: \"IFCCREWRESOURCE\",\n  1815067380: \"IFCCREWRESOURCETYPE\",\n  2506170314: \"IFCCSGPRIMITIVE3D\",\n  2147822146: \"IFCCSGSOLID\",\n  539742890: \"IFCCURRENCYRELATIONSHIP\",\n  3495092785: \"IFCCURTAINWALL\",\n  1457835157: \"IFCCURTAINWALLTYPE\",\n  2601014836: \"IFCCURVE\",\n  2827736869: \"IFCCURVEBOUNDEDPLANE\",\n  2629017746: \"IFCCURVEBOUNDEDSURFACE\",\n  1186437898: \"IFCCURVESEGMENT2D\",\n  3800577675: \"IFCCURVESTYLE\",\n  1105321065: \"IFCCURVESTYLEFONT\",\n  2367409068: \"IFCCURVESTYLEFONTANDSCALING\",\n  3510044353: \"IFCCURVESTYLEFONTPATTERN\",\n  1213902940: \"IFCCYLINDRICALSURFACE\",\n  4074379575: \"IFCDAMPER\",\n  3961806047: \"IFCDAMPERTYPE\",\n  3426335179: \"IFCDEEPFOUNDATION\",\n  1306400036: \"IFCDEEPFOUNDATIONTYPE\",\n  3632507154: \"IFCDERIVEDPROFILEDEF\",\n  1765591967: \"IFCDERIVEDUNIT\",\n  1045800335: \"IFCDERIVEDUNITELEMENT\",\n  2949456006: \"IFCDIMENSIONALEXPONENTS\",\n  32440307: \"IFCDIRECTION\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  2635815018: \"IFCDISCRETEACCESSORYTYPE\",\n  1945343521: \"IFCDISTANCEEXPRESSION\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1599208980: \"IFCDISTRIBUTIONCHAMBERELEMENTTYPE\",\n  562808652: \"IFCDISTRIBUTIONCIRCUIT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  2063403501: \"IFCDISTRIBUTIONCONTROLELEMENTTYPE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  3256556792: \"IFCDISTRIBUTIONELEMENTTYPE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3849074793: \"IFCDISTRIBUTIONFLOWELEMENTTYPE\",\n  3041715199: \"IFCDISTRIBUTIONPORT\",\n  3205830791: \"IFCDISTRIBUTIONSYSTEM\",\n  1154170062: \"IFCDOCUMENTINFORMATION\",\n  770865208: \"IFCDOCUMENTINFORMATIONRELATIONSHIP\",\n  3732053477: \"IFCDOCUMENTREFERENCE\",\n  395920057: \"IFCDOOR\",\n  2963535650: \"IFCDOORLININGPROPERTIES\",\n  1714330368: \"IFCDOORPANELPROPERTIES\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  526551008: \"IFCDOORSTYLE\",\n  2323601079: \"IFCDOORTYPE\",\n  445594917: \"IFCDRAUGHTINGPREDEFINEDCOLOUR\",\n  4006246654: \"IFCDRAUGHTINGPREDEFINEDCURVEFONT\",\n  342316401: \"IFCDUCTFITTING\",\n  869906466: \"IFCDUCTFITTINGTYPE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3760055223: \"IFCDUCTSEGMENTTYPE\",\n  1360408905: \"IFCDUCTSILENCER\",\n  2030761528: \"IFCDUCTSILENCERTYPE\",\n  3900360178: \"IFCEDGE\",\n  476780140: \"IFCEDGECURVE\",\n  1472233963: \"IFCEDGELOOP\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  663422040: \"IFCELECTRICAPPLIANCETYPE\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  2417008758: \"IFCELECTRICDISTRIBUTIONBOARDTYPE\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3277789161: \"IFCELECTRICFLOWSTORAGEDEVICETYPE\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  1534661035: \"IFCELECTRICGENERATORTYPE\",\n  402227799: \"IFCELECTRICMOTOR\",\n  1217240411: \"IFCELECTRICMOTORTYPE\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  712377611: \"IFCELECTRICTIMECONTROLTYPE\",\n  1758889154: \"IFCELEMENT\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  2397081782: \"IFCELEMENTASSEMBLYTYPE\",\n  1623761950: \"IFCELEMENTCOMPONENT\",\n  2590856083: \"IFCELEMENTCOMPONENTTYPE\",\n  1883228015: \"IFCELEMENTQUANTITY\",\n  339256511: \"IFCELEMENTTYPE\",\n  2777663545: \"IFCELEMENTARYSURFACE\",\n  1704287377: \"IFCELLIPSE\",\n  2835456948: \"IFCELLIPSEPROFILEDEF\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  2107101300: \"IFCENERGYCONVERSIONDEVICETYPE\",\n  2814081492: \"IFCENGINE\",\n  132023988: \"IFCENGINETYPE\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3174744832: \"IFCEVAPORATIVECOOLERTYPE\",\n  484807127: \"IFCEVAPORATOR\",\n  3390157468: \"IFCEVAPORATORTYPE\",\n  4148101412: \"IFCEVENT\",\n  211053100: \"IFCEVENTTIME\",\n  4024345920: \"IFCEVENTTYPE\",\n  297599258: \"IFCEXTENDEDPROPERTIES\",\n  4294318154: \"IFCEXTERNALINFORMATION\",\n  3200245327: \"IFCEXTERNALREFERENCE\",\n  1437805879: \"IFCEXTERNALREFERENCERELATIONSHIP\",\n  1209101575: \"IFCEXTERNALSPATIALELEMENT\",\n  2853485674: \"IFCEXTERNALSPATIALSTRUCTUREELEMENT\",\n  2242383968: \"IFCEXTERNALLYDEFINEDHATCHSTYLE\",\n  1040185647: \"IFCEXTERNALLYDEFINEDSURFACESTYLE\",\n  3548104201: \"IFCEXTERNALLYDEFINEDTEXTFONT\",\n  477187591: \"IFCEXTRUDEDAREASOLID\",\n  2804161546: \"IFCEXTRUDEDAREASOLIDTAPERED\",\n  2556980723: \"IFCFACE\",\n  2047409740: \"IFCFACEBASEDSURFACEMODEL\",\n  1809719519: \"IFCFACEBOUND\",\n  803316827: \"IFCFACEOUTERBOUND\",\n  3008276851: \"IFCFACESURFACE\",\n  807026263: \"IFCFACETEDBREP\",\n  3737207727: \"IFCFACETEDBREPWITHVOIDS\",\n  24185140: \"IFCFACILITY\",\n  1310830890: \"IFCFACILITYPART\",\n  4219587988: \"IFCFAILURECONNECTIONCONDITION\",\n  3415622556: \"IFCFAN\",\n  346874300: \"IFCFANTYPE\",\n  647756555: \"IFCFASTENER\",\n  2489546625: \"IFCFASTENERTYPE\",\n  2827207264: \"IFCFEATUREELEMENT\",\n  2143335405: \"IFCFEATUREELEMENTADDITION\",\n  1287392070: \"IFCFEATUREELEMENTSUBTRACTION\",\n  738692330: \"IFCFILLAREASTYLE\",\n  374418227: \"IFCFILLAREASTYLEHATCHING\",\n  315944413: \"IFCFILLAREASTYLETILES\",\n  819412036: \"IFCFILTER\",\n  1810631287: \"IFCFILTERTYPE\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  4222183408: \"IFCFIRESUPPRESSIONTERMINALTYPE\",\n  2652556860: \"IFCFIXEDREFERENCESWEPTAREASOLID\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  3907093117: \"IFCFLOWCONTROLLERTYPE\",\n  4278956645: \"IFCFLOWFITTING\",\n  3198132628: \"IFCFLOWFITTINGTYPE\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  4037862832: \"IFCFLOWINSTRUMENTTYPE\",\n  2188021234: \"IFCFLOWMETER\",\n  3815607619: \"IFCFLOWMETERTYPE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  1482959167: \"IFCFLOWMOVINGDEVICETYPE\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1834744321: \"IFCFLOWSEGMENTTYPE\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  1339347760: \"IFCFLOWSTORAGEDEVICETYPE\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2297155007: \"IFCFLOWTERMINALTYPE\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3009222698: \"IFCFLOWTREATMENTDEVICETYPE\",\n  900683007: \"IFCFOOTING\",\n  1893162501: \"IFCFOOTINGTYPE\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  4238390223: \"IFCFURNISHINGELEMENTTYPE\",\n  1509553395: \"IFCFURNITURE\",\n  1268542332: \"IFCFURNITURETYPE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  4095422895: \"IFCGEOGRAPHICELEMENTTYPE\",\n  987898635: \"IFCGEOMETRICCURVESET\",\n  3448662350: \"IFCGEOMETRICREPRESENTATIONCONTEXT\",\n  2453401579: \"IFCGEOMETRICREPRESENTATIONITEM\",\n  4142052618: \"IFCGEOMETRICREPRESENTATIONSUBCONTEXT\",\n  3590301190: \"IFCGEOMETRICSET\",\n  3009204131: \"IFCGRID\",\n  852622518: \"IFCGRIDAXIS\",\n  178086475: \"IFCGRIDPLACEMENT\",\n  2706460486: \"IFCGROUP\",\n  812098782: \"IFCHALFSPACESOLID\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  1251058090: \"IFCHEATEXCHANGERTYPE\",\n  2068733104: \"IFCHUMIDIFIER\",\n  1806887404: \"IFCHUMIDIFIERTYPE\",\n  1484403080: \"IFCISHAPEPROFILEDEF\",\n  3905492369: \"IFCIMAGETEXTURE\",\n  3570813810: \"IFCINDEXEDCOLOURMAP\",\n  2571569899: \"IFCINDEXEDPOLYCURVE\",\n  178912537: \"IFCINDEXEDPOLYGONALFACE\",\n  2294589976: \"IFCINDEXEDPOLYGONALFACEWITHVOIDS\",\n  1437953363: \"IFCINDEXEDTEXTUREMAP\",\n  2133299955: \"IFCINDEXEDTRIANGLETEXTUREMAP\",\n  4175244083: \"IFCINTERCEPTOR\",\n  3946677679: \"IFCINTERCEPTORTYPE\",\n  3113134337: \"IFCINTERSECTIONCURVE\",\n  2391368822: \"IFCINVENTORY\",\n  3741457305: \"IFCIRREGULARTIMESERIES\",\n  3020489413: \"IFCIRREGULARTIMESERIESVALUE\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  4288270099: \"IFCJUNCTIONBOXTYPE\",\n  572779678: \"IFCLSHAPEPROFILEDEF\",\n  3827777499: \"IFCLABORRESOURCE\",\n  428585644: \"IFCLABORRESOURCETYPE\",\n  1585845231: \"IFCLAGTIME\",\n  76236018: \"IFCLAMP\",\n  1051575348: \"IFCLAMPTYPE\",\n  2655187982: \"IFCLIBRARYINFORMATION\",\n  3452421091: \"IFCLIBRARYREFERENCE\",\n  4162380809: \"IFCLIGHTDISTRIBUTIONDATA\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  1161773419: \"IFCLIGHTFIXTURETYPE\",\n  1566485204: \"IFCLIGHTINTENSITYDISTRIBUTION\",\n  1402838566: \"IFCLIGHTSOURCE\",\n  125510826: \"IFCLIGHTSOURCEAMBIENT\",\n  2604431987: \"IFCLIGHTSOURCEDIRECTIONAL\",\n  4266656042: \"IFCLIGHTSOURCEGONIOMETRIC\",\n  1520743889: \"IFCLIGHTSOURCEPOSITIONAL\",\n  3422422726: \"IFCLIGHTSOURCESPOT\",\n  1281925730: \"IFCLINE\",\n  3092502836: \"IFCLINESEGMENT2D\",\n  388784114: \"IFCLINEARPLACEMENT\",\n  1154579445: \"IFCLINEARPOSITIONINGELEMENT\",\n  2624227202: \"IFCLOCALPLACEMENT\",\n  1008929658: \"IFCLOOP\",\n  1425443689: \"IFCMANIFOLDSOLIDBREP\",\n  3057273783: \"IFCMAPCONVERSION\",\n  2347385850: \"IFCMAPPEDITEM\",\n  1838606355: \"IFCMATERIAL\",\n  1847130766: \"IFCMATERIALCLASSIFICATIONRELATIONSHIP\",\n  3708119e3: \"IFCMATERIALCONSTITUENT\",\n  2852063980: \"IFCMATERIALCONSTITUENTSET\",\n  760658860: \"IFCMATERIALDEFINITION\",\n  2022407955: \"IFCMATERIALDEFINITIONREPRESENTATION\",\n  248100487: \"IFCMATERIALLAYER\",\n  3303938423: \"IFCMATERIALLAYERSET\",\n  1303795690: \"IFCMATERIALLAYERSETUSAGE\",\n  1847252529: \"IFCMATERIALLAYERWITHOFFSETS\",\n  2199411900: \"IFCMATERIALLIST\",\n  2235152071: \"IFCMATERIALPROFILE\",\n  164193824: \"IFCMATERIALPROFILESET\",\n  3079605661: \"IFCMATERIALPROFILESETUSAGE\",\n  3404854881: \"IFCMATERIALPROFILESETUSAGETAPERING\",\n  552965576: \"IFCMATERIALPROFILEWITHOFFSETS\",\n  3265635763: \"IFCMATERIALPROPERTIES\",\n  853536259: \"IFCMATERIALRELATIONSHIP\",\n  1507914824: \"IFCMATERIALUSAGEDEFINITION\",\n  2597039031: \"IFCMEASUREWITHUNIT\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  2108223431: \"IFCMECHANICALFASTENERTYPE\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1114901282: \"IFCMEDICALDEVICETYPE\",\n  1073191201: \"IFCMEMBER\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  3181161470: \"IFCMEMBERTYPE\",\n  3368373690: \"IFCMETRIC\",\n  2998442950: \"IFCMIRROREDPROFILEDEF\",\n  2706619895: \"IFCMONETARYUNIT\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  977012517: \"IFCMOTORCONNECTIONTYPE\",\n  1918398963: \"IFCNAMEDUNIT\",\n  3888040117: \"IFCOBJECT\",\n  219451334: \"IFCOBJECTDEFINITION\",\n  3701648758: \"IFCOBJECTPLACEMENT\",\n  2251480897: \"IFCOBJECTIVE\",\n  4143007308: \"IFCOCCUPANT\",\n  590820931: \"IFCOFFSETCURVE\",\n  3388369263: \"IFCOFFSETCURVE2D\",\n  3505215534: \"IFCOFFSETCURVE3D\",\n  2485787929: \"IFCOFFSETCURVEBYDISTANCES\",\n  2665983363: \"IFCOPENSHELL\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  4251960020: \"IFCORGANIZATION\",\n  1411181986: \"IFCORGANIZATIONRELATIONSHIP\",\n  643959842: \"IFCORIENTATIONEXPRESSION\",\n  1029017970: \"IFCORIENTEDEDGE\",\n  144952367: \"IFCOUTERBOUNDARYCURVE\",\n  3694346114: \"IFCOUTLET\",\n  2837617999: \"IFCOUTLETTYPE\",\n  1207048766: \"IFCOWNERHISTORY\",\n  2529465313: \"IFCPARAMETERIZEDPROFILEDEF\",\n  2519244187: \"IFCPATH\",\n  1682466193: \"IFCPCURVE\",\n  2382730787: \"IFCPERFORMANCEHISTORY\",\n  3566463478: \"IFCPERMEABLECOVERINGPROPERTIES\",\n  3327091369: \"IFCPERMIT\",\n  2077209135: \"IFCPERSON\",\n  101040310: \"IFCPERSONANDORGANIZATION\",\n  3021840470: \"IFCPHYSICALCOMPLEXQUANTITY\",\n  2483315170: \"IFCPHYSICALQUANTITY\",\n  2226359599: \"IFCPHYSICALSIMPLEQUANTITY\",\n  1687234759: \"IFCPILE\",\n  1158309216: \"IFCPILETYPE\",\n  310824031: \"IFCPIPEFITTING\",\n  804291784: \"IFCPIPEFITTINGTYPE\",\n  3612865200: \"IFCPIPESEGMENT\",\n  4231323485: \"IFCPIPESEGMENTTYPE\",\n  597895409: \"IFCPIXELTEXTURE\",\n  2004835150: \"IFCPLACEMENT\",\n  603570806: \"IFCPLANARBOX\",\n  1663979128: \"IFCPLANAREXTENT\",\n  220341763: \"IFCPLANE\",\n  3171933400: \"IFCPLATE\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  4017108033: \"IFCPLATETYPE\",\n  2067069095: \"IFCPOINT\",\n  4022376103: \"IFCPOINTONCURVE\",\n  1423911732: \"IFCPOINTONSURFACE\",\n  2924175390: \"IFCPOLYLOOP\",\n  2775532180: \"IFCPOLYGONALBOUNDEDHALFSPACE\",\n  2839578677: \"IFCPOLYGONALFACESET\",\n  3724593414: \"IFCPOLYLINE\",\n  3740093272: \"IFCPORT\",\n  1946335990: \"IFCPOSITIONINGELEMENT\",\n  3355820592: \"IFCPOSTALADDRESS\",\n  759155922: \"IFCPREDEFINEDCOLOUR\",\n  2559016684: \"IFCPREDEFINEDCURVEFONT\",\n  3727388367: \"IFCPREDEFINEDITEM\",\n  3778827333: \"IFCPREDEFINEDPROPERTIES\",\n  3967405729: \"IFCPREDEFINEDPROPERTYSET\",\n  1775413392: \"IFCPREDEFINEDTEXTFONT\",\n  677532197: \"IFCPRESENTATIONITEM\",\n  2022622350: \"IFCPRESENTATIONLAYERASSIGNMENT\",\n  1304840413: \"IFCPRESENTATIONLAYERWITHSTYLE\",\n  3119450353: \"IFCPRESENTATIONSTYLE\",\n  2417041796: \"IFCPRESENTATIONSTYLEASSIGNMENT\",\n  2744685151: \"IFCPROCEDURE\",\n  569719735: \"IFCPROCEDURETYPE\",\n  2945172077: \"IFCPROCESS\",\n  4208778838: \"IFCPRODUCT\",\n  673634403: \"IFCPRODUCTDEFINITIONSHAPE\",\n  2095639259: \"IFCPRODUCTREPRESENTATION\",\n  3958567839: \"IFCPROFILEDEF\",\n  2802850158: \"IFCPROFILEPROPERTIES\",\n  103090709: \"IFCPROJECT\",\n  653396225: \"IFCPROJECTLIBRARY\",\n  2904328755: \"IFCPROJECTORDER\",\n  3843373140: \"IFCPROJECTEDCRS\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  2598011224: \"IFCPROPERTY\",\n  986844984: \"IFCPROPERTYABSTRACTION\",\n  871118103: \"IFCPROPERTYBOUNDEDVALUE\",\n  1680319473: \"IFCPROPERTYDEFINITION\",\n  148025276: \"IFCPROPERTYDEPENDENCYRELATIONSHIP\",\n  4166981789: \"IFCPROPERTYENUMERATEDVALUE\",\n  3710013099: \"IFCPROPERTYENUMERATION\",\n  2752243245: \"IFCPROPERTYLISTVALUE\",\n  941946838: \"IFCPROPERTYREFERENCEVALUE\",\n  1451395588: \"IFCPROPERTYSET\",\n  3357820518: \"IFCPROPERTYSETDEFINITION\",\n  492091185: \"IFCPROPERTYSETTEMPLATE\",\n  3650150729: \"IFCPROPERTYSINGLEVALUE\",\n  110355661: \"IFCPROPERTYTABLEVALUE\",\n  3521284610: \"IFCPROPERTYTEMPLATE\",\n  1482703590: \"IFCPROPERTYTEMPLATEDEFINITION\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  655969474: \"IFCPROTECTIVEDEVICETRIPPINGUNITTYPE\",\n  1842657554: \"IFCPROTECTIVEDEVICETYPE\",\n  3219374653: \"IFCPROXY\",\n  90941305: \"IFCPUMP\",\n  2250791053: \"IFCPUMPTYPE\",\n  2044713172: \"IFCQUANTITYAREA\",\n  2093928680: \"IFCQUANTITYCOUNT\",\n  931644368: \"IFCQUANTITYLENGTH\",\n  2090586900: \"IFCQUANTITYSET\",\n  3252649465: \"IFCQUANTITYTIME\",\n  2405470396: \"IFCQUANTITYVOLUME\",\n  825690147: \"IFCQUANTITYWEIGHT\",\n  2262370178: \"IFCRAILING\",\n  2893384427: \"IFCRAILINGTYPE\",\n  3024970846: \"IFCRAMP\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  2324767716: \"IFCRAMPFLIGHTTYPE\",\n  1469900589: \"IFCRAMPTYPE\",\n  1232101972: \"IFCRATIONALBSPLINECURVEWITHKNOTS\",\n  683857671: \"IFCRATIONALBSPLINESURFACEWITHKNOTS\",\n  2770003689: \"IFCRECTANGLEHOLLOWPROFILEDEF\",\n  3615266464: \"IFCRECTANGLEPROFILEDEF\",\n  2798486643: \"IFCRECTANGULARPYRAMID\",\n  3454111270: \"IFCRECTANGULARTRIMMEDSURFACE\",\n  3915482550: \"IFCRECURRENCEPATTERN\",\n  2433181523: \"IFCREFERENCE\",\n  4021432810: \"IFCREFERENT\",\n  3413951693: \"IFCREGULARTIMESERIES\",\n  1580146022: \"IFCREINFORCEMENTBARPROPERTIES\",\n  3765753017: \"IFCREINFORCEMENTDEFINITIONPROPERTIES\",\n  979691226: \"IFCREINFORCINGBAR\",\n  2572171363: \"IFCREINFORCINGBARTYPE\",\n  3027567501: \"IFCREINFORCINGELEMENT\",\n  964333572: \"IFCREINFORCINGELEMENTTYPE\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2310774935: \"IFCREINFORCINGMESHTYPE\",\n  160246688: \"IFCRELAGGREGATES\",\n  3939117080: \"IFCRELASSIGNS\",\n  1683148259: \"IFCRELASSIGNSTOACTOR\",\n  2495723537: \"IFCRELASSIGNSTOCONTROL\",\n  1307041759: \"IFCRELASSIGNSTOGROUP\",\n  1027710054: \"IFCRELASSIGNSTOGROUPBYFACTOR\",\n  4278684876: \"IFCRELASSIGNSTOPROCESS\",\n  2857406711: \"IFCRELASSIGNSTOPRODUCT\",\n  205026976: \"IFCRELASSIGNSTORESOURCE\",\n  1865459582: \"IFCRELASSOCIATES\",\n  4095574036: \"IFCRELASSOCIATESAPPROVAL\",\n  919958153: \"IFCRELASSOCIATESCLASSIFICATION\",\n  2728634034: \"IFCRELASSOCIATESCONSTRAINT\",\n  982818633: \"IFCRELASSOCIATESDOCUMENT\",\n  3840914261: \"IFCRELASSOCIATESLIBRARY\",\n  2655215786: \"IFCRELASSOCIATESMATERIAL\",\n  826625072: \"IFCRELCONNECTS\",\n  1204542856: \"IFCRELCONNECTSELEMENTS\",\n  3945020480: \"IFCRELCONNECTSPATHELEMENTS\",\n  4201705270: \"IFCRELCONNECTSPORTTOELEMENT\",\n  3190031847: \"IFCRELCONNECTSPORTS\",\n  2127690289: \"IFCRELCONNECTSSTRUCTURALACTIVITY\",\n  1638771189: \"IFCRELCONNECTSSTRUCTURALMEMBER\",\n  504942748: \"IFCRELCONNECTSWITHECCENTRICITY\",\n  3678494232: \"IFCRELCONNECTSWITHREALIZINGELEMENTS\",\n  3242617779: \"IFCRELCONTAINEDINSPATIALSTRUCTURE\",\n  886880790: \"IFCRELCOVERSBLDGELEMENTS\",\n  2802773753: \"IFCRELCOVERSSPACES\",\n  2565941209: \"IFCRELDECLARES\",\n  2551354335: \"IFCRELDECOMPOSES\",\n  693640335: \"IFCRELDEFINES\",\n  1462361463: \"IFCRELDEFINESBYOBJECT\",\n  4186316022: \"IFCRELDEFINESBYPROPERTIES\",\n  307848117: \"IFCRELDEFINESBYTEMPLATE\",\n  781010003: \"IFCRELDEFINESBYTYPE\",\n  3940055652: \"IFCRELFILLSELEMENT\",\n  279856033: \"IFCRELFLOWCONTROLELEMENTS\",\n  427948657: \"IFCRELINTERFERESELEMENTS\",\n  3268803585: \"IFCRELNESTS\",\n  1441486842: \"IFCRELPOSITIONS\",\n  750771296: \"IFCRELPROJECTSELEMENT\",\n  1245217292: \"IFCRELREFERENCEDINSPATIALSTRUCTURE\",\n  4122056220: \"IFCRELSEQUENCE\",\n  366585022: \"IFCRELSERVICESBUILDINGS\",\n  3451746338: \"IFCRELSPACEBOUNDARY\",\n  3523091289: \"IFCRELSPACEBOUNDARY1STLEVEL\",\n  1521410863: \"IFCRELSPACEBOUNDARY2NDLEVEL\",\n  1401173127: \"IFCRELVOIDSELEMENT\",\n  478536968: \"IFCRELATIONSHIP\",\n  816062949: \"IFCREPARAMETRISEDCOMPOSITECURVESEGMENT\",\n  1076942058: \"IFCREPRESENTATION\",\n  3377609919: \"IFCREPRESENTATIONCONTEXT\",\n  3008791417: \"IFCREPRESENTATIONITEM\",\n  1660063152: \"IFCREPRESENTATIONMAP\",\n  2914609552: \"IFCRESOURCE\",\n  2943643501: \"IFCRESOURCEAPPROVALRELATIONSHIP\",\n  1608871552: \"IFCRESOURCECONSTRAINTRELATIONSHIP\",\n  2439245199: \"IFCRESOURCELEVELRELATIONSHIP\",\n  1042787934: \"IFCRESOURCETIME\",\n  1856042241: \"IFCREVOLVEDAREASOLID\",\n  3243963512: \"IFCREVOLVEDAREASOLIDTAPERED\",\n  4158566097: \"IFCRIGHTCIRCULARCONE\",\n  3626867408: \"IFCRIGHTCIRCULARCYLINDER\",\n  2016517767: \"IFCROOF\",\n  2781568857: \"IFCROOFTYPE\",\n  2341007311: \"IFCROOT\",\n  2778083089: \"IFCROUNDEDRECTANGLEPROFILEDEF\",\n  448429030: \"IFCSIUNIT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  1768891740: \"IFCSANITARYTERMINALTYPE\",\n  1054537805: \"IFCSCHEDULINGTIME\",\n  2157484638: \"IFCSEAMCURVE\",\n  2042790032: \"IFCSECTIONPROPERTIES\",\n  4165799628: \"IFCSECTIONREINFORCEMENTPROPERTIES\",\n  1862484736: \"IFCSECTIONEDSOLID\",\n  1290935644: \"IFCSECTIONEDSOLIDHORIZONTAL\",\n  1509187699: \"IFCSECTIONEDSPINE\",\n  4086658281: \"IFCSENSOR\",\n  1783015770: \"IFCSENSORTYPE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  4074543187: \"IFCSHADINGDEVICETYPE\",\n  867548509: \"IFCSHAPEASPECT\",\n  3982875396: \"IFCSHAPEMODEL\",\n  4240577450: \"IFCSHAPEREPRESENTATION\",\n  4124623270: \"IFCSHELLBASEDSURFACEMODEL\",\n  3692461612: \"IFCSIMPLEPROPERTY\",\n  3663146110: \"IFCSIMPLEPROPERTYTEMPLATE\",\n  4097777520: \"IFCSITE\",\n  1529196076: \"IFCSLAB\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  2533589738: \"IFCSLABTYPE\",\n  2609359061: \"IFCSLIPPAGECONNECTIONCONDITION\",\n  3420628829: \"IFCSOLARDEVICE\",\n  1072016465: \"IFCSOLARDEVICETYPE\",\n  723233188: \"IFCSOLIDMODEL\",\n  3856911033: \"IFCSPACE\",\n  1999602285: \"IFCSPACEHEATER\",\n  1305183839: \"IFCSPACEHEATERTYPE\",\n  3812236995: \"IFCSPACETYPE\",\n  1412071761: \"IFCSPATIALELEMENT\",\n  710998568: \"IFCSPATIALELEMENTTYPE\",\n  2706606064: \"IFCSPATIALSTRUCTUREELEMENT\",\n  3893378262: \"IFCSPATIALSTRUCTUREELEMENTTYPE\",\n  463610769: \"IFCSPATIALZONE\",\n  2481509218: \"IFCSPATIALZONETYPE\",\n  451544542: \"IFCSPHERE\",\n  4015995234: \"IFCSPHERICALSURFACE\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  3112655638: \"IFCSTACKTERMINALTYPE\",\n  331165859: \"IFCSTAIR\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  1039846685: \"IFCSTAIRFLIGHTTYPE\",\n  338393293: \"IFCSTAIRTYPE\",\n  682877961: \"IFCSTRUCTURALACTION\",\n  3544373492: \"IFCSTRUCTURALACTIVITY\",\n  2515109513: \"IFCSTRUCTURALANALYSISMODEL\",\n  1179482911: \"IFCSTRUCTURALCONNECTION\",\n  2273995522: \"IFCSTRUCTURALCONNECTIONCONDITION\",\n  1004757350: \"IFCSTRUCTURALCURVEACTION\",\n  4243806635: \"IFCSTRUCTURALCURVECONNECTION\",\n  214636428: \"IFCSTRUCTURALCURVEMEMBER\",\n  2445595289: \"IFCSTRUCTURALCURVEMEMBERVARYING\",\n  2757150158: \"IFCSTRUCTURALCURVEREACTION\",\n  3136571912: \"IFCSTRUCTURALITEM\",\n  1807405624: \"IFCSTRUCTURALLINEARACTION\",\n  2162789131: \"IFCSTRUCTURALLOAD\",\n  385403989: \"IFCSTRUCTURALLOADCASE\",\n  3478079324: \"IFCSTRUCTURALLOADCONFIGURATION\",\n  1252848954: \"IFCSTRUCTURALLOADGROUP\",\n  1595516126: \"IFCSTRUCTURALLOADLINEARFORCE\",\n  609421318: \"IFCSTRUCTURALLOADORRESULT\",\n  2668620305: \"IFCSTRUCTURALLOADPLANARFORCE\",\n  2473145415: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENT\",\n  1973038258: \"IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION\",\n  1597423693: \"IFCSTRUCTURALLOADSINGLEFORCE\",\n  1190533807: \"IFCSTRUCTURALLOADSINGLEFORCEWARPING\",\n  2525727697: \"IFCSTRUCTURALLOADSTATIC\",\n  3408363356: \"IFCSTRUCTURALLOADTEMPERATURE\",\n  530289379: \"IFCSTRUCTURALMEMBER\",\n  1621171031: \"IFCSTRUCTURALPLANARACTION\",\n  2082059205: \"IFCSTRUCTURALPOINTACTION\",\n  734778138: \"IFCSTRUCTURALPOINTCONNECTION\",\n  1235345126: \"IFCSTRUCTURALPOINTREACTION\",\n  3689010777: \"IFCSTRUCTURALREACTION\",\n  2986769608: \"IFCSTRUCTURALRESULTGROUP\",\n  3657597509: \"IFCSTRUCTURALSURFACEACTION\",\n  1975003073: \"IFCSTRUCTURALSURFACECONNECTION\",\n  3979015343: \"IFCSTRUCTURALSURFACEMEMBER\",\n  2218152070: \"IFCSTRUCTURALSURFACEMEMBERVARYING\",\n  603775116: \"IFCSTRUCTURALSURFACEREACTION\",\n  2830218821: \"IFCSTYLEMODEL\",\n  3958052878: \"IFCSTYLEDITEM\",\n  3049322572: \"IFCSTYLEDREPRESENTATION\",\n  148013059: \"IFCSUBCONTRACTRESOURCE\",\n  4095615324: \"IFCSUBCONTRACTRESOURCETYPE\",\n  2233826070: \"IFCSUBEDGE\",\n  2513912981: \"IFCSURFACE\",\n  699246055: \"IFCSURFACECURVE\",\n  2028607225: \"IFCSURFACECURVESWEPTAREASOLID\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  2809605785: \"IFCSURFACEOFLINEAREXTRUSION\",\n  4124788165: \"IFCSURFACEOFREVOLUTION\",\n  2934153892: \"IFCSURFACEREINFORCEMENTAREA\",\n  1300840506: \"IFCSURFACESTYLE\",\n  3303107099: \"IFCSURFACESTYLELIGHTING\",\n  1607154358: \"IFCSURFACESTYLEREFRACTION\",\n  1878645084: \"IFCSURFACESTYLERENDERING\",\n  846575682: \"IFCSURFACESTYLESHADING\",\n  1351298697: \"IFCSURFACESTYLEWITHTEXTURES\",\n  626085974: \"IFCSURFACETEXTURE\",\n  2247615214: \"IFCSWEPTAREASOLID\",\n  1260650574: \"IFCSWEPTDISKSOLID\",\n  1096409881: \"IFCSWEPTDISKSOLIDPOLYGONAL\",\n  230924584: \"IFCSWEPTSURFACE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  2315554128: \"IFCSWITCHINGDEVICETYPE\",\n  2254336722: \"IFCSYSTEM\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  1580310250: \"IFCSYSTEMFURNITUREELEMENTTYPE\",\n  3071757647: \"IFCTSHAPEPROFILEDEF\",\n  985171141: \"IFCTABLE\",\n  2043862942: \"IFCTABLECOLUMN\",\n  531007025: \"IFCTABLEROW\",\n  812556717: \"IFCTANK\",\n  5716631: \"IFCTANKTYPE\",\n  3473067441: \"IFCTASK\",\n  1549132990: \"IFCTASKTIME\",\n  2771591690: \"IFCTASKTIMERECURRING\",\n  3206491090: \"IFCTASKTYPE\",\n  912023232: \"IFCTELECOMADDRESS\",\n  3824725483: \"IFCTENDON\",\n  2347447852: \"IFCTENDONANCHOR\",\n  3081323446: \"IFCTENDONANCHORTYPE\",\n  3663046924: \"IFCTENDONCONDUIT\",\n  2281632017: \"IFCTENDONCONDUITTYPE\",\n  2415094496: \"IFCTENDONTYPE\",\n  2387106220: \"IFCTESSELLATEDFACESET\",\n  901063453: \"IFCTESSELLATEDITEM\",\n  4282788508: \"IFCTEXTLITERAL\",\n  3124975700: \"IFCTEXTLITERALWITHEXTENT\",\n  1447204868: \"IFCTEXTSTYLE\",\n  1983826977: \"IFCTEXTSTYLEFONTMODEL\",\n  2636378356: \"IFCTEXTSTYLEFORDEFINEDFONT\",\n  1640371178: \"IFCTEXTSTYLETEXTMODEL\",\n  280115917: \"IFCTEXTURECOORDINATE\",\n  1742049831: \"IFCTEXTURECOORDINATEGENERATOR\",\n  2552916305: \"IFCTEXTUREMAP\",\n  1210645708: \"IFCTEXTUREVERTEX\",\n  3611470254: \"IFCTEXTUREVERTEXLIST\",\n  1199560280: \"IFCTIMEPERIOD\",\n  3101149627: \"IFCTIMESERIES\",\n  581633288: \"IFCTIMESERIESVALUE\",\n  1377556343: \"IFCTOPOLOGICALREPRESENTATIONITEM\",\n  1735638870: \"IFCTOPOLOGYREPRESENTATION\",\n  1935646853: \"IFCTOROIDALSURFACE\",\n  3825984169: \"IFCTRANSFORMER\",\n  1692211062: \"IFCTRANSFORMERTYPE\",\n  2595432518: \"IFCTRANSITIONCURVESEGMENT2D\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  2097647324: \"IFCTRANSPORTELEMENTTYPE\",\n  2715220739: \"IFCTRAPEZIUMPROFILEDEF\",\n  2916149573: \"IFCTRIANGULATEDFACESET\",\n  1229763772: \"IFCTRIANGULATEDIRREGULARNETWORK\",\n  3593883385: \"IFCTRIMMEDCURVE\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  1600972822: \"IFCTUBEBUNDLETYPE\",\n  1628702193: \"IFCTYPEOBJECT\",\n  3736923433: \"IFCTYPEPROCESS\",\n  2347495698: \"IFCTYPEPRODUCT\",\n  3698973494: \"IFCTYPERESOURCE\",\n  427810014: \"IFCUSHAPEPROFILEDEF\",\n  180925521: \"IFCUNITASSIGNMENT\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  3179687236: \"IFCUNITARYCONTROLELEMENTTYPE\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  1911125066: \"IFCUNITARYEQUIPMENTTYPE\",\n  4207607924: \"IFCVALVE\",\n  728799441: \"IFCVALVETYPE\",\n  1417489154: \"IFCVECTOR\",\n  2799835756: \"IFCVERTEX\",\n  2759199220: \"IFCVERTEXLOOP\",\n  1907098498: \"IFCVERTEXPOINT\",\n  1530820697: \"IFCVIBRATIONDAMPER\",\n  3956297820: \"IFCVIBRATIONDAMPERTYPE\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  3313531582: \"IFCVIBRATIONISOLATORTYPE\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  891718957: \"IFCVIRTUALGRIDINTERSECTION\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  2391406946: \"IFCWALL\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  1898987631: \"IFCWALLTYPE\",\n  4237592921: \"IFCWASTETERMINAL\",\n  1133259667: \"IFCWASTETERMINALTYPE\",\n  3304561284: \"IFCWINDOW\",\n  336235671: \"IFCWINDOWLININGPROPERTIES\",\n  512836454: \"IFCWINDOWPANELPROPERTIES\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  1299126871: \"IFCWINDOWSTYLE\",\n  4009809668: \"IFCWINDOWTYPE\",\n  4088093105: \"IFCWORKCALENDAR\",\n  1028945134: \"IFCWORKCONTROL\",\n  4218914973: \"IFCWORKPLAN\",\n  3342526732: \"IFCWORKSCHEDULE\",\n  1236880293: \"IFCWORKTIME\",\n  2543172580: \"IFCZSHAPEPROFILEDEF\",\n  1033361043: \"IFCZONE\"\n};\n\n// dist/helpers/properties.ts\nvar PropsNames = {\n  aggregates: {\n    name: IFCRELAGGREGATES,\n    relating: \"RelatingObject\",\n    related: \"RelatedObjects\",\n    key: \"children\"\n  },\n  spatial: {\n    name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    relating: \"RelatingStructure\",\n    related: \"RelatedElements\",\n    key: \"children\"\n  },\n  psets: {\n    name: IFCRELDEFINESBYPROPERTIES,\n    relating: \"RelatingPropertyDefinition\",\n    related: \"RelatedObjects\",\n    key: \"hasPsets\"\n  },\n  materials: {\n    name: IFCRELASSOCIATESMATERIAL,\n    relating: \"RelatingMaterial\",\n    related: \"RelatedObjects\",\n    key: \"hasMaterial\"\n  },\n  type: {\n    name: IFCRELDEFINESBYTYPE,\n    relating: \"RelatingType\",\n    related: \"RelatedObjects\",\n    key: \"hasType\"\n  }\n};\nvar Properties = class {\n  constructor(api) {\n    this.api = api;\n  }\n  getIfcType(type) {\n    return IfcTypesMap[type];\n  }\n  getItemProperties(modelID, id, recursive = false) {\n    return __async(this, null, function* () {\n      return this.api.GetLine(modelID, id, recursive);\n    });\n  }\n  getPropertySets(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.psets);\n    });\n  }\n  getTypeProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.type);\n    });\n  }\n  getMaterialsProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.materials);\n    });\n  }\n  getSpatialStructure(modelID, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getAllTypesOfModel(modelID);\n      const chunks = yield this.getSpatialTreeChunks(modelID);\n      const allLines = yield this.api.GetLineIDsWithType(modelID, IFCPROJECT);\n      const projectID = allLines.get(0);\n      const project = Properties.newIfcProject(projectID);\n      yield this.getSpatialNode(modelID, project, chunks, includeProperties);\n      this.cleanupTypes();\n      return project;\n    });\n  }\n  getAllItemsOfType(modelID, type, verbose) {\n    return __async(this, null, function* () {\n      let items = [];\n      const lines = yield this.api.GetLineIDsWithType(modelID, type);\n      for (let i = 0; i < lines.size(); i++)\n        items.push(lines.get(i));\n      if (!verbose)\n        return items;\n      const result = [];\n      for (let i = 0; i < items.length; i++) {\n        result.push(yield this.api.GetLine(modelID, items[i]));\n      }\n      return result;\n    });\n  }\n  getProperty(modelID, elementID, recursive = false, propName) {\n    return __async(this, null, function* () {\n      const propSetIds = yield this.getAllRelatedItemsOfType(modelID, elementID, propName);\n      const result = [];\n      for (let i = 0; i < propSetIds.length; i++) {\n        result.push(yield this.api.GetLine(modelID, propSetIds[i], recursive));\n      }\n      return result;\n    });\n  }\n  getChunks(modelID, chunks, propNames) {\n    return __async(this, null, function* () {\n      const relation = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      for (let i = 0; i < relation.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, relation.get(i), false);\n        this.saveChunk(chunks, propNames, rel);\n      }\n    });\n  }\n  static isRelated(id, rel, propNames) {\n    const relatedItems = rel[propNames.related];\n    if (Array.isArray(relatedItems)) {\n      const values = relatedItems.map((item) => item.value);\n      return values.includes(id);\n    }\n    return relatedItems.value === id;\n  }\n  static newIfcProject(id) {\n    return {\n      expressID: id,\n      type: \"IFCPROJECT\",\n      children: []\n    };\n  }\n  getSpatialNode(modelID, node, treeChunks, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\n    });\n  }\n  getChildren(modelID, node, treeChunks, propNames, includeProperties) {\n    return __async(this, null, function* () {\n      const children = treeChunks[node.expressID];\n      if (children == void 0)\n        return;\n      const prop = propNames.key;\n      const nodes = [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let node2 = this.newNode(child);\n        if (includeProperties) {\n          const properties = yield this.getItemProperties(modelID, node2.expressID);\n          node2 = __spreadValues(__spreadValues({}, properties), node2);\n        }\n        yield this.getSpatialNode(modelID, node2, treeChunks, includeProperties);\n        nodes.push(node2);\n      }\n      node[prop] = nodes;\n    });\n  }\n  newNode(id) {\n    const typeName = this.getNodeType(id);\n    return {\n      expressID: id,\n      type: typeName,\n      children: []\n    };\n  }\n  getNodeType(id) {\n    const typeID = this.types[id];\n    return IfcElements2[typeID];\n  }\n  getSpatialTreeChunks(modelID) {\n    return __async(this, null, function* () {\n      const treeChunks = {};\n      yield this.getChunks(modelID, treeChunks, PropsNames.aggregates);\n      yield this.getChunks(modelID, treeChunks, PropsNames.spatial);\n      return treeChunks;\n    });\n  }\n  saveChunk(chunks, propNames, rel) {\n    const relating = rel[propNames.relating].value;\n    const related = rel[propNames.related].map((r) => r.value);\n    if (chunks[relating] == void 0) {\n      chunks[relating] = related;\n    } else {\n      chunks[relating] = chunks[relating].concat(related);\n    }\n  }\n  getRelated(rel, propNames, IDs) {\n    const element = rel[propNames.relating];\n    if (!Array.isArray(element))\n      IDs.push(element.value);\n    else\n      element.forEach((ele) => IDs.push(ele.value));\n  }\n  getAllRelatedItemsOfType(modelID, id, propNames) {\n    return __async(this, null, function* () {\n      const lines = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      const IDs = [];\n      for (let i = 0; i < lines.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, lines.get(i));\n        const isRelated = Properties.isRelated(id, rel, propNames);\n        if (isRelated)\n          this.getRelated(rel, propNames, IDs);\n      }\n      return IDs;\n    });\n  }\n  cleanupTypes() {\n    this.types = {};\n  }\n  getAllTypesOfModel(modelID) {\n    return __async(this, null, function* () {\n      const result = {};\n      const elements = Object.keys(IfcElements2).map((e) => parseInt(e));\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        const lines = yield this.api.GetLineIDsWithType(modelID, element);\n        const size = lines.size();\n        for (let i2 = 0; i2 < size; i2++)\n          result[lines.get(i2)] = element;\n      }\n      this.types = result;\n    });\n  }\n};\n\n// dist/web-ifc-api.ts\nvar WebIFCWasm;\nif (typeof self !== \"undefined\" && self.crossOriginIsolated) {\n  WebIFCWasm = require_web_ifc_mt();\n} else {\n  WebIFCWasm = require_web_ifc();\n}\nvar UNKNOWN = 0;\nvar STRING = 1;\nvar LABEL = 2;\nvar ENUM = 3;\nvar REAL = 4;\nvar REF = 5;\nvar EMPTY = 6;\nvar SET_BEGIN = 7;\nvar SET_END = 8;\nvar LINE_END = 9;\nfunction ms() {\n  return new Date().getTime();\n}\nvar IfcAPI2 = class {\n  constructor() {\n    this.wasmModule = void 0;\n    this.fs = void 0;\n    this.wasmPath = \"\";\n    this.isWasmPathAbsolute = false;\n    this.ifcGuidMap = new Map();\n    this.properties = new Properties(this);\n  }\n  Init(customLocateFileHandler) {\n    return __async(this, null, function* () {\n      if (WebIFCWasm) {\n        let locateFileHandler = (path, prefix) => {\n          if (path.endsWith(\".wasm\")) {\n            if (this.isWasmPathAbsolute) {\n              return this.wasmPath + path;\n            }\n            return prefix + this.wasmPath + path;\n          }\n          return prefix + path;\n        };\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true, locateFile: customLocateFileHandler || locateFileHandler });\n        this.fs = this.wasmModule.FS;\n      } else {\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\n      }\n    });\n  }\n  OpenModel(data, settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let offsetInSrc = 0;\n    let result = this.wasmModule.OpenModel(s, (destPtr, destSize) => {\n      let srcSize = Math.min(data.byteLength - offsetInSrc, destSize);\n      let dest = this.wasmModule.HEAPU8.subarray(destPtr, destPtr + destSize);\n      let src = data.subarray(offsetInSrc, offsetInSrc + srcSize);\n      dest.set(src);\n      offsetInSrc += srcSize;\n      return srcSize;\n    });\n    return result;\n  }\n  CreateModel(settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let result = this.wasmModule.CreateModel(s);\n    return result;\n  }\n  ExportFileAsIFC(modelID) {\n    this.wasmModule.ExportFileAsIFC(modelID);\n    let result = this.fs.readFile(\"/export.ifc\");\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\n    return result;\n  }\n  GetGeometry(modelID, geometryExpressID) {\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\n  }\n  GetLine(modelID, expressID, flatten = false) {\n    let rawLineData = this.GetRawLineData(modelID, expressID);\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\n    if (flatten) {\n      this.FlattenLine(modelID, lineData);\n    }\n    return lineData;\n  }\n  GetAndClearErrors(modelID) {\n    return this.wasmModule.GetAndClearErrors(modelID);\n  }\n  WriteLine(modelID, lineObject) {\n    Object.keys(lineObject).forEach((propertyName) => {\n      let property = lineObject[propertyName];\n      if (property && property.expressID !== void 0) {\n        this.WriteLine(modelID, property);\n        lineObject[propertyName] = {\n          type: 5,\n          value: property.expressID\n        };\n      } else if (Array.isArray(property) && property.length > 0) {\n        for (let i = 0; i < property.length; i++) {\n          if (property[i].expressID !== void 0) {\n            this.WriteLine(modelID, property[i]);\n            lineObject[propertyName][i] = {\n              type: 5,\n              value: property[i].expressID\n            };\n          }\n        }\n      }\n    });\n    let rawLineData = {\n      ID: lineObject.expressID,\n      type: lineObject.type,\n      arguments: lineObject.ToTape()\n    };\n    this.WriteRawLineData(modelID, rawLineData);\n  }\n  FlattenLine(modelID, line) {\n    Object.keys(line).forEach((propertyName) => {\n      let property = line[propertyName];\n      if (property && property.type === 5) {\n        line[propertyName] = this.GetLine(modelID, property.value, true);\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\n        for (let i = 0; i < property.length; i++) {\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\n        }\n      }\n    });\n  }\n  GetRawLineData(modelID, expressID) {\n    return this.wasmModule.GetLine(modelID, expressID);\n  }\n  WriteRawLineData(modelID, data) {\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\n  }\n  GetLineIDsWithType(modelID, type) {\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\n  }\n  GetAllLines(modelID) {\n    return this.wasmModule.GetAllLines(modelID);\n  }\n  SetGeometryTransformation(modelID, transformationMatrix) {\n    if (transformationMatrix.length != 16) {\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\n      return;\n    }\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\n  }\n  GetCoordinationMatrix(modelID) {\n    return this.wasmModule.GetCoordinationMatrix(modelID);\n  }\n  GetVertexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\n  }\n  GetIndexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\n  }\n  getSubArray(heap, startPtr, sizeBytes) {\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\n  }\n  CloseModel(modelID) {\n    this.ifcGuidMap.delete(modelID);\n    this.wasmModule.CloseModel(modelID);\n  }\n  StreamAllMeshes(modelID, meshCallback) {\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\n  }\n  StreamAllMeshesWithTypes(modelID, types, meshCallback) {\n    this.wasmModule.StreamAllMeshesWithTypes(modelID, types, meshCallback);\n  }\n  IsModelOpen(modelID) {\n    return this.wasmModule.IsModelOpen(modelID);\n  }\n  LoadAllGeometry(modelID) {\n    return this.wasmModule.LoadAllGeometry(modelID);\n  }\n  GetFlatMesh(modelID, expressID) {\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\n  }\n  CreateIfcGuidToExpressIdMapping(modelID) {\n    const map = new Map();\n    for (let x = 0; x < IfcElements.length; x++) {\n      const type = IfcElements[x];\n      const lines = this.GetLineIDsWithType(modelID, type);\n      const size = lines.size();\n      for (let y = 0; y < size; y++) {\n        const expressID = lines.get(y);\n        const info = this.GetLine(modelID, expressID);\n        const globalID = info.GlobalId.value;\n        map.set(expressID, globalID);\n        map.set(globalID, expressID);\n      }\n    }\n    this.ifcGuidMap.set(modelID, map);\n  }\n  SetWasmPath(path, absolute = false) {\n    this.wasmPath = path;\n    this.isWasmPathAbsolute = absolute;\n  }\n};\nexport {\n  EMPTY,\n  ENUM,\n  FromRawLineData,\n  Handle,\n  IFCACTIONREQUEST,\n  IFCACTOR,\n  IFCACTORROLE,\n  IFCACTUATOR,\n  IFCACTUATORTYPE,\n  IFCADDRESS,\n  IFCADVANCEDBREP,\n  IFCADVANCEDBREPWITHVOIDS,\n  IFCADVANCEDFACE,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTERMINALBOXTYPE,\n  IFCAIRTERMINALTYPE,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCAIRTOAIRHEATRECOVERYTYPE,\n  IFCALARM,\n  IFCALARMTYPE,\n  IFCALIGNMENT,\n  IFCALIGNMENT2DHORIZONTAL,\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\n  IFCALIGNMENT2DSEGMENT,\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\n  IFCALIGNMENT2DVERSEGLINE,\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\n  IFCALIGNMENT2DVERTICAL,\n  IFCALIGNMENT2DVERTICALSEGMENT,\n  IFCALIGNMENTCURVE,\n  IFCANNOTATION,\n  IFCANNOTATIONFILLAREA,\n  IFCAPPLICATION,\n  IFCAPPLIEDVALUE,\n  IFCAPPROVAL,\n  IFCAPPROVALRELATIONSHIP,\n  IFCARBITRARYCLOSEDPROFILEDEF,\n  IFCARBITRARYOPENPROFILEDEF,\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\n  IFCASSET,\n  IFCASYMMETRICISHAPEPROFILEDEF,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCAUDIOVISUALAPPLIANCETYPE,\n  IFCAXIS1PLACEMENT,\n  IFCAXIS2PLACEMENT2D,\n  IFCAXIS2PLACEMENT3D,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEAMTYPE,\n  IFCBEARING,\n  IFCBEARINGTYPE,\n  IFCBLOBTEXTURE,\n  IFCBLOCK,\n  IFCBOILER,\n  IFCBOILERTYPE,\n  IFCBOOLEANCLIPPINGRESULT,\n  IFCBOOLEANRESULT,\n  IFCBOUNDARYCONDITION,\n  IFCBOUNDARYCURVE,\n  IFCBOUNDARYEDGECONDITION,\n  IFCBOUNDARYFACECONDITION,\n  IFCBOUNDARYNODECONDITION,\n  IFCBOUNDARYNODECONDITIONWARPING,\n  IFCBOUNDEDCURVE,\n  IFCBOUNDEDSURFACE,\n  IFCBOUNDINGBOX,\n  IFCBOXEDHALFSPACE,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBSPLINECURVE,\n  IFCBSPLINECURVEWITHKNOTS,\n  IFCBSPLINESURFACE,\n  IFCBSPLINESURFACEWITHKNOTS,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPARTTYPE,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGELEMENTPROXYTYPE,\n  IFCBUILDINGELEMENTTYPE,\n  IFCBUILDINGSTOREY,\n  IFCBUILDINGSYSTEM,\n  IFCBURNER,\n  IFCBURNERTYPE,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERFITTINGTYPE,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLECARRIERSEGMENTTYPE,\n  IFCCABLEFITTING,\n  IFCCABLEFITTINGTYPE,\n  IFCCABLESEGMENT,\n  IFCCABLESEGMENTTYPE,\n  IFCCAISSONFOUNDATION,\n  IFCCAISSONFOUNDATIONTYPE,\n  IFCCARTESIANPOINT,\n  IFCCARTESIANPOINTLIST,\n  IFCCARTESIANPOINTLIST2D,\n  IFCCARTESIANPOINTLIST3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\n  IFCCENTERLINEPROFILEDEF,\n  IFCCHILLER,\n  IFCCHILLERTYPE,\n  IFCCHIMNEY,\n  IFCCHIMNEYTYPE,\n  IFCCIRCLE,\n  IFCCIRCLEHOLLOWPROFILEDEF,\n  IFCCIRCLEPROFILEDEF,\n  IFCCIRCULARARCSEGMENT2D,\n  IFCCIVILELEMENT,\n  IFCCIVILELEMENTTYPE,\n  IFCCLASSIFICATION,\n  IFCCLASSIFICATIONREFERENCE,\n  IFCCLOSEDSHELL,\n  IFCCOIL,\n  IFCCOILTYPE,\n  IFCCOLOURRGB,\n  IFCCOLOURRGBLIST,\n  IFCCOLOURSPECIFICATION,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOLUMNTYPE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\n  IFCCOMPLEXPROPERTY,\n  IFCCOMPLEXPROPERTYTEMPLATE,\n  IFCCOMPOSITECURVE,\n  IFCCOMPOSITECURVEONSURFACE,\n  IFCCOMPOSITECURVESEGMENT,\n  IFCCOMPOSITEPROFILEDEF,\n  IFCCOMPRESSOR,\n  IFCCOMPRESSORTYPE,\n  IFCCONDENSER,\n  IFCCONDENSERTYPE,\n  IFCCONIC,\n  IFCCONNECTEDFACESET,\n  IFCCONNECTIONCURVEGEOMETRY,\n  IFCCONNECTIONGEOMETRY,\n  IFCCONNECTIONPOINTECCENTRICITY,\n  IFCCONNECTIONPOINTGEOMETRY,\n  IFCCONNECTIONSURFACEGEOMETRY,\n  IFCCONNECTIONVOLUMEGEOMETRY,\n  IFCCONSTRAINT,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\n  IFCCONSTRUCTIONMATERIALRESOURCE,\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\n  IFCCONSTRUCTIONRESOURCE,\n  IFCCONSTRUCTIONRESOURCETYPE,\n  IFCCONTEXT,\n  IFCCONTEXTDEPENDENTUNIT,\n  IFCCONTROL,\n  IFCCONTROLLER,\n  IFCCONTROLLERTYPE,\n  IFCCONVERSIONBASEDUNIT,\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\n  IFCCOOLEDBEAM,\n  IFCCOOLEDBEAMTYPE,\n  IFCCOOLINGTOWER,\n  IFCCOOLINGTOWERTYPE,\n  IFCCOORDINATEOPERATION,\n  IFCCOORDINATEREFERENCESYSTEM,\n  IFCCOSTITEM,\n  IFCCOSTSCHEDULE,\n  IFCCOSTVALUE,\n  IFCCOVERING,\n  IFCCOVERINGTYPE,\n  IFCCREWRESOURCE,\n  IFCCREWRESOURCETYPE,\n  IFCCSGPRIMITIVE3D,\n  IFCCSGSOLID,\n  IFCCSHAPEPROFILEDEF,\n  IFCCURRENCYRELATIONSHIP,\n  IFCCURTAINWALL,\n  IFCCURTAINWALLTYPE,\n  IFCCURVE,\n  IFCCURVEBOUNDEDPLANE,\n  IFCCURVEBOUNDEDSURFACE,\n  IFCCURVESEGMENT2D,\n  IFCCURVESTYLE,\n  IFCCURVESTYLEFONT,\n  IFCCURVESTYLEFONTANDSCALING,\n  IFCCURVESTYLEFONTPATTERN,\n  IFCCYLINDRICALSURFACE,\n  IFCDAMPER,\n  IFCDAMPERTYPE,\n  IFCDEEPFOUNDATION,\n  IFCDEEPFOUNDATIONTYPE,\n  IFCDERIVEDPROFILEDEF,\n  IFCDERIVEDUNIT,\n  IFCDERIVEDUNITELEMENT,\n  IFCDIMENSIONALEXPONENTS,\n  IFCDIRECTION,\n  IFCDISCRETEACCESSORY,\n  IFCDISCRETEACCESSORYTYPE,\n  IFCDISTANCEEXPRESSION,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\n  IFCDISTRIBUTIONCIRCUIT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONELEMENTTYPE,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\n  IFCDISTRIBUTIONPORT,\n  IFCDISTRIBUTIONSYSTEM,\n  IFCDOCUMENTINFORMATION,\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\n  IFCDOCUMENTREFERENCE,\n  IFCDOOR,\n  IFCDOORLININGPROPERTIES,\n  IFCDOORPANELPROPERTIES,\n  IFCDOORSTANDARDCASE,\n  IFCDOORSTYLE,\n  IFCDOORTYPE,\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\n  IFCDUCTFITTING,\n  IFCDUCTFITTINGTYPE,\n  IFCDUCTSEGMENT,\n  IFCDUCTSEGMENTTYPE,\n  IFCDUCTSILENCER,\n  IFCDUCTSILENCERTYPE,\n  IFCEDGE,\n  IFCEDGECURVE,\n  IFCEDGELOOP,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICAPPLIANCETYPE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICGENERATORTYPE,\n  IFCELECTRICMOTOR,\n  IFCELECTRICMOTORTYPE,\n  IFCELECTRICTIMECONTROL,\n  IFCELECTRICTIMECONTROLTYPE,\n  IFCELEMENT,\n  IFCELEMENTARYSURFACE,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTASSEMBLYTYPE,\n  IFCELEMENTCOMPONENT,\n  IFCELEMENTCOMPONENTTYPE,\n  IFCELEMENTQUANTITY,\n  IFCELEMENTTYPE,\n  IFCELLIPSE,\n  IFCELLIPSEPROFILEDEF,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENERGYCONVERSIONDEVICETYPE,\n  IFCENGINE,\n  IFCENGINETYPE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATIVECOOLERTYPE,\n  IFCEVAPORATOR,\n  IFCEVAPORATORTYPE,\n  IFCEVENT,\n  IFCEVENTTIME,\n  IFCEVENTTYPE,\n  IFCEXTENDEDPROPERTIES,\n  IFCEXTERNALINFORMATION,\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\n  IFCEXTERNALLYDEFINEDTEXTFONT,\n  IFCEXTERNALREFERENCE,\n  IFCEXTERNALREFERENCERELATIONSHIP,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCEXTRUDEDAREASOLID,\n  IFCEXTRUDEDAREASOLIDTAPERED,\n  IFCFACE,\n  IFCFACEBASEDSURFACEMODEL,\n  IFCFACEBOUND,\n  IFCFACEOUTERBOUND,\n  IFCFACESURFACE,\n  IFCFACETEDBREP,\n  IFCFACETEDBREPWITHVOIDS,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAILURECONNECTIONCONDITION,\n  IFCFAN,\n  IFCFANTYPE,\n  IFCFASTENER,\n  IFCFASTENERTYPE,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILLAREASTYLE,\n  IFCFILLAREASTYLEHATCHING,\n  IFCFILLAREASTYLETILES,\n  IFCFILTER,\n  IFCFILTERTYPE,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFIRESUPPRESSIONTERMINALTYPE,\n  IFCFIXEDREFERENCESWEPTAREASOLID,\n  IFCFLOWCONTROLLER,\n  IFCFLOWCONTROLLERTYPE,\n  IFCFLOWFITTING,\n  IFCFLOWFITTINGTYPE,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWINSTRUMENTTYPE,\n  IFCFLOWMETER,\n  IFCFLOWMETERTYPE,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWMOVINGDEVICETYPE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSEGMENTTYPE,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWSTORAGEDEVICETYPE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTERMINALTYPE,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFLOWTREATMENTDEVICETYPE,\n  IFCFOOTING,\n  IFCFOOTINGTYPE,\n  IFCFURNISHINGELEMENT,\n  IFCFURNISHINGELEMENTTYPE,\n  IFCFURNITURE,\n  IFCFURNITURETYPE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGEOGRAPHICELEMENTTYPE,\n  IFCGEOMETRICCURVESET,\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\n  IFCGEOMETRICREPRESENTATIONITEM,\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\n  IFCGEOMETRICSET,\n  IFCGRID,\n  IFCGRIDAXIS,\n  IFCGRIDPLACEMENT,\n  IFCGROUP,\n  IFCHALFSPACESOLID,\n  IFCHEATEXCHANGER,\n  IFCHEATEXCHANGERTYPE,\n  IFCHUMIDIFIER,\n  IFCHUMIDIFIERTYPE,\n  IFCIMAGETEXTURE,\n  IFCINDEXEDCOLOURMAP,\n  IFCINDEXEDPOLYCURVE,\n  IFCINDEXEDPOLYGONALFACE,\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\n  IFCINDEXEDTEXTUREMAP,\n  IFCINDEXEDTRIANGLETEXTUREMAP,\n  IFCINTERCEPTOR,\n  IFCINTERCEPTORTYPE,\n  IFCINTERSECTIONCURVE,\n  IFCINVENTORY,\n  IFCIRREGULARTIMESERIES,\n  IFCIRREGULARTIMESERIESVALUE,\n  IFCISHAPEPROFILEDEF,\n  IFCJUNCTIONBOX,\n  IFCJUNCTIONBOXTYPE,\n  IFCLABORRESOURCE,\n  IFCLABORRESOURCETYPE,\n  IFCLAGTIME,\n  IFCLAMP,\n  IFCLAMPTYPE,\n  IFCLIBRARYINFORMATION,\n  IFCLIBRARYREFERENCE,\n  IFCLIGHTDISTRIBUTIONDATA,\n  IFCLIGHTFIXTURE,\n  IFCLIGHTFIXTURETYPE,\n  IFCLIGHTINTENSITYDISTRIBUTION,\n  IFCLIGHTSOURCE,\n  IFCLIGHTSOURCEAMBIENT,\n  IFCLIGHTSOURCEDIRECTIONAL,\n  IFCLIGHTSOURCEGONIOMETRIC,\n  IFCLIGHTSOURCEPOSITIONAL,\n  IFCLIGHTSOURCESPOT,\n  IFCLINE,\n  IFCLINEARPLACEMENT,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCLINESEGMENT2D,\n  IFCLOCALPLACEMENT,\n  IFCLOOP,\n  IFCLSHAPEPROFILEDEF,\n  IFCMANIFOLDSOLIDBREP,\n  IFCMAPCONVERSION,\n  IFCMAPPEDITEM,\n  IFCMATERIAL,\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\n  IFCMATERIALCONSTITUENT,\n  IFCMATERIALCONSTITUENTSET,\n  IFCMATERIALDEFINITION,\n  IFCMATERIALDEFINITIONREPRESENTATION,\n  IFCMATERIALLAYER,\n  IFCMATERIALLAYERSET,\n  IFCMATERIALLAYERSETUSAGE,\n  IFCMATERIALLAYERWITHOFFSETS,\n  IFCMATERIALLIST,\n  IFCMATERIALPROFILE,\n  IFCMATERIALPROFILESET,\n  IFCMATERIALPROFILESETUSAGE,\n  IFCMATERIALPROFILESETUSAGETAPERING,\n  IFCMATERIALPROFILEWITHOFFSETS,\n  IFCMATERIALPROPERTIES,\n  IFCMATERIALRELATIONSHIP,\n  IFCMATERIALUSAGEDEFINITION,\n  IFCMEASUREWITHUNIT,\n  IFCMECHANICALFASTENER,\n  IFCMECHANICALFASTENERTYPE,\n  IFCMEDICALDEVICE,\n  IFCMEDICALDEVICETYPE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMEMBERTYPE,\n  IFCMETRIC,\n  IFCMIRROREDPROFILEDEF,\n  IFCMONETARYUNIT,\n  IFCMOTORCONNECTION,\n  IFCMOTORCONNECTIONTYPE,\n  IFCNAMEDUNIT,\n  IFCOBJECT,\n  IFCOBJECTDEFINITION,\n  IFCOBJECTIVE,\n  IFCOBJECTPLACEMENT,\n  IFCOCCUPANT,\n  IFCOFFSETCURVE,\n  IFCOFFSETCURVE2D,\n  IFCOFFSETCURVE3D,\n  IFCOFFSETCURVEBYDISTANCES,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOPENSHELL,\n  IFCORGANIZATION,\n  IFCORGANIZATIONRELATIONSHIP,\n  IFCORIENTATIONEXPRESSION,\n  IFCORIENTEDEDGE,\n  IFCOUTERBOUNDARYCURVE,\n  IFCOUTLET,\n  IFCOUTLETTYPE,\n  IFCOWNERHISTORY,\n  IFCPARAMETERIZEDPROFILEDEF,\n  IFCPATH,\n  IFCPCURVE,\n  IFCPERFORMANCEHISTORY,\n  IFCPERMEABLECOVERINGPROPERTIES,\n  IFCPERMIT,\n  IFCPERSON,\n  IFCPERSONANDORGANIZATION,\n  IFCPHYSICALCOMPLEXQUANTITY,\n  IFCPHYSICALQUANTITY,\n  IFCPHYSICALSIMPLEQUANTITY,\n  IFCPILE,\n  IFCPILETYPE,\n  IFCPIPEFITTING,\n  IFCPIPEFITTINGTYPE,\n  IFCPIPESEGMENT,\n  IFCPIPESEGMENTTYPE,\n  IFCPIXELTEXTURE,\n  IFCPLACEMENT,\n  IFCPLANARBOX,\n  IFCPLANAREXTENT,\n  IFCPLANE,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPLATETYPE,\n  IFCPOINT,\n  IFCPOINTONCURVE,\n  IFCPOINTONSURFACE,\n  IFCPOLYGONALBOUNDEDHALFSPACE,\n  IFCPOLYGONALFACESET,\n  IFCPOLYLINE,\n  IFCPOLYLOOP,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPOSTALADDRESS,\n  IFCPREDEFINEDCOLOUR,\n  IFCPREDEFINEDCURVEFONT,\n  IFCPREDEFINEDITEM,\n  IFCPREDEFINEDPROPERTIES,\n  IFCPREDEFINEDPROPERTYSET,\n  IFCPREDEFINEDTEXTFONT,\n  IFCPRESENTATIONITEM,\n  IFCPRESENTATIONLAYERASSIGNMENT,\n  IFCPRESENTATIONLAYERWITHSTYLE,\n  IFCPRESENTATIONSTYLE,\n  IFCPRESENTATIONSTYLEASSIGNMENT,\n  IFCPROCEDURE,\n  IFCPROCEDURETYPE,\n  IFCPROCESS,\n  IFCPRODUCT,\n  IFCPRODUCTDEFINITIONSHAPE,\n  IFCPRODUCTREPRESENTATION,\n  IFCPROFILEDEF,\n  IFCPROFILEPROPERTIES,\n  IFCPROJECT,\n  IFCPROJECTEDCRS,\n  IFCPROJECTIONELEMENT,\n  IFCPROJECTLIBRARY,\n  IFCPROJECTORDER,\n  IFCPROPERTY,\n  IFCPROPERTYABSTRACTION,\n  IFCPROPERTYBOUNDEDVALUE,\n  IFCPROPERTYDEFINITION,\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\n  IFCPROPERTYENUMERATEDVALUE,\n  IFCPROPERTYENUMERATION,\n  IFCPROPERTYLISTVALUE,\n  IFCPROPERTYREFERENCEVALUE,\n  IFCPROPERTYSET,\n  IFCPROPERTYSETDEFINITION,\n  IFCPROPERTYSETTEMPLATE,\n  IFCPROPERTYSINGLEVALUE,\n  IFCPROPERTYTABLEVALUE,\n  IFCPROPERTYTEMPLATE,\n  IFCPROPERTYTEMPLATEDEFINITION,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\n  IFCPROTECTIVEDEVICETYPE,\n  IFCPROXY,\n  IFCPUMP,\n  IFCPUMPTYPE,\n  IFCQUANTITYAREA,\n  IFCQUANTITYCOUNT,\n  IFCQUANTITYLENGTH,\n  IFCQUANTITYSET,\n  IFCQUANTITYTIME,\n  IFCQUANTITYVOLUME,\n  IFCQUANTITYWEIGHT,\n  IFCRAILING,\n  IFCRAILINGTYPE,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCRAMPFLIGHTTYPE,\n  IFCRAMPTYPE,\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\n  IFCRECTANGLEHOLLOWPROFILEDEF,\n  IFCRECTANGLEPROFILEDEF,\n  IFCRECTANGULARPYRAMID,\n  IFCRECTANGULARTRIMMEDSURFACE,\n  IFCRECURRENCEPATTERN,\n  IFCREFERENCE,\n  IFCREFERENT,\n  IFCREGULARTIMESERIES,\n  IFCREINFORCEMENTBARPROPERTIES,\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGBARTYPE,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGELEMENTTYPE,\n  IFCREINFORCINGMESH,\n  IFCREINFORCINGMESHTYPE,\n  IFCRELAGGREGATES,\n  IFCRELASSIGNS,\n  IFCRELASSIGNSTOACTOR,\n  IFCRELASSIGNSTOCONTROL,\n  IFCRELASSIGNSTOGROUP,\n  IFCRELASSIGNSTOGROUPBYFACTOR,\n  IFCRELASSIGNSTOPROCESS,\n  IFCRELASSIGNSTOPRODUCT,\n  IFCRELASSIGNSTORESOURCE,\n  IFCRELASSOCIATES,\n  IFCRELASSOCIATESAPPROVAL,\n  IFCRELASSOCIATESCLASSIFICATION,\n  IFCRELASSOCIATESCONSTRAINT,\n  IFCRELASSOCIATESDOCUMENT,\n  IFCRELASSOCIATESLIBRARY,\n  IFCRELASSOCIATESMATERIAL,\n  IFCRELATIONSHIP,\n  IFCRELCONNECTS,\n  IFCRELCONNECTSELEMENTS,\n  IFCRELCONNECTSPATHELEMENTS,\n  IFCRELCONNECTSPORTS,\n  IFCRELCONNECTSPORTTOELEMENT,\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\n  IFCRELCONNECTSSTRUCTURALMEMBER,\n  IFCRELCONNECTSWITHECCENTRICITY,\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\n  IFCRELCOVERSBLDGELEMENTS,\n  IFCRELCOVERSSPACES,\n  IFCRELDECLARES,\n  IFCRELDECOMPOSES,\n  IFCRELDEFINES,\n  IFCRELDEFINESBYOBJECT,\n  IFCRELDEFINESBYPROPERTIES,\n  IFCRELDEFINESBYTEMPLATE,\n  IFCRELDEFINESBYTYPE,\n  IFCRELFILLSELEMENT,\n  IFCRELFLOWCONTROLELEMENTS,\n  IFCRELINTERFERESELEMENTS,\n  IFCRELNESTS,\n  IFCRELPOSITIONS,\n  IFCRELPROJECTSELEMENT,\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\n  IFCRELSEQUENCE,\n  IFCRELSERVICESBUILDINGS,\n  IFCRELSPACEBOUNDARY,\n  IFCRELSPACEBOUNDARY1STLEVEL,\n  IFCRELSPACEBOUNDARY2NDLEVEL,\n  IFCRELVOIDSELEMENT,\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\n  IFCREPRESENTATION,\n  IFCREPRESENTATIONCONTEXT,\n  IFCREPRESENTATIONITEM,\n  IFCREPRESENTATIONMAP,\n  IFCRESOURCE,\n  IFCRESOURCEAPPROVALRELATIONSHIP,\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\n  IFCRESOURCELEVELRELATIONSHIP,\n  IFCRESOURCETIME,\n  IFCREVOLVEDAREASOLID,\n  IFCREVOLVEDAREASOLIDTAPERED,\n  IFCRIGHTCIRCULARCONE,\n  IFCRIGHTCIRCULARCYLINDER,\n  IFCROOF,\n  IFCROOFTYPE,\n  IFCROOT,\n  IFCROUNDEDRECTANGLEPROFILEDEF,\n  IFCSANITARYTERMINAL,\n  IFCSANITARYTERMINALTYPE,\n  IFCSCHEDULINGTIME,\n  IFCSEAMCURVE,\n  IFCSECTIONEDSOLID,\n  IFCSECTIONEDSOLIDHORIZONTAL,\n  IFCSECTIONEDSPINE,\n  IFCSECTIONPROPERTIES,\n  IFCSECTIONREINFORCEMENTPROPERTIES,\n  IFCSENSOR,\n  IFCSENSORTYPE,\n  IFCSHADINGDEVICE,\n  IFCSHADINGDEVICETYPE,\n  IFCSHAPEASPECT,\n  IFCSHAPEMODEL,\n  IFCSHAPEREPRESENTATION,\n  IFCSHELLBASEDSURFACEMODEL,\n  IFCSIMPLEPROPERTY,\n  IFCSIMPLEPROPERTYTEMPLATE,\n  IFCSITE,\n  IFCSIUNIT,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSLABTYPE,\n  IFCSLIPPAGECONNECTIONCONDITION,\n  IFCSOLARDEVICE,\n  IFCSOLARDEVICETYPE,\n  IFCSOLIDMODEL,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPACEHEATERTYPE,\n  IFCSPACETYPE,\n  IFCSPATIALELEMENT,\n  IFCSPATIALELEMENTTYPE,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\n  IFCSPATIALZONE,\n  IFCSPATIALZONETYPE,\n  IFCSPHERE,\n  IFCSPHERICALSURFACE,\n  IFCSTACKTERMINAL,\n  IFCSTACKTERMINALTYPE,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTAIRFLIGHTTYPE,\n  IFCSTAIRTYPE,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALANALYSISMODEL,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCONNECTIONCONDITION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALLOAD,\n  IFCSTRUCTURALLOADCASE,\n  IFCSTRUCTURALLOADCONFIGURATION,\n  IFCSTRUCTURALLOADGROUP,\n  IFCSTRUCTURALLOADLINEARFORCE,\n  IFCSTRUCTURALLOADORRESULT,\n  IFCSTRUCTURALLOADPLANARFORCE,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\n  IFCSTRUCTURALLOADSINGLEFORCE,\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\n  IFCSTRUCTURALLOADSTATIC,\n  IFCSTRUCTURALLOADTEMPERATURE,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALRESULTGROUP,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSTYLEDITEM,\n  IFCSTYLEDREPRESENTATION,\n  IFCSTYLEMODEL,\n  IFCSUBCONTRACTRESOURCE,\n  IFCSUBCONTRACTRESOURCETYPE,\n  IFCSUBEDGE,\n  IFCSURFACE,\n  IFCSURFACECURVE,\n  IFCSURFACECURVESWEPTAREASOLID,\n  IFCSURFACEFEATURE,\n  IFCSURFACEOFLINEAREXTRUSION,\n  IFCSURFACEOFREVOLUTION,\n  IFCSURFACEREINFORCEMENTAREA,\n  IFCSURFACESTYLE,\n  IFCSURFACESTYLELIGHTING,\n  IFCSURFACESTYLEREFRACTION,\n  IFCSURFACESTYLERENDERING,\n  IFCSURFACESTYLESHADING,\n  IFCSURFACESTYLEWITHTEXTURES,\n  IFCSURFACETEXTURE,\n  IFCSWEPTAREASOLID,\n  IFCSWEPTDISKSOLID,\n  IFCSWEPTDISKSOLIDPOLYGONAL,\n  IFCSWEPTSURFACE,\n  IFCSWITCHINGDEVICE,\n  IFCSWITCHINGDEVICETYPE,\n  IFCSYSTEM,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCSYSTEMFURNITUREELEMENTTYPE,\n  IFCTABLE,\n  IFCTABLECOLUMN,\n  IFCTABLEROW,\n  IFCTANK,\n  IFCTANKTYPE,\n  IFCTASK,\n  IFCTASKTIME,\n  IFCTASKTIMERECURRING,\n  IFCTASKTYPE,\n  IFCTELECOMADDRESS,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONANCHORTYPE,\n  IFCTENDONCONDUIT,\n  IFCTENDONCONDUITTYPE,\n  IFCTENDONTYPE,\n  IFCTESSELLATEDFACESET,\n  IFCTESSELLATEDITEM,\n  IFCTEXTLITERAL,\n  IFCTEXTLITERALWITHEXTENT,\n  IFCTEXTSTYLE,\n  IFCTEXTSTYLEFONTMODEL,\n  IFCTEXTSTYLEFORDEFINEDFONT,\n  IFCTEXTSTYLETEXTMODEL,\n  IFCTEXTURECOORDINATE,\n  IFCTEXTURECOORDINATEGENERATOR,\n  IFCTEXTUREMAP,\n  IFCTEXTUREVERTEX,\n  IFCTEXTUREVERTEXLIST,\n  IFCTIMEPERIOD,\n  IFCTIMESERIES,\n  IFCTIMESERIESVALUE,\n  IFCTOPOLOGICALREPRESENTATIONITEM,\n  IFCTOPOLOGYREPRESENTATION,\n  IFCTOROIDALSURFACE,\n  IFCTRANSFORMER,\n  IFCTRANSFORMERTYPE,\n  IFCTRANSITIONCURVESEGMENT2D,\n  IFCTRANSPORTELEMENT,\n  IFCTRANSPORTELEMENTTYPE,\n  IFCTRAPEZIUMPROFILEDEF,\n  IFCTRIANGULATEDFACESET,\n  IFCTRIANGULATEDIRREGULARNETWORK,\n  IFCTRIMMEDCURVE,\n  IFCTSHAPEPROFILEDEF,\n  IFCTUBEBUNDLE,\n  IFCTUBEBUNDLETYPE,\n  IFCTYPEOBJECT,\n  IFCTYPEPROCESS,\n  IFCTYPEPRODUCT,\n  IFCTYPERESOURCE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYCONTROLELEMENTTYPE,\n  IFCUNITARYEQUIPMENT,\n  IFCUNITARYEQUIPMENTTYPE,\n  IFCUNITASSIGNMENT,\n  IFCUSHAPEPROFILEDEF,\n  IFCVALVE,\n  IFCVALVETYPE,\n  IFCVECTOR,\n  IFCVERTEX,\n  IFCVERTEXLOOP,\n  IFCVERTEXPOINT,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONDAMPERTYPE,\n  IFCVIBRATIONISOLATOR,\n  IFCVIBRATIONISOLATORTYPE,\n  IFCVIRTUALELEMENT,\n  IFCVIRTUALGRIDINTERSECTION,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWALLTYPE,\n  IFCWASTETERMINAL,\n  IFCWASTETERMINALTYPE,\n  IFCWINDOW,\n  IFCWINDOWLININGPROPERTIES,\n  IFCWINDOWPANELPROPERTIES,\n  IFCWINDOWSTANDARDCASE,\n  IFCWINDOWSTYLE,\n  IFCWINDOWTYPE,\n  IFCWORKCALENDAR,\n  IFCWORKCONTROL,\n  IFCWORKPLAN,\n  IFCWORKSCHEDULE,\n  IFCWORKTIME,\n  IFCZONE,\n  IFCZSHAPEPROFILEDEF,\n  IfcAPI2 as IfcAPI,\n  IfcAbsorbedDoseMeasure,\n  IfcAccelerationMeasure,\n  IfcActionRequest,\n  IfcActionRequestTypeEnum,\n  IfcActionSourceTypeEnum,\n  IfcActionTypeEnum,\n  IfcActor,\n  IfcActorRole,\n  IfcActuator,\n  IfcActuatorType,\n  IfcActuatorTypeEnum,\n  IfcAddress,\n  IfcAddressTypeEnum,\n  IfcAdvancedBrep,\n  IfcAdvancedBrepWithVoids,\n  IfcAdvancedFace,\n  IfcAirTerminal,\n  IfcAirTerminalBox,\n  IfcAirTerminalBoxType,\n  IfcAirTerminalBoxTypeEnum,\n  IfcAirTerminalType,\n  IfcAirTerminalTypeEnum,\n  IfcAirToAirHeatRecovery,\n  IfcAirToAirHeatRecoveryType,\n  IfcAirToAirHeatRecoveryTypeEnum,\n  IfcAlarm,\n  IfcAlarmType,\n  IfcAlarmTypeEnum,\n  IfcAlignment,\n  IfcAlignment2DHorizontal,\n  IfcAlignment2DHorizontalSegment,\n  IfcAlignment2DSegment,\n  IfcAlignment2DVerSegCircularArc,\n  IfcAlignment2DVerSegLine,\n  IfcAlignment2DVerSegParabolicArc,\n  IfcAlignment2DVertical,\n  IfcAlignment2DVerticalSegment,\n  IfcAlignmentCurve,\n  IfcAlignmentTypeEnum,\n  IfcAmountOfSubstanceMeasure,\n  IfcAnalysisModelTypeEnum,\n  IfcAnalysisTheoryTypeEnum,\n  IfcAngularVelocityMeasure,\n  IfcAnnotation,\n  IfcAnnotationFillArea,\n  IfcApplication,\n  IfcAppliedValue,\n  IfcApproval,\n  IfcApprovalRelationship,\n  IfcArbitraryClosedProfileDef,\n  IfcArbitraryOpenProfileDef,\n  IfcArbitraryProfileDefWithVoids,\n  IfcAreaDensityMeasure,\n  IfcAreaMeasure,\n  IfcArithmeticOperatorEnum,\n  IfcAssemblyPlaceEnum,\n  IfcAsset,\n  IfcAsymmetricIShapeProfileDef,\n  IfcAudioVisualAppliance,\n  IfcAudioVisualApplianceType,\n  IfcAudioVisualApplianceTypeEnum,\n  IfcAxis1Placement,\n  IfcAxis2Placement2D,\n  IfcAxis2Placement3D,\n  IfcBSplineCurve,\n  IfcBSplineCurveForm,\n  IfcBSplineCurveWithKnots,\n  IfcBSplineSurface,\n  IfcBSplineSurfaceForm,\n  IfcBSplineSurfaceWithKnots,\n  IfcBeam,\n  IfcBeamStandardCase,\n  IfcBeamType,\n  IfcBeamTypeEnum,\n  IfcBearing,\n  IfcBearingType,\n  IfcBearingTypeDisplacementEnum,\n  IfcBearingTypeEnum,\n  IfcBenchmarkEnum,\n  IfcBinary,\n  IfcBlobTexture,\n  IfcBlock,\n  IfcBoiler,\n  IfcBoilerType,\n  IfcBoilerTypeEnum,\n  IfcBoolean,\n  IfcBooleanClippingResult,\n  IfcBooleanOperator,\n  IfcBooleanResult,\n  IfcBoundaryCondition,\n  IfcBoundaryCurve,\n  IfcBoundaryEdgeCondition,\n  IfcBoundaryFaceCondition,\n  IfcBoundaryNodeCondition,\n  IfcBoundaryNodeConditionWarping,\n  IfcBoundedCurve,\n  IfcBoundedSurface,\n  IfcBoundingBox,\n  IfcBoxAlignment,\n  IfcBoxedHalfSpace,\n  IfcBridge,\n  IfcBridgePart,\n  IfcBridgePartTypeEnum,\n  IfcBridgeTypeEnum,\n  IfcBuilding,\n  IfcBuildingElement,\n  IfcBuildingElementPart,\n  IfcBuildingElementPartType,\n  IfcBuildingElementPartTypeEnum,\n  IfcBuildingElementProxy,\n  IfcBuildingElementProxyType,\n  IfcBuildingElementProxyTypeEnum,\n  IfcBuildingElementType,\n  IfcBuildingStorey,\n  IfcBuildingSystem,\n  IfcBuildingSystemTypeEnum,\n  IfcBurner,\n  IfcBurnerType,\n  IfcBurnerTypeEnum,\n  IfcCShapeProfileDef,\n  IfcCableCarrierFitting,\n  IfcCableCarrierFittingType,\n  IfcCableCarrierFittingTypeEnum,\n  IfcCableCarrierSegment,\n  IfcCableCarrierSegmentType,\n  IfcCableCarrierSegmentTypeEnum,\n  IfcCableFitting,\n  IfcCableFittingType,\n  IfcCableFittingTypeEnum,\n  IfcCableSegment,\n  IfcCableSegmentType,\n  IfcCableSegmentTypeEnum,\n  IfcCaissonFoundation,\n  IfcCaissonFoundationType,\n  IfcCaissonFoundationTypeEnum,\n  IfcCardinalPointReference,\n  IfcCartesianPoint,\n  IfcCartesianPointList,\n  IfcCartesianPointList2D,\n  IfcCartesianPointList3D,\n  IfcCartesianTransformationOperator,\n  IfcCartesianTransformationOperator2D,\n  IfcCartesianTransformationOperator2DnonUniform,\n  IfcCartesianTransformationOperator3D,\n  IfcCartesianTransformationOperator3DnonUniform,\n  IfcCenterLineProfileDef,\n  IfcChangeActionEnum,\n  IfcChiller,\n  IfcChillerType,\n  IfcChillerTypeEnum,\n  IfcChimney,\n  IfcChimneyType,\n  IfcChimneyTypeEnum,\n  IfcCircle,\n  IfcCircleHollowProfileDef,\n  IfcCircleProfileDef,\n  IfcCircularArcSegment2D,\n  IfcCivilElement,\n  IfcCivilElementType,\n  IfcClassification,\n  IfcClassificationReference,\n  IfcClosedShell,\n  IfcCoil,\n  IfcCoilType,\n  IfcCoilTypeEnum,\n  IfcColourRgb,\n  IfcColourRgbList,\n  IfcColourSpecification,\n  IfcColumn,\n  IfcColumnStandardCase,\n  IfcColumnType,\n  IfcColumnTypeEnum,\n  IfcCommunicationsAppliance,\n  IfcCommunicationsApplianceType,\n  IfcCommunicationsApplianceTypeEnum,\n  IfcComplexProperty,\n  IfcComplexPropertyTemplate,\n  IfcComplexPropertyTemplateTypeEnum,\n  IfcCompositeCurve,\n  IfcCompositeCurveOnSurface,\n  IfcCompositeCurveSegment,\n  IfcCompositeProfileDef,\n  IfcCompressor,\n  IfcCompressorType,\n  IfcCompressorTypeEnum,\n  IfcCondenser,\n  IfcCondenserType,\n  IfcCondenserTypeEnum,\n  IfcConic,\n  IfcConnectedFaceSet,\n  IfcConnectionCurveGeometry,\n  IfcConnectionGeometry,\n  IfcConnectionPointEccentricity,\n  IfcConnectionPointGeometry,\n  IfcConnectionSurfaceGeometry,\n  IfcConnectionTypeEnum,\n  IfcConnectionVolumeGeometry,\n  IfcConstraint,\n  IfcConstraintEnum,\n  IfcConstructionEquipmentResource,\n  IfcConstructionEquipmentResourceType,\n  IfcConstructionEquipmentResourceTypeEnum,\n  IfcConstructionMaterialResource,\n  IfcConstructionMaterialResourceType,\n  IfcConstructionMaterialResourceTypeEnum,\n  IfcConstructionProductResource,\n  IfcConstructionProductResourceType,\n  IfcConstructionProductResourceTypeEnum,\n  IfcConstructionResource,\n  IfcConstructionResourceType,\n  IfcContext,\n  IfcContextDependentMeasure,\n  IfcContextDependentUnit,\n  IfcControl,\n  IfcController,\n  IfcControllerType,\n  IfcControllerTypeEnum,\n  IfcConversionBasedUnit,\n  IfcConversionBasedUnitWithOffset,\n  IfcCooledBeam,\n  IfcCooledBeamType,\n  IfcCooledBeamTypeEnum,\n  IfcCoolingTower,\n  IfcCoolingTowerType,\n  IfcCoolingTowerTypeEnum,\n  IfcCoordinateOperation,\n  IfcCoordinateReferenceSystem,\n  IfcCostItem,\n  IfcCostItemTypeEnum,\n  IfcCostSchedule,\n  IfcCostScheduleTypeEnum,\n  IfcCostValue,\n  IfcCountMeasure,\n  IfcCovering,\n  IfcCoveringType,\n  IfcCoveringTypeEnum,\n  IfcCrewResource,\n  IfcCrewResourceType,\n  IfcCrewResourceTypeEnum,\n  IfcCsgPrimitive3D,\n  IfcCsgSolid,\n  IfcCurrencyRelationship,\n  IfcCurtainWall,\n  IfcCurtainWallType,\n  IfcCurtainWallTypeEnum,\n  IfcCurvatureMeasure,\n  IfcCurve,\n  IfcCurveBoundedPlane,\n  IfcCurveBoundedSurface,\n  IfcCurveInterpolationEnum,\n  IfcCurveSegment2D,\n  IfcCurveStyle,\n  IfcCurveStyleFont,\n  IfcCurveStyleFontAndScaling,\n  IfcCurveStyleFontPattern,\n  IfcCylindricalSurface,\n  IfcDamper,\n  IfcDamperType,\n  IfcDamperTypeEnum,\n  IfcDataOriginEnum,\n  IfcDate,\n  IfcDateTime,\n  IfcDayInMonthNumber,\n  IfcDayInWeekNumber,\n  IfcDeepFoundation,\n  IfcDeepFoundationType,\n  IfcDerivedProfileDef,\n  IfcDerivedUnit,\n  IfcDerivedUnitElement,\n  IfcDerivedUnitEnum,\n  IfcDescriptiveMeasure,\n  IfcDimensionCount,\n  IfcDimensionalExponents,\n  IfcDirection,\n  IfcDirectionSenseEnum,\n  IfcDiscreteAccessory,\n  IfcDiscreteAccessoryType,\n  IfcDiscreteAccessoryTypeEnum,\n  IfcDistanceExpression,\n  IfcDistributionChamberElement,\n  IfcDistributionChamberElementType,\n  IfcDistributionChamberElementTypeEnum,\n  IfcDistributionCircuit,\n  IfcDistributionControlElement,\n  IfcDistributionControlElementType,\n  IfcDistributionElement,\n  IfcDistributionElementType,\n  IfcDistributionFlowElement,\n  IfcDistributionFlowElementType,\n  IfcDistributionPort,\n  IfcDistributionPortTypeEnum,\n  IfcDistributionSystem,\n  IfcDistributionSystemEnum,\n  IfcDocumentConfidentialityEnum,\n  IfcDocumentInformation,\n  IfcDocumentInformationRelationship,\n  IfcDocumentReference,\n  IfcDocumentStatusEnum,\n  IfcDoor,\n  IfcDoorLiningProperties,\n  IfcDoorPanelOperationEnum,\n  IfcDoorPanelPositionEnum,\n  IfcDoorPanelProperties,\n  IfcDoorStandardCase,\n  IfcDoorStyle,\n  IfcDoorStyleConstructionEnum,\n  IfcDoorStyleOperationEnum,\n  IfcDoorType,\n  IfcDoorTypeEnum,\n  IfcDoorTypeOperationEnum,\n  IfcDoseEquivalentMeasure,\n  IfcDraughtingPreDefinedColour,\n  IfcDraughtingPreDefinedCurveFont,\n  IfcDuctFitting,\n  IfcDuctFittingType,\n  IfcDuctFittingTypeEnum,\n  IfcDuctSegment,\n  IfcDuctSegmentType,\n  IfcDuctSegmentTypeEnum,\n  IfcDuctSilencer,\n  IfcDuctSilencerType,\n  IfcDuctSilencerTypeEnum,\n  IfcDuration,\n  IfcDynamicViscosityMeasure,\n  IfcEdge,\n  IfcEdgeCurve,\n  IfcEdgeLoop,\n  IfcElectricAppliance,\n  IfcElectricApplianceType,\n  IfcElectricApplianceTypeEnum,\n  IfcElectricCapacitanceMeasure,\n  IfcElectricChargeMeasure,\n  IfcElectricConductanceMeasure,\n  IfcElectricCurrentMeasure,\n  IfcElectricDistributionBoard,\n  IfcElectricDistributionBoardType,\n  IfcElectricDistributionBoardTypeEnum,\n  IfcElectricFlowStorageDevice,\n  IfcElectricFlowStorageDeviceType,\n  IfcElectricFlowStorageDeviceTypeEnum,\n  IfcElectricGenerator,\n  IfcElectricGeneratorType,\n  IfcElectricGeneratorTypeEnum,\n  IfcElectricMotor,\n  IfcElectricMotorType,\n  IfcElectricMotorTypeEnum,\n  IfcElectricResistanceMeasure,\n  IfcElectricTimeControl,\n  IfcElectricTimeControlType,\n  IfcElectricTimeControlTypeEnum,\n  IfcElectricVoltageMeasure,\n  IfcElement,\n  IfcElementAssembly,\n  IfcElementAssemblyType,\n  IfcElementAssemblyTypeEnum,\n  IfcElementComponent,\n  IfcElementComponentType,\n  IfcElementCompositionEnum,\n  IfcElementQuantity,\n  IfcElementType,\n  IfcElementarySurface,\n  IfcElements,\n  IfcEllipse,\n  IfcEllipseProfileDef,\n  IfcEnergyConversionDevice,\n  IfcEnergyConversionDeviceType,\n  IfcEnergyMeasure,\n  IfcEngine,\n  IfcEngineType,\n  IfcEngineTypeEnum,\n  IfcEvaporativeCooler,\n  IfcEvaporativeCoolerType,\n  IfcEvaporativeCoolerTypeEnum,\n  IfcEvaporator,\n  IfcEvaporatorType,\n  IfcEvaporatorTypeEnum,\n  IfcEvent,\n  IfcEventTime,\n  IfcEventTriggerTypeEnum,\n  IfcEventType,\n  IfcEventTypeEnum,\n  IfcExtendedProperties,\n  IfcExternalInformation,\n  IfcExternalReference,\n  IfcExternalReferenceRelationship,\n  IfcExternalSpatialElement,\n  IfcExternalSpatialElementTypeEnum,\n  IfcExternalSpatialStructureElement,\n  IfcExternallyDefinedHatchStyle,\n  IfcExternallyDefinedSurfaceStyle,\n  IfcExternallyDefinedTextFont,\n  IfcExtrudedAreaSolid,\n  IfcExtrudedAreaSolidTapered,\n  IfcFace,\n  IfcFaceBasedSurfaceModel,\n  IfcFaceBound,\n  IfcFaceOuterBound,\n  IfcFaceSurface,\n  IfcFacetedBrep,\n  IfcFacetedBrepWithVoids,\n  IfcFacility,\n  IfcFacilityPart,\n  IfcFailureConnectionCondition,\n  IfcFan,\n  IfcFanType,\n  IfcFanTypeEnum,\n  IfcFastener,\n  IfcFastenerType,\n  IfcFastenerTypeEnum,\n  IfcFeatureElement,\n  IfcFeatureElementAddition,\n  IfcFeatureElementSubtraction,\n  IfcFillAreaStyle,\n  IfcFillAreaStyleHatching,\n  IfcFillAreaStyleTiles,\n  IfcFilter,\n  IfcFilterType,\n  IfcFilterTypeEnum,\n  IfcFireSuppressionTerminal,\n  IfcFireSuppressionTerminalType,\n  IfcFireSuppressionTerminalTypeEnum,\n  IfcFixedReferenceSweptAreaSolid,\n  IfcFlowController,\n  IfcFlowControllerType,\n  IfcFlowDirectionEnum,\n  IfcFlowFitting,\n  IfcFlowFittingType,\n  IfcFlowInstrument,\n  IfcFlowInstrumentType,\n  IfcFlowInstrumentTypeEnum,\n  IfcFlowMeter,\n  IfcFlowMeterType,\n  IfcFlowMeterTypeEnum,\n  IfcFlowMovingDevice,\n  IfcFlowMovingDeviceType,\n  IfcFlowSegment,\n  IfcFlowSegmentType,\n  IfcFlowStorageDevice,\n  IfcFlowStorageDeviceType,\n  IfcFlowTerminal,\n  IfcFlowTerminalType,\n  IfcFlowTreatmentDevice,\n  IfcFlowTreatmentDeviceType,\n  IfcFontStyle,\n  IfcFontVariant,\n  IfcFontWeight,\n  IfcFooting,\n  IfcFootingType,\n  IfcFootingTypeEnum,\n  IfcForceMeasure,\n  IfcFrequencyMeasure,\n  IfcFurnishingElement,\n  IfcFurnishingElementType,\n  IfcFurniture,\n  IfcFurnitureType,\n  IfcFurnitureTypeEnum,\n  IfcGeographicElement,\n  IfcGeographicElementType,\n  IfcGeographicElementTypeEnum,\n  IfcGeometricCurveSet,\n  IfcGeometricProjectionEnum,\n  IfcGeometricRepresentationContext,\n  IfcGeometricRepresentationItem,\n  IfcGeometricRepresentationSubContext,\n  IfcGeometricSet,\n  IfcGlobalOrLocalEnum,\n  IfcGloballyUniqueId,\n  IfcGrid,\n  IfcGridAxis,\n  IfcGridPlacement,\n  IfcGridTypeEnum,\n  IfcGroup,\n  IfcHalfSpaceSolid,\n  IfcHeatExchanger,\n  IfcHeatExchangerType,\n  IfcHeatExchangerTypeEnum,\n  IfcHeatFluxDensityMeasure,\n  IfcHeatingValueMeasure,\n  IfcHumidifier,\n  IfcHumidifierType,\n  IfcHumidifierTypeEnum,\n  IfcIShapeProfileDef,\n  IfcIdentifier,\n  IfcIlluminanceMeasure,\n  IfcImageTexture,\n  IfcIndexedColourMap,\n  IfcIndexedPolyCurve,\n  IfcIndexedPolygonalFace,\n  IfcIndexedPolygonalFaceWithVoids,\n  IfcIndexedTextureMap,\n  IfcIndexedTriangleTextureMap,\n  IfcInductanceMeasure,\n  IfcInteger,\n  IfcIntegerCountRateMeasure,\n  IfcInterceptor,\n  IfcInterceptorType,\n  IfcInterceptorTypeEnum,\n  IfcInternalOrExternalEnum,\n  IfcIntersectionCurve,\n  IfcInventory,\n  IfcInventoryTypeEnum,\n  IfcIonConcentrationMeasure,\n  IfcIrregularTimeSeries,\n  IfcIrregularTimeSeriesValue,\n  IfcIsothermalMoistureCapacityMeasure,\n  IfcJunctionBox,\n  IfcJunctionBoxType,\n  IfcJunctionBoxTypeEnum,\n  IfcKinematicViscosityMeasure,\n  IfcKnotType,\n  IfcLShapeProfileDef,\n  IfcLabel,\n  IfcLaborResource,\n  IfcLaborResourceType,\n  IfcLaborResourceTypeEnum,\n  IfcLagTime,\n  IfcLamp,\n  IfcLampType,\n  IfcLampTypeEnum,\n  IfcLanguageId,\n  IfcLayerSetDirectionEnum,\n  IfcLengthMeasure,\n  IfcLibraryInformation,\n  IfcLibraryReference,\n  IfcLightDistributionCurveEnum,\n  IfcLightDistributionData,\n  IfcLightEmissionSourceEnum,\n  IfcLightFixture,\n  IfcLightFixtureType,\n  IfcLightFixtureTypeEnum,\n  IfcLightIntensityDistribution,\n  IfcLightSource,\n  IfcLightSourceAmbient,\n  IfcLightSourceDirectional,\n  IfcLightSourceGoniometric,\n  IfcLightSourcePositional,\n  IfcLightSourceSpot,\n  IfcLine,\n  IfcLineSegment2D,\n  IfcLinearForceMeasure,\n  IfcLinearMomentMeasure,\n  IfcLinearPlacement,\n  IfcLinearPositioningElement,\n  IfcLinearStiffnessMeasure,\n  IfcLinearVelocityMeasure,\n  IfcLoadGroupTypeEnum,\n  IfcLocalPlacement,\n  IfcLogical,\n  IfcLogicalOperatorEnum,\n  IfcLoop,\n  IfcLuminousFluxMeasure,\n  IfcLuminousIntensityDistributionMeasure,\n  IfcLuminousIntensityMeasure,\n  IfcMagneticFluxDensityMeasure,\n  IfcMagneticFluxMeasure,\n  IfcManifoldSolidBrep,\n  IfcMapConversion,\n  IfcMappedItem,\n  IfcMassDensityMeasure,\n  IfcMassFlowRateMeasure,\n  IfcMassMeasure,\n  IfcMassPerLengthMeasure,\n  IfcMaterial,\n  IfcMaterialClassificationRelationship,\n  IfcMaterialConstituent,\n  IfcMaterialConstituentSet,\n  IfcMaterialDefinition,\n  IfcMaterialDefinitionRepresentation,\n  IfcMaterialLayer,\n  IfcMaterialLayerSet,\n  IfcMaterialLayerSetUsage,\n  IfcMaterialLayerWithOffsets,\n  IfcMaterialList,\n  IfcMaterialProfile,\n  IfcMaterialProfileSet,\n  IfcMaterialProfileSetUsage,\n  IfcMaterialProfileSetUsageTapering,\n  IfcMaterialProfileWithOffsets,\n  IfcMaterialProperties,\n  IfcMaterialRelationship,\n  IfcMaterialUsageDefinition,\n  IfcMeasureWithUnit,\n  IfcMechanicalFastener,\n  IfcMechanicalFastenerType,\n  IfcMechanicalFastenerTypeEnum,\n  IfcMedicalDevice,\n  IfcMedicalDeviceType,\n  IfcMedicalDeviceTypeEnum,\n  IfcMember,\n  IfcMemberStandardCase,\n  IfcMemberType,\n  IfcMemberTypeEnum,\n  IfcMetric,\n  IfcMirroredProfileDef,\n  IfcModulusOfElasticityMeasure,\n  IfcModulusOfLinearSubgradeReactionMeasure,\n  IfcModulusOfRotationalSubgradeReactionMeasure,\n  IfcModulusOfSubgradeReactionMeasure,\n  IfcMoistureDiffusivityMeasure,\n  IfcMolecularWeightMeasure,\n  IfcMomentOfInertiaMeasure,\n  IfcMonetaryMeasure,\n  IfcMonetaryUnit,\n  IfcMonthInYearNumber,\n  IfcMotorConnection,\n  IfcMotorConnectionType,\n  IfcMotorConnectionTypeEnum,\n  IfcNamedUnit,\n  IfcNonNegativeLengthMeasure,\n  IfcNormalisedRatioMeasure,\n  IfcNullStyle,\n  IfcNumericMeasure,\n  IfcObject,\n  IfcObjectDefinition,\n  IfcObjectPlacement,\n  IfcObjectTypeEnum,\n  IfcObjective,\n  IfcObjectiveEnum,\n  IfcOccupant,\n  IfcOccupantTypeEnum,\n  IfcOffsetCurve,\n  IfcOffsetCurve2D,\n  IfcOffsetCurve3D,\n  IfcOffsetCurveByDistances,\n  IfcOpenShell,\n  IfcOpeningElement,\n  IfcOpeningElementTypeEnum,\n  IfcOpeningStandardCase,\n  IfcOrganization,\n  IfcOrganizationRelationship,\n  IfcOrientationExpression,\n  IfcOrientedEdge,\n  IfcOuterBoundaryCurve,\n  IfcOutlet,\n  IfcOutletType,\n  IfcOutletTypeEnum,\n  IfcOwnerHistory,\n  IfcPHMeasure,\n  IfcParameterValue,\n  IfcParameterizedProfileDef,\n  IfcPath,\n  IfcPcurve,\n  IfcPerformanceHistory,\n  IfcPerformanceHistoryTypeEnum,\n  IfcPermeableCoveringOperationEnum,\n  IfcPermeableCoveringProperties,\n  IfcPermit,\n  IfcPermitTypeEnum,\n  IfcPerson,\n  IfcPersonAndOrganization,\n  IfcPhysicalComplexQuantity,\n  IfcPhysicalOrVirtualEnum,\n  IfcPhysicalQuantity,\n  IfcPhysicalSimpleQuantity,\n  IfcPile,\n  IfcPileConstructionEnum,\n  IfcPileType,\n  IfcPileTypeEnum,\n  IfcPipeFitting,\n  IfcPipeFittingType,\n  IfcPipeFittingTypeEnum,\n  IfcPipeSegment,\n  IfcPipeSegmentType,\n  IfcPipeSegmentTypeEnum,\n  IfcPixelTexture,\n  IfcPlacement,\n  IfcPlanarBox,\n  IfcPlanarExtent,\n  IfcPlanarForceMeasure,\n  IfcPlane,\n  IfcPlaneAngleMeasure,\n  IfcPlate,\n  IfcPlateStandardCase,\n  IfcPlateType,\n  IfcPlateTypeEnum,\n  IfcPoint,\n  IfcPointOnCurve,\n  IfcPointOnSurface,\n  IfcPolyLoop,\n  IfcPolygonalBoundedHalfSpace,\n  IfcPolygonalFaceSet,\n  IfcPolyline,\n  IfcPort,\n  IfcPositioningElement,\n  IfcPositiveInteger,\n  IfcPositiveLengthMeasure,\n  IfcPositivePlaneAngleMeasure,\n  IfcPositiveRatioMeasure,\n  IfcPostalAddress,\n  IfcPowerMeasure,\n  IfcPreDefinedColour,\n  IfcPreDefinedCurveFont,\n  IfcPreDefinedItem,\n  IfcPreDefinedProperties,\n  IfcPreDefinedPropertySet,\n  IfcPreDefinedTextFont,\n  IfcPreferredSurfaceCurveRepresentation,\n  IfcPresentableText,\n  IfcPresentationItem,\n  IfcPresentationLayerAssignment,\n  IfcPresentationLayerWithStyle,\n  IfcPresentationStyle,\n  IfcPresentationStyleAssignment,\n  IfcPressureMeasure,\n  IfcProcedure,\n  IfcProcedureType,\n  IfcProcedureTypeEnum,\n  IfcProcess,\n  IfcProduct,\n  IfcProductDefinitionShape,\n  IfcProductRepresentation,\n  IfcProfileDef,\n  IfcProfileProperties,\n  IfcProfileTypeEnum,\n  IfcProject,\n  IfcProjectLibrary,\n  IfcProjectOrder,\n  IfcProjectOrderTypeEnum,\n  IfcProjectedCRS,\n  IfcProjectedOrTrueLengthEnum,\n  IfcProjectionElement,\n  IfcProjectionElementTypeEnum,\n  IfcProperty,\n  IfcPropertyAbstraction,\n  IfcPropertyBoundedValue,\n  IfcPropertyDefinition,\n  IfcPropertyDependencyRelationship,\n  IfcPropertyEnumeratedValue,\n  IfcPropertyEnumeration,\n  IfcPropertyListValue,\n  IfcPropertyReferenceValue,\n  IfcPropertySet,\n  IfcPropertySetDefinition,\n  IfcPropertySetTemplate,\n  IfcPropertySetTemplateTypeEnum,\n  IfcPropertySingleValue,\n  IfcPropertyTableValue,\n  IfcPropertyTemplate,\n  IfcPropertyTemplateDefinition,\n  IfcProtectiveDevice,\n  IfcProtectiveDeviceTrippingUnit,\n  IfcProtectiveDeviceTrippingUnitType,\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\n  IfcProtectiveDeviceType,\n  IfcProtectiveDeviceTypeEnum,\n  IfcProxy,\n  IfcPump,\n  IfcPumpType,\n  IfcPumpTypeEnum,\n  IfcQuantityArea,\n  IfcQuantityCount,\n  IfcQuantityLength,\n  IfcQuantitySet,\n  IfcQuantityTime,\n  IfcQuantityVolume,\n  IfcQuantityWeight,\n  IfcRadioActivityMeasure,\n  IfcRailing,\n  IfcRailingType,\n  IfcRailingTypeEnum,\n  IfcRamp,\n  IfcRampFlight,\n  IfcRampFlightType,\n  IfcRampFlightTypeEnum,\n  IfcRampType,\n  IfcRampTypeEnum,\n  IfcRatioMeasure,\n  IfcRationalBSplineCurveWithKnots,\n  IfcRationalBSplineSurfaceWithKnots,\n  IfcReal,\n  IfcRectangleHollowProfileDef,\n  IfcRectangleProfileDef,\n  IfcRectangularPyramid,\n  IfcRectangularTrimmedSurface,\n  IfcRecurrencePattern,\n  IfcRecurrenceTypeEnum,\n  IfcReference,\n  IfcReferent,\n  IfcReferentTypeEnum,\n  IfcReflectanceMethodEnum,\n  IfcRegularTimeSeries,\n  IfcReinforcementBarProperties,\n  IfcReinforcementDefinitionProperties,\n  IfcReinforcingBar,\n  IfcReinforcingBarRoleEnum,\n  IfcReinforcingBarSurfaceEnum,\n  IfcReinforcingBarType,\n  IfcReinforcingBarTypeEnum,\n  IfcReinforcingElement,\n  IfcReinforcingElementType,\n  IfcReinforcingMesh,\n  IfcReinforcingMeshType,\n  IfcReinforcingMeshTypeEnum,\n  IfcRelAggregates,\n  IfcRelAssigns,\n  IfcRelAssignsToActor,\n  IfcRelAssignsToControl,\n  IfcRelAssignsToGroup,\n  IfcRelAssignsToGroupByFactor,\n  IfcRelAssignsToProcess,\n  IfcRelAssignsToProduct,\n  IfcRelAssignsToResource,\n  IfcRelAssociates,\n  IfcRelAssociatesApproval,\n  IfcRelAssociatesClassification,\n  IfcRelAssociatesConstraint,\n  IfcRelAssociatesDocument,\n  IfcRelAssociatesLibrary,\n  IfcRelAssociatesMaterial,\n  IfcRelConnects,\n  IfcRelConnectsElements,\n  IfcRelConnectsPathElements,\n  IfcRelConnectsPortToElement,\n  IfcRelConnectsPorts,\n  IfcRelConnectsStructuralActivity,\n  IfcRelConnectsStructuralMember,\n  IfcRelConnectsWithEccentricity,\n  IfcRelConnectsWithRealizingElements,\n  IfcRelContainedInSpatialStructure,\n  IfcRelCoversBldgElements,\n  IfcRelCoversSpaces,\n  IfcRelDeclares,\n  IfcRelDecomposes,\n  IfcRelDefines,\n  IfcRelDefinesByObject,\n  IfcRelDefinesByProperties,\n  IfcRelDefinesByTemplate,\n  IfcRelDefinesByType,\n  IfcRelFillsElement,\n  IfcRelFlowControlElements,\n  IfcRelInterferesElements,\n  IfcRelNests,\n  IfcRelPositions,\n  IfcRelProjectsElement,\n  IfcRelReferencedInSpatialStructure,\n  IfcRelSequence,\n  IfcRelServicesBuildings,\n  IfcRelSpaceBoundary,\n  IfcRelSpaceBoundary1stLevel,\n  IfcRelSpaceBoundary2ndLevel,\n  IfcRelVoidsElement,\n  IfcRelationship,\n  IfcReparametrisedCompositeCurveSegment,\n  IfcRepresentation,\n  IfcRepresentationContext,\n  IfcRepresentationItem,\n  IfcRepresentationMap,\n  IfcResource,\n  IfcResourceApprovalRelationship,\n  IfcResourceConstraintRelationship,\n  IfcResourceLevelRelationship,\n  IfcResourceTime,\n  IfcRevolvedAreaSolid,\n  IfcRevolvedAreaSolidTapered,\n  IfcRightCircularCone,\n  IfcRightCircularCylinder,\n  IfcRoleEnum,\n  IfcRoof,\n  IfcRoofType,\n  IfcRoofTypeEnum,\n  IfcRoot,\n  IfcRotationalFrequencyMeasure,\n  IfcRotationalMassMeasure,\n  IfcRotationalStiffnessMeasure,\n  IfcRoundedRectangleProfileDef,\n  IfcSIPrefix,\n  IfcSIUnit,\n  IfcSIUnitName,\n  IfcSanitaryTerminal,\n  IfcSanitaryTerminalType,\n  IfcSanitaryTerminalTypeEnum,\n  IfcSchedulingTime,\n  IfcSeamCurve,\n  IfcSectionModulusMeasure,\n  IfcSectionProperties,\n  IfcSectionReinforcementProperties,\n  IfcSectionTypeEnum,\n  IfcSectionalAreaIntegralMeasure,\n  IfcSectionedSolid,\n  IfcSectionedSolidHorizontal,\n  IfcSectionedSpine,\n  IfcSensor,\n  IfcSensorType,\n  IfcSensorTypeEnum,\n  IfcSequenceEnum,\n  IfcShadingDevice,\n  IfcShadingDeviceType,\n  IfcShadingDeviceTypeEnum,\n  IfcShapeAspect,\n  IfcShapeModel,\n  IfcShapeRepresentation,\n  IfcShearModulusMeasure,\n  IfcShellBasedSurfaceModel,\n  IfcSimpleProperty,\n  IfcSimplePropertyTemplate,\n  IfcSimplePropertyTemplateTypeEnum,\n  IfcSite,\n  IfcSlab,\n  IfcSlabElementedCase,\n  IfcSlabStandardCase,\n  IfcSlabType,\n  IfcSlabTypeEnum,\n  IfcSlippageConnectionCondition,\n  IfcSolarDevice,\n  IfcSolarDeviceType,\n  IfcSolarDeviceTypeEnum,\n  IfcSolidAngleMeasure,\n  IfcSolidModel,\n  IfcSoundPowerLevelMeasure,\n  IfcSoundPowerMeasure,\n  IfcSoundPressureLevelMeasure,\n  IfcSoundPressureMeasure,\n  IfcSpace,\n  IfcSpaceHeater,\n  IfcSpaceHeaterType,\n  IfcSpaceHeaterTypeEnum,\n  IfcSpaceType,\n  IfcSpaceTypeEnum,\n  IfcSpatialElement,\n  IfcSpatialElementType,\n  IfcSpatialStructureElement,\n  IfcSpatialStructureElementType,\n  IfcSpatialZone,\n  IfcSpatialZoneType,\n  IfcSpatialZoneTypeEnum,\n  IfcSpecificHeatCapacityMeasure,\n  IfcSpecularExponent,\n  IfcSpecularRoughness,\n  IfcSphere,\n  IfcSphericalSurface,\n  IfcStackTerminal,\n  IfcStackTerminalType,\n  IfcStackTerminalTypeEnum,\n  IfcStair,\n  IfcStairFlight,\n  IfcStairFlightType,\n  IfcStairFlightTypeEnum,\n  IfcStairType,\n  IfcStairTypeEnum,\n  IfcStateEnum,\n  IfcStructuralAction,\n  IfcStructuralActivity,\n  IfcStructuralAnalysisModel,\n  IfcStructuralConnection,\n  IfcStructuralConnectionCondition,\n  IfcStructuralCurveAction,\n  IfcStructuralCurveActivityTypeEnum,\n  IfcStructuralCurveConnection,\n  IfcStructuralCurveMember,\n  IfcStructuralCurveMemberTypeEnum,\n  IfcStructuralCurveMemberVarying,\n  IfcStructuralCurveReaction,\n  IfcStructuralItem,\n  IfcStructuralLinearAction,\n  IfcStructuralLoad,\n  IfcStructuralLoadCase,\n  IfcStructuralLoadConfiguration,\n  IfcStructuralLoadGroup,\n  IfcStructuralLoadLinearForce,\n  IfcStructuralLoadOrResult,\n  IfcStructuralLoadPlanarForce,\n  IfcStructuralLoadSingleDisplacement,\n  IfcStructuralLoadSingleDisplacementDistortion,\n  IfcStructuralLoadSingleForce,\n  IfcStructuralLoadSingleForceWarping,\n  IfcStructuralLoadStatic,\n  IfcStructuralLoadTemperature,\n  IfcStructuralMember,\n  IfcStructuralPlanarAction,\n  IfcStructuralPointAction,\n  IfcStructuralPointConnection,\n  IfcStructuralPointReaction,\n  IfcStructuralReaction,\n  IfcStructuralResultGroup,\n  IfcStructuralSurfaceAction,\n  IfcStructuralSurfaceActivityTypeEnum,\n  IfcStructuralSurfaceConnection,\n  IfcStructuralSurfaceMember,\n  IfcStructuralSurfaceMemberTypeEnum,\n  IfcStructuralSurfaceMemberVarying,\n  IfcStructuralSurfaceReaction,\n  IfcStyleModel,\n  IfcStyledItem,\n  IfcStyledRepresentation,\n  IfcSubContractResource,\n  IfcSubContractResourceType,\n  IfcSubContractResourceTypeEnum,\n  IfcSubedge,\n  IfcSurface,\n  IfcSurfaceCurve,\n  IfcSurfaceCurveSweptAreaSolid,\n  IfcSurfaceFeature,\n  IfcSurfaceFeatureTypeEnum,\n  IfcSurfaceOfLinearExtrusion,\n  IfcSurfaceOfRevolution,\n  IfcSurfaceReinforcementArea,\n  IfcSurfaceSide,\n  IfcSurfaceStyle,\n  IfcSurfaceStyleLighting,\n  IfcSurfaceStyleRefraction,\n  IfcSurfaceStyleRendering,\n  IfcSurfaceStyleShading,\n  IfcSurfaceStyleWithTextures,\n  IfcSurfaceTexture,\n  IfcSweptAreaSolid,\n  IfcSweptDiskSolid,\n  IfcSweptDiskSolidPolygonal,\n  IfcSweptSurface,\n  IfcSwitchingDevice,\n  IfcSwitchingDeviceType,\n  IfcSwitchingDeviceTypeEnum,\n  IfcSystem,\n  IfcSystemFurnitureElement,\n  IfcSystemFurnitureElementType,\n  IfcSystemFurnitureElementTypeEnum,\n  IfcTShapeProfileDef,\n  IfcTable,\n  IfcTableColumn,\n  IfcTableRow,\n  IfcTank,\n  IfcTankType,\n  IfcTankTypeEnum,\n  IfcTask,\n  IfcTaskDurationEnum,\n  IfcTaskTime,\n  IfcTaskTimeRecurring,\n  IfcTaskType,\n  IfcTaskTypeEnum,\n  IfcTelecomAddress,\n  IfcTemperatureGradientMeasure,\n  IfcTemperatureRateOfChangeMeasure,\n  IfcTendon,\n  IfcTendonAnchor,\n  IfcTendonAnchorType,\n  IfcTendonAnchorTypeEnum,\n  IfcTendonConduit,\n  IfcTendonConduitType,\n  IfcTendonConduitTypeEnum,\n  IfcTendonType,\n  IfcTendonTypeEnum,\n  IfcTessellatedFaceSet,\n  IfcTessellatedItem,\n  IfcText,\n  IfcTextAlignment,\n  IfcTextDecoration,\n  IfcTextFontName,\n  IfcTextLiteral,\n  IfcTextLiteralWithExtent,\n  IfcTextPath,\n  IfcTextStyle,\n  IfcTextStyleFontModel,\n  IfcTextStyleForDefinedFont,\n  IfcTextStyleTextModel,\n  IfcTextTransformation,\n  IfcTextureCoordinate,\n  IfcTextureCoordinateGenerator,\n  IfcTextureMap,\n  IfcTextureVertex,\n  IfcTextureVertexList,\n  IfcThermalAdmittanceMeasure,\n  IfcThermalConductivityMeasure,\n  IfcThermalExpansionCoefficientMeasure,\n  IfcThermalResistanceMeasure,\n  IfcThermalTransmittanceMeasure,\n  IfcThermodynamicTemperatureMeasure,\n  IfcTime,\n  IfcTimeMeasure,\n  IfcTimePeriod,\n  IfcTimeSeries,\n  IfcTimeSeriesDataTypeEnum,\n  IfcTimeSeriesValue,\n  IfcTimeStamp,\n  IfcTopologicalRepresentationItem,\n  IfcTopologyRepresentation,\n  IfcToroidalSurface,\n  IfcTorqueMeasure,\n  IfcTransformer,\n  IfcTransformerType,\n  IfcTransformerTypeEnum,\n  IfcTransitionCode,\n  IfcTransitionCurveSegment2D,\n  IfcTransitionCurveType,\n  IfcTransportElement,\n  IfcTransportElementType,\n  IfcTransportElementTypeEnum,\n  IfcTrapeziumProfileDef,\n  IfcTriangulatedFaceSet,\n  IfcTriangulatedIrregularNetwork,\n  IfcTrimmedCurve,\n  IfcTrimmingPreference,\n  IfcTubeBundle,\n  IfcTubeBundleType,\n  IfcTubeBundleTypeEnum,\n  IfcTypeObject,\n  IfcTypeProcess,\n  IfcTypeProduct,\n  IfcTypeResource,\n  IfcURIReference,\n  IfcUShapeProfileDef,\n  IfcUnitAssignment,\n  IfcUnitEnum,\n  IfcUnitaryControlElement,\n  IfcUnitaryControlElementType,\n  IfcUnitaryControlElementTypeEnum,\n  IfcUnitaryEquipment,\n  IfcUnitaryEquipmentType,\n  IfcUnitaryEquipmentTypeEnum,\n  IfcValve,\n  IfcValveType,\n  IfcValveTypeEnum,\n  IfcVaporPermeabilityMeasure,\n  IfcVector,\n  IfcVertex,\n  IfcVertexLoop,\n  IfcVertexPoint,\n  IfcVibrationDamper,\n  IfcVibrationDamperType,\n  IfcVibrationDamperTypeEnum,\n  IfcVibrationIsolator,\n  IfcVibrationIsolatorType,\n  IfcVibrationIsolatorTypeEnum,\n  IfcVirtualElement,\n  IfcVirtualGridIntersection,\n  IfcVoidingFeature,\n  IfcVoidingFeatureTypeEnum,\n  IfcVolumeMeasure,\n  IfcVolumetricFlowRateMeasure,\n  IfcWall,\n  IfcWallElementedCase,\n  IfcWallStandardCase,\n  IfcWallType,\n  IfcWallTypeEnum,\n  IfcWarpingConstantMeasure,\n  IfcWarpingMomentMeasure,\n  IfcWasteTerminal,\n  IfcWasteTerminalType,\n  IfcWasteTerminalTypeEnum,\n  IfcWindow,\n  IfcWindowLiningProperties,\n  IfcWindowPanelOperationEnum,\n  IfcWindowPanelPositionEnum,\n  IfcWindowPanelProperties,\n  IfcWindowStandardCase,\n  IfcWindowStyle,\n  IfcWindowStyleConstructionEnum,\n  IfcWindowStyleOperationEnum,\n  IfcWindowType,\n  IfcWindowTypeEnum,\n  IfcWindowTypePartitioningEnum,\n  IfcWorkCalendar,\n  IfcWorkCalendarTypeEnum,\n  IfcWorkControl,\n  IfcWorkPlan,\n  IfcWorkPlanTypeEnum,\n  IfcWorkSchedule,\n  IfcWorkScheduleTypeEnum,\n  IfcWorkTime,\n  IfcZShapeProfileDef,\n  IfcZone,\n  LABEL,\n  LINE_END,\n  REAL,\n  REF,\n  SET_BEGIN,\n  SET_END,\n  STRING,\n  UNKNOWN,\n  Value,\n  ms\n};\n"],"sourceRoot":""}