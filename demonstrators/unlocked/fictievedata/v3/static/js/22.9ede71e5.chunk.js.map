{"version":3,"sources":["components/widgets/TreeD3.js"],"names":["relationDef","bestuurder","color","aandeelhouder","aansprakelijkheid","mapIconToRelation","icon2","icon","icon3","TreeD3","props","svgEl","React","createRef","this","drawTree","data","depth","amountPerDepth","children","forEach","child","addDepth","Object","keys","reduce","org","key","amount","mode","treeType","selectedURI","pubsub","subscribeVariableForTreeItemSelection","selectedRelation","subscribeVariableForTreeConnectionHighlight","filterValue","subscribeVariableForFilter","items","restructureResponse","headVars","head","vars","treeItemLabelKey","treeItemURIKey","parentItemURIKey","sortingReady","parentIndex","findIndex","it","j","tmp","length","sortLoop","labelLength","item","i","slice","containsSelection","relations","highlight","datumOprichting","parent","find","push","splice","rootLabel","res","height","defineHeight","svg","d3","current","style","selectAll","remove","linkFunc","root","size","Math","PI","radius","g","append","linkHorizontal","x","d","y","linkRadial","angle","transformFunc","attr","links","enter","target","node","descendants","on","publishVariable","publish","text","filter","clone","lower","box","getBBox","width","error","console","log","padding","ref","name","component","label","variables","type","options","value","Component"],"mappings":"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","file":"static/js/22.9ede71e5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './TreeD3.css'\nimport { restructureResponse } from '../../helpers/sparql'\n// import data from './data.json';\n\nlet relationDef = {\n  bestuurder: { color: 'green' },\n  aandeelhouder: { color: '#007bff' },\n  aansprakelijkheid: { color: '#e67900' },\n}\n\nlet mapIconToRelation = {\n  icon2: 'bestuurder', // hand-point-left\n  icon: 'aandeelhouder', // percent\n  icon3: 'aansprakelijkheid', // gavel\n}\n\nclass TreeD3 extends Component {\n  constructor(props) {\n    super(props)\n    this.svgEl = React.createRef()\n  }\n\n  static getDescription() {\n    return {\n      name: 'TreeD3',\n      component: TreeD3,\n      label: 'TreeD3 widget',\n      variables: [\n        {\n          name: 'query',\n          type: 'yasgui',\n          label: 'to fill tree',\n        },\n        {\n          name: 'publishVariableOnTreeItemClick',\n          type: 'text',\n          label:\n            'Publish/subscribe variabele in which tree item URI is published, when tree item is clicked.',\n        },\n        {\n          name: 'subscribeVariableForTreeItemSelection',\n          type: 'text',\n          label:\n            'Publish/subscribe variabele on which to listen to define tree item selection.',\n        },\n        {\n          name: 'subscribeVariableForTreeConnectionHighlight',\n          type: 'text',\n          label:\n            'Publish/subscribe variabele on which to listen to define which tree connections to highlight',\n        },\n        {\n          name: 'subscribeVariableForFilter',\n          type: 'text',\n          label:\n            'Publish/subscribe variabele on which to listen to define which tree items should be filtered out',\n        },\n        {\n          name: 'rootLabel',\n          type: 'text',\n          label: 'Label of the root of the tree. Leave empty for no root.',\n        },\n        {\n          name: 'treeType',\n          type: 'select',\n          label: 'Soort boom',\n          options: [\n            {\n              label: 'Horizontaal',\n              value: 'horizontal',\n            },\n            {\n              label: 'Radiaal',\n              value: 'radial',\n            },\n          ],\n        },\n      ],\n    }\n  }\n\n  componentDidMount() {\n    this.drawTree(this.props)\n  }\n\n  componentDidUpdate() {\n    this.drawTree(this.props)\n  }\n\n  addDepth(data, depth, amountPerDepth) {\n    data.depth = depth\n    if (!amountPerDepth['depth' + depth]) {\n      amountPerDepth['depth' + depth] = 1\n    } else {\n      amountPerDepth['depth' + depth] = amountPerDepth['depth' + depth] + 1\n    }\n    if (data.children)\n      data.children.forEach((child) =>\n        this.addDepth(child, depth + 1, amountPerDepth)\n      )\n    return { data, amountPerDepth }\n  }\n\n  defineHeight(amountPerDepth) {\n    let max = Object.keys(amountPerDepth).reduce((org, key) => {\n      let amount = amountPerDepth[key]\n      return amount > org ? amount : org\n    }, 0)\n    return max * 20\n  }\n\n  drawTree(props) {\n    if (!props.data) return\n    let mode = props.treeType || 'horizontal'\n    let selectedURI =\n      props.pubsub[this.props.subscribeVariableForTreeItemSelection]\n    let selectedRelation =\n      props.pubsub[this.props.subscribeVariableForTreeConnectionHighlight]\n    let filterValue = props.pubsub[this.props.subscribeVariableForFilter]\n    // if (selectedRelation === 'all') selectedRelation = null;\n\n    let items = restructureResponse(props.data)\n\n    let headVars = props.data.head.vars\n    let treeItemLabelKey = headVars[0]\n    let treeItemURIKey = headVars[1]\n    let parentItemURIKey = headVars[2]\n\n    let sortingReady = false\n    let sortLoop = function () {\n      sortingReady = true\n      for (let j = 0; j < items.length; j++) {\n        let parentIndex = items.findIndex(\n          (it) => it[treeItemURIKey] === items[j][parentItemURIKey]\n        )\n        if (parentIndex === -1) continue\n        if (j < parentIndex) {\n          let tmp = items[j]\n          items[j] = items[parentIndex]\n          items[parentIndex] = tmp\n          sortingReady = false\n        }\n      }\n    }\n\n    if (!sortingReady) {\n      sortLoop()\n    }\n\n    let labelLength = mode === 'horizontal' ? 34 : 20\n\n    for (let i = items.length - 1; i >= 0; i--) {\n      let item = items[i]\n      if (item[treeItemLabelKey].length > labelLength) {\n        item[treeItemLabelKey] =\n          item[treeItemLabelKey].slice(0, labelLength) + '...'\n      }\n\n      if (item[treeItemURIKey] === selectedURI) {\n        item.containsSelection = true\n      }\n      item.relations = Object.keys(mapIconToRelation).reduce((org, icon) => {\n        return {\n          ...org,\n          [mapIconToRelation[icon]]: !!item[icon],\n        }\n      }, {})\n\n      if (selectedRelation) {\n        if (item.relations[selectedRelation]) {\n          item.highlight = relationDef[selectedRelation].color\n        } else if (selectedRelation === 'all') {\n          item.highlight = 'black'\n        } else {\n          item.highlight = '#c3c3c3'\n        }\n      }\n\n      if (item.datumOprichting > filterValue) {\n        item.highlight = 'lightgrey'\n      }\n\n      let parent = items.find((it) => {\n        return it[treeItemURIKey] === item[parentItemURIKey]\n      })\n      if (parent) {\n        parent.children = parent.children || []\n        parent.children.push(item)\n\n        // if (item.containsSelection) {\n        //   parent.containsSelection = true;\n        // }\n        // if (item.highlight) {\n        //   parent.parentHighlight = relationDef[selectedRelation].color;\n        // }\n        items.splice(i, 1)\n      }\n    }\n\n    let data = items[0]\n\n    if (props.rootLabel) {\n      data = {\n        [treeItemLabelKey]: props.rootLabel,\n        [parentItemURIKey]:\n          'http://www.kvk.nl/handelsregister/gegevenswoordenboek/hr/concernrelaties/heineken/v1#Rechtspersoon1',\n        [treeItemURIKey]:\n          'http://www.kvk.nl/handelsregister/gegevenswoordenboek/hr/concernrelaties/heineken/v1#Rechtspersoon9',\n        children: [...items, ...items],\n      }\n    }\n\n    let res = this.addDepth(data, 0, {})\n    let amountPerDepth = res.amountPerDepth\n    data = res.data\n\n    let height = this.defineHeight(amountPerDepth)\n\n    let width = 750\n    let radius = width / 2\n    let svg = d3.select(this.svgEl.current)\n\n    svg\n      .style('width', '100%')\n      .style('height', 'auto')\n      .style('padding', '10px')\n      .style('box-sizing', 'border-box')\n      .style('font', '10px sans-serif')\n\n    svg.selectAll('*').remove()\n    let tree\n    if (mode === 'horizontal') {\n      tree = d3.tree().size([height, 600])\n    } else {\n      tree = d3.cluster().size([2 * Math.PI, radius - 100])\n    }\n\n    // const root = tree(d3.hierarchy(data).sort((a, b) => a.height - b.height || a.data[treeItemLabelKey].localeCompare(b.data[treeItemLabelKey])));\n    const root = tree(d3.hierarchy(data))\n\n    const g = svg.append('g')\n\n    const linkHorizontal = d3\n      .linkHorizontal()\n      .x(function (d) {\n        return d.y\n      })\n      .y(function (d) {\n        return d.x\n      })\n\n    const linkRadial = d3\n      .linkRadial()\n      .angle((d) => d.x)\n      .radius((d) => d.y)\n\n    let linkFunc\n\n    if (mode === 'horizontal') {\n      linkFunc = linkHorizontal\n    } else {\n      linkFunc = linkRadial\n    }\n\n    const link = g\n      .append('g')\n      .attr('fill', 'none')\n      .attr('stroke', '#555')\n      .attr('stroke-opacity', 0.4)\n      .attr('stroke-width', 0.5)\n      .selectAll('path')\n      .data(root.links())\n      .enter()\n      .append('path')\n      .attr('opacity', (d) => {\n        if (d.target.data.highlight === 'black') {\n          return d.target.data.containsSelection ? 1 : 0.3\n        } else {\n          return 1\n        }\n      })\n      .attr('stroke', (d) => d.target.data.highlight)\n      .attr('stroke-width', (d) => {\n        if (\n          d.target.data.containsSelection &&\n          d.target.data.highlight !== 'black'\n        ) {\n          return d.target.data.highlight ? 2 : 1\n        } else {\n          return d.target.data.highlight ? 1 : 0.5\n        }\n      })\n      .attr('d', linkFunc)\n    // .attr('d', d => {\n    //   console.log(d)\n    //   return linkFunc({\n    //     source: [d.source.y, d.source.x],\n    //     target: [d.target.y, d.target.x]\n    //   });\n    // });\n\n    let transformFunc\n    if (mode === 'horizontal') {\n      transformFunc = (d) => `translate(${d.y},${d.x})`\n    } else {\n      transformFunc = (d) => `\n              rotate(${(d.x * 180) / Math.PI - 90})\n              translate(${d.y},0)\n              `\n    }\n\n    const node = g\n      .append('g')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-width', 3)\n      // .attr('fill', 'black')\n      .selectAll('g')\n      // .data(root.descendants().reverse())\n      .data(root.descendants())\n      .enter()\n      .append('g')\n      .attr('fill', (d) => d.data.highlight || 'black')\n      .attr('font-weight', (d) =>\n        d.data.containsSelection ? 'bold' : 'normal'\n      )\n      .attr('cursor', 'pointer')\n      .attr('transform', transformFunc)\n      .on('click', (d) => {\n        if (props.publishVariable) {\n          props.publish(props.publishVariable, d.data[treeItemURIKey])\n        }\n      })\n      .on('mouseover', function (d) {\n        d3.select(this).selectAll('text').attr('font-weight', 'bold')\n        // .attr('fill', '#4c8bf1');\n      })\n      .on('mouseout', function (d) {\n        d3.select(this)\n          .selectAll('text')\n          .attr('font-weight', (d) =>\n            d.data.containsSelection ? 'bold' : 'normal'\n          )\n        // .attr('fill', '#000');\n      })\n\n    if (mode === 'horizontal') {\n      node\n        .append('text')\n        .attr('dy', '0.31em')\n        // .style('font-size', '8px')\n        // .attr('x', d => (d.x < Math.PI === !d.children ? 6 : -6))\n        // .attr('text-anchor', d => (d.x < Math.PI === !d.children ? 'start' : 'end'))\n        // .attr('transform', d => (d.x >= Math.PI ? 'rotate(180)' : null))\n        .text((d) => d.data[treeItemLabelKey])\n        .filter((d) => d.children)\n        .clone(true)\n        .lower()\n        .attr('stroke', 'white')\n    } else {\n      node\n        .append('text')\n        .attr('dy', '0.31em')\n        // .style('font-size', '12px')\n        // .attr('x', d => (d.x < Math.PI === !d.children ? 6 : -6))\n        .attr('x', (d) =>\n          !d.children ? (d.x < Math.PI ? 6 : -6) : d.x < Math.PI ? -28 : 28\n        )\n        // .attr('text-anchor', d => (d.x < Math.PI === !d.children ? 'start' : 'end'))\n        .attr('text-anchor', (d) => (d.x < Math.PI ? 'start' : 'end'))\n        .attr('transform', (d) => (d.x >= Math.PI ? 'rotate(180)' : null))\n        .text((d) => d.data[treeItemLabelKey])\n        .filter((d) => d.children)\n        .clone(true)\n        .lower()\n        .attr('stroke', 'white')\n    }\n\n    try {\n      // document.body.appendChild(svg.node());\n      const box = g.node().getBBox()\n      // document.body.removeChild(svg);\n      // svg.attr('viewBox', `-350 -350 700 700`);\n      // svg.attr(\"viewBox\", `${box.x} ${box.y} ${box.width} ${box.height}`);\n\n      svg\n        .attr('width', box.width)\n        .attr('height', box.height)\n        .attr('viewBox', `${box.x} ${box.y} ${box.width} ${box.height}`)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ padding: '12px' }}>\n        <svg ref={this.svgEl} />\n      </div>\n    )\n  }\n}\n\nexport default TreeD3\n"],"sourceRoot":""}