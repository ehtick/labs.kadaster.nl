{"version":3,"sources":["../node_modules/web-ifc sync","components/widgets/bb/BBIFCJSViewer.module.css","components/widgets/bb/BBIFCJSViewer.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BBIFCJSViewer","viewer","ifc_model","mousemove","event","mouseclick","me","IFC","selector","pickIfcItem","then","o","console","log","indirect","getProperties","prop","this","init","onlyOnce","container","document","getElementById","IfcViewerAPI","backgroundColor","Color","axes","setAxes","setWasmPath","ready","loadIFCFilesTest","props","data","bindings","results","latestBindings","n","gltfB","gltf","value","JSON","parse","files","push","file","loadIFC","fit","loadIfcUrl","url","GLTF","exportIfcFileAsGltf","ifcFileUrl","splitByFloors","categories","walls","IFCWALL","IFCWALLSTANDARDCASE","slabs","IFCSLAB","windows","IFCWINDOW","curtainwalls","IFCMEMBER","IFCPLATE","IFCCURTAINWALL","doors","IFCDOOR","result","link","createElement","categoryName","body","appendChild","category","levelName","download","name","href","URL","createObjectURL","click","json","jsonFile","remove","loadSparqlGLTFResults","onClick","onMouseMove","className","Styles","max","height","Component"],"mappings":"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","file":"static/js/20.2c9e0ec6.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1147;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"max\":\"BBIFCJSViewer_max__LTkNf\"};","import React, { Component } from 'react'\r\nimport { Color } from \"three\";\r\nimport { IfcViewerAPI } from \"web-ifc-viewer\";\r\nimport Styles from \"./BBIFCJSViewer.module.css\"\r\n\r\nimport {\r\n  IFCWALL,\r\n  IFCWALLSTANDARDCASE,\r\n  IFCSLAB,\r\n  IFCWINDOW,\r\n  IFCMEMBER,\r\n  IFCPLATE,\r\n  IFCCURTAINWALL,\r\n  IFCDOOR} from 'web-ifc'; \r\n\r\n \r\n\r\n\r\n\r\nclass BBIFCJSViewer extends Component \r\n{\r\n        \r\n    viewer=null;\r\n    ifc_model={};\r\n   \r\n\r\n    mousemove = (event) => \r\n    {\r\n      try\r\n      {\r\n     // if (this.viewer!=null)     this.viewer.IFC.selector.prePickIfcItem();\r\n      }\r\n      catch(e)\r\n      {}\r\n\r\n    }\r\n    mouseclick = (event) => \r\n    {\r\n     // this.viewer.IFC.selector.prePickIfcItem();\r\n     var me=this;\r\n     if (this.viewer==null) return;\r\n     this.viewer.IFC.selector.pickIfcItem(true).then(function(o)\r\n     {\r\n      console.log(o);\r\n      if (o==null) return;\r\n      o.indirect=false;\r\n      me.viewer.IFC.getProperties(o).then(function(prop){\r\n        console.log(prop);\r\n      });\r\n      \r\n      //modelID en id\r\n\r\n      });\r\n    \r\n\r\n    }\r\n    componentDidMount() \r\n    {\r\n      this.init();\r\n    }\r\n    init()\r\n    {\r\n      if (this.onlyOnce)return;\r\n        const container = document.getElementById(\"viewer-container\");\r\n        if (container==null) return;\r\n        this.onlyOnce=true;\r\n        const viewer = new IfcViewerAPI({container,backgroundColor: new Color(0xffffff)});\r\n         this.viewer=viewer;\r\n\r\n          viewer.axes.setAxes();\r\n         // viewer.grid.setGrid();\r\n\r\n         // window.ondblclick = () => viewer.IFC.selector.pickIfcItem(true);\r\n        //  window.onmousemove = () => viewer.IFC.selector.prePickIfcItem();\r\n\r\n\r\n       // IfcViewerAPI.clipper.createPlane();\r\n         // viewer.clipper.active = true;\r\n/*\r\n          window.onkeydown = (event) => {\r\n            if (event.code === \"KeyP\") {\r\n              viewer.clipper.createPlane();\r\n            } else if (event.code === \"KeyO\") {\r\n              viewer.clipper.deletePlane();\r\n            }\r\n          }\r\n          */\r\n\r\n\r\n\r\nvar me=this;\r\n\r\nviewer.IFC.setWasmPath(\"../../bb/wasm/\").then(function(){\r\n  me.ready();\r\n});\r\n//.then(function(){me.ready()});\r\n//setTimeout(function() {me.ready();},1000);\r\n\r\n//this.ready();\r\n\r\n\r\n   \r\n\r\n//});\r\n}\r\nready()\r\n{\r\n  //this.loadSparqlGLTFResults();\r\n  this.loadIFCFilesTest();\r\n}\r\n\r\nloadSparqlGLTFResults()\r\n{\r\n  if (this.props.data==null)return;\r\n  var bindings = this.props.data.results.bindings;\r\n  if (bindings==this.latestBindings) return;\r\n  this.latestBindings=bindings;\r\n  console.log(this.viewer);\r\n\r\n  for (var n in bindings)\r\n  {\r\n   \r\n    try{\r\n    var binding = bindings[n];\r\n\r\n    var gltfB= binding.gltf.value;\r\n    gltfB =JSON.parse(gltfB);\r\n    //console.log(gltfB);\r\n    }\r\n    catch(e)\r\n    {\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nloadIFCFilesTest()\r\n{\r\nconsole.log(\"IFC ready\");\r\n  var files=[];\r\n  files.push(\"SITE_HOW.ifc\");\r\n  files.push(\"SITE_HOW_CTRAY.ifc\");\r\n  files.push(\"SITE_HOW_EQUIPMENT.ifc\");\r\n  files.push(\"SITE_HOW_EQUIPMENT2.ifc\");\r\n  files.push(\"SITE_HOW_EXTRAS_HOA.ifc\");\r\n  \r\n  files.push(\"SITE_HOW_HVAC.ifc\");\r\n  files.push(\"SITE_HOW_PENETRATIONS.ifc\");\r\n files.push(\"SITE_HOW_PIPING.ifc\");\r\n  \r\n  files.push(\"SITE_HOW_STRUCTURE.ifc\");\r\n  files.push(\"SITE_HOW_STRUCTURE1.ifc\");\r\n  files.push(\"SITE_HOW_STRUCTURE2.ifc\");\r\n  files.push(\"SITE_HOW_STRUCTURE3.ifc\");\r\n  files.push(\"SITE_HOW_STRUCTURE4.ifc\");\r\n \r\n  //files.push(\"Tunnel.ifc\");\r\n  \r\n  \r\n  \r\n  for (var n in files)\r\n  {\r\n      var file= files[n];\r\n      if (this.ifc_model[file]==null)\r\n      {\r\n        \r\n            this.loadIFC(\"http://localhost:3000/temp/\"+file,true);\r\n\r\n          //  this.convertToGLTF(\"http://localhost:3000/temp/\"+file);\r\n      }\r\n      else\r\n      {\r\n        // model already availabel;\r\n      }\r\n  }\r\n\r\n}\r\n\r\n\r\nloadIFC(file,fit)\r\n{\r\n    var me=this;\r\n    try\r\n    {\r\n          console.log(\"loading IFC file :\"+file);\r\n        this.viewer.loadIfcUrl(file,fit);\r\n    }\r\n    catch(e)\r\n    {}\r\n}\r\n\r\n\r\nconvertToGLTF(url)\r\n{\r\n const result =  this.viewer.GLTF.exportIfcFileAsGltf({\r\n  ifcFileUrl: url,\r\n  splitByFloors: true,\r\n  categories: {\r\n      walls: [IFCWALL, IFCWALLSTANDARDCASE],\r\n      slabs: [IFCSLAB],\r\n      windows: [IFCWINDOW],\r\n      curtainwalls: [IFCMEMBER, IFCPLATE, IFCCURTAINWALL],\r\n      doors: [IFCDOOR]\r\n  },\r\n  getProperties: true\r\n}).then(function(result){\r\n\r\n// Using Result and Downloading gLTF files\r\n\r\n// Creating Link Tag\r\nconst link = document.createElement('a');\r\ndocument.body.appendChild(link);\r\n\r\n// Looping in result\r\nfor(const categoryName in result.gltf) {\r\n  const category = result.gltf[categoryName];\r\n\r\n  // Looping in Category according to Levels\r\n  for(const levelName in category) {\r\n      const file = category[levelName].file;\r\n\r\n      // If file is present for a level under category we will download it\r\n      if(file) {\r\n          // Downloading gLTF file in local machine\r\n          link.download = `${file.name}_${categoryName}_${levelName}.gltf`;\r\n          link.href = URL.createObjectURL(file);\r\n          link.click();\r\n      }\r\n  }\r\n}\r\n\r\n// We will check for Properties in result and download the JSON file for it\r\nfor(let jsonFile of result.json) {\r\n  link.download = `${jsonFile.name}.json`;\r\n  link.href = URL.createObjectURL(jsonFile);\r\n  link.click();\r\n}\r\n\r\n// Removing the Node created for link\r\nlink.remove();\r\n\r\n});\r\n}\r\n\r\n\r\n\r\n    render() {\r\n    \r\n      this.init();\r\n      this.loadSparqlGLTFResults();\r\n        return (\r\n            \r\n            <div onClick={this.mouseclick} onMouseMove={this.mousemove}className={Styles.max} id=\"viewer-container\" height=\"100%\"></div>\r\n        )\r\n      }\r\n\r\n\r\n      \r\n}\r\n\r\nexport default BBIFCJSViewer "],"sourceRoot":""}