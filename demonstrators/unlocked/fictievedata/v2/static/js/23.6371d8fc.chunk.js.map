{"version":3,"sources":["components/widgets/bb/BBAccordion.module.css","components/widgets/bb/BBAccordion.js"],"names":["module","exports","BBAccordion","state","activeIndex","handleClick","e","titleProps","index","newIndex","setState","data","this","props","html","results","bindings","length","renderEmpty","generateEmptyResponse","query","restructureResponse","className","styles","main","isFirstItemBold","firstItemBold","title","fluid","styled","map","binding","label","value","Title","active","onClick","name","Content","dangerouslySetInnerHTML","__html","content","Component"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,cAAgB,mCAAmC,KAAO,0B,0LCYzHC,EAAW,iKAU7B,OAV6B,oCAC9BC,MAAQ,CAAEC,aAAc,GAAG,EAG3BC,YAAc,SAACC,EAAGC,GAChB,IAAQC,EAAUD,EAAVC,MAEFC,EADkB,EAAKN,MAArBC,cACyBI,GAAS,EAAIA,EAE9C,EAAKE,SAAS,CAAEN,YAAaK,GAC/B,EAAC,EAoFA,OApFA,mCAED,WAAU,IAAD,OACHE,EAAOC,KAAKC,MAAMF,KAClBG,EAAOF,KAAKC,MAAMC,KAQtB,GANKH,GAAyC,IAAjCA,EAAKI,QAAQC,SAASC,QAC7BL,KAAKC,MAAMK,cACbP,EAAOQ,YAAsBP,KAAKC,MAAMO,SAIvCT,GAAyC,IAAjCA,EAAKI,QAAQC,SAASC,OACjC,OAAO,KAMT,IAFYI,YAAoBV,GAErBM,OACT,OACE,eAAC,WAAQ,WACN,IACD,sBACEK,UACEC,IAAOC,MACNZ,KAAKC,MAAMY,gBAAkB,IAAMF,IAAOG,cAAgB,IAC5D,UAEAd,KAAKC,MAAMc,OACV,qBAAKL,UAAWC,IAAOI,MAAM,SAAEf,KAAKC,MAAMc,QACzC,UAKX,IAAQvB,EAAgBQ,KAAKT,MAArBC,YACR,IACE,OACE,sBACEkB,UACEC,IAAOC,MACNZ,KAAKC,MAAMY,gBAAkB,IAAMF,IAAOG,cAAgB,IAC5D,UAEAd,KAAKC,MAAMc,OACV,qBAAKL,UAAWC,IAAOI,MAAM,SAAEf,KAAKC,MAAMc,QAE5C,cAAC,IAAS,CAACC,OAAK,EAACC,QAAM,WACpBlB,EAAKI,QAAQC,SAASc,KAAI,SAACC,EAASvB,GACnC,OAA2B,MAAvBuB,EAAQC,MAAMC,OAAyC,KAAxBF,EAAQC,MAAMC,MACxC,KAGP,eAAC,WAAQ,WACP,eAAC,IAAUC,MAAK,CACdC,OAAQ/B,IAAgBI,EACxBA,MAAOA,EACP4B,QAAS,EAAK/B,YAAY,UAE1B,cAAC,IAAI,CAACgC,KAAK,aACVN,EAAQC,MAAMC,SAEjB,cAAC,IAAUK,QAAO,CAACH,OAAQ/B,IAAgBI,EAAM,SAE5CM,EACC,qBACEyB,wBAAyB,CACvBC,OAAQT,EAAQU,QAAQR,SAI5B,8BAAG,IAAEF,EAAQU,QAAQR,MAAM,WAlBpBzB,EAwBnB,QAIR,CAAE,MAAOF,GAAI,CACb,OAAO,IACT,KAAC,EA9F6B,CAASoC,Y","file":"static/js/23.6371d8fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"BBAccordion_main__2C_mY\",\"list\":\"BBAccordion_list__2df03\",\"firstItemBold\":\"BBAccordion_firstItemBold__2azKn\",\"link\":\"BBAccordion_link__1BMRW\"};","import React, { Component, Fragment } from 'react'\nimport styles from './BBAccordion.module.css'\nimport {\n  restructureResponse,\n  generateEmptyResponse,\n} from '../../../helpers/sparql'\nimport { Accordion, Icon } from 'semantic-ui-react'\nimport 'semantic-ui-css/components/accordion.css' //deze moet wel\n\n//import './BBAccordion.css'; //deze moet wel\n\n// import { Table as StrapTable } from 'reactstrap';\n\nexport default class BBAccordion extends Component {\n  state = { activeIndex: -1 }\n\n  \n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    let data = this.props.data\n    let html = this.props.html\n\n    if (!data || data.results.bindings.length === 0) {\n      if (this.props.renderEmpty) {\n        data = generateEmptyResponse(this.props.query)\n      } else {\n      }\n    }\n    if (!data || data.results.bindings.length === 0) {\n      return null\n    }\n    //console.log(data);\n\n    let items = restructureResponse(data)\n\n    if (!items.length)\n      return (\n        <Fragment>\n          {' '}\n          <div\n            className={\n              styles.main +\n              (this.props.isFirstItemBold ? ' ' + styles.firstItemBold : '')\n            }\n          >\n            {this.props.title && (\n              <div className={styles.title}>{this.props.title}</div>\n            )}{' '}\n          </div>\n        </Fragment>\n      )\n\n    const { activeIndex } = this.state\n    try {\n      return (\n        <div\n          className={\n            styles.main +\n            (this.props.isFirstItemBold ? ' ' + styles.firstItemBold : '')\n          }\n        >\n          {this.props.title && (\n            <div className={styles.title}>{this.props.title}</div>\n          )}\n          <Accordion fluid styled>\n            {data.results.bindings.map((binding, index) => {\n              if (binding.label.value == null || binding.label.value === '') {\n                return null\n              }\n              return (\n                <Fragment key={index}>\n                  <Accordion.Title\n                    active={activeIndex === index}\n                    index={index}\n                    onClick={this.handleClick}\n                  >\n                    <Icon name=\"dropdown\" />\n                    {binding.label.value}\n                  </Accordion.Title>\n                  <Accordion.Content active={activeIndex === index}>\n                    {\n                      (html ? (\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: binding.content.value,\n                          }}\n                        />\n                      ) : (\n                        <p> {binding.content.value} </p>\n                      ))\n                    }\n                  </Accordion.Content>\n                </Fragment>\n              )\n            })}\n          </Accordion>\n        </div>\n      )\n    } catch (e) {}\n    return null\n  }\n}\n"],"sourceRoot":""}