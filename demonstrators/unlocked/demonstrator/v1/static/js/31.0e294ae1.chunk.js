(this["webpackJsonpviewer-builder-client"]=this["webpackJsonpviewer-builder-client"]||[]).push([[31],{1284:function(e,t,n){"use strict";n.r(t);var o=n(5),a=n(6),i=n(7),r=n(8),c=n(1),s=n(1197),u=n(1193),d=n(31),m=(n(312),n(229),n(0)),l=function(e){Object(i.a)(n,e);var t=Object(r.a)(n);function n(e){var a;return Object(o.a)(this,n),(a=t.call(this,e)).mermaiddiv=Object(c.createRef)(),a.handleZoom=function(e){a.setState({zoomLevel:e.scale})},a.resetZoom=function(){a.setState({empty:!0,zoomLevel:1}),a.updateMeR()},a.onPanEnd=function(e){a.panStart=!1},a.onPanStart=function(e){a.panStart=!0},a.onStateChange=function(e){a.panStart},a.state={zoomLevel:1},a}return Object(a.a)(n,[{key:"componentDidMount",value:function(){s.a.initialize({startOnLoad:!0});var e=this;setTimeout((function(){e.resetZoom()}),10),setTimeout((function(){e.updateMeR()}),1050)}},{key:"componentDidUpdate",value:function(e,t){var n=e.mermaid;n=Object(d.c)(n,e);var o=this.props.mermaid;n!==(o=Object(d.c)(o,this.props))&&this.updateMe()}},{key:"updateMe",value:function(){var e=this;setTimeout((function(){e.resetZoom()}),10)}},{key:"updateMeR",value:function(){if(1==this.state.zoomLevel)try{var e=this.mermaiddiv.current;if(console.log("setting data into mermaid",e),e){e.removeAttribute("data-processed");var t=this.props.mermaid;t=Object(d.c)(t,this.props),e.textContent=t,console.log("mermaid component did update",t.substring(0,40)),s.a.contentLoaded()}}catch(n){console.log(n)}}},{key:"render",value:function(){return this.state.redraw?null:Object(m.jsx)("div",{children:Object(m.jsx)(u.PanZoom,{zoom:this.state.zoomLevel,noStateUpdate:!0,children:Object(m.jsx)("div",{ref:this.mermaiddiv,className:"mermaid"})})})}}]),n}(c.Component);t.default=l}}]);
//# sourceMappingURL=31.0e294ae1.chunk.js.map