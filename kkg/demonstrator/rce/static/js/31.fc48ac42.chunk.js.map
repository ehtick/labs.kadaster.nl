{"version":3,"sources":["components/widgets/Tree.module.css","components/widgets/Tree.jsx"],"names":["module","exports","TreeItem","props","treeItemClicked","arg","target","slot","e","item","treeItemCheckboxClicked","checked","arrowClicked","setState","childrenVisible","state","deleteClick","rule","deletebuttonrule","window","alert","confirm","setLoading","runStartRule","JSON","stringify","deletebuttonruleParams","PublishUtils","setTimeStampParameter","console","error","depth","children","containsSelection","nextProps","isSelectionChanged","this","selectedItem","isDataChanged","itemContainsSelection","newChildrenVisible","shouldNonSelectedSubTreeClose","onClick","className","styles","treeArrow","down","right","treeItemURIKey","publishVariable2","pubsub","labelKey","data","head","vars","icon","defaultIcon","handlePublishingUri2OrNot","checkbox","checkedHash","uri","extraStyle","textstyle","RootElement","React","Fragment","hasChildren","Boolean","length","isDeletable","deletable","showDeleteIcon","allowNonLeafDeletion","role","treeItem","ref","selectedElementRef","treeLabel","clsx","treeLink","renderArrow","size","style","color","iconColor","undefined","transform","icon2","icon2Color","icon3","icon3Color","selected","noselect","label","type","defaultChecked","description","title","paddingLeft","deleteIcon","map","index","child","Component","Tree","items","createRef","checkboxchecks","multipleCheckBoxParameter","s","getMultiplePropValueAsSingleValue","multipleselectparametertype","me","setTimeout","publish","selectEvent","publishVariable","publishVariable3","publishVariable4","v1","v4","v3","v2","latestTreeSelection","id","nid","pubsubItem","subscribeVariable","currentSelection","nextSelection","prevProps","prevState","isUriChanged","current","scrollLatestUriIntoView","parent","i","findInChild","log","selectedUri","latestManualUri","scrollSelectionIntoView","scrollIntoView","par","value","dispatch","myPublish","parseInitialURLForSelection","url","top","location","href","startsWith","setSelectionInURLStartsString","selectedURI","includes","queryString","search","selection","URLSearchParams","get","processURLSelection","initialSelection","nselectedURI","selectedURI2","nselectedURI2","lookupPublishVariable2","var1","n","results","bindings","binding","URI2","cs","containsSelectionR","b","ar","headVars","parentItemURIKey","parents","uri_items","itemsar","push","parentO","id_binding","double","key","result","k","exists","rootitem","createTreeItems","checkHash","setSelectionInURL","baseUrl","origin","suri","replace","pathname","debugSetSelectionInURL","history","pushState","expandLevel","Array","isArray","main","panelstyle","disabled","loading","titem","root","aggregate","restructureResponse","findParents","markItemsContainingSelection","rootLabel"],"mappings":"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","file":"static/js/31.fc48ac42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myTooltip\":\"Tree_myTooltip__1_Vvr\",\"main\":\"Tree_main__2U69K\",\"treeItem\":\"Tree_treeItem__3GbeU\",\"checkbox\":\"Tree_checkbox__2OB1o\",\"treeLabel\":\"Tree_treeLabel__DGe-D\",\"w2ui\":\"Tree_w2ui__ATF8z\",\"treeLink\":\"Tree_treeLink__2o-EK\",\"selected\":\"Tree_selected__1wXwi\",\"treeArrow\":\"Tree_treeArrow__1dDJV\",\"right\":\"Tree_right__3hO93\",\"down\":\"Tree_down__3os-n\",\"noselect\":\"Tree_noselect__pu0tM\",\"refresh\":\"Tree_refresh__3pfqJ\",\"threeColorTemplate\":\"Tree_threeColorTemplate__2HVQ2\",\"label\":\"Tree_label__3BOrf\",\"deleteIcon\":\"Tree_deleteIcon__1gTNJ\",\"spin\":\"Tree_spin__2y3Ay\"};","import React from 'react'\nimport styles from './Tree.module.css'\nimport { restructureResponse } from '../../helpers/sparql'\nimport PublishUtils from './../../helpers/PublishUtils'\nimport { BrowserRouter as Router, BrowserRouter, Link } from 'react-router-dom'\nimport { Icon } from './Icon'\nimport Tooltip from '@mui/material/Tooltip';\nimport clsx from \"clsx\"\nimport { runStartRule } from '../../helpers/run-start-rule'\n\n\n\n\n\n//console.log(faHandPointLeft.iconName);\n\nclass TreeItem extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      childrenVisible: props.depth >0 || !!props.item.children && props.item.containsSelection\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const isSelectionChanged = this.props.selectedItem !== nextProps.selectedItem\n    const isDataChanged = this.props.item !== nextProps.item\n    const itemContainsSelection = !!nextProps.item.children && nextProps.item.containsSelection\n    let newChildrenVisible = this.state.childrenVisible\n\n    if (itemContainsSelection && isDataChanged) {\n      newChildrenVisible = true\n    } else if (isSelectionChanged && nextProps.shouldNonSelectedSubTreeClose) {\n      newChildrenVisible = false\n    }\n\n    if (newChildrenVisible !== this.state.childrenVisible) {\n      this.setState({ childrenVisible: newChildrenVisible })\n    }\n  }\n\n  treeItemClicked = (arg) => {\n    try\n    {\n    \n          if (arg.target.slot==\"arrow\") {\n         //   console.log(\"no tree item click but an expend click\");\n            return;\n          }\n    }\n    catch(e){}\n    \n    this.props.treeItemClicked(this.props.item)\n  }\n\n  treeItemCheckboxClicked= (arg) => {\n   \n   var checked=arg.target.checked;\n   this.props.item.checked=checked;\n   \n      \n    this.props.treeItemCheckboxClicked(this.props.item);\n  }\n\n  arrowClicked = () => {\n    this.setState({\n      childrenVisible: !this.state.childrenVisible,\n    })\n  }\n\n  renderArrow(item) {\n    if (!item.children) return <span slot=\"arrow\" className={styles.treeArrow} />\n    if (this.state.childrenVisible) {\n      return (\n        <span slot=\"arrow\"\n          onClick={this.arrowClicked}\n          className={styles.treeArrow + ' ' + styles.down}\n          />\n      )\n    } else {\n      return (\n        <span slot=\"arrow\"\n          onClick={this.arrowClicked}\n          className={styles.treeArrow + ' ' + styles.right}\n          />\n      )\n    }\n  }\n\n  handlePublishingUri2OrNot(item, treeItemURIKey) {\n    if (this.props.selectedItem === item[treeItemURIKey]) {\n      let publishVariable2 = this.props.publishVariable2\n\n      if (publishVariable2) {\n        var current = this.props.pubsub[publishVariable2]\n        var contender = item['URI2']\n        //  console.log(\"found selected item \",item,publishVariable2,current,contender);\n        if (current !== contender) {\n          // console.log(\"publishing uri2 \",publishVariable2, item[\"URI2\"]);\n          // this.props.publish(publishVariable2, item[\"URI2\"]);\n        }\n      }\n    }\n  }\n\n  deleteClick = async (item) => {\n    const rule = this.props.deletebuttonrule\n    if (rule == null) {\n      window.alert(\"This function is not available, as no rule has been configured for the delete button\")\n      return\n    }\n\n    if (!window.confirm(\"Are you sure you want to delete this?\")) {\n      return\n    }\n\n    try {\n      this.props.setLoading(true)\n      await runStartRule(rule, JSON.stringify({\n        ...item,\n        ...(this.props.deletebuttonruleParams ?? {})\n      }))\n\n      PublishUtils.setTimeStampParameter(this, false)\n    } catch (e) {\n      window.alert(\"An error occurred during deletion\")\n      console.error(e)\n    } finally {\n      this.props.setLoading(false)\n    }\n  }\n\n  render() {\n\n    let item = this.props.item\n    let labelKey = this.props.data.head.vars[0]\n    let treeItemURIKey = this.props.data.head.vars[1]\n    // let setSelectionInURL = this.props.setSelectionInURL;\n    let setSelectionInURL = false // code kan nog opgeschoond worden. implementatie verloopt nu simpeler\n\n    // sorteren doen we voorlopig even via sparql\n    /*\n    if (item.children) {\n      item.children.sort((a, b) => {\n        if (!a[labelKey]) return 0;\n        return a[labelKey].localeCompare(b[labelKey]);\n      });\n    }\n    */\n\n    if (item.icon == null) {\n      if (this.props.defaultIcon !== '') {\n        item.icon = this.props.defaultIcon\n      }\n    }\n    this.handlePublishingUri2OrNot(item, treeItemURIKey)\n\n\n    if (this.props.selectedItem === item[treeItemURIKey]) {\n    //  console.log('selected item ')\n    }\n\n    /*\n\n    if (this.props.selectedItem === item[treeItemURIKey])\n    {\n    \n      let publishVariable2 = this.props.publishVariable2;\n      if (publishVariable2)\n      {\n        var current=this.props.pubsub[publishVariable2];\n        var contender = item[\"URI2\"];\n      //  console.log(current,contender,publishVariable2);\n        if (current!=contender)\n        {\n         \n          this.props.publish(publishVariable2, item[\"URI2\"]);\n          if (setSelectionInURL)\n          {\n           // console.log(\"we moeten publish variable 2  uitvoeren incl url rewrite\");\n          }\n          else\n          {\n           // console.log(\"we moeten publish variable 2  uitvoeren\");\n          }\n        }\n        \n      }\n    }\n    */\n\n    let curi = 'oude implementatie'\n\n     let checkbox=false;\n     checkbox =item.checkbox;\n    \n     if (checkbox==\"true\") {checkbox=true} else {checkbox=false;}\n        \n     let checked=  this.props.checkedHash[item.uri];\n     if (checked==null) checked=false;\n    var extraStyle=this.props.textstyle;\n    extraStyle=styles[extraStyle];\n\n      \n\n    const RootElement = setSelectionInURL ? Router : React.Fragment\n\n    const hasChildren = Boolean(item.children && item.children.length > 0)\n    const isDeletable = item.deletable == null || item.deletable === 'true'\n    const showDeleteIcon = Boolean(\n      this.props.deletebuttonrule\n      && (!hasChildren || this.props.allowNonLeafDeletion)\n      && isDeletable\n    )\n\n    // <Icon icon=\"info\" size=\"xs\" transform=\"down-6; right-4\" />\n    return (\n      <RootElement  >\n        \n        <div\n          role=\"treeitem\"\n          aria-label={item[labelKey]}\n          className={styles.treeItem}\n          ref={\n            this.props.selectedItem === item[treeItemURIKey]\n              ? this.props.selectedElementRef\n              : null}\n        >\n         \n       \n       \n         \n          <div className={styles.treeLabel+\" \"+extraStyle}  onClick={this.treeItemClicked}>\n            <div className={clsx(styles.treeLink, 'flex flex-grow')}>\n              {this.renderArrow(item)}\n              {item.icon != null && (\n                <Icon\n                  icon={item.icon}\n                  size=\"xs\"\n                  style={{ color: item.iconColor ?? undefined }}\n                  transform=\"down-6; left-4;\"\n                  onClick={this.treeItemClicked}\n\n                />\n              )}\n              {item.icon2 != null && (\n                <Icon\n                  icon={item.icon2}\n                  size=\"xs\"\n                  style={{ color: item.icon2Color ?? undefined }}\n                  transform=\"down-6; left-4\"\n                  onClick={this.treeItemClicked}\n                />\n              )}\n              {item.icon3 != null && (\n                <Icon\n                  icon={item.icon3}\n                  size=\"xs\"\n                  style={{ color: item.icon3Color ?? undefined }}\n                  transform=\"down-6; left-4\"\n                  onClick={this.treeItemClicked}\n                />\n              )}\n              {setSelectionInURL ? (\n                <BrowserRouter basename=\"/\">\n                  <Link to={curi}>\n                  <span\n                    onClick={this.treeItemClicked}\n                    className={\n                      this.props.selectedItem === item[treeItemURIKey]\n                        ? styles.selected\n                        : ''\n                    }\n                  >\n                    {item[labelKey]}\n                  </span>\n                  </Link>\n                </BrowserRouter>\n              ) : (\n                <span\n                  onClick={this.treeItemClicked}\n                  className={\n                    this.props.selectedItem === item[treeItemURIKey]\n                      ? styles.selected + ' ' + styles.noselect + ' ' + styles.label + '  '\n                      : 'anders ' + styles.noselect + ' ' + styles.label + ' '\n                  }\n                >\n                {checkbox && (<input onClick={this.treeItemCheckboxClicked}\n                                     className={styles.checkbox + ' ' + styles.noselect + ' ' + styles.label}\n                                     type=\"checkbox\" defaultChecked={checked}></input>)}\n                  {item[labelKey]}\n              </span>\n              )}\n              {item.description != null && (\n                <Tooltip title={item.description}>\n                  <div>\n                    <Icon style={{ color: '#BBB', paddingLeft: '5px' }}\n                          icon={'fa-circle-info'}\n                          size=\"s\"\n                          transform=\"down+1; left+4\">\n                    </Icon>\n                  </div>\n                </Tooltip>\n              )}\n            </div>\n            {showDeleteIcon && (\n              <button aria-label={`Delete \"${item[labelKey]}\"`}>\n                <Icon className={clsx(styles.deleteIcon, 'pr-3')}\n                      icon=\"times\"\n                      color=\"grey\"\n                      onClick={() => this.deleteClick(item)} />\n              </button>\n            )}\n          </div>\n          {item.children &&\n            this.state.childrenVisible &&\n            item.children.map((item, index) => {\n              return (\n                <TreeItem\n                  key={item?.child || index}\n                  {...this.props}\n                  item={item}\n                  depth={this.props.depth - 1}\n                />\n              )\n            })}\n            \n        </div>\n        \n      </RootElement>\n    )\n  }\n}\n\nclass Tree extends React.Component {\n\n\n \n    state = {\n      items: [],\n      checked:{}\n         \n  }\n\n  selectedElementRef = React.createRef()\n  \n  constructor(props)\n  {\n    super(props);\n    if (this.id==null)\n    {\n      if (Tree.nid==null) Tree.nid=0;\n      Tree.nid++;\n      this.id=\"tree\"+Tree.nid;\n    }\n\n    const pubsubItem = props.pubsub[props.subscribeVariable]\n    if (pubsubItem) {\n      this.state.selectedItem = pubsubItem\n    }\n  \n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const currentSelection = this.props.pubsub[this.props.subscribeVariable]\n    const nextSelection = nextProps.pubsub[nextProps.subscribeVariable]\n    if (currentSelection === nextSelection) return\n    if (this.state.selectedItem === nextSelection) return\n    this.setState({ selectedItem: nextSelection })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.subscribeVariable == null) {\n      return\n    }\n    if (this.selectEvent) {\n      this.selectEvent = false\n      return\n    }\n\n    const isUriChanged = prevState.selectedItem !== this.state.selectedItem\n    const isDataChanged = prevProps.data !== this.props.data\n    const hasSelectedElementRef = !!this.selectedElementRef.current\n\n    if (hasSelectedElementRef && (isUriChanged || isDataChanged)) {\n      this.scrollLatestUriIntoView()\n    }\n  }\n\n  findInChild(parent,id) {\n    try {\n      for (let i = 0; i < parent.children.length; i++) {\n        var child =parent.children[i];\n      //  console.log(child.id);\n        if (child.id==id) return child;\n      }\n\n      for (let i = 0; i < parent.children.length; i++) {\n        var child =parent.children[i];\n          return this.findInChild(child,id)\n      }\n    } catch(e) {console.log(e);}\n    return null;\n  }\n\n  scrollLatestUriIntoView() {\n    const selectedUri = this.state.selectedItem\n    const latestManualUri = this.state.latestTreeSelection\n    if (!this.props.scrollSelectionIntoView) return\n    if (latestManualUri && latestManualUri === selectedUri) return\n    this.selectedElementRef.current?.scrollIntoView?.()\n  }\n\n\n  myPublish(par,value)\n  {\n    // console.log(\"dispatching \",par,value);\n   var me=this;\n   try\n   {\n   var data ={};\n   data[par]=value;\n   this.props.dispatch({\n     type: 'PUBLISH',\n     data: data\n   })\n  }\n  catch(e)\n  {\n    console.log(\"my publish delayed\");\n    setTimeout(function(){me.myPublish(par,value)},100);\n  }\n  }\n\n\n  processURLSelection() {\n    if (this.props != null) {\n      if (this.props.parseInitialURLForSelection) {\n        var url = window.top.location.href\n       //   console.log(\"trying to find selection from url\",url);\n        if (url.startsWith(this.props.setSelectionInURLStartsString)) {\n\n         // console.log(\"pubsub because of url value \",url,  this.props.subscribeVariable,\"current value\", this.props.pubsub[this.props.subscribeVariable]);\n\n           // this.myPublish(this.props.subscribeVariable,url);\n           var me=this;\n         //  console.log(\"process url selection. variable already set\",this.props.subscribeVariable, this.props.pubsub[this.props.subscribeVariable],url);\n\n           const selectedURI = this.props.pubsub[this.props.subscribeVariable]\n           if (selectedURI && selectedURI.includes(url)) {\n          //  console.log(\"not publshing value\");\n            return true;\n          }\n          if (url.includes(\"?\"))\n          {\n            console.log(\"this is not a value uri so not publshing it\");\n            return true;\n          }\n           setTimeout(function(){me.myPublish(me.props.subscribeVariable,url)},250);\n\n            \n\n          //this.props.pubsub[this.props.subscribeVariable] = url;\n          return true;\n        } else {\n          try {\n            //  console.log(\"trying to find selection from url parameter\");\n            const queryString = window.top.location.search\n            //  console.log(queryString);\n            const urlParams = new URLSearchParams(queryString)\n            var selection = urlParams.get('selection')\n            if (selection != null) {\n              if (\n                selection.startsWith(\n                  this.props.setSelectionInURLStartsString\n                ) ||\n                selection.startsWith('http://localhost:3000/')\n              ) {\n                //  console.log(\"pubsub parsing url for selection parameter value\",this.props.subscribeVariable,selection);\n                this.props.pubsub[this.props.subscribeVariable] = selection\n                return true\n              } else {\n                console.log(\n                  'initial parametervalue not according to ',\n                  this.props.setSelectionInURLStartsString\n                )\n              }\n            } else {\n              console.log('no initial selection parameter value found', url)\n            }\n          } catch (error) {\n            console.log(error)\n          }\n        }\n\n        //url=\"https://otl.waternet.nl/def/Document\"; //voorbeeld\n        // remove url parameters\n      }\n    }\n    return false\n  }\n\n  componentDidMount() \n  {\n    if (this.processURLSelection()) {\n      //console.log(\"component did mount1\");\n  this.scrollLatestUriIntoView();\n      return\n    }\n    //this.processURLSelection();\n    // check of we een selectie (niet zeker of die bestaat) moeten registerern op basis van de url.\n    if (this.props.initialSelection != null) {\n      if (\n        this.props.subscribeVariable != null ||\n        this.props.publishVariable != null\n      ) {\n        // console.log(\"setting initial selection value\",this.props.initialSelection);\n        let selection = this.props.subscribeVariable\n        if (selection == null) {\n          selection = this.props.publishVariable\n        }\n        this.setState({selectedItem: this.props.initialSelection}, () => {\n          this.props.publish(selection, this.props.initialSelection);\n        })\n      }\n    }\n   // console.log(\"component did mount2\");\n  this.scrollLatestUriIntoView();\n  }\n  shouldComponentUpdate222(props, state) // needs an update when uri is selected for highlighting\n  {\n    \n    var sv=this.props.subscribeVariable;\n    if (sv==null) return true;\n    let selectedURI = this.props.pubsub[this.props.subscribeVariable]\n    let nselectedURI=props.pubsub[props.subscribeVariable];\n   \n    if ((selectedURI!=nselectedURI) )\n    {\n      let publishVariable2 = this.props.publishVariable2;\n      if (publishVariable2!=null)   \n      {\n        let selectedURI2 = this.props.pubsub[this.props.publishVariable2]\n        let nselectedURI2=props.pubsub[props.publishVariable2];\n        \n        if (selectedURI2==nselectedURI2)\n        {\n      //   console.log(\"we should check variable 2?\");\n         var nselectedURI22= this.lookupPublishVariable2(nselectedURI);\n         if (nselectedURI2!=nselectedURI22)\n         {\n       //   console.log(\"confirmed to update publisch varaible 2 \",nselectedURI22);\n         }\n        }\n\n      }\n    }\n\n    \n    return true;\n    \n  }\n  lookupPublishVariable2(uri)\n  {\n    try{\n    var var1=this.props.subscribeVariable;\n    //console.log(this.props);\n    if (this.props.data==null) return null;\n    //var var2=this.props.publishVariable2;\n    for (var n in this.props.data.results.bindings) \n    {\n      var binding = this.props.data.results.bindings[n];\n      var value = binding[var1].value;\n      if (value==uri)\n      {\n        \n        return binding.URI2.value;\n      }\n\n    }\n  }\n  catch(e){console.log(e);}\n  return null;\n  }\n\n  treeItemCheckboxClicked = (item) => \n  {\n    let checked=item.checked;\n    let checkboxchecks = this.state.checked;\n\n    let treeItemURIKey = this.props.data.head.vars[1]\n    var uri = item[treeItemURIKey]\n    checkboxchecks[uri]=checked;\n    \n    this.setState({checked:checkboxchecks});\n     if (this.props.multipleCheckBoxParameter!=null)\n     {\n         var s=PublishUtils.getMultiplePropValueAsSingleValue(this.props.multipleselectparametertype,checkboxchecks);\n        // console.log(\"tree publshing multi parameter:\",this.props.multipleCheckBoxParameter,s);\n         var me=this;\n        setTimeout(function() {\n         var m=me.props.publish(me.props.multipleCheckBoxParameter,s);\n        \n        },100);\n         \n\n     }\n  \n\n\n\n  }\n \n\n\n  treeItemClicked = (item) => \n  {\n    \n   \n    this.selectEvent = true\n    \n    // console.log(\"latest tree selection\",item.uri);\n    let treeItemURIKey = this.props.data.head.vars[1]\n    let publishVariable = this.props.publishVariable\n    let publishVariable2 = this.props.publishVariable2;\n    let publishVariable3 = this.props.publishVariable3;\n    let publishVariable4 = this.props.publishVariable4;\n    var v1 = item[treeItemURIKey]\n    if (publishVariable4) {\n\n      var v4 = item['URI4']\n      if (v4!=null)\n      {\n        this.props.publish(publishVariable4, v4);\n      }\n\n    }\n    if (publishVariable3) {\n\n      var v3 = item['URI3']\n      if (v3!=null)\n      {\n        this.props.publish(publishVariable3, v3);\n      }\n\n    }\n\n    if (publishVariable2) {\n     \n      var v2 = item['URI2']\n      if (v2!=null)\n      {\n        this.props.publish(publishVariable2, v2);\n      }\n \n    }\n\n    if (publishVariable != null) {\n      this.setState({ selectedItem: v1, latestTreeSelection: v1 }, () => {\n        this.props.publish(publishVariable, v1);\n      });\n    }\n    \n  }\n  containsSelection(selectedURI, treeItemURIKey, item)\n  {\n      this.cs=0;\n     return this.containsSelectionR(selectedURI, treeItemURIKey, item);\n  }\n  containsSelectionR(selectedURI, treeItemURIKey, item) {\n    if (item[treeItemURIKey] == selectedURI) {\n      return true\n    }\n\n    var b = false\n    for (var n in item.children) {\n      this.cs++;\n      if (this.cs>10000) {console.log(\"too many items in the tree so not selecting items anymore\");return false;}\n      var child = item.children[n]\n      //console.log(item,child);\n      child.containsSelection = this.containsSelectionR(\n        selectedURI,\n        treeItemURIKey,\n        child\n      )\n      if (child.containsSelection == true) {\n        b = true\n\n      }\n    }\n    return b\n  }\n\n  markItemsContainingSelection(items, selectedURI) {\n    if (selectedURI == null) {\n      return\n    }\n    let treeItemURIKey = this.props.data.head.vars[1]\n    for (var n in items) {\n      var item = items[n]\n      item.containsSelection = this.containsSelection(\n        selectedURI,\n        treeItemURIKey,\n        item\n      )\n    }\n  }\n\n  findParents(ar) {\n\n    let headVars = this.props.data.head.vars\n    let treeItemURIKey = headVars[1]\n    let parentItemURIKey = headVars[2]\n    let parents = []\n    let uri_items = {}\n    // zoek parents en creeer uri hash\n    for (var n in ar) {\n      let item = ar[n]\n\n      var itemsar = uri_items[item[treeItemURIKey]]\n      if (itemsar == null) {\n        itemsar = []\n        uri_items[item[treeItemURIKey]] = itemsar\n      }\n      itemsar.push(item)\n    }\n\n    // zet children\n   \n    for (const n in ar) {\n      var item = ar[n]\n      // no parent\n      if (uri_items[item[parentItemURIKey]] == null)\n       {\n          // only once\n              parents.push(item);\n        // console.log(\"finding parent \"+item[labelKey],parents[0]);\n       }\n      // console.log(parents) ;\n\n      var parent = item[parentItemURIKey]\n      if (parent != null) {\n        itemsar = uri_items[parent]\n        if (itemsar != null) {\n          for (var i in itemsar) {\n            var parentO = itemsar[i]\n            var children = parentO.children\n            if (children == null) {\n              children = []\n              parentO.children = children\n            }\n            children.push(item)\n          }\n        }\n      }\n    }\n\n\n  // remove double parents?\n\n\n    return parents\n  }\n\n  aggregate(items) {\n    try {\n      let headVars = this.props.data.head.vars\n      let treeItemURIKey = headVars[1]\n      let parentItemURIKey = headVars[2]\n\n      var id_binding = {}\n      for (var n in items.results.bindings) {\n        var binding = items.results.bindings[n]\n        var parent = 'onbekend'\n        if (binding[parentItemURIKey] != null)\n          parent = binding[parentItemURIKey].value\n        var id = parent + '_' + binding[treeItemURIKey].value\n        var double = id_binding[id]\n        if (double != null) {\n          for (var key in binding) {\n            double[key] = binding[key]\n          }\n        } else {\n          id_binding[id] = binding\n        }\n      }\n      var result = []\n      //console.log(id_binding);\n      for (var k in id_binding) result.push(id_binding[k])\n\n      items.results.bindings = result\n      // console.log(items);\n      return items\n    } catch (e) {\n      console.log(e)\n    }\n    return null\n  }\n\n  /*shouldComponentUpdate()\n  {\n    console.log(\"tree needs to be updated\");\n    return true;\n  }\n*/\n  exists(uri, item) {\n    //console.log(uri,item);\n    try {\n      if (item.child === uri) {\n        return true\n      }\n      if (item.children == null) {\n        return false\n      }\n      for (var n in item.children) {\n        var b = this.exists(uri, item.children[n])\n        if (b) {\n          return true\n        }\n      }\n    } catch (e) {\n      console.log(e)\n    }\n\n    return false\n  }\n\n  render() {\n    //console.log(\"render tree \",this.props.data);\n    if (!this.props.data) return null\n\n    const selectedURI = this.state.selectedItem\n\n    var item = this.state.rootitem\n    if (item == null) {\n      item = this.createTreeItems(selectedURI)\n      //this.state.rootitem=item;\n    }\n    var checkHash = this.state.checked;\n\n    if (item == null) {\n      return null\n    }\n\n    if (selectedURI && this.props.setSelectionInURL) {\n     var b=true;\n      var getUrl = window.top.location;\n      var baseUrl = getUrl.origin + '/'\n      var suri = baseUrl + selectedURI.replace(baseUrl, '') // makesure it has the same origin\n      if (suri !== selectedURI) \n      {\n        \n        if (suri==\"http://www.buildingbits.nl/reset\")\n        {\n          suri = window.top.location.origin+window.top.location.pathname;\n        }\n        else\n        {\n          if (this.props.debugSetSelectionInURL)\n          {\n            suri = window.top.location.origin+window.top.location.pathname+\"?selection=\"+selectedURI;\n          }\n          else\n          {\n            b=false;\n          }\n        }\n       // console.log(\"selected uri not in this domain. creating fake url \",suri);\n      }\n\n     \n    \n      /*\n      if (!this.exists(selectedURI, item)) {\n         console.log( \"selected uri bestaat niet \",selectedURI);\n        suri = getUrl\n      }\n      */\n     \n\n      // if (suri!=baseUrl)\n      //console.log(\"should push suri \",suri);\n      if (b) {\n        //console.log(\"selected uri in this domain so changing url\",selectedURI);\n        setTimeout(function () {\n          try {\n            window.top.history.pushState({}, null, suri)\n          } catch (e) {\n            console.log(e)\n          }\n        }, 0)\n      } else {\n       // console.log('not reloading')\n      }\n    }\n    \n\n\n    //console.log(this.props.data,item);\n    var depth = 0\n    if (this.props.expandLevel!=null) {depth=this.props.expandLevel;}\n\n    \n\n    //console.log(item,Array.isArray(item));\n    if (Array.isArray(item)) {\n      return (\n        <div id={this.id} className={styles.main + ' ' + styles[this.props.panelstyle]} disabled={this.state.loading}>\n          {this.props.title && (\n            <div className={styles.title}>{this.props.title}</div>\n          )}\n          {/*{item.filter(i => i.childName?.length).map((titem, index) => {*/}\n            {item.map((titem, index) => {\n            return (\n              <TreeItem\n                key={item?.child || index}\n                {...this.props}\n                selectedElementRef={this.selectedElementRef}\n                item={titem}\n                treeItemClicked={(item) => this.treeItemClicked(item)}\n                treeItemCheckboxClicked={(item) => this.treeItemCheckboxClicked(item)}\n                selectedItem={selectedURI}\n                checkedHash={checkHash}\n                depth={depth}\n                root={true}\n              />\n            )\n          })}\n        </div>\n      )\n    } else {\n      return (\n        <div id={this.id} className={styles.main + ' ' + styles[this.props.panelstyle]} disabled={this.state.loading}>\n          {this.props.title && (\n            <div className={styles.title}>{this.props.title}</div>\n          )}\n          <TreeItem\n            {...this.props}\n            selectedElementRef={this.selectedElementRef}\n            item={item}\n            treeItemClicked={(item) => this.treeItemClicked(item)}\n            treeItemCheckboxClicked={(item) => this.treeItemCheckboxClicked(item)}\n            selectedItem={selectedURI}\n            checkedHash={checkHash}\n            depth={depth}\n            root={true}\n          />\n        </div>\n      )\n    }\n  }\n\n  createTreeItems(selectedURI) {\n\n    let items = this.props.data\n    if (this.props.aggregate) {\n      items = this.aggregate(items)\n    }\n    if (items == null) {\n      return null\n    }\n    items = restructureResponse(items)\n    if (items == null) {\n      return null\n    }\n\n    let headVars = this.props.data.head.vars\n\n    items = this.findParents(items)\n  \n    this.markItemsContainingSelection(items, selectedURI)\n\n    let labelKey = headVars[0]\n    let item = {\n      [labelKey]: this.props.rootLabel,\n      children: items,\n      containsSelection: !!selectedURI,\n    }\n\n    if (\n      (this.props.rootLabel == '' || this.props.rootLabel == null) &&\n      items.length == 1\n    ) {\n      item = items[0]\n      // console.log(\"setting single data parent as root of the table\",item);\n    }\n    else\n    {\n      item=items;\n    }\n    // console.log(\"returning tree items \",item);\n    return item\n  }\n}\n\nexport default Tree\n"],"sourceRoot":""}