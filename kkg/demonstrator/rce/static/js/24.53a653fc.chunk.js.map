{"version":3,"sources":["components/widgets/bb/kvk/BBKVKProductTemplate.module.css","components/widgets/bb/kvk/WettenPanel.js","components/widgets/bb/kvk/BBKVKProductTemplate.js","components/AbstractArea.tsx"],"names":["module","exports","WettenPanel","state","data","handleClose","props","onClose","Transition","React","forwardRef","ref","Grow","direction","unmountOnExit","me","this","console","log","uri","window","top","query","setState","open","title","fullScreen","config","Dialog","fullWidth","maxWidth","TransitionComponent","AppBar","className","styles","appBar","Toolbar","IconButton","edge","color","onClick","Typography","variant","Area","DialogTitle","id","closeButton","DialogContent","dividers","getData","List","ListItem","Spinner","sparql","split","vpane","BBVis","basequery","props2","extendquery","publishVariable","BBKVKFlexibleTextWidget","Component","BBKVKProductTemplate","openWetten","areas","defaultValues","handleButtonClick","productUri","index","publish","selectedUri","selectedProductUri","openIndex","handleCloseWetten","value","ev","target","o","e","results","bindings","eeer","key","buttons","productLogo","length","previousLabelHeader","FormControl","outer","inner","src","productTitle","defaultValueButton","toggleDefaultValues","size","Icon","map","binding","element","defaultValue","label","header","labelHeader","optionsS","options","valueS","textOnly","divtext","FormLabel","TextField","textfield2","select","onChange","onSelectChange","name","MenuItem","buttonDiv","button","areaConfig","popupTitle","popupFullScreen","component","variables","type","AbstractArea"],"mappings":"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","file":"static/js/24.53a653fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"BBKVKProductTemplate_main__2LnXr\",\"closeButton\":\"BBKVKProductTemplate_closeButton__S1_dF\",\"divtext\":\"BBKVKProductTemplate_divtext__2p99Q\",\"textfield2\":\"BBKVKProductTemplate_textfield2__2engI\",\"weirdlabel\":\"BBKVKProductTemplate_weirdlabel__2some\",\"MuiInputLabel-outlined\":\"BBKVKProductTemplate_MuiInputLabel-outlined__1_ui3\",\"MuiInputLabel-shrink\":\"BBKVKProductTemplate_MuiInputLabel-shrink__13z3u\",\"defaultValueButton\":\"BBKVKProductTemplate_defaultValueButton__3gG_5\",\"outer\":\"BBKVKProductTemplate_outer__8E70p\",\"productTitle\":\"BBKVKProductTemplate_productTitle__32v68\",\"inner\":\"BBKVKProductTemplate_inner__23XpU\",\"buttonDiv\":\"BBKVKProductTemplate_buttonDiv__3iwS1\",\"linkbutton\":\"BBKVKProductTemplate_linkbutton__2bj44\",\"verstrekken\":\"BBKVKProductTemplate_verstrekken__M602z\",\"appBar\":\"BBKVKProductTemplate_appBar__kMvYL\",\"title\":\"BBKVKProductTemplate_title__3KOaR\",\"vpane\":\"BBKVKProductTemplate_vpane__2R3aX\"};","import React, { Component, Fragment } from 'react'\n\nimport {\n  Typography,\n  DialogContent,\n  List,\n  ListItem,\n  DialogTitle,\n  Dialog,\n  Grow,\n  IconButton,\n  AppBar,\n  Toolbar\n} from '@mui/material'\n\nimport CloseIcon from '@mui/icons-material/Close'\n\nimport styles from './BBKVKProductTemplate.module.css'\nimport Spinner from '../../../Spinner'\n\nimport BBVis from '../BBVis'\n\nimport { SplitPane } from 'react-collapse-pane'\nimport BBKVKFlexibleTextWidget from './BBKVKFlexibleTextWidget'\nimport Area from '../../../Area'\n\nexport default class WettenPanel extends Component {\n  state = { data: null }\n\n  handleClose = () => {\n    this.props.onClose()\n  }\n\n  Transition = React.forwardRef(function Transition(props, ref) {\n    return <Grow direction=\"up\" ref={ref} {...props} unmountOnExit />\n  })\n\n  getData() {\n    var me = this\n    console.log('get data with product uri ' + this.props.uri, this.props)\n\n    window.top.query(\n      'select * where {<' + this.props.uri + '> ?a ?b}',\n      function (data) {\n        me.setState({ data: data })\n      }\n    )\n  }\n\n  render() {\n    const { open } = this.props\n\n    //let mode= this.props.mode||'';\n    let fullWidth = true\n    let maxWidth = 'xl'\n    maxWidth = 'md'\n    let title = this.props.title\n\n    let fullScreen = this.props.fullScreen\n    if (fullScreen != null) {\n      if (fullScreen === 'true') fullScreen = true\n      if (fullScreen === 'false') fullScreen = false\n    }\n    if (fullScreen) {\n    } else {\n    }\n\n    if (this.props.config) {\n      return (\n        <Dialog\n          fullScreen={fullScreen}\n          fullWidth={fullWidth}\n          maxWidth={maxWidth}\n          open={open}\n          TransitionComponent={this.Transition}\n          onClose={this.handleClose}\n          aria-labelledby=\"iets\"\n        >\n          {fullScreen ? (\n            <Fragment>\n              <AppBar className={styles.appBar}>\n                <Toolbar>\n                  <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    onClick={this.handleClose}\n                    aria-label=\"close\"\n                  >\n                    <CloseIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" className={styles.title}>\n                    {title}\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n              <br></br>\n              <br></br>\n              <br></br>\n              <Area {...this.props} />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <DialogTitle id=\"customized-dialog-title\">\n                {title}{' '}\n                <IconButton\n                  className={styles.closeButton}\n                  onClick={this.handleClose}\n                >\n                  {' '}\n                  <CloseIcon />{' '}\n                </IconButton>\n              </DialogTitle>\n              <DialogContent dividers>\n                <Area {...this.props} />\n              </DialogContent>\n            </Fragment>\n          )}\n        </Dialog>\n      )\n    }\n\n    if (this.state.data == null) {\n      this.getData()\n      return (\n        <Dialog\n          fullScreen\n          open={open}\n          TransitionComponent={this.Transition}\n          onClose={this.handleClose}\n          aria-labelledby=\"iets\"\n        >\n          <AppBar className={styles.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={styles.title}>\n                relaties\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem key=\"test\">\n              <Spinner />\n            </ListItem>\n          </List>\n        </Dialog>\n      )\n    }\n    console.log('wetten panel met spinner', this.props.uri)\n    var uri =\n      'http://www.kvk.nl/innovatielab/ggwbv2/producten/2020/uittreksels#NV_BVKpe3'\n    if (this.props.uri != null) {\n      uri = this.props.uri\n    }\n    var bind = '  bind (<' + uri + '> as ?node)\\r\\n'\n\n    var sparql =\n      'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\r\\n' +\n      'select distinct ?node ?nodeLabel ?edge ?edgeLabel ?object ?objectLabel\\r\\n' +\n      'where\\r\\n' +\n      '{\\r\\n' +\n      '    graph <http://www.kvk.nl/innovatielab/ggwbv2/producten/2020/uittreksels>\\r\\n' +\n      '    {\\r\\n' +\n      bind +\n      '  . ?node ?edge ?object. bind (STRAFTER(STR(?edge),\"#\") as ?edgeLabel).' +\n      '    ?node rdfs:label ?nodeLabel.\\r\\n' +\n      '    }\\r\\n' +\n      '  ?object rdfs:label ?objectLabel' +\n      '}\\r\\n'\n\n    var extendquery =\n      'PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\r\\n' +\n      'select distinct ?node ?nodeLabel ?edge ?edgeLabel ?object ?objectLabel\\r\\n' +\n      '\\r\\n' +\n      'where\\r\\n' +\n      '{\\r\\n' +\n      '   \\r\\n' +\n      '  bind (<{{uri}}> as ?node)\\r\\n' +\n      '      ?node ?edge ?object.\\r\\n' +\n      '    filter (?edge not in(<http://opendata.stelselcatalogus.nl/stelselcatalogus/def#sectorregistratie>))\\r\\n' +\n      '   \\r\\n' +\n      '    ?node rdfs:label ?nodeLabel.\\r\\n' +\n      '    optional {?edge rdfs:label ?edgeLabel1}\\r\\n' +\n      '    bind (IF(BOUND(?edgeLabel1),?edgeLabel1,\"onbekend\") as ?edgeLabel)\\r\\n' +\n      '    ?object rdfs:label ?objectLabel\\r\\n' +\n      '}\\r\\n' +\n      '\\r\\n'\n    var props = this.props\n    var state = this.state\n\n    var query = 'select * where {<{{selection}}> ?a ?b}'\n    return (\n      <Dialog\n        fullScreen\n        open={open}\n        TransitionComponent={this.Transition}\n        onClose={this.handleClose}\n        aria-labelledby=\"iets\"\n      >\n        <AppBar className={styles.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={styles.title}>\n              wetten relaties\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <DialogTitle id=\"simple-dialog-title\">\n          Extra informatie over de link\n        </DialogTitle>\n        <SplitPane split=\"vertical\">\n          <div className={styles.vpane}>\n            <BBVis\n              basequery={sparql}\n              props2={props}\n              extendquery={extendquery}\n              publishVariable=\"selection\"\n            ></BBVis>\n          </div>\n          <div className={styles.vpane}>\n            <BBKVKFlexibleTextWidget\n              query={query}\n              {...state}\n              {...props}\n            ></BBKVKFlexibleTextWidget>\n          </div>\n        </SplitPane>\n      </Dialog>\n    )\n  }\n}\n","import React, { Fragment } from 'react'\nimport styles from './BBKVKProductTemplate.module.css'\n\nimport {\n  TextField,\n  FormControl,\n  FormLabel,\n  MenuItem,\n  IconButton,\n  Typography,\n  Icon\n} from '@mui/material'\n\nimport WettenPanel from './WettenPanel.js'\n\nimport AbstractArea from '../../../AbstractArea'\n\nexport default class BBKVKProductTemplate extends AbstractArea {\n  state = { openWetten: false, areas: [], defaultValues: false }\n\n  handleButtonClick = (uri, productUri, index) => {\n    //selection\n    if (this.props.publishVariable != null) {\n      this.props.publish(this.props.publishVariable, uri)\n    }\n    // wat gaan we veranderen\n\n    this.setState({\n      selectedUri: uri,\n      selectedProductUri: productUri,\n      openWetten: true,\n      openIndex: index,\n    })\n  }\n\n  handleCloseWetten = (value) => {\n    this.setState({ openWetten: false, openIndex: -1 })\n  }\n\n  /*BUTTON: \"button\"\nCHECKBOX: \"checkbox\"\nDATE_PICKER: \"date-picker\"\nDUAL_LIST_SELECT: \"dual-list-select\"\nFIELD_ARRAY: \"field-array\"\nINPUT_ADDON_BUTTON_GROUP: \"input-addon-button-group\"\nINPUT_ADDON_GROUP: \"input-addon-group\"\nPLAIN_TEXT: \"plain-text\"\nRADIO: \"radio\"\nSELECT: \"select\"\nSLIDER: \"slider\"\nSUB_FORM: \"sub-form\"\nSWITCH: \"switch\"\nTABS: \"tabs\"\nTAB_ITEM: \"tab-item\"\nTEXTAREA: \"textarea\"\nTEXT_FIELD: \"text-field\"\nTIME_PICKER: \"time-picker\"\nWIZARD: \"wizard\"\n*/\n\n  static getDescription() {\n    return {\n      name: 'BBKVKProductTemplate',\n      component: BBKVKProductTemplate,\n      label: 'BBK KVK Product Template',\n      variables: [\n        {\n          name: 'title',\n          type: 'text',\n          label: 'Titel boven de template',\n        },\n        {\n          name: 'query',\n          type: 'yasgui',\n          label:\n            'to fill the form. Use title,uri, propUri, label,value, type (xsd,select), optionLabel optionValue ?required regex, multiple,objectOfCls ',\n        },\n        {\n          name: 'buttons',\n          type: 'array',\n          label: 'buttons',\n        },\n        {\n          name: 'popupFullScreen',\n          type: 'array',\n          label: 'popupFullScreen',\n        },\n        {\n          name: 'popupTitle',\n          type: 'array',\n          label: 'popupTitle',\n        },\n        {\n          name: 'publishVariable',\n          type: 'text',\n          label: 'Variabele in which URI is published when button is clicked.',\n        },\n\n        {\n          name: 'className',\n          type: 'text',\n          label: 'iframe classNames',\n        },\n      ],\n    }\n  }\n\n  toggleDefaultValues() {\n    let defaultValues = !this.state.defaultValues\n    this.setState({ defaultValues: defaultValues })\n  }\n  onChange() {\n    console.log('onChange')\n  }\n  onSelectChange(id, ev) {\n    try {\n      console.log(id, ev.target.value)\n      var o = {}\n      o[id] = ev.target.value\n\n      this.setState(o)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    if (this.props.data == null) {\n      return null\n    }\n    if (this.props.data.results == null) {\n      return null\n    }\n    let title = this.props.title\n    if (title == null) {\n      title = ''\n    }\n    let bindings = this.props.data.results.bindings\n    try {\n      title = bindings[0].title.value\n    } catch (eeer) {}\n    let selectedUri = this.state.selectedUri\n    let key = 1\n    let areas = []\n    if (this.props.areas != null) {\n      areas = this.props.areas\n    } else {\n    }\n\n    var buttons = this.props.buttons\n    if (buttons == null) {\n      buttons = []\n    }\n\n    let productLogo = '/logos/kvkuittreksel.png'\n    if (bindings.length === 0) {\n      productLogo = '/logos/kvkproduct.png'\n    }\n    let previousLabelHeader = null\n    return (\n      <FormControl>\n        <div className={styles.outer}>\n          <div className={styles.inner}>\n            <img src={productLogo}></img>{' '/*eslint-disable-line jsx-a11y/alt-text*/}\n            <Typography className={styles.productTitle} variant=\"\">\n              {' '}\n              {title}{' '}\n            </Typography>{' '}\n            <IconButton\n              className={styles.defaultValueButton}\n              onClick={() => this.toggleDefaultValues()}\n              aria-label=\"delete\"\n              size=\"small\"\n            >\n              {' '}\n              <Icon>info</Icon>\n            </IconButton>\n            {bindings.map((binding) => {\n              key++\n              //var binding =bindings[key];\n              let uri = binding.uri.value\n\n              let element = 'niets'\n              try {\n                element = binding.element.value\n              } catch (e) {}\n              let defaultValue = ''\n              try {\n                defaultValue = binding.defaultValue.value\n              } catch (e) {}\n              if (this.state.defaultValues !== true) {\n                defaultValue = ''\n              }\n              let label = binding.label.value\n              let header = true\n              let labelHeader = binding.labelHeader.value\n              if (labelHeader === previousLabelHeader) {\n                header = false\n              }\n              previousLabelHeader = labelHeader\n              let optionsS = null\n              try {\n                optionsS = binding.options.value\n              } catch (e) {}\n              let options = []\n              if (optionsS != null) {\n                options = optionsS.split(';')\n              }\n\n              //\n              if (label == null) {\n                label = 'error'\n              }\n              // for optoins\n              var valueS = this.state[element]\n              if (valueS == null) {\n                valueS = defaultValue\n              }\n              var textOnly = false\n              try {\n                textOnly = binding.textOnly.value\n                if (textOnly === 'true') {\n                  textOnly = true\n                } else {\n                  textOnly = false\n                }\n              } catch (e) {}\n\n              return (\n                <Fragment>\n                  {header && (\n                    <div key={'header' + key}>\n                      <br></br>\n                      <br></br>\n                      <Typography variant=\"h6\"> {labelHeader} </Typography>\n                    </div>\n                  )}\n                  <div key={'div' + key} className={styles.divtext}>\n                    <br></br>{' '}\n                    <div>\n                      {textOnly ? (\n                        <FormLabel>{label}</FormLabel>\n                      ) : (\n                        <Fragment>\n                          {' '}\n                          {optionsS == null ? (\n                            <TextField\n                              key={'textfield' + key}\n                              className={styles.textfield2}\n                              label={label}\n                              value={defaultValue}\n                            >\n                              {' '}\n                            </TextField>\n                          ) : (\n                            <Fragment>\n                              <TextField\n                                select\n                                label={label}\n                                value={valueS}\n                                onChange={(value) => {\n                                  this.onSelectChange(element, value)\n                                }}\n                                key={element}\n                                name={element}\n                                className={styles.textfield2}\n                              >\n                                {options.map((name) => (\n                                  <MenuItem key={name} value={name}>\n                                    {name}\n                                  </MenuItem>\n                                ))}\n                              </TextField>\n                            </Fragment>\n                          )}\n                        </Fragment>\n                      )}\n\n                      <div key={'buttonDiv' + key} className={styles.buttonDiv}>\n                        {buttons.map((button, index) => {\n                          //return (<Button className={styles.button2}  key={\"button\"+index} onClick={() =>this.handleClickOpenWetten(element,uri,index)}  size=\"small\" variant=\"contained\"  className={styles.linkbutton} >{button}</Button>       );\n                          return (\n                            <IconButton\n                              onClick={() =>\n                                this.handleButtonClick(element, uri, index)\n                              }\n                              key={'button' + index}\n                              aria-label=\"delete\"\n                              size=\"small\"\n                            >\n                              {' '}\n                              <Icon>{button}</Icon>{' '}\n                            </IconButton>\n                          )\n                        })}\n                      </div>\n                    </div>{' '}\n                  </div>\n                </Fragment>\n              )\n            })}\n            {buttons.map((button, index) => {\n              let areaConfig = areas[index] || {}\n              var open = false\n              let title = 'geen title'\n              try {\n                title = this.props.popupTitle[index]\n              } catch (e) {}\n\n              let fullScreen = true\n              try {\n                fullScreen = this.props.popupFullScreen[index]\n              } catch (e) {}\n\n              if (index === this.state.openIndex) {\n                open = true\n              }\n              //  console.log(open);\n              return (\n                <WettenPanel\n                  title={title}\n                  fullScreen={fullScreen}\n                  index={index}\n                  onChange={this.onChange}\n                  key={'wettenpanel' + index}\n                  {...this.props}\n                  config={areaConfig}\n                  open={open}\n                  uri={selectedUri}\n                  onClose={this.handleCloseWetten}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </FormControl>\n    )\n  }\n}\n","import React from 'react'\n\nexport default class AbstractArea<P = DefaultP, S = DefaultS, SS = DefaultSS> extends React.Component<P,S,SS> {\n  isAA() {\n    return true\n  }\n}\n\ntype DefaultP = ExtractDefaultP<React.Component>\ntype DefaultS = ExtractDefaultS<React.Component>\ntype DefaultSS = ExtractDefaultSS<React.Component>\ntype ExtractDefaultP<T> = T extends React.Component<infer P> ? P : never\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractDefaultS<T> = T extends React.Component<infer P, infer S> ? S : never\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractDefaultSS<T> = T extends React.Component<infer P, infer S, infer SS> ? SS : never\n"],"sourceRoot":""}