{"version":3,"sources":["components/widgets/bb/SparqlResultParser.js","components/widgets/bb/BBGanttChart.js"],"names":["SparqlResultParser","results","this","_result","endResult","bindings","ar","map","binding","value","key","push","n","d","Date","toISOString","split","getTime","nn","id","key_object","id2","e","console","log","BBGanttChart","getUrl","window","bbFolderName","submitFormSuccesful","PublishUtils","setTimeStampParameter","props","successMessage","toast","closePopup","closeDialog","submitFormFailure","failureMessage","alert","scrolling","noEvents","usesParameters","tasks","canAdd","data","srp","isOK","getSimplifiedArrayUsingObjectID","dateToLong","addSimpleIntegerID","replace","c","r","Math","random","toString","dataToSend","task","uri","generateUUID","graph","task2","o1","propuri","valuetype","o2","o3","o4","start","end","name","code","convertSaveData","Command","sendCommand","BBIFrame"],"mappings":"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","file":"static/js/43.5e26e80a.chunk.js","sourcesContent":["export default class SparqlResultParser {\r\n  constructor(results) {\r\n    this._result = results;\r\n    this.endResult={}\r\n  }\r\n  isOK() {  \r\n    if (this._result==null) return false;\r\n    if (this._result.results==null) return false;\r\n    if (this._result.results.bindings==null) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n \r\n\r\n  getSimplifiedArray() {\r\n   var ar=[]\r\n     this._result.results.bindings.map(binding => {\r\n      const value = {};\r\n      for (const key in binding) {\r\n        value[key] = binding[key].value;\r\n      }\r\n      ar.push(value);\r\n      \r\n    });\r\n    return ar;\r\n  }\r\n  toDate(key)\r\n  {\r\n          for (var n in this.endResult)\r\n          {\r\n                var value=this.endResult[n][key];\r\n                if (value!=null)\r\n                {\r\n                    var d = new Date(value);\r\n                    this.endResult[n][key]=d.toISOString().split(\"T\")[0];\r\n                }\r\n          }\r\n  }\r\n  dateToLong(key)\r\n  {\r\n          for (var n in this.endResult)\r\n          {\r\n                var value=this.endResult[n][key];\r\n                if (value!=null)\r\n                {\r\n                    var d = new Date(value);\r\n                    this.endResult[n][key]=d.getTime();\r\n                }\r\n          }\r\n  }\r\n  addSimpleIntegerID(key)\r\n  {\r\n    var nn=0;\r\n    for (var n in this.endResult)\r\n      {\r\n        nn++;\r\n            var value=this.endResult[n];\r\n            value[key]=nn;\r\n      }\r\n  }\r\n\r\n\r\n  \r\n\r\n  getSimplifiedArrayUsingObjectID(id) {\r\n    var ar=[]\r\n    var key_object={};\r\n      this._result.results.bindings.map(binding => {\r\n        try\r\n        {\r\n       var id2=binding[id].value;\r\n       var value=key_object[id2];\r\n         if (value==null)\r\n         {\r\n             value={}\r\n             key_object[id2]=value;\r\n             ar.push(value);\r\n         }\r\n      \r\n       for (const key in binding) {\r\n         value[key] = binding[key].value;\r\n         \r\n       }\r\n    }\r\n    catch(e)\r\n    {\r\n        console.log(\"geen id gevonden\",id,this._result);\r\n    }\r\n      \r\n       \r\n     });\r\n     this.endResult=ar;\r\n     return ar;\r\n   }\r\n\r\n\r\n}\r\n","import './bbutil'\r\nimport BBIFrame from './BBIFrame';\r\nimport SparqlResultParser from \"./SparqlResultParser\";\r\nimport Command from '../../../helpers/Command';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport PublishUtils from '../../../helpers/PublishUtils';\r\n\r\n\r\n\r\n\r\nclass BBGanttChart extends BBIFrame{\r\n  \r\n \r\n  getUrl = () => `/${window.bbFolderName}/static/iframes/ganttchart2/gantt.html`\r\n\r\n\r\n  constructor() {\r\n    super()\r\n\r\n    this.scrolling = 'no';\r\n    this.noEvents = false;\r\n    this.usesParameters=false;\r\n  }\r\n\r\n\r\n\r\n  getTasksFromData()\r\n   {\r\n    this.tasks={tasks:[],\"selectedRow\": 2, \"deletedTaskIds\": [],\r\n        \"resources\": [\r\n        {\"id\": \"tmp_1\", \"name\": \"Resource 1\"},\r\n        {\"id\": \"tmp_2\", \"name\": \"Resource 2\"},\r\n        {\"id\": \"tmp_3\", \"name\": \"Resource 3\"},\r\n        {\"id\": \"tmp_4\", \"name\": \"Resource 4\"}\r\n      ],\r\n        \"roles\":       [\r\n        {\"id\": \"tmp_1\", \"name\": \"Project Manager\"},\r\n        {\"id\": \"tmp_2\", \"name\": \"Worker\"},\r\n        {\"id\": \"tmp_3\", \"name\": \"Stakeholder\"},\r\n        {\"id\": \"tmp_4\", \"name\": \"Customer\"}\r\n      ], \"canWrite\":    true, \"canDelete\":true, \"canWriteOnParent\": true, canAdd:true};\r\n\r\n    let data = this.props.data;\r\n    var srp =new SparqlResultParser(data);\r\n    if (srp.isOK())\r\n    {\r\n     \r\n       srp.getSimplifiedArrayUsingObjectID(\"id\");\r\n       srp.dateToLong(\"start\");\r\n       srp.dateToLong(\"end\");\r\n       srp.addSimpleIntegerID(\"id\");\r\n       this.tasks.tasks=srp.endResult;\r\n       \r\n    }\r\n\r\n    return this.tasks;\r\n   }\r\n\r\n\r\n\r\n  //  taskClick(task)\r\n  //  {\r\n  //   if (task!=null)\r\n  //   {\r\n  //     if (task.id!=null)\r\n  //     {\r\n  //       this.props.publish(\"task\",task.id);\r\n  //     }\r\n       \r\n  //   }\r\n     \r\n  //  }  \r\n   generateUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        let r = Math.random() * 16 | 0, // Generate random number (0-15)\r\n            v = c === 'x' ? r : (r & 0x3 | 0x8); // Set bits for version and variant\r\n        return v.toString(16);\r\n    });\r\n}\r\n  convertSaveData(data)\r\n  {\r\n    let dataToSend = [];\r\n    if (data.tasks != null) {\r\n      data.tasks.map(task => {\r\n        if (task.uri\t== null) {\r\n          task.uri = \"http://wistor.nl/planning#\"+this.generateUUID();\r\n        }\r\n        if (task.graph\t== null) {\r\n          var graph=null;\r\n          data.tasks.map(task2 => {\r\n            if (task2.graph!=null)graph=task2.graph;\r\n          });\r\n\r\n          task.graph =graph;\r\n        }\r\n        var o1={uri:task.uri,propuri:\"http://wistor.nl/planning#endDate\",graph:task.graph,valuetype:\"http://www.w3.org/2001/XMLSchema#dateTime\"}\r\n        dataToSend.push(o1);\r\n        var o2={uri:task.uri,propuri:\"http://wistor.nl/planning#beginDate\",graph:task.graph,valuetype:\"http://www.w3.org/2001/XMLSchema#dateTime\"}\r\n        dataToSend.push(o2);\r\n        var o3={uri:task.uri,propuri:\"http://www.w3.org/2000/01/rdf-schema#label\",graph:task.graph,value:\"\\\"no name\\\"\",valuetype:\"http://www.w3.org/2001/XMLSchema#string\"}\r\n        dataToSend.push(o3);\r\n         var o4={uri:task.uri,propuri:\"http://wistor.nl/planning#code\",graph:task.graph,value:\"\\\"\\\"\",valuetype:\"http://www.w3.org/2001/XMLSchema#string\"}\r\n         dataToSend.push(o4);\r\n        if (task.start != null) {\r\n          o2.value = new Date(task.start).toISOString();\r\n        \r\n        }\r\n        if (task.end != null) {\r\n          o1.value =new Date(task.end).toISOString();\r\n        }\r\n        if (task.name != null) {\r\n          o3.value =task.name;\r\n        }\r\n        if (task.code != null) {\r\n          o4.value = task.code;\r\n        }\r\n\r\n      })\r\n    }\r\n    return dataToSend\r\n  }\r\nsaveData(data)\r\n{\r\n \r\n\r\n  let dataToSend = {results:this.convertSaveData(data)};\r\n  //dataToSend.ruleTagAfterSubmitParameters\r\n  console.log(\"Saving on server\",data,dataToSend);\r\n  Command.sendCommand(this, 'formCommand', dataToSend, this.submitFormSuccesful, this.submitFormFailure)\r\n}\r\nsubmitFormSuccesful = () => {\r\n\r\n  PublishUtils.setTimeStampParameter(this, true)\r\n  if (this.props.successMessage) {\r\n    toast(this.props.successMessage)\r\n  }\r\n\r\n  //this.props.publish(\"ifc\",\"hallo\");\r\n  if (this.props.closePopup) {\r\n    try {\r\n      this.props.closeDialog()\r\n    } catch (e) {}\r\n  }\r\n}\r\nsubmitFormFailure = () => {\r\n  if (this.props.failureMessage != null) {\r\n    window.alert(this.props.failureMessage)\r\n  }\r\n}\r\n\r\n  \r\n\r\n  \r\n}\r\nexport default BBGanttChart\r\n"],"sourceRoot":""}