{"version":3,"sources":["components/widgets/ImageGallery/styles.module.css","components/widgets/ImageGallery/ImageGallery.tsx"],"names":["module","exports","ImageGallery","props","React","useState","status","state","setState","useEffect","data","results","bindings","length","sources","row","src_URL","type","console","error","JSON","stringify","push","value","srcURLS","triggerDeletionRule","srcURL","deletionRule","runStartRule","deletionRuleParamsJSON","fullscreenSrc","fullScreenButtons","label","onClick","Error","undefined","window","open","textLoading","textErrorLoading","textNoResults","className","mergeClasses","styles","style","columnCount","map","src","alt","loading","button"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,cAAc,4B,0MCoBjB,SAASC,EAAaC,GAAe,IAAD,MACjD,EAA0BC,IAAMC,SAAgB,CAACC,OAAQ,SAAQ,mBAA1DC,EAAK,KAAEC,EAAQ,KAEtBJ,IAAMK,WAAU,WACd,IAAKN,EAAMO,KACT,OAAOF,EAAS,CAACF,OAAQ,gBAE3B,IAAKH,EAAMO,KAAKC,QAAQC,SAASC,OAC/B,OAAOL,EAAS,CAACF,OAAQ,gBAG3B,IAC6C,EADvCQ,EAAoB,GAAE,cACVX,EAAMO,KAAKC,QAAQC,UAAQ,IAA7C,2BAA+C,CAAC,IAAD,EAApCG,EAAG,QACZ,GAA0B,aAAX,QAAX,EAAAA,EAAIC,eAAO,aAAX,EAAaC,MAEf,OADAC,QAAQC,MAAM,2CAAD,OAA8CC,KAAKC,UAAUN,KACnEP,EAAS,CAACF,OAAQ,0BAE3BQ,EAAQQ,KAAKP,EAAIC,QAAQO,MAC3B,CAAC,+BAED,OAAOf,EAAS,CAACF,OAAQ,kBAAmBkB,QAASV,GACvD,GAAG,CAACX,EAAMO,OAEV,IAAMe,EAAmB,iDAAG,WAAOC,GAAc,8EAC1CvB,EAAMwB,aAAa,CAAD,gDACvBC,YAAazB,EAAMwB,aAAcxB,EAAM0B,wBAAuB,2CAC/D,gBAHwB,sCAKnBC,EAAiC,oBAAjBvB,EAAMD,OAA+BC,EAAMuB,cAAgB,KAC3EC,EAAoBD,EACtB,CACE,CAACE,MAAO,qBAAsBC,QAAS,kBAAMzB,GAAS,SAAAD,GACpD,GAAqB,oBAAjBA,EAAMD,OAA8B,MAAM,IAAI4B,MAAM,QACnD,kCAAW3B,GAAK,IAAEuB,mBAAeK,GACxC,GAAE,GACF,CAACH,MAAO,oBAAqBC,QAAS,kBAAMR,EAAoBK,EAAc,GAC9E,CAACE,MAAO,iBAAkBC,QAAS,WAAQG,OAAOC,KAAKP,EAAe,IAExE,GAEJ,MAAqB,SAAjBvB,EAAMD,OACR,8BAAuB,QAAvB,EAAMH,EAAMmC,mBAAW,QAAI,eAER,0BAAjB/B,EAAMD,OACR,8BAA4B,QAA5B,EAAMH,EAAMoC,wBAAgB,QAAI,yCAEb,gBAAjBhC,EAAMD,OACR,8BAAyB,QAAzB,EAAMH,EAAMqC,qBAAa,QAAI,gCAG7B,sBAAKC,UAAU,yBAAwB,UAErC,qBAAKA,UAAWC,YAAaC,IAAO,eAAgB,0CAClDC,MAAO,CAAC,iBAAkBzC,EAAM0C,aAAoB,SACpDtC,EAAMiB,QAAQsB,KAAI,SAACC,GAAG,OAEtB,qBAAKN,UAAU,4FAA2F,SACxG,qBAAKA,UAAU,4FACbM,IAAKA,EAAKC,IAAI,GAAGC,QAAQ,OACzBhB,QAAS,kBAAMzB,GAAS,SAAAD,GACtB,GAAqB,oBAAjBA,EAAMD,OAA8B,MAAM,IAAI4B,MAAM,cACxD,OAAO,2BAAI3B,GAAK,IAAEuB,cAAeiB,GACnC,GAAE,KAEA,MAIPjB,GACC,sBAAKW,UAAU,mEAAkE,UAC/E,cAAC,IAAS,CAACM,IAAKjB,EAAekB,IAAI,GACjCP,UAAU,WAEZ,qBAAKA,UAAU,0BAAyB,SACrCV,EAAkBe,KAAI,SAAAI,GAAM,OAC3B,wBAAQT,UAAU,6BAChBR,QAASiB,EAAOjB,QAAQ,SACxBiB,EAAOlB,OAAe,WAOtC,C","file":"static/js/29.54af1aba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"custom-grid\":\"styles_custom-grid__KlpXy\"};","import React from 'react'\nimport {BaseWidgetProps, SparqlWidgetProps} from '../../../helpers/widget'\nimport { runStartRule } from '../../../helpers/run-start-rule'\n// @ts-ignore\nimport ImageZoom from 'react-image-zooom'\nimport styles from './styles.module.css'\nimport { mergeClasses } from '../../../helpers/styling'\n\ntype State = ({status: 'loaded-metadata'} & Metadata)\n           | {status: 'init'}\n           | {status: 'noncompliant-metadata'}\n           | {status: 'no-metadata'}\n\ntype Metadata = {srcURLS: string[], fullscreenSrc?: string}\n\ntype Props = BaseWidgetProps\n           & SparqlWidgetProps\n           & {deletionRule?: string, deletionRuleParamsJSON?: string}\n           & Record<'textLoading' | 'textNoResults' | 'textErrorLoading', string>\n           & {columnCount?: string}\n\nexport default function ImageGallery(props: Props) {\n  const [state, setState] = React.useState<State>({status: 'init'})\n\n  React.useEffect(() => {\n    if (!props.data) {\n      return setState({status: 'no-metadata'})\n    }\n    if (!props.data.results.bindings.length) {\n      return setState({status: 'no-metadata'})\n    }\n\n    const sources: string[] = []\n    for (const row of props.data.results.bindings) {\n      if (row.src_URL?.type !== 'literal') {\n        console.error(`the following row is missing \\`src_URL\\`: ${JSON.stringify(row)}`)\n        return setState({status: 'noncompliant-metadata'})\n      }\n      sources.push(row.src_URL.value)\n    }\n\n    return setState({status: 'loaded-metadata', srcURLS: sources})\n  }, [props.data])\n\n  const triggerDeletionRule = async (srcURL: string) => {\n    if (!props.deletionRule) return\n    runStartRule(props.deletionRule, props.deletionRuleParamsJSON)\n  }\n\n  const fullscreenSrc = state.status === 'loaded-metadata' ? state.fullscreenSrc : null\n  const fullScreenButtons = fullscreenSrc\n    ? [\n        {label: 'go back to gallery', onClick: () => setState(state => {\n          if (state.status !== 'loaded-metadata') throw new Error('oops')\n          else return {...state, fullscreenSrc: undefined}\n        }) },\n        {label: 'delete this image', onClick: () => triggerDeletionRule(fullscreenSrc)},\n        {label: 'download image', onClick: () => { window.open(fullscreenSrc) }}\n      ]\n    : []\n\n  if (state.status === 'init') return (\n    <div>{props.textLoading ?? 'loading...'}</div>)\n\n  if (state.status === 'noncompliant-metadata') return (\n    <div>{props.textErrorLoading ?? 'there was a problem loading the data'}</div>)\n\n  if (state.status === 'no-metadata') return (\n    <div>{props.textNoResults ?? 'there is nothing to display'}</div>)\n\n  return (\n    <div className=\"relative h-full w-full\">\n\n      <div className={mergeClasses(styles['custom-grid'], \"grid gap-4 overflow-auto w-full h-full\")}\n        style={{'--column-count': props.columnCount} as any}\n      >{state.srcURLS.map((src) => (\n\n        <div className=\"relative aspect-square rounded-xl border overflow-clip content-center bg-slate-200 shadow\">\n          <img className=\"cursor-pointer object-cover aspect-square m-auto hover:scale-105 ease-in-out duration-300\"\n            src={src} alt=\"\" loading=\"lazy\"\n            onClick={() => setState(state => {\n              if (state.status !== 'loaded-metadata') throw new Error('impossibru')\n              return {...state, fullscreenSrc: src}\n            })}\n          />\n        </div>\n\n      ))}</div>\n\n      {fullscreenSrc && (\n        <div className=\"flex flex-col absolute left-0 right-0 top-0 bottom-0 bg-gray-700\">\n          <ImageZoom src={fullscreenSrc} alt=\"\"\n            className=\"m-auto\"\n          />\n          <div className=\"flex flex-row gap-2 m-2\">\n            {fullScreenButtons.map(button => (\n              <button className=\"p-2 bg-blue-700 rounded-lg\"\n                onClick={button.onClick}\n              >{button.label}</button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"sourceRoot":""}