{"version":3,"sources":["components/widgets/bb/editor/BBDForm.module.css","components/widgets/bb/editor/BBDFormCreateAndAdd.jsx","components/widgets/bb/editor/BBDFormAddExisting.jsx","components/widgets/bb/editor/BBDFormRelationComponent.jsx","components/widgets/bb/editor/BBDFormBuilderFromLDResource.js","components/widgets/bb/editor/BBDFormMultiSelectComponent.tsx","components/widgets/bb/editor/create-result-json.ts","utils/create-random-hex-color.ts","utils/get-parent-for-popover.ts","components/widgets/bb/editor/BBDFormColorPickerComponent.tsx","components/widgets/bb/editor/BBDForm.jsx"],"names":["module","exports","BBDFormCreateAndAdd","x","ref","React","createRef","handleClose","e","current","remove","Dialog","open","onClose","PaperProps","sx","width","height","DialogTitle","DialogContent","DialogContentText","DialogActions","disableSpacing","gap","Button","variant","onClick","BBDFormAddExisting","refParent","props","input","selected","selectBoxChangeEvent","row","rows","target","checked","push","nn","uri","splice","handleSubmit","ar","value","Array","isArray","n","change","id","getTable","axios","CancelToken","query","decodeURIComponent","propuri","graph","window","top","results","data","bindings","o","binding","label","label2","includes","split","t","length","console","log","table","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","color","padding","Checkbox","disabled","inputProps","TableBody","map","onChange","renderMe","div","element","document","createElement","appendChild","ReactDOM","render","BBDFormRelationComponent","useRef","formOptions","useFormApi","getUriName","ts","useFieldApi","meta","dialog","no","title","mt","minWidth","align","startIcon","border","scope","prop","schema","hyperlinkPar","publish","hyperlink","className","styles","link","inlineblock","deleteClick","BBDFormBuilderFromLDResource","bbdform","this","Schema","filterOptions","createFilterOptions","SUPPORTED_FLEXIBLE_DATA_TYPES","Set","BBDFormMultiSelectComponent","form","valuesRef","setValues","updater","values","useFormMultiInputValue","dataType","type","isCreatable","has","optionValues","useMemo","option","options","find","availableOptions","presentValueSet","filter","opt","FormControl","fullWidth","Autocomplete","multiple","freeSolo","_","newValues","optionValue","renderTags","renderInput","params","TextField","margin","placeholder","name","InputLabelProps","shrink","filtered","inputValue","isExisting","some","onDragEnd","over","active","oldIdx","findIndex","v","newIdx","arrayMove","reorderValues","style","maxHeight","scrollbarWidth","fontFamily","role","items","sortable","Tooltip","RDF_LIST","determineValueType","fieldSchemaType","isValidUri","ONE_HEX_DIGIT_SPACE","NUMBER_OF_DIGITS","VALUE_SPACE","createRandomHexColor","randomColor","Math","floor","random","toString","repeat","getParentForPopover","triggerElement","defaultParent","body","error","closestModalRoot","closest","BBDFormColorPickerComponent","useState","setOpen","setColor","Popover","isOpen","positions","onClickOutside","containerClassName","parentElement","content","onFocus","currentTarget","InputProps","startAdornment","BBDForm","state","fields","componentTypes","TEXT_FIELD","validate","validatorTypes","REQUIRED","CHECKBOX","DATE_PICKER","SWITCH","SELECT","SLIDER","submitFormCommand","waardes","extra","masseditmode","uris","getAllUris","ooR","getResultJSON","oo","ruleTagAfterSubmit","parameters","PublishUtils","processStringForParameters","ruleTagAfterSubmitParameters","JSON","parse","Command","sendCommand","submitFormSuccesful","submitFormFailure","setTimeStampParameter","successMessage","toast","closePopup","closeDialog","failureMessage","alert","submitInternalParameters","result","key","waarde","publishMultipleValues","onSubmit","submit","componentMapper","relation","multiselect","colorpicker","pubsub","i","item_def","id_def","propsID","volgorde","aantal","encodeURIComponent","propUri","fieldIsArray","isMulti","isDisabled","required","Boolean","toLowerCase","hidden","hideField","addmodus","json","additionalJson","Object","assign","clearedValue","initialValue","defaultValue","ee","replace","PATTERN","pattern","message","datatype","inputMode","step","inputFormat","outputFormat","FIELD_ARRAY","TEXTAREA","optionLabel","noOptionsMessage","isClearable","isSearchable","simpleValue","decodeURI","collectionType","alreadyAvailable","datatype2","schemaById","formValuesById","fieldSchema","rawValue","valuetype","Date","toISOString","listValue","createResultJSON","createClass","cls","getCreateClass","classOrUri","getSchema","resource","processResource","createButton","emptyText","style2","cancelbutton","createClick","submitlabel","submitbuttonlabel","FormTemplate2","submitLabel","children","readonly","formFields","Grid","container","rowSpacing","LocalizationProvider","dateAdapter","AdapterDateFns","fallback","FormTemplate","onCancel","undefined","Component","ErrorBoundary","hasError","info","componentStack"],"mappings":"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","file":"static/js/37.4015f55b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"BBDForm_grid__2VcLy\",\"bbdform\":\"BBDForm_bbdform__2RjzR\"};","import React, { Component, Fragment,useRef } from 'react'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Button } from '@mui/material';\r\nimport ReactDOM from 'react-dom';\r\nconst BBDFormCreateAndAdd=(x)=>{\r\n\r\n    const ref =React.createRef()\r\n\r\n    const handleClose=(e)=>\r\n{\r\n   \r\n    ref.current.remove();\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n    return (<Dialog ref={ref} open={true} onClose={handleClose}\r\n        PaperProps={{ sx: { width: \"50%\", height: \"70%\" } }}\r\n      >\r\n        <DialogTitle>Create And Add</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>hier dus alle relaties in een selectable table </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions disableSpacing sx={{gap: '10px'}}>\r\n            <Button  variant=\"outlined\"  onClick={(e)=>handleClose(e)}>Cancel</Button>\r\n            <Button variant=\"outlined\"  onClick={handleClose}>Submit</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n      );\r\n\r\n\r\n}\r\n\r\n\r\nexport default BBDFormCreateAndAdd;","import React, { Component, Fragment,useRef } from 'react'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Button } from '@mui/material';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport axios from 'axios'\r\n\r\n\r\nconst BBDFormAddExisting=(refParent,props,x,input)=>{\r\n  \r\n    const ref =React.createRef()\r\n   \r\n    var selected=[];\r\n\r\nconst selectBoxChangeEvent=(e,row,rows)=>\r\n{\r\n    if (e.target.checked)\r\n    {\r\n             selected.push(row);\r\n    }\r\n    else\r\n    {\r\n       \r\n        for (var nn in selected)\r\n        {\r\n            var oo=selected[nn];\r\n            if (oo.uri===row.uri)\r\n            {\r\n                selected.splice(nn,1);\r\n                break;\r\n            }        \r\n\r\n        }\r\n        \r\n    }\r\n    //console.log(e.target.checked,row,rows);\r\n\r\n}\r\n\r\n const handleSubmit=(e)=>\r\n {\r\n  \r\n       var ar = [];\r\n       if ((input.value!=null) && (Array.isArray(input.value)) )\r\n       {\r\n         for (var n in input.value)\r\n         {\r\n            ar.push(input.value[n]);\r\n         }\r\n       }\r\n       for (var n in selected)\r\n       {\r\n        ar.push(selected[n]);\r\n       }\r\n     \r\n     x.change(props.id,ar);\r\n\r\n     handleClose();\r\n     \r\n }\r\n   const handleClose=(e)=>\r\n     {\r\n         ref.current.remove();\r\n     }\r\n     const CancelToken = axios.CancelToken\r\n\r\nconst delay=(time) =>{\r\n    return new Promise(resolve => setTimeout(resolve, time));\r\n  }\r\n\r\n\r\n\r\n const getTable=async()=>\r\n {\r\n  \r\n    var query=\"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>   select distinct ?uri ?label ?label2 where {graph ?g {<\"+decodeURIComponent(props.propuri)+\"> rdfs:range/^rdfs:subClassOf* ?cls } graph<\"+decodeURIComponent(props.graph)+\">{?uri a ?cls. optional {?uri rdfs:label ?label} optional {?uri skos:prefLabel ?label2}}}\";\r\n    var results= await window.top.query(query);\r\n    var rows=[];\r\n    try\r\n    {\r\n            for (var n in results.data.results.bindings)\r\n            {\r\n                var o={};\r\n                var binding = results.data.results.bindings[n];\r\n                o.value=binding.uri.value;\r\n                if (binding.label!=null) o.label=binding.label.value;\r\n                if ((o.label==null) && (binding.label2!=null)) o.label=binding.label2.value;\r\n                if (o.label==null)\r\n                {\r\n                    if (o.value.includes(\"#\")) { o.label=o.value.split(\"#\")[1]} else \r\n                    {\r\n                        var t=o.value.split(\"/\");\r\n                        o.label=t[t.length-1];\r\n                    }\r\n                }\r\n                rows.push(o);\r\n                \r\n            }\r\n    }\r\n    catch(e){console.log(e);}\r\n    \r\n       \r\n\r\n    var table= ( \r\n        <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n            <TableCell  color=\"primary\" padding=\"checkbox\">\r\n\r\n          <Checkbox\r\n             disabled={true}\r\n            inputProps={{\r\n              'aria-label': 'select all ',\r\n            }}\r\n          />\r\n        </TableCell>\r\n              <TableCell  color=\"primary\">name</TableCell>\r\n           {//   <TableCell   color=\"primary\" >uri</TableCell>\r\n           }\r\n              </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n\r\n            <TableRow\r\n              key={row.value}\r\n            \r\n            > <TableCell>\r\n                  <Checkbox onChange={(e)=>{selectBoxChangeEvent(e,row,rows)}}>\r\n                  \r\n                  </Checkbox>\r\n                  </TableCell>\r\n              <TableCell >\r\n                {row.label}\r\n              </TableCell>\r\n          {//  <TableCell >{row.value}</TableCell>\r\n          }\r\n             \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n    renderMe(table);\r\n \r\n }\r\n\r\n\r\n    const renderMe=(table)=>\r\n    {\r\n\r\n        var element= (<Dialog ref={ref} open={true} onClose={handleClose}\r\n        PaperProps={{ sx: { width: \"50%\", height: \"70%\" } }}\r\n      >\r\n        <DialogTitle>Add relations</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText></DialogContentText>\r\n           {table}\r\n        </DialogContent>\r\n        <DialogActions disableSpacing sx={{gap: '10px'}}>\r\n            <Button  variant=\"outlined\"  onClick={(e)=>handleClose(e)}>Cancel</Button>\r\n            <Button variant=\"outlined\"  onClick={handleSubmit}>Submit</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n      );\r\n\r\n      var div=React.createElement(\"div\");\r\n      div=document.createElement(\"div\")\r\n      refParent.current.appendChild(div);\r\n      ReactDOM.render(element,div);\r\n    }\r\n\r\n      var table = getTable();\r\n\r\n\r\n}\r\n\r\n\r\nexport default BBDFormAddExisting;","import React, { Component, Fragment,useRef } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/AddLink';\r\nimport CreateIcon from '@mui/icons-material/CreateRounded';\r\nimport Button from '@mui/material/Button';\r\nimport { useFieldApi, useFormApi } from '@data-driven-forms/react-form-renderer';\r\nimport FieldProvider from '@data-driven-forms/react-form-renderer/field-provider';\r\n\r\nimport  BBDFormCreateAndAdd from './BBDFormCreateAndAdd';\r\nimport BBDFormAddExisting from './BBDFormAddExisting';\r\nimport styles from '../../Table.module.css'\r\n\r\n\r\n\r\nconst BBDFormRelationComponent =(props) => \r\n{ \r\n    const ref =useRef(null);\r\n    const formOptions = useFormApi();\r\n\r\n    const addCreateAndAddClick =()=>\r\n    {\r\n      \r\n      const element = new BBDFormCreateAndAdd(props,ref);\r\n        var div=React.createElement(\"div\");\r\n        div=document.createElement(\"div\")\r\n        ref.current.appendChild(div);\r\n        ReactDOM.render(element,div);\r\n   }\r\n\r\n  const getUriName=(uri)=>\r\n  {\r\n    if (uri==null) return null;\r\n    if (uri.includes(\"#\")) return uri.split(\"#\")[1];\r\n    var ts=uri.split(\"/\");\r\n    return ts[ts.length-1];\r\n  }\r\n  const hyperlink=(uri)=>\r\n  {\r\n   \r\n    var prop = formOptions.schema.props.hyperlinkPar;\r\n    if (prop==null) return;\r\n       \r\n    window.top.publish(prop,uri);\r\n  }\r\n\r\n    const addExistingClick =()=>\r\n    {\r\n      \r\n         new BBDFormAddExisting(ref,props,x,input);\r\n       \r\n    }\r\n\r\n        const deleteClick=(uri)=>\r\n        {\r\n           \r\n            try\r\n            {\r\n                var ar=[];\r\n               for (var n in input.value)\r\n               {\r\n                if (input.value[n].uri===uri)\r\n                {\r\n                   \r\n                }\r\n                else\r\n                {\r\n                    ar.push(input.value[n]);\r\n                }\r\n               }\r\n             \r\n              x.change(props.id,ar);\r\n             \r\n            }\r\n            catch(e)\r\n            {\r\n                console.log(e);\r\n            }\r\n         \r\n\r\n\r\n           \r\n        }\r\n      //\r\n\r\n      const {input,meta} =useFieldApi(props);\r\n      const x=useFormApi(props);\r\n\r\n      meta.data.dialog=false;\r\n    \r\n      if ( (input.value==null) || (Array.isArray(input.value)==false) )\r\n      {\r\n       // input.value= [{uri:\"1\",label:\"label 1\"},{uri:\"2\",label:\"label 2\"},{uri:\"3\",label:\"label 3\"}];\r\n       input.value= [];\r\n      }\r\n      var ar=[];\r\n      for (var n in input.value)\r\n      {\r\n        var no= input.value[n];\r\n     \r\n        if (typeof no != \"object\")\r\n        {\r\n             ar.push({uri:no,label:getUriName(no)});\r\n        }\r\n        else\r\n        {\r\n          if ((no.label==null) || (no.label==\"\") )\r\n          {\r\n            no.label= getUriName(no.uri);\r\n          }\r\n          ar.push(no);\r\n        }\r\n      }\r\n       input.value=ar;\r\n\r\n      var title = props.label|| \"relations\" ;\r\n    \r\n          return (\r\n            <Fragment>\r\n          <div ref={ref}></div>\r\n           \r\n            <TableContainer sx={{ mt: 2 }} component={Paper}>\r\n              <Table sx={{ minWidth: 150 }} size=\"small\" aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>{title}</TableCell>\r\n                   \r\n                   <TableCell align=\"right\">\r\n                    <Button onClick={addExistingClick} size=\"small\" variant=\"outlined\" startIcon={<AddIcon />}>add existing</Button>\r\n                   <Button onClick={addCreateAndAddClick} size=\"small\" variant=\"outlined\" startIcon={<CreateIcon />}>create and add</Button>\r\n                   </TableCell>\r\n                   \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n               \r\n                  {input.value.map((row) => (\r\n                    <TableRow\r\n                      key={row.uri}\r\n                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                      <div onClick={() => hyperlink(row.uri)} className={styles.link + ' ' + \" \"+styles.inlineblock} >{row.label}</div>\r\n                        \r\n                      \r\n                      </TableCell>\r\n                    \r\n                      <TableCell align=\"right\"><Button size=\"small\" sx={{    \":hover\": {          color: \"blue\" } }} startIcon={<DeleteIcon />} onClick={() => deleteClick(row.uri)} ></Button></TableCell>\r\n                   \r\n                    </TableRow>\r\n                  ))}\r\n                 \r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            </Fragment>\r\n          );\r\n            \r\n\r\n    \r\n}\r\n\r\nexport default BBDFormRelationComponent;","import { Schema } from \"@mui/icons-material\";\r\n\r\nexport class BBDFormBuilderFromLDResource\r\n{\r\n   constructor(bbdform)\r\n   {\r\n    this.bbdform=bbdform;\r\n\r\n   }\r\n   processResource(uri)\r\n   {\r\n       console.log(\"is it a cls or uri \",uri);\r\n\r\n       var schema={};\r\n       return Schema;\r\n   }\r\n}","import React, { SetStateAction, useMemo, useRef } from \"react\";\nimport { useFieldApi, useFormApi } from \"@data-driven-forms/react-form-renderer\"\nimport { FormControl, TextField, Tooltip } from \"@mui/material\"\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\"\nimport { UseFieldApiConfig } from \"@data-driven-forms/react-form-renderer/use-field-api/use-field-api\"\nimport FormFieldGrid from \"@data-driven-forms/mui-component-mapper/form-field-grid/form-field-grid\"\nimport { Cross2Icon, DragHandleDots2Icon } from \"@radix-ui/react-icons\"\nimport { arrayMove, SortableContext } from \"@dnd-kit/sortable\"\nimport { Button } from \"../../../ui-primitives/button\"\nimport { DndContext, DragEndEvent } from \"@dnd-kit/core\"\nimport { SortableItem } from \"../../../sortable/sortable-item\"\nimport { FilterOptionsState } from \"@mui/base/useAutocomplete/useAutocomplete\"\n\nconst filterOptions = createFilterOptions<Option>();\n\ntype Option = {\n  label: string\n  value: string\n}\n\nconst SUPPORTED_FLEXIBLE_DATA_TYPES = new Set([\n  \"http://www.w3.org/2001/XMLSchema#string\"\n])\n\nexport function BBDFormMultiSelectComponent(props: UseFieldApiConfig & {\n  id: string\n  label: string\n  options: Option[]\n  type?: string | null\n  sortable?: boolean\n  collectionType?: string | null\n}) {\n  const { input } = useFieldApi(props)\n  const { values, setValues } = useFormMultiInputValue(props)\n\n  const dataType = props.type && decodeURIComponent(props.type)\n  const isCreatable = !!dataType && SUPPORTED_FLEXIBLE_DATA_TYPES.has(dataType)\n\n  const optionValues = useMemo(() => {\n    return values.map(value => {\n      const option = props.options.find(option => option.value === value)\n      return option ?? { value, label: value }\n    })\n  }, [ values, props.options ])\n\n  const availableOptions = useMemo(() => {\n    const presentValueSet = new Set(values)\n    return props.options.filter(opt => !presentValueSet.has(opt.value))\n  }, [ values, props.options ])\n\n  const reorderValues = (e: DragEndEvent) => {\n    if (!e.over) return\n    if (e.active.id === e.over.id) return\n    setValues(values => {\n      const oldIdx = values.findIndex(v => v === e.active.id)\n      const newIdx = values.findIndex(v => v === e.over!.id)\n      return arrayMove(values, oldIdx, newIdx)\n    })\n  }\n\n  const removeValue = (value: string) => {\n    setValues(values => values.filter(v => v !== value))\n  }\n\n  const handleInputChange = (_: React.SyntheticEvent, optionValues: (string | Option)[]) => {\n    const newValues: string[] = optionValues.map(optionValue => {\n      return typeof optionValue === \"string\" // creation: whenever user types and presses Enter\n        ? optionValue\n        : optionValue.value\n    })\n    setValues(newValues)\n  }\n\n  const creatableFilterOptions = (options: Option[], params: FilterOptionsState<Option>) => {\n    const filtered = filterOptions(options, params)\n    const { inputValue } = params\n\n    const isExisting = options.some((option) => inputValue === option.value)\n    if (inputValue !== '' && !isExisting) {\n      filtered.push({\n        value: inputValue,\n        label: `Add \"${inputValue}\" or press enter`\n      })\n    }\n\n    return filtered\n  }\n\n  return (\n    <FormFieldGrid>\n      <FormControl fullWidth>\n        <Autocomplete\n          options={availableOptions}\n          multiple\n          value={optionValues}\n          freeSolo={isCreatable}\n          onChange={handleInputChange}\n          renderTags={() => \"\"}\n          renderInput={params => (\n            <TextField margin=\"normal\"\n                       label={props.label}\n                       placeholder={isCreatable ? \"Search existing options or type new values to add\" : \"Search\"}\n                       name={input.name}\n                       {...params}\n                       InputLabelProps={{ shrink: true }} /* to always show the label AND placeholder */\n            />\n          )}\n          filterOptions={isCreatable ? creatableFilterOptions : filterOptions}\n        />\n\n        {values.length > 0 && (\n          <DndContext onDragEnd={(e) => reorderValues(e)}>\n            <div className=\"bg-stone-100 border border-slate-600 rounded flex flex-col overflow-y-auto\" style={{\n              maxHeight: \"200px\",\n              scrollbarWidth: \"thin\",\n              fontFamily: \"Roboto, sans-serif\"\n            }} role=\"list\">\n              <SortableContext items={values}>\n                {optionValues.map(optionValue => {\n                  return (\n                    <div key={optionValue.value}\n                         role=\"listitem\"\n                         aria-label={optionValue.label}\n                         className=\"w-full flex gap-1 py-1 pl-2 pr-1 text-xs align-items-center\">\n                      {props.sortable ? (\n                        <SortableItem\n                          id={optionValue.value}\n                          className=\"flex flex-grow gap-1 [&>svg]:hover:opacity-50\">\n                          <DragHandleDots2Icon className=\"opacity-25\" />\n                          <div className=\"flex-grow\">\n                            {optionValue.label}\n                          </div>\n                        </SortableItem>\n                      ) : (\n                        <div className=\"flex-grow\">\n                          {optionValue.label}\n                        </div>\n                      )}\n                      <div className=\"[&>button]:hover:opacity-100\">\n                        <Tooltip title=\"Delete\">\n                          <Button type=\"button\" variant=\"ghost\" className=\"opacity-50 w-5 h-5 p-0\" onClick={() => removeValue(optionValue.value)}>\n                            <Cross2Icon />\n                          </Button>\n                        </Tooltip>\n                      </div>\n                    </div>\n                  )\n                })}\n              </SortableContext>\n            </div>\n          </DndContext>\n        )}\n      </FormControl>\n    </FormFieldGrid>\n  )\n}\n\n/**\n * Hook to deal with tracking and updating the input selection array.\n * It handles some gnarly details with the interaction of MUI, data-driven-forms,\n * and <Autocomplete> with 'freeSolo' enabled.\n */\nfunction useFormMultiInputValue(props: UseFieldApiConfig) {\n  const form = useFormApi()\n  const { input } = useFieldApi(props)\n\n  // This ref is needed because the <Autocomplete> input value toggles between\n  // string and string[] types when 'freeSolo' is used.\n  // Whenever a new user-defined option is in draft, the string[] value is\n  // temporarily replaced by a bare string, and the currently selected options\n  // become unavailable...\n  const valuesRef = useRef<string[]>([])\n\n  const setValues = (updater: SetStateAction<string[]>) => {\n    if (typeof updater === \"function\") {\n      form.change(props.id, updater(valuesRef.current))\n    } else {\n      form.change(props.id, updater)\n    }\n  }\n\n  if (Array.isArray(input.value)) {\n    valuesRef.current = input.value\n  }\n\n  return {\n    values: valuesRef.current,\n    valuesRef: valuesRef,\n    setValues\n  }\n}\n","import { isValidUri } from \"../../../../utils/uri\"\n\nexport const RDF_LIST = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#List'\n\ntype ValueType = null | string | string[] | Date\n\ntype SchemaInfo = {\n  propuri: string\n  type: string\n  graph: string\n  uri: string\n  isMulti?: boolean\n  sortable?: boolean\n  addmodus?: boolean\n  collectionType?: typeof RDF_LIST\n}\n\ntype Result = {\n  propuri: string\n  valuetype?: string\n  graph: string\n  uri: string\n  addmodus?: boolean\n  value: string | string[] | null\n  collectionType?: typeof RDF_LIST\n}\n\nexport function createResultJSON(schemaById: Record<string, SchemaInfo>, formValuesById: Record<string, ValueType>) {\n  const results: Result[] = []\n\n  for (const key in formValuesById) {\n    const fieldSchema = schemaById[key]\n    if (!fieldSchema) continue\n\n    const rawValue = formValuesById[key]\n    const values = Array.isArray(rawValue)\n      ? (rawValue.length === 0 ? [ null ] : rawValue)\n      : [ rawValue ]\n\n    if (fieldSchema.collectionType === RDF_LIST) {\n      const listValue = Array.isArray(rawValue)\n        ? rawValue\n        : []\n      const result: Result = {\n        propuri: fieldSchema.propuri,\n        graph: fieldSchema.graph,\n        uri: fieldSchema.uri,\n        addmodus: fieldSchema.addmodus,\n        value: listValue,\n        collectionType: fieldSchema.collectionType\n      }\n\n      result.valuetype = determineValueType(fieldSchema.type)\n\n      results.push(result)\n      continue\n    }\n\n    for (const value of values) {\n      const result: Result = {\n        propuri: fieldSchema.propuri,\n        graph: fieldSchema.graph,\n        uri: fieldSchema.uri,\n        addmodus: fieldSchema.addmodus,\n        value: null\n      }\n\n      result.valuetype = determineValueType(fieldSchema.type)\n\n      const assumeValueIsUri = typeof value === \"string\"\n        && (fieldSchema.type === \"select\" || fieldSchema.type === \"uri\")\n\n      if (assumeValueIsUri) {\n        result.value = value\n        delete result.valuetype\n      } else if (value instanceof Date) {\n        result.value = value.toISOString()\n      } else  {\n        result.value = value == null ? null : encodeURIComponent(value)\n      }\n\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\nfunction determineValueType(fieldSchemaType: string) {\n  if (isValidUri(decodeURIComponent(fieldSchemaType))) {\n    return fieldSchemaType\n  } else if (fieldSchemaType === \"colorhex\") {\n    return \"http://www.w3.org/1999/02/22-rdf-syntax-ns#string\"\n  } else {\n    return undefined\n  }\n}\n","const ONE_HEX_DIGIT_SPACE = 16\r\nconst NUMBER_OF_DIGITS = 6\r\nconst VALUE_SPACE = ONE_HEX_DIGIT_SPACE ** NUMBER_OF_DIGITS\r\n\r\nexport function createRandomHexColor() {\r\n  const randomColor = Math.floor(Math.random() * (VALUE_SPACE - 1)).toString(ONE_HEX_DIGIT_SPACE)\r\n  return \"#\" + \"0\".repeat(NUMBER_OF_DIGITS - randomColor.length) + randomColor\r\n}\r\n","/**\r\n * Provides the best appropriate parent element for a popover.\r\n * This helps resolve z-index issues by preventing the situation where the popover is rendered behind a modal\r\n */\r\nexport function getParentForPopover(triggerElement: HTMLElement | null, defaultParent = document.body): HTMLElement {\r\n  if (!triggerElement) {\r\n    console.error('Trigger element is null, you probably need to use forwardRef or bind it to a default HTML element or non-functional component')\r\n    return defaultParent\r\n  }\r\n\r\n  const closestModalRoot = triggerElement.closest('.MuiDialog-container') as HTMLElement | null\r\n  if (closestModalRoot) return closestModalRoot\r\n  return defaultParent\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useFieldApi, useFormApi } from \"@data-driven-forms/react-form-renderer\"\r\nimport { UseFieldApiConfig } from \"@data-driven-forms/react-form-renderer/use-field-api/use-field-api\"\r\nimport { HexColorPicker } from \"react-colorful\"\r\nimport FormFieldGrid from \"@data-driven-forms/mui-component-mapper/form-field-grid/form-field-grid\"\r\nimport { FormControl, TextField } from \"@mui/material\"\r\nimport { Popover } from 'react-tiny-popover'\r\nimport { getParentForPopover } from '../../../../utils/get-parent-for-popover'\r\n\r\nexport function BBDFormColorPickerComponent(props: UseFieldApiConfig & {\r\n  id: string\r\n  label: string\r\n}) {\r\n  const ref = useRef(null)\r\n  const form = useFormApi()\r\n  const { input } = useFieldApi(props)\r\n\r\n  const [ open, setOpen ] = useState(false)\r\n\r\n  const setColor = (color: string) => {\r\n    form.change(props.id, color)\r\n  }\r\n\r\n  return (\r\n    <FormFieldGrid className=\"position-relative\">\r\n      <Popover\r\n        isOpen={open}\r\n        positions={['bottom', 'top']}\r\n        align=\"start\"\r\n        onClickOutside={() => setOpen(false)}\r\n        containerClassName=\"z-10 shadow-lg\"\r\n        parentElement={getParentForPopover(ref.current)}\r\n        content={() => (\r\n          <HexColorPicker color={input.value} onChange={setColor} />\r\n        )}\r\n      >\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            ref={ref}\r\n            onFocus={() => setOpen(true)}\r\n            label={props.label}\r\n            value={input.value}\r\n            onChange={e => setColor(e.currentTarget.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <div className=\"mr-2\" onClick={() => setOpen(true)}>\r\n                  <div className=\"w-6 h-6 rounded-full\" style={{ 'backgroundColor': input.value }} />\r\n                </div>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </Popover>\r\n    </FormFieldGrid>\r\n  )\r\n}","import React, { Component } from 'react'\n\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'\n\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer'\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types'\n\nimport FormTemplate from '@data-driven-forms/mui-component-mapper/form-template'\n\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types'\n\nimport componentMapper from '@data-driven-forms/mui-component-mapper/component-mapper'\nimport Grid from '@mui/material/Grid'\n\nimport styles from './BBDForm.module.css'\nimport './BBDForm.module.css'\nimport Command from '../../../../helpers/Command'\nimport PublishUtils from '../../../../helpers/PublishUtils'\nimport BBDFormRelationComponent from './BBDFormRelationComponent'\nimport { Button } from '@mui/material'\nimport { BBDFormBuilderFromLDResource } from './BBDFormBuilderFromLDResource'\nimport { BBDFormMultiSelectComponent } from './BBDFormMultiSelectComponent'\nimport { createResultJSON, RDF_LIST } from './create-result-json'\nimport { toast } from 'react-toastify'\nimport { createRandomHexColor } from '../../../../utils/create-random-hex-color'\nimport { BBDFormColorPickerComponent } from './BBDFormColorPickerComponent'\n\nexport default class BBDForm extends Component {\n  state = {\n    schema: {\n      fields: [\n        {\n          component: componentTypes.TEXT_FIELD,\n          name: 'voornaam',\n          label: 'voornaam',\n          validate: [{ type: validatorTypes.REQUIRED }],\n        },\n\n        {\n          component: componentTypes.CHECKBOX,\n          name: 'adres2',\n          label: 'adres of zoiets v22',\n        },\n        {\n          component: componentTypes.DATE_PICKER,\n          name: 'datepicker',\n          label: 'datum of zoiets',\n        },\n        {\n          component: componentTypes.SWITCH,\n          name: 'iets3',\n          label: 'datum of zoiets',\n        },\n        {\n          component: componentTypes.SELECT,\n          name: 'iets34',\n          label: 'datum of zoiets',\n          options: [\n            {\n              label: 'Dogs',\n              value: '1',\n            },\n            {\n              label: 'Cats',\n              value: '2',\n            },\n            {\n              label: 'Hamsters',\n              value: '3',\n            },\n          ],\n        },\n        {\n          component: componentTypes.SLIDER,\n          name: 'iets35',\n          label: 'datum of zoiets',\n        },\n      ],\n    },\n  }\n\n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n    componentMapper.relation = BBDFormRelationComponent\n    componentMapper.multiselect = BBDFormMultiSelectComponent\n    componentMapper.colorpicker = BBDFormColorPickerComponent\n\n    window.top.publish = props.publish\n    window.top.pubsub = props.pubsub\n    this.BBDFormBuilderFromLDResource = new BBDFormBuilderFromLDResource(this)\n  }\n\n  getAllUris() {\n    let oo = {}\n    for (let i in this.props.data.results.bindings) {\n      let binding = this.props.data.results.bindings[i]\n      let value = binding.uri.value\n      oo[value] = value\n    }\n    return oo\n  }\n\n  getSchema() {\n    try {\n      let schema = { fields: [] }\n      if (this.props.data == null) {\n        return null\n      }\n\n      let item_def = {}\n      let id_def = {}\n      this.id_def = id_def\n      schema.props = item_def\n      schema.propsID = id_def\n      let volgorde = []\n      let aantal = 0\n      for (let i in this.props.data.results.bindings) {\n        let binding = this.props.data.results.bindings[i]\n        let uri = encodeURIComponent(binding.uri.value) // testing\n        let propuri = encodeURIComponent(binding.propUri.value)\n        let o = item_def[uri + '_' + propuri]\n        if (this.props.masseditmode) o = item_def[propuri]\n\n        let label = binding.label.value\n        aantal++\n\n        const fieldIsArray =\n          binding.isMulti?.value === 'true' || binding.type?.value === 'uri' || binding.type?.value === 'relation'\n\n        if (o == null) {\n          let id = aantal + 'id' + volgorde.length\n          o = { id: id, validate: [] }\n          o.propuri = propuri\n          //\n          if (this.props.masseditmode) {\n            item_def[propuri] = o\n          } else {\n            item_def[uri + '_' + propuri] = o\n          }\n          volgorde.push(o)\n          o.isDisabled = false\n\n          try {\n            o.graph = encodeURIComponent(binding.graph.value)\n          } catch (e) {}\n          try {\n            o.uri = encodeURIComponent(binding.uri.value)\n          } catch (e) {}\n          try {\n            o.type = encodeURIComponent(binding.type.value)\n          } catch (e) {}\n\n          if (binding.required != null) {\n            try {\n              let b = Boolean(JSON.parse(binding.required.value.toLowerCase()))\n\n              if (b) o.validate.push({ type: validatorTypes.REQUIRED })\n            } catch (e) {}\n          }\n\n          if (binding.disabled != null) {\n            o.isDisabled = Boolean(JSON.parse(binding.disabled.value.toLowerCase()))\n          }\n          if (binding.hidden != null) {\n            o.hideField = Boolean(JSON.parse(binding.hidden.value.toLowerCase()))\n          }\n          if (binding.addmodus != null) {\n            o.addmodus = Boolean(JSON.parse(binding.addmodus.value.toLowerCase()))\n          }\n          if (binding.json != null) {\n            try {\n              let additionalJson = JSON.parse(binding.json.value)\n              Object.assign(o, additionalJson)\n            } catch (e) {\n              console.error(e)\n            }\n          }\n\n          id_def[id] = o\n          o.propuri = propuri\n\n          //   console.log(componentTypes);\n\n          o.name = id\n          o.label = label\n          try {\n            o.clearedValue = null\n            o.initialValue = null\n            o.defaultValue = null\n\n            o.initialValue = fieldIsArray ? [binding.value.value] : binding.value.value\n          } catch (ee) {}\n\n          let component = componentTypes.TEXT_FIELD\n\n          if (binding.type != null) {\n            let type = ''\n            try {\n              type = binding.type.value\n\n              // type=decodeURIComponent(type);\n\n              type = type.replace('http://www.w3.org/2001/XMLSchema#', '')\n\n              if (type === 'int' || type === 'integer') {\n                component = componentTypes.TEXT_FIELD\n                o.validate.push({\n                  type: validatorTypes.PATTERN,\n                  pattern: '^-?\\\\d+$',\n                  message: 'Please enter a valid integer.'\n                })\n                o.datatype = 'integer'\n                o.inputProps = {\n                  type: 'number',\n                  inputMode: 'numeric'\n                }\n              }\n              if (type === 'float' || type === 'decimal') {\n                component = componentTypes.TEXT_FIELD\n                o.validate.push({\n                  type: validatorTypes.PATTERN,\n                  pattern: '^-?\\\\d*(\\\\.\\\\d+)?$',\n                  message: 'Please enter a valid decimal number.'\n                })\n                o.datatype = 'number'\n                o.inputProps = {\n                  type: 'number',\n                  inputMode: 'decimal',\n                  step: 'any'\n                }\n              }\n\n              if (type === 'boolean') {\n                component = componentTypes.CHECKBOX\n                try {\n                  o.initialValue = Boolean(JSON.parse(binding.value.value.toLowerCase()))\n                } catch (e) {}\n              }\n\n              if (type === 'colorhex') {\n                component = 'colorpicker'\n                if (binding.value?.value === 'random') {\n                  o.initialValue = createRandomHexColor()\n                }\n              }\n\n              if (type === 'date') {\n                o.variant = 'date'\n                component = componentTypes.DATE_PICKER\n                o.inputFormat = 'L'\n                o.outputFormat = 'L'\n              }\n              if (type === 'dateTime') {\n                component = componentTypes.DATE_PICKER\n              }\n              if (type === 'uri' || type === 'relation') {\n                component = 'relation'\n                if (binding.value != null) {\n                  o.initialValue = [binding.value.value]\n                }\n              }\n\n              if (type === 'stringlist') {\n                component = componentTypes.FIELD_ARRAY\n                o.fields = [{ component: componentTypes.TEXT_FIELD, label: 'label' }]\n              }\n\n              if (type === 'textarea') {\n                o.datatype = 'string'\n                o.type = 'http://www.w3.org/2001/XMLSchema#string'\n                component = componentTypes.TEXTAREA\n              }\n\n              //  o.dataType=type\n            } catch (ee) {\n              console.log(ee)\n            }\n          }\n          // console.log(\"component\",component);\n          o.component = component\n        } else {\n          if (binding.type != null) {\n            try {\n              const value = binding.value.value\n\n              if (fieldIsArray) {\n                if (!o.initialValue.includes(value)) {\n                  o.initialValue.push(value)\n                }\n              } else {\n                o.initialValue = value\n              }\n            } catch (e) {\n              console.log(e)\n            }\n          }\n        } //else\n\n        //select types\n        try {\n          let option = binding.optionLabel.value // triggers error when not available\n          o.noOptionsMessage = 'no options found'\n          if (o.options == null) {\n            o.options = []\n            o.component = 'select'\n            o.isClearable = true\n            o.isSearchable = true\n            o.simpleValue = true\n          }\n\n          if (binding.isMulti?.value === 'true') {\n            o.component = 'multiselect'\n            o.isMulti = true\n            o.sortable = binding.sortable?.value === 'true'\n            if (decodeURI(binding.collectionType?.value) === RDF_LIST) {\n              o.sortable = true\n              o.collectionType = RDF_LIST\n            }\n          }\n\n          if (binding.optionValue == null) {\n            let alreadyAvailable = false\n            for (let no in o.options) {\n              let oo = o.options[no]\n              if (oo.value === option) alreadyAvailable = true\n            }\n            if (!alreadyAvailable) {\n              o.options.push({ label: option, value: option })\n              o.dataType = 'string'\n              o.datatype2 = 'string' // case sensitive\n            }\n          } else {\n            o.dataType = 'string'\n            try {\n              if (binding.optionValue.type !== 'literal') {\n                o.dataType = 'string'\n                o.datatype2 = 'uri'\n              }\n            } catch (e) {}\n\n            const optionValue = binding.optionValue.value\n\n            let alreadyAvailable = false\n            for (let no in o.options) {\n              let oo = o.options[no]\n              if (oo.value === optionValue) alreadyAvailable = true\n            }\n            if (!alreadyAvailable) {\n              o.options.push({ label: option, value: optionValue })\n            }\n          }\n        } catch (error) {}\n\n        if (o.options == null) {\n          //datatype\n        }\n        // console.log(o)\n        if (this.props.masseditmode) {\n          o.value = null\n        }\n      } // binding\n\n      // console.log(binding,propUri);\n\n      schema.volgorde = volgorde\n      schema.fields = volgorde\n      schema.props = this.props\n      //this.setState({schema:schema});\n      return schema\n    } catch (e) {\n      //  console.log(e);\n    }\n    return null\n  }\n\n  getResultJSON(waardes) {\n    return createResultJSON(this.id_def, waardes)\n  }\n\n  submitFormCommand = (waardes, extra) => {\n    let ar = []\n\n    if (this.props.masseditmode) {\n      let uris = this.getAllUris()\n      for (let n in uris) {\n        let uri = uris[n]\n\n        let ooR = this.getResultJSON(waardes)\n        for (let n in ooR) {\n          let oo = ooR[n]\n          oo.uri = uri\n          ar.push(oo)\n        }\n      }\n    } else {\n      ar = this.getResultJSON(waardes)\n    }\n\n    let results = { results: ar }\n\n    if (this.props.ruleTagAfterSubmit != null) {\n      results.ruleTagAfterSubmit = this.props.ruleTagAfterSubmit\n      let parameters = this.props.parameters\n\n      if (parameters != null) {\n        try {\n          parameters = PublishUtils.processStringForParameters(this, parameters)\n          results.ruleTagAfterSubmitParameters = JSON.parse(parameters)\n        } catch (e) {\n          console.log('cannot set parameters for rule execution ', this.props.parameters)\n        }\n      }\n    }\n\n    Command.sendCommand(this, 'formCommand', results, this.submitFormSuccesful, this.submitFormFailure)\n  }\n  submitFormSuccesful = () => {\n    PublishUtils.setTimeStampParameter(this, true)\n    if (this.props.successMessage) {\n      toast(this.props.successMessage)\n    }\n\n    //this.props.publish(\"ifc\",\"hallo\");\n    if (this.props.closePopup) {\n      try {\n        this.props.closeDialog()\n      } catch (e) {}\n    }\n  }\n  submitFormFailure = () => {\n    if (this.props.failureMessage != null) {\n      window.alert(this.props.failureMessage)\n    }\n  }\n\n  submitInternalParameters = (values) => {\n    try {\n      let waardes = this.getResultJSON(values)\n\n      let result = {}\n      for (let key in waardes) {\n        let waarde = waardes[key]\n\n        let parameter = decodeURIComponent(waarde.propuri)\n        result[parameter] = decodeURIComponent(waarde.value)\n      }\n\n      // console.log(result)\n      this.props.publishMultipleValues(result)\n      // use multi publish?true\n      if (false) {\n        for (let id in waardes) {\n          this.props.publish(id, waardes[id])\n          // console.log('submitting internal values ', id, waardes[id])\n        }\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  onSubmit = (waardes, extra) => {\n    try {\n      if (this.props.submit === 'internalparameters') {\n        this.submitInternalParameters(waardes)\n        return\n      }\n\n      if (this.props.submit === 'formCommand') {\n        // console.log(waardes,iets);\n        this.submitFormCommand(waardes, extra)\n\n        return\n      }\n      if (this.props.submit === 'javascript') {\n        console.log(waardes)\n      }\n    } catch (e) {}\n  }\n\n  getCreateClass() {\n    let createClass = null\n\n    try {\n      //console.log(this.props.data.results.bindings);\n      for (let i in this.props.data.results.bindings) {\n        let binding = this.props.data.results.bindings[i]\n\n        createClass = binding.createClass.value\n        return createClass\n      }\n    } catch (e) {\n      //  console.log(e)\n    }\n    // console.log(createClass);\n    return createClass\n  }\n\n  createClick() {\n    let cls = this.getCreateClass()\n    console.log('create not yet implemented', cls)\n\n    // this.submitFormCommand(waardes);\n  }\n\n  render() {\n    if (this.props.data == null && this.props.classOrUri == null) return null\n\n    let schema\n    if (this.props.data != null) {\n      schema = this.getSchema()\n    } else {\n      let resource = PublishUtils.processStringForParameters(this, this.props.classOrUri)\n      schema = this.BBDFormBuilderFromLDResource.processResource(resource)\n    }\n    let createClass = this.getCreateClass()\n    let createButton = false\n    if (createClass != null) createButton = true\n    ///console.log(createClass,createButton);\n\n    if (createButton === false && schema == null && this.props.emptyText != null && this.props.emptyText !== '') {\n      return (\n        <div style2=\"padding: 35px;\">\n          <p>{this.props.emptyText}</p>\n        </div>\n      )\n    }\n\n    let cancelbutton = this.props.cancelbutton\n    if (cancelbutton == null) {\n      cancelbutton = false\n    }\n\n    //let schema = this.state.schema;\n    if (schema == null) {\n      if (createButton === true) {\n        return (\n          <Button color=\"grey\" onClick={this.createClick}>\n            create{' '}\n          </Button>\n        )\n      } else {\n        return null\n      }\n    }\n    let submitlabel = this.props.submitbuttonlabel\n    if (submitlabel == null || submitlabel === '') {\n      submitlabel = 'submit'\n    }\n    const FormTemplate4 = (props, schema) => {\n      return (\n        <FormTemplate {...props} submitLabel={submitlabel}>\n          {props.children}\n        </FormTemplate>\n      )\n    }\n\n    let FormTemplateReadOnly = ({ formFields, schema }) => {\n      return (\n        <Grid container rowSpacing={3}>\n          {formFields}\n        </Grid>\n      )\n    }\n\n    let FormTemplate2 = FormTemplate4\n\n    if (this.props.readonly) FormTemplate2 = FormTemplateReadOnly\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <div className={styles.bbdform}>\n          {this.props.title && <div className={styles.title}>{this.props.title}</div>}\n\n          <ErrorBoundary fallback={<p>Invalid JSON was entered.\n            Hint: There should be a console error with more detail to debug what went wrong.</p>}>\n            <FormRenderer // ref={this.ref}\n              schema={schema}\n              componentMapper={componentMapper}\n              FormTemplate={FormTemplate2}\n              onSubmit={this.onSubmit}\n              onCancel={cancelbutton ? this.onCancel : undefined}\n            />\n          </ErrorBoundary>\n        </div>\n      </LocalizationProvider>\n    )\n  }\n}\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    console.error(error)\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error, info.componentStack)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.fallback\n    }\n\n    return this.props.children\n  }\n}\n"],"sourceRoot":""}