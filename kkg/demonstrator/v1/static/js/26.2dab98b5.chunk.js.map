{"version":3,"sources":["components/ui-primitives/table.tsx","components/ui-primitives/dropdown-menu.tsx","components/ui-primitives/checkbox.tsx","components/ui-primitives/select.tsx","components/widgets/TablePlusPlus/filters/boolean-filter.tsx","components/widgets/TablePlusPlus/filters/date-range-filter.tsx","components/widgets/TablePlusPlus/filters/registry.ts","components/widgets/TablePlusPlus/filters/advanced-string-filter.tsx","components/widgets/TablePlusPlus/filters/number-range-filter.tsx","components/widgets/TablePlusPlus/FilterPopover.tsx","components/DynamicIcon.tsx","components/widgets/TablePlusPlus/columns/data-column.tsx","components/widgets/TablePlusPlus/columns/tool-buttons-column.tsx","components/widgets/TablePlusPlus/parse-table-widget-data.ts","components/ui-primitives/pagination.tsx","components/widgets/TablePlusPlus/TablePlusPlus.tsx","hooks/use-force-update.ts","hooks/use-dependent-state.ts"],"names":["Table","React","ref","className","props","mergeClasses","displayName","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableColGroup","TableCol","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","children","DropdownMenuContent","sideOffset","DropdownMenuItem","DropdownMenuCheckboxItem","checked","DropdownMenuLabel","DropdownMenuSeparator","Checkbox","CheckboxPrimitive","Select","SelectPrimitive","SelectGroup","SelectValue","SelectTrigger","cn","asChild","SelectScrollUpButton","SelectScrollDownButton","SelectContent","position","SelectLabel","SelectItem","parseBool","str","DateInput","date","setDate","min","max","otherProps","useState","formatDateIso","draftValue","setDraftValue","useEffect","parsedDate","parseDateIso","isDateValid","type","undefined","value","onChange","e","currentTarget","isDateBeforeOrEqual","dateToCompare","isDateEqual","isDateBefore","isDateAfterOrEqual","isDateAfter","parseISO","dateFormat","registry","filterFns","componentsByFilterFn","Map","filterFnNameByDataType","registerFilter","filter","name","filterFn","set","component","dataTypeUris","dataTypeUri","getFilterNameByDataType","XSD_STRING","get","foundFilterFnName","row","columnId","filterValue","addMeta","stringValue","String","getValue","normalizedStringValue","caseSensitive","toLowerCase","normalizedFilterValue","includes","startsWith","endsWith","inputRef","useRef","current","focus","select","onValueChange","setFilterValue","currentValue","placeholder","valueAsNumber","parseFloat","setFilterMin","setFilterMax","number","isNaN","valueAsDate","FilterPopover","open","setOpen","isFiltered","column","getFilterValue","onOpenChange","variant","size","clsx","align","role","columnDescription","label","id","onSubmit","preventDefault","FilterInputsSwitch","onClick","table","resetColumnFilters","getFilterFn","Component","getFilterInputsComponent","updater","DynamicIcon","loadedIcon","useQuery","queryKey","icon","color","queryFn","style","fontSize","Icon","importName","kebabToCamelCase","replace","allRadixIcons","RadixIcon","console","error","height","width","allMuiIcons","MuiIcon","isSuccess","data","kebabText","split","map","word","charAt","toUpperCase","slice","join","getSortingFnByDataType","rowA","rowB","parseBoolAsSortableNum","a","b","Date","getTime","localeCompare","dispatchAction","rowId","dataRows","action","rowIndex","parseInt","Error","dataRow","pubsub","getPubsub","resolvedValue","resolveTemplateStringAndLogErrors","publish","topic","runStartRule","startRule","parameters","JSON","stringify","timestampVariable","publishUtils","setTimeStampParameter","timestampParameters","parseTableWidgetData","config","columnConfig","Array","isArray","globalFilterColumnIds","idToFilterTextOf","Set","columnInfoByVarName","dataColumns","dataColumnsById","hiddenColumns","modifiersRows","columnModifiers","head","vars","varName","regexp","match","groups","modifier","getColumnInfo","push","columnKey","dataTypeSet","results","bindings","binding","add","getUniqueColumnDataTypeUri","columnIdx","findIndex","colDesc","dataColumn","title","accessorKey","header","disabled","getCanSort","toggleSorting","getCanMultiSort","getIsSorted","getCanFilter","cell","modifiers","index","valueString","ClickableValue","CellIcon","sortingFn","enableHiding","enableColumnFilter","filterable","enableSorting","sortable","usePubsub","uri","publishTopic","publishVariable","isUriSelected","href","url","target","rel","createDataColumn","hidden","enableGlobalFilter","has","modifiersRow","addModifier","alert","forEach","i","buttons","mutation","useMutation","mutationFn","actions","isPending","spin","btn","idx","stopPropagation","subBtn","mutate","createToolButtonsColumn","dataIds","Object","keys","warn","Pagination","PaginationContent","PaginationItem","PaginationLink","isActive","buttonVariants","PaginationPrevious","PaginationNext","PaginationEllipsis","TABLE_DATA_PLACEHOLDER","DEFAULT_COLUMN_WIDTH","TablePlusPlus","getRowValueToPublishOnSelection","variableToPublishOnSelection","publishLastSelectedRow","rowValue","lastSelectedRowTopic","tableData","selectionMode","unshift","SelectAllCheckbox","SelectRowCheckbox","onCheckedChange","toggleAllPageRowsSelected","getIsAllPageRowsSelected","getIsSomePageRowsSelected","getIsSelected","toggleSelected","createSelectionColumn","enableMockActions","RowAction","alertMock","createMockActionsColumn","useDependentState","prevPagination","pageIndex","pageSize","paginationPageSize","pagination","setPagination","sorting","setSorting","globalFilter","setGlobalFilter","columnFilters","setColumnFilters","columnVisibility","setColumnVisibility","actualColumnVisibility","trueVisibility","rowSelection","setRowSelection","useReactTable","columns","onPaginationChange","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","paginationEnabled","getSortedRowModel","getFilteredRowModel","onColumnVisibilityChange","onRowSelectionChange","state","enableMultiSort","selectedRowSubscriptionValue","selectedRowSubscription","selectedRowSubscriptionTimestamp","rowIdToSelect","getRowModel","rows","find","selectedRowsTopic","values","getSelectedRowModel","PublishUtils","getListAsSingleValue","multipleselectparametertype","tableFilters","showFilters","getAllColumns","getCanHide","getIsVisible","toggleVisibility","tableHeaderItems","hideColumnHeaders","getHeaderGroups","headerGroup","headers","isPlaceholder","flexRender","columnDef","getContext","tableRowItems","length","getVisibleCells","colSpan","tableFooter","getFilteredSelectedRowModel","totalPages","getPageCount","halfMaxPageNumbers","Math","floor","maxPageNumbers","startPage","endPage","pages","createPageButton","page","setPageIndex","previousPage","getCanPreviousPage","nextPage","getCanNextPage","renderTablePagination","columnCount","scrollbarWidth","useForceUpdate","useReducer","stateCreator","deps","forceUpdate","initialState","useMemo","stateRef","prevDeps","every","dep","is","depsAreEqual","updateState","useCallback","nextState"],"mappings":"mcAGMA,EAAQC,cAGZ,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACpB,mCACEF,IAAKA,EACLC,UAAWE,YAAa,gCAAiCF,IACrDC,GACJ,IAENJ,EAAMM,YAAc,QAEpB,IAAMC,EAAcN,cAGlB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,mCAAOF,IAAKA,EAAKC,UAAWE,YAAa,kBAAmBF,IAAgBC,GAAS,IAEvFG,EAAYD,YAAc,cAE1B,IAAME,EAAYP,cAGhB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,mCACEF,IAAKA,EACLC,UAAWE,YAAa,6BAA8BF,IAClDC,GACJ,IAEJI,EAAUF,YAAc,YAExB,IAAMG,EAAcR,cAGlB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,mCACEF,IAAKA,EACLC,UAAWE,YACT,0DACAF,IAEEC,GACJ,IAEJK,EAAYH,YAAc,cAE1B,IAAMI,EAAWT,cAGf,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,gCACEF,IAAKA,EACLC,UAAWE,YACT,+CACAF,IAEEC,GACJ,IAEJM,EAASJ,YAAc,WAEvB,IAAMK,EAAYV,cAGhB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,gCACEF,IAAKA,EACLC,UAAWE,YACT,4HACAF,IAEEC,GACJ,IAEJO,EAAUL,YAAc,YAExB,IAAMM,EAAYX,cAGhB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,gCACEF,IAAKA,EACLC,UAAWE,YACT,0EACAF,IAEEC,GACJ,IAEJQ,EAAUN,YAAc,YAEHL,cAGnB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,qCACEF,IAAKA,EACLC,UAAWE,YAAa,qCAAsCF,IAC1DC,GACJ,IAESE,YAAc,eAE3B,IAAMO,EAAgBZ,cAGpB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,sCAAUF,IAAKA,EAAKC,UAAWE,YAAaF,IAAgBC,GAAS,IAEvES,EAAcP,YAAc,gBAE5B,IAAMQ,EAAWb,cAGf,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,iCAAKF,IAAKA,EAAKC,UAAWE,YAAaF,IAAgBC,GAAS,IAElEU,EAASR,YAAc,W,cCzHX,gNAQNS,EAAeC,IAEfC,EAAsBD,IAEFA,IAECA,IAEHA,IAEOA,IAEAf,cAK7B,WAA2CC,GAAG,IAA3CC,EAAS,EAATA,UAAWe,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAaf,EAAK,wBACvC,eAAC,IAAgC,yBAC/BF,IAAKA,EACLC,UAAWE,YACT,uIACAa,GAAS,OACTf,IAEEC,GAAK,cAERe,EACD,cAAC,mBAAgB,CAAChB,UAAU,uBACK,IAEdG,YACrBU,IAAiCV,YAEJL,cAG7B,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,cAAC,IAAgC,aAC/BF,IAAKA,EACLC,UAAWE,YACT,wbACAF,IAEEC,GACJ,IAEmBE,YACrBU,IAAiCV,YAEnC,IAAMc,EAAsBnB,cAG1B,WAA0CC,GAAG,IAA1CC,EAAS,EAATA,UAAU,EAAD,EAAEkB,kBAAU,MAAG,EAAC,EAAKjB,EAAK,wBACtC,cAAC,IAA4B,UAC3B,cAAC,IAA6B,aAC5BF,IAAKA,EACLmB,WAAYA,EACZlB,UAAWE,YACT,uGACA,mVACAF,IAEEC,KAEuB,IAEjCgB,EAAoBd,YAAcU,IAA8BV,YAEhE,IAAMgB,EAAmBrB,cAKvB,WAAiCC,GAAG,IAAjCC,EAAS,EAATA,UAAWe,EAAK,EAALA,MAAUd,EAAK,wBAC7B,cAAC,IAA0B,aACzBF,IAAKA,EACLC,UAAWE,YACT,kOACAa,GAAS,OACTf,IAEEC,GACJ,IAEJkB,EAAiBhB,YAAcU,IAA2BV,YAE1D,IAAMiB,EAA2BtB,cAG/B,WAA6CC,GAAG,IAA7CC,EAAS,EAATA,UAAWgB,EAAQ,EAARA,SAAUK,EAAO,EAAPA,QAAYpB,EAAK,wBACzC,eAAC,IAAkC,yBACjCF,IAAKA,EACLC,UAAWE,YACT,uOACAF,GAEFqB,QAASA,GACLpB,GAAK,cAET,sBAAMD,UAAU,+DAA8D,SAC5E,cAAC,IAAmC,UAClC,cAAC,YAAS,CAACA,UAAU,gBAGxBgB,KACkC,IAEvCI,EAAyBjB,YACvBU,IAAmCV,YAEPL,cAG5B,WAAoCC,GAAG,IAApCC,EAAS,EAATA,UAAWgB,EAAQ,EAARA,SAAaf,EAAK,wBAChC,eAAC,IAA+B,yBAC9BF,IAAKA,EACLC,UAAWE,YACT,uOACAF,IAEEC,GAAK,cAET,sBAAMD,UAAU,+DAA8D,SAC5E,cAAC,IAAmC,UAClC,cAAC,gBAAa,CAACA,UAAU,6BAG5BgB,KAC+B,IAEdb,YAAcU,IAAgCV,YAEpE,IAAMmB,EAAoBxB,cAKxB,WAAiCC,GAAG,IAAjCC,EAAS,EAATA,UAAWe,EAAK,EAALA,MAAUd,EAAK,wBAC7B,cAAC,IAA2B,aAC1BF,IAAKA,EACLC,UAAWE,YACT,oCACAa,GAAS,OACTf,IAEEC,GACJ,IAEJqB,EAAkBnB,YAAcU,IAA4BV,YAE5D,IAAMoB,EAAwBzB,cAG5B,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,cAAC,IAA+B,aAC9BF,IAAKA,EACLC,UAAWE,YAAa,2BAA4BF,IAChDC,GACJ,IAEJsB,EAAsBpB,YAAcU,IAAgCV,YAEpE,I,mCCrKMqB,GAAW1B,cAGf,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,wBACtB,cAAC,IAAsB,yBACrBF,IAAKA,EACLC,UAAWE,YACT,qQACAF,IAEEC,GAAK,aAET,cAAC,IAA2B,CAC1BD,UAAWE,YAAa,iDAAiD,SAEzE,cAAC,YAAS,CAACF,UAAU,gBAEA,IAE3BwB,GAASrB,YAAcsB,IAAuBtB,Y,4NCnBxCuB,GAASC,KAETC,GAAcD,KAEdE,GAAcF,KAEdG,GAAgBhC,cAGpB,WAAoCC,GAAG,IAApCC,EAAS,EAATA,UAAWgB,EAAQ,EAARA,SAAaf,EAAK,yBAChC,eAAC,KAAuB,yBACtBF,IAAKA,EACLC,UAAW+B,YACT,kTACA/B,IAEEC,GAAK,cAERe,EACD,cAAC,KAAoB,CAACgB,SAAO,WAC3B,cAAC,KAAW,CAAChC,UAAU,4BAED,IAE5B8B,GAAc3B,YAAcwB,KAAwBxB,YAEpD,IAAM8B,GAAuBnC,cAG3B,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,yBACtB,cAAC,KAA8B,yBAC7BF,IAAKA,EACLC,UAAW+B,YACT,uDACA/B,IAEEC,GAAK,aAET,cAAC,KAAS,CAACD,UAAU,cACU,IAEnCiC,GAAqB9B,YAAcwB,KAA+BxB,YAElE,IAAM+B,GAAyBpC,cAG7B,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,yBACtB,cAAC,KAAgC,yBAC/BF,IAAKA,EACLC,UAAW+B,YACT,uDACA/B,IAEEC,GAAK,aAET,cAAC,KAAW,CAACD,UAAU,cACU,IAErCkC,GAAuB/B,YACrBwB,KAAiCxB,YAEnC,IAAMgC,GAAgBrC,cAGpB,WAAyDC,GAAG,IAAzDC,EAAS,EAATA,UAAWgB,EAAQ,EAARA,SAAS,EAAD,EAAEoB,gBAAQ,MAAG,SAAQ,EAAKnC,EAAK,yBACrD,cAAC,KAAsB,UACrB,eAAC,KAAuB,yBACtBF,IAAKA,EACLC,UAAW+B,YACT,scACa,WAAbK,GACA,kIACApC,GAEFoC,SAAUA,GACNnC,GAAK,cAET,cAACgC,GAAoB,IACrB,cAAC,KAAwB,CACvBjC,UAAW+B,YACT,MACa,WAAbK,GACA,2FACA,SAEDpB,IAEH,cAACkB,GAAsB,SAEF,IAE3BC,GAAchC,YAAcwB,KAAwBxB,YAEpD,IAAMkC,GAAcvC,cAGlB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,yBACtB,cAAC,KAAqB,aACpBF,IAAKA,EACLC,UAAW+B,YAAG,yCAA0C/B,IACpDC,GACJ,IAEJoC,GAAYlC,YAAcwB,KAAsBxB,YAEhD,IAAMmC,GAAaxC,cAGjB,WAAoCC,GAAG,IAApCC,EAAS,EAATA,UAAWgB,EAAQ,EAARA,SAAaf,EAAK,yBAChC,eAAC,KAAoB,yBACnBF,IAAKA,EACLC,UAAW+B,YACT,4NACA/B,IAEEC,GAAK,cAET,sBAAMD,UAAU,+DAA8D,SAC5E,cAAC,KAA6B,UAC5B,cAAC,KAAK,CAACA,UAAU,gBAIrB,cAAC,KAAwB,UAAEgB,OACN,IC7FzB,SAASuB,GAAUC,GACjB,MAAY,SAARA,GACQ,UAARA,GACG,IACT,CD2FAF,GAAWnC,YAAcwB,KAAqBxB,YAEtBL,cAGtB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,yBACtB,cAAC,KAAyB,aACxBF,IAAKA,EACLC,UAAW+B,YAAG,2BAA4B/B,IACtCC,GACJ,IAEYE,YAAcwB,KAA0BxB,Y,oHE1DjD,SAASsC,GAAUxC,GAM2BA,EAA3CyC,KAA2CzC,EAArC0C,QAAqC1C,EAA5B2C,IAA4B3C,EAAvB4C,IAA5B,IAAoCC,EAAU,YAAK7C,EAAK,IACxD,EAAsC8C,mBAAiB9C,EAAMyC,KAAOM,GAAc/C,EAAMyC,MAAQ,IAAG,mBAA3FO,EAAU,KAAEC,EAAa,KAajC,OAXAC,qBAAU,WACRD,EAAcjD,EAAMyC,KAAOM,GAAc/C,EAAMyC,MAAQ,GACzD,GAAG,CAAEzC,EAAMyC,OAEXS,qBAAU,WACW,KAAfF,GAAmBhD,EAAM0C,QAAQ,MACrC,IAAMS,EAAaC,GAAaJ,GAC3BK,aAAYF,IACjBnD,EAAM0C,QAAQS,EAChB,GAAG,CAAEH,IAGH,cAAC,KAAK,aACJM,KAAK,OACLX,IAAK3C,EAAM2C,IAAMI,GAAc/C,EAAM2C,UAAOY,EAC5CX,IAAK5C,EAAM4C,IAAMG,GAAc/C,EAAM4C,UAAOW,EAC5CC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAAcS,EAAEC,cAAcH,MAAM,GAC/CX,GAGV,CAEA,SAASe,GAAoBnB,EAAYoB,GACvC,OAAOC,aAAYrB,EAAMoB,IAAkBE,aAAatB,EAAMoB,EAChE,CAEA,SAASG,GAAmBvB,EAAYoB,GACtC,OAAOC,aAAYrB,EAAMoB,IAAkBI,aAAYxB,EAAMoB,EAC/D,CAEA,SAAST,GAAab,GACpB,IAAME,EAAOyB,aAAS3B,GACtB,OAAOc,aAAYZ,GAAQA,EAAO,IACpC,CAEA,SAASM,GAAcN,GACrB,OAAO0B,aAAW1B,EAAM,aAC1B,CCtHA,IAAM2B,GAAW,CACfC,UAAW,CAAC,EACZC,qBAAsB,IAAIC,IAC1BC,uBAAwB,IAAID,KAGvB,SAASE,GAA2BC,GAMzCN,GAASC,UAAUK,EAAOC,MAAQD,EAAOE,SACzCR,GAASE,qBAAqBO,IAAIH,EAAOE,SAAUF,EAAOI,WAA4C,IACzD,EADyD,cAC5EJ,EAAOK,cAAY,IAA7C,2BAA+C,CAAC,IAArCC,EAAW,QACpBZ,GAASI,uBAAuBK,IAAIG,EAAaN,EAAOC,KAC1D,CAAC,+BACH,CAMO,SAASM,GAA2BD,GACzC,IAAME,EAAa,0CAGnB,GAAoB,OAAhBF,EAAsB,OAAOZ,GAASI,uBAAuBW,IAAID,GAErE,IAAME,EAAoBhB,GAASI,uBAAuBW,IAAIH,GAC9D,OAAII,GAGGhB,GAASI,uBAAuBW,IAAID,EAC7C,CAMAT,GAAe,CACbE,KAAM,uBACNC,SC9CK,SAAuDS,EAAiBC,EAAkBC,EAA0CC,GACzI,IAAKD,EAAa,OAAO,EAEzB,IAAME,EAAcC,OAAOL,EAAIM,SAASL,IAElCM,EAAwBL,EAAYM,cACtCJ,EACAA,EAAYK,cAEVC,EAAwBR,EAAYM,cACtCN,EAAYb,OACZa,EAAYb,OAAOoB,cAEvB,OAAQP,EAAYjC,MAClB,IAAK,QACH,OAAOsC,IAA0BG,EACnC,IAAK,WACH,OAAOH,EAAsBI,SAASD,GACxC,IAAK,aACH,OAAOH,EAAsBK,WAAWF,GAC1C,IAAK,WACH,OAAOH,EAAsBM,SAASH,GACxC,QACE,OAAO,EAEb,EDsBEjB,UCpBK,SAAoC9E,GAIvC,IAAD,IACKmG,EAAWC,iBAAyB,MAsB1C,OArBAlD,qBAAU,WAAO,IAAD,IACE,QAAhB,EAAAiD,EAASE,eAAO,OAAhB,EAAkBC,QACF,QAAhB,EAAAH,EAASE,eAAO,OAAhB,EAAkBE,QACpB,GAAG,IAmBD,qCACE,8BACE,eAAC9E,GAAM,CAAC+B,OAAwB,QAAjB,EAAAxD,EAAMuF,mBAAW,aAAjB,EAAmBjC,OAAQ,aAClCkD,cAAe,SAAAhD,GAAK,OApBXF,EAoB6BE,OAnBlDxD,EAAMyG,gBAAe,SAAAC,GAAY,cAAK,CACpCpD,OACAoB,OAA4B,QAAtB,EAAc,OAAZgC,QAAY,IAAZA,OAAY,EAAZA,EAAchC,cAAM,QAAI,GAChCmB,cAA0C,QAA7B,EAAc,OAAZa,QAAY,IAAZA,OAAY,EAAZA,EAAcb,qBAAa,SAC3C,IALmB,IAACvC,CAoBmE,EAAC,UACnF,cAACzB,GAAa,CAAC9B,UAAU,QAAO,SAC9B,cAAC6B,GAAW,CAAC+E,YAAY,sBAE3B,cAACzE,GAAa,UACZ,eAACP,GAAW,WACV,cAACS,GAAW,UAAC,aACb,cAACC,GAAU,CAACmB,MAAM,QAAO,SAAC,UAC1B,cAACnB,GAAU,CAACmB,MAAM,WAAU,SAAC,aAC7B,cAACnB,GAAU,CAACmB,MAAM,aAAY,SAAC,gBAC/B,cAACnB,GAAU,CAACmB,MAAM,WAAU,SAAC,wBAKrC,8BACE,cAAC,KAAK,CACJ1D,IAAKqG,EACLQ,YAAW,kBACXnD,OAAwB,QAAjB,EAAAxD,EAAMuF,mBAAW,aAAjB,EAAmBb,SAAU,GACpCjB,SAAU,SAAAC,GAAC,OAhCMF,EAgCcE,EAAEC,cAAcH,WA/BrDxD,EAAMyG,gBAAe,SAAAC,GAAY,cAAK,CACpCpD,KAAwB,QAApB,EAAc,OAAZoD,QAAY,IAAZA,OAAY,EAAZA,EAAcpD,YAAI,QAAI,aAC5BoB,OAAQlB,EACRqC,cAA0C,QAA7B,EAAc,OAAZa,QAAY,IAAZA,OAAY,EAAZA,EAAcb,qBAAa,SAC3C,IALqB,IAACrC,CAgCoC,EACrDzD,UAAU,wBAKpB,EDpCEgF,aAAc,CACZ,6CAGJN,GAAe,CACbE,KAAM,gBACNC,SF3DK,SAAgDS,EAAiBC,EAAkBC,EAAmCC,GAC3H,OAAmB,MAAfD,GAGGA,IADcjD,GAAU+C,EAAIM,SAASL,GAE9C,EEuDER,UFrDK,SAA6B9E,GAKlC,OACE,mCACE,eAACyB,GAAM,CAAC+B,MAA4B,MAArBxD,EAAMuF,YAAsB,MAAQG,OAAO1F,EAAMuF,aACxDiB,cAAe,SAAAhD,GAAK,OAAIxD,EAAMyG,gBAAe,iBAAgB,QAAVjD,EAAkB,KAAOlB,GAAUkB,EAAM,GAAC,EAAC,UACpG,cAAC3B,GAAa,CAAC9B,UAAU,QAAO,SAC9B,cAAC6B,GAAW,MAEd,cAACM,GAAa,UACZ,eAACP,GAAW,WACV,cAACU,GAAU,CAACmB,MAAM,MAAK,SAAC,QACxB,cAACnB,GAAU,CAACmB,MAAM,OAAM,SAAC,SACzB,cAACnB,GAAU,CAACmB,MAAM,QAAO,SAAC,mBAMtC,EEgCEuB,aAAc,CACZ,8CAGJN,GAAe,CACbE,KAAM,oBACNC,SE/DK,SAAoDS,EAAiBC,EAAkBC,EAAuCC,GACnI,IAAKD,EAAa,OAAO,EAEzB,IAAMqB,EAAgBC,WAAWxB,EAAIM,SAASL,IAE9C,OAAIC,EAAY5C,KAAO4C,EAAY3C,IAC1BgE,GAAiBrB,EAAY5C,KAAOiE,GAAiBrB,EAAY3C,IAC/D2C,EAAY5C,IACdiE,GAAiBrB,EAAY5C,KAC3B4C,EAAY3C,KACdgE,GAAiBrB,EAAY3C,GAIxC,EFkDEkC,UEhDK,SAAiC9E,GAIpC,IAAD,gBACKmG,EAAWC,iBAAyB,MAC1ClD,qBAAU,WAAO,IAAD,IACE,QAAhB,EAAAiD,EAASE,eAAO,OAAhB,EAAkBC,QACF,QAAhB,EAAAH,EAASE,eAAO,OAAhB,EAAkBE,QACpB,GAAG,IAEH,IAAMO,EAAe,SAACnE,GACpB3C,EAAMyG,gBAAe,SAAAC,GAAY,YAAK,CACpC/D,MACAC,IAAsB,QAAnB,EAAc,OAAZ8D,QAAY,IAAZA,OAAY,EAAZA,EAAc9D,WAAG,QAAI,KAC3B,GACH,EAEMmE,EAAe,SAACnE,GACpB5C,EAAMyG,gBAAe,SAAAC,GAAY,YAAK,CACpC/D,IAAsB,QAAnB,EAAc,OAAZ+D,QAAY,IAAZA,OAAY,EAAZA,EAAc/D,WAAG,QAAI,KAC1BC,MACD,GACH,EAEA,OACE,sBAAK7C,UAAU,aAAY,UACzB,gCACE,cAAC,KAAK,UAAC,QACP,cAAC,KAAK,CACJD,IAAKqG,EACL7C,KAAK,SACLE,MAA6B,QAAxB,EAAmB,QAAnB,EAAExD,EAAMuF,mBAAW,aAAjB,EAAmB5C,WAAG,QAAI,GACjCC,IAA2B,QAAxB,EAAmB,QAAnB,EAAE5C,EAAMuF,mBAAW,aAAjB,EAAmB3C,WAAG,QAAI,GAC/Ba,SAAU,SAAAC,GACR,IAAMsD,EAASH,WAAWnD,EAAEC,cAAcH,OAC1CyD,MAAMD,GAAUF,EAAa,MAAQA,EAAaE,EACpD,EACAjH,UAAU,uBAGd,gCACE,cAAC,KAAK,UAAC,QACP,cAAC,KAAK,CACJuD,KAAK,SACLE,MAA6B,QAAxB,EAAmB,QAAnB,EAAExD,EAAMuF,mBAAW,aAAjB,EAAmB3C,WAAG,QAAI,GACjCD,IAA2B,QAAxB,EAAmB,QAAnB,EAAE3C,EAAMuF,mBAAW,aAAjB,EAAmB5C,WAAG,QAAI,GAC/Bc,SAAU,SAAAC,GACR,IAAMsD,EAASH,WAAWnD,EAAEC,cAAcH,OAC1CyD,MAAMD,GAAUD,EAAa,MAAQA,EAAaC,EACpD,EACAjH,UAAU,yBAKpB,EFPEgF,aAAc,CACZ,0CACA,yCACA,2CACA,8CAGJN,GAAe,CACbE,KAAM,kBACNC,SDlEK,SAAkDS,EAAiBC,EAAkBC,EAAqCC,GAC/H,IAAKD,EAAa,OAAO,EAEzB,IAAM2B,EAAc9D,GAAaiC,EAAIM,SAASL,IAE9C,OAAIC,EAAY5C,KAAO4C,EAAY3C,MAC5BsE,IACElD,GAAmBkD,EAAa3B,EAAY5C,MAAQiB,GAAoBsD,EAAa3B,EAAY3C,MAC/F2C,EAAY5C,MAChBuE,GACElD,GAAmBkD,EAAa3B,EAAY5C,MAC1C4C,EAAY3C,OAChBsE,GACEtD,GAAoBsD,EAAa3B,EAAY3C,IAIxD,ECkDEkC,UDhDK,SAA+B9E,GAIlC,IAAD,gBACKmG,EAAWC,iBAAyB,MAoB1C,OAnBAlD,qBAAU,WAAO,IAAD,IACE,QAAhB,EAAAiD,EAASE,eAAO,OAAhB,EAAkBC,QACF,QAAhB,EAAAH,EAASE,eAAO,OAAhB,EAAkBE,QACpB,GAAG,IAiBD,sBAAKxG,UAAU,aAAY,UACzB,gCACE,cAAC,KAAK,UAAC,UACP,cAACyC,GAAS,CACRI,IAA2B,QAAxB,EAAmB,QAAnB,EAAE5C,EAAMuF,mBAAW,aAAjB,EAAmB3C,WAAG,QAAI,KAC/BH,KAA4B,QAAxB,EAAmB,QAAnB,EAAEzC,EAAMuF,mBAAW,aAAjB,EAAmB5C,WAAG,QAAI,KAChCD,QArBa,SAACC,GACpB3C,EAAMyG,gBAAe,SAAAC,GAAY,YAAK,CACpC/D,MACAC,IAAsB,QAAnB,EAAc,OAAZ8D,QAAY,IAAZA,OAAY,EAAZA,EAAc9D,WAAG,QAAI,KAC3B,GACH,EAiBQ7C,UAAU,uBAGd,gCACE,cAAC,KAAK,UAAC,WACP,cAACyC,GAAS,CACRG,IAA2B,QAAxB,EAAmB,QAAnB,EAAE3C,EAAMuF,mBAAW,aAAjB,EAAmB5C,WAAG,QAAI,KAC/BF,KAA4B,QAAxB,EAAmB,QAAnB,EAAEzC,EAAMuF,mBAAW,aAAjB,EAAmB3C,WAAG,QAAI,KAChCF,QAvBa,SAACE,GACpB5C,EAAMyG,gBAAe,SAAAC,GAAY,YAAK,CACpC/D,IAAsB,QAAnB,EAAc,OAAZ+D,QAAY,IAAZA,OAAY,EAAZA,EAAc/D,WAAG,QAAI,KAC1BC,MACD,GACH,EAmBQ7C,UAAU,yBAKpB,ECEEgF,aAAc,CACZ,wCACA,+C,oCGzEG,SAASoC,GAA2BnH,GAIvC,IAAD,IACD,EAA0B8C,oBAAS,GAAM,mBAAjCsE,EAAI,KAAEC,EAAO,KAEfC,EAA8C,MAAjCtH,EAAMuH,OAAOC,iBAEhC,OACE,eAAC,KAAO,CAACJ,KAAMA,EAAMK,aAAcJ,EAAQ,UACzC,cAAC,KAAc,CAACtF,SAAO,WACrB,cAAC,IAAM,CAAC2F,QAAQ,QAAQC,KAAK,OAAO,aAAW,uBAAsB,SACnE,cAAC,KAAM,CAAC5H,UAAW6H,YAAK,UACtBN,EAAa,cAAe,aAC5B,CACE,gBAAiBA,UAKzB,eAAC,KAAc,CAACvH,UAAU,WAAW8H,MAAM,QAAQ5G,WAAY,EAAG6G,KAAK,SAAQ,UAC7E,sBAAK/H,UAAU,2BAA0B,UACvC,sBAAMA,UAAU,cAAa,SAAC,eAAiB,IAAgC,QAA/B,EAAwB,QAAxB,EAACC,EAAM+H,yBAAiB,aAAvB,EAAyBC,aAAK,QAAIhI,EAAMuH,OAAOU,MAElG,uBAAMlI,UAAU,0BAA0BmI,SAAU,SAAAxE,GAClDA,EAAEyE,iBACFd,GAAQ,EACV,EAAE,UACA,cAACe,GAAkB,eAAKpI,IACxB,sBAAKD,UAAU,aAAY,UACzB,cAAC,IAAM,CAAC2H,QAAQ,UAAUW,QAAS,kBAAMrI,EAAMuH,OAAOd,eAAe,KAAK,EAAC,SAAC,UAG5E,cAAC,IAAM,CAACiB,QAAQ,UAAUW,QAAS,kBAAMrI,EAAMsI,MAAMC,oBAAoB,EAAC,SAAC,cAG3E,cAAC,IAAM,CAACb,QAAQ,UAAUpE,KAAK,SAASvD,UAAU,YAAW,SAAC,kBAM1E,CAEA,SAASqI,GAAgCpI,GAIvC,IAAM4E,EAAW5E,EAAMuH,OAAOiB,cACxBC,EAAY7D,EH/Bb,SAA8CA,GACnD,OAAOR,GAASE,qBAAqBa,IAAIP,EAC3C,CG6B+B8D,CAAyB9D,GAAY,KAElE,OAAiB,MAAb6D,EACK,8BAAK,wBAGP,cAACA,EAAS,CAAClB,OAAQvH,EAAMuH,OACdhC,YAAavF,EAAMuH,OAAOC,iBAC1Bf,eAAgB,SAAAkC,GAAO,OAAI3I,EAAMuH,OAAOd,eAAekC,EAAQ,GAEnF,C,yCCtEO,SAASC,GAAY5I,GAM1B,IAAM6I,EAAaC,aAA0B,CAC3CC,SAAU,CAAE,OAAQ/I,EAAMgJ,KAAMhJ,EAAM2H,KAAM3H,EAAMiJ,OAClDC,QAAQ,WAAD,wCAAE,2GACmD,GAApDC,EAAQ,CAAEC,SAAUpJ,EAAM2H,KAAMsB,MAAOjJ,EAAMiJ,QAC/CjJ,EAAMgJ,KAAK/C,WAAW,OAAO,CAAD,wCACvB,cAACoD,GAAA,EAAI,CAACtJ,UAAWC,EAAMD,UAAWiJ,KAAMhJ,EAAMgJ,KAAkBG,MAAOA,EACjE,cAAanJ,EAAMgJ,QAAQ,WAGtChJ,EAAMgJ,KAAK/C,WAAW,UAAU,CAAD,gBAC8C,OAAzEqD,EAAaC,GAAiBvJ,EAAMgJ,KAAKQ,QAAQ,UAAW,KAAO,OAAM,SACnD,wCAA+B,OAChB,GADrCC,EAAa,OACbC,EAAYD,EAAcH,GACjB,CAAD,gBAC6H,OAAzIK,QAAQC,MAAM,6BAAD,OAA8BN,EAAU,sEAAsEG,GAAc,kBAClI,MAAI,iCAEN,cAACC,EAAS,CAAC3J,UAAW6H,YAAK,iBAAkB5H,EAAMD,WAAYoJ,MAAOA,EAC3DU,YAAQtG,EAAWuG,WAAOvG,EAAW,cAAavD,EAAMgJ,QAAQ,YAGhFhJ,EAAMgJ,KAAK/C,WAAW,QAAQ,CAAD,gBACqC,OAA9DqD,EAAaC,GAAiBvJ,EAAMgJ,KAAKQ,QAAQ,QAAS,KAAI,UAC1C,+BAA6B,QAChB,GADjCO,EAAW,OACXC,EAAUD,EAAYT,GACf,CAAD,gBACwI,OAAlJK,QAAQC,MAAM,2BAAD,OAA4BN,EAAU,mFAAmFS,GAAY,kBAC3I,MAAI,iCAGN,cAACC,EAAO,CAACjK,UAAW6H,YAAK,iBAAkB5H,EAAMD,WAAYoJ,MAAOA,EAC3D,cAAanJ,EAAMgJ,QAAQ,iCAGtC,MAAI,4CACZ,kDAjCO,KAoCV,OAAOH,EAAWoB,UAAYpB,EAAWqB,KAAO,IAClD,CAGA,SAASX,GAAiBY,GACxB,OAAOA,EACJC,MAAM,KACNC,KAAI,SAAAC,GACH,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAG3E,aACtD,IACC4E,KAAK,GACV,C,cC6DA,SAASC,GAAuB3F,GAC9B,OAAQA,GACN,IAAK,0CACL,IAAK,yCACL,IAAK,2CACL,IAAK,2CACH,OAAO,SAAC4F,EAAMC,EAAMvF,GAGlB,OAFUuB,WAAW+D,EAAKjF,SAASL,IACzBuB,WAAWgE,EAAKlF,SAASL,GAErC,EAEF,IAAK,2CACH,OAAO,SAACsF,EAAMC,EAAMvF,GAGlB,OAFUwF,EAAuBF,EAAKjF,SAASL,IACrCwF,EAAuBD,EAAKlF,SAASL,GAEjD,EAEF,IAAK,wCACL,IAAK,4CACH,OAAO,SAACsF,EAAMC,EAAMvF,GAClB,IAAMyF,EAAI7G,aAAS0G,EAAKjF,SAASL,IAC3B0F,EAAI9G,aAAS2G,EAAKlF,SAASL,IACjC,OAAQ,IAAI2F,KAAKF,GAAIG,UAAa,IAAID,KAAKD,GAAIE,SACjD,EAGF,QACE,OAAO,SAACN,EAAMC,EAAMvF,GAClB,IAAMyF,EAAIrF,OAAOkF,EAAKjF,SAASL,IACzB0F,EAAItF,OAAOmF,EAAKlF,SAASL,IAC/B,OAAOyF,EAAEI,cAAcH,EACzB,EAIJ,SAASF,EAAuBvI,GAC9B,MAAY,UAARA,EAAwB,EAChB,SAARA,EAAuB,EACpB,CACT,CACF,C,4CC3EC,SAEc6I,GAAe,EAAD,mDA4B5B,OA5B4B,qCAA7B,WAA8BC,EAAeC,EAAoCC,GAAc,wFAC7D,GAA1BC,EAAWC,SAASJ,IACtBpE,MAAMuE,GAAU,CAAD,qBAAQ,IAAIE,MAAM,sCAAwCL,GAAM,OAGzD,GADpBM,EAAUL,EAASE,GACnBI,EAASC,eAEK,YAAhBN,EAAOjI,KAAkB,iBACrBwI,EAAgBC,aAAkCR,EAAO/H,MAAM,2BAChEoI,GAAM,IACTP,SACGM,IAELK,aAAQT,EAAOU,MAAOH,GAAc,2BACX,eAAhBP,EAAOjI,KAAqB,kCAC/B4I,aAAaX,EAAOY,UAAWZ,EAAOa,WAAaC,KAAKC,UAAUf,EAAOa,YAAc,KAAK,aAChGf,SAAUM,IACV,QACEJ,EAAOgB,mBACTC,KAAaC,sBAAsB,CACjCzM,MAAO,CACL4L,SACAI,aACAU,oBAAqBnB,EAAOgB,qBAE7B,GACJ,6CAEJ,sBC/FM,SAASI,GAAqBzC,EAA2B0C,GAC9D,IAaoC,EAb9BC,EAAeC,MAAMC,QAAQH,EAAOC,cAAgBD,EAAOC,aAAe,GAC1EG,EAAwBJ,EAAOK,iBACjC,IAAIC,IAAIN,EAAOK,iBAAiB7C,MAAM,MACtC,KAEE+C,EAAkD,CAAC,EACnDC,EAA8B,GAC9BC,EAAwD,CAAC,EACzDC,EAAgB,IAAIJ,IACpBK,EAAgC,GAChCjC,EAAqC,GACrCkC,EAA4C,CAAC,EAAC,cAE9BtD,EAAKuD,KAAKC,MAAI,qBAAG,IAA5BC,EAAO,QACVpG,EAiGV,SAAuBoG,GAErB,IAAMC,EAAM,aAAG,mCAAkD,mBAC3DC,EAAQF,EAAQE,MAAMD,GAE5B,GAAU,OAALC,QAAK,IAALA,MAAOC,OAAQ,MAAM,IAAIpC,MAAM,mCAAD,OAAoCiC,IACvE,MAAO,CACL1F,GAAI4F,EAAMC,OAAO7F,GACjB8F,SAAUF,EAAMC,OAAOC,SAAWF,EAAMC,OAAOC,SAASjI,cAAgB,KAE5E,CA3GmBkI,CAAcL,GAE7B,GADAR,EAAoBQ,GAAWpG,EAC3BA,EAAOwG,SAEuC,OAD3CP,EAAgBjG,EAAOU,MAAKuF,EAAgBjG,EAAOU,IAAM,IAC9DuF,EAAgBjG,EAAOU,IAAIgG,KAAK1G,EAAOwG,UAAS,WAIlD,IAAM/I,EAqGV,SAAoCkJ,EAAmBhE,GACrD,IAC2C,EADrCiE,EAAc,IAAIjB,IAAa,cACfhD,EAAKkE,QAAQC,UAAQ,IAA3C,2BAA6C,CAAC,IAAnCC,EAAO,QAChB,GAAMJ,KAAaI,EAAnB,CACA,IAAMpE,EAAOoE,EAAQJ,GACrBC,EAAYI,IAAKrE,EAAuB,SAFH,CAGvC,CAAC,+BAED,OAAyB,IAArBiE,EAAYxG,KAAmB,KAC5B,YAAKwG,GAAc,EAC5B,CA/GwBK,CAA2BjH,EAAOU,GAAIiC,GACpDuE,EAAY5B,EAAa6B,WAAU,SAAAC,GAAO,OAAIA,EAAQ1G,KAAOV,EAAOU,EAAE,IAC5E,IAAmB,IAAfwG,EAAiB,MAAD,WAEpB,IAAM1G,EAAoB8E,EAAa4B,GACjCG,EFhCH,SAA0B3G,EAAYjD,EAA4BuI,EAA+BxF,EAAkD6E,GAAmD,IAAD,MACpMiC,EAAgC,QAA3B,EAAoB,OAAjB9G,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBC,aAAK,QAAIC,EAC1C,MAAO,CACL6G,YAAa7G,EACb8G,OAUF,SAA0B,GAA+F,IAA9FxH,EAAM,EAANA,OAAQe,EAAK,EAALA,MAAOyG,EAAM,EAANA,OACxC,OACE,sBAAKhP,UAAU,0BAAyB,UACtC,eAAC,IAAM,CAACA,UAAU,OACV2H,QAAQ,QACR,aAAW,OACXsH,UAAWzH,EAAO0H,aAClB5G,QAAS,WACFd,EAAO0H,cACZ1H,EAAO2H,mBAAc3L,EAAWgE,EAAO4H,kBACzC,EAAE,UACPN,EACAtH,EAAO0H,cACN,sCAC4B,IAAzB1H,EAAO6H,eAA2B,cAAC,gBAAa,CAACrP,UAAWE,YAAa,kBAChD,SAAzBsH,EAAO6H,eAA4B,cAAC,gBAAa,CAACrP,UAAWE,YAAa,kBACjD,QAAzBsH,EAAO6H,eAA2B,cAAC,cAAW,CAACrP,UAAWE,YAAa,wBAI7EsH,EAAO8H,gBACN,cAAClI,GAAa,CAACI,OAAQwH,EAAOxH,OACfQ,kBAAmBA,EACnBO,MAAOA,MAI9B,EApCEgH,KAsCF,SAAc,GAAiF,IAA/EjK,EAAG,EAAHA,IAAKiK,EAAI,EAAJA,KACbC,EAAYhC,EAAclI,EAAImK,OAAOF,EAAK/H,OAAOU,IACjDzE,EAAQ6B,EAAIM,SAASsC,GACrBwH,EAAcjM,EAAQkC,OAAOlC,GAAS,GAE5C,OACE,eAACkM,EAAc,CACb3P,UAAWE,YAAa,CAAE,yCAAmD,OAATsP,QAAS,IAATA,MAAWvG,QAC/EuG,UAAWA,EAAU,WAEX,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWvG,OAAQ,cAAC2G,EAAQ,CAAC3G,KAAMuG,EAAUvG,KAAMjJ,UAAU,gBAC7D0P,GAAe,sBAAM1P,UAAU,cAAa,SAAE0P,MAGrD,EAnDE7K,SAAUK,GAAwBD,GAClC4K,UAAWjF,GAAuB3F,GAClC6K,cAAc,EACdC,mBAAiD,QAA/B,EAAmB,OAAjB/H,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBgI,kBAAU,SACjDC,cAA0C,QAA7B,EAAmB,OAAjBjI,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBkI,gBAAQ,SAC1CnG,MAAwB,OAAjB/B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB+B,OAgD5B,SAAS4F,EAAe1P,GAIpB,IAAD,IACD,EAA4BkQ,eAAW,mBAA/BtE,EAAM,KAAEI,EAAO,KAEvB,GAAmB,QAAnB,EAAIhM,EAAMuP,iBAAS,OAAf,EAAiBY,IAAK,CACxB,IAAMlE,GAAyB,OAAjBlE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBqI,eAAgBxD,EAAOyD,gBAClDC,EAAgBrE,GAASL,EAAOK,KAAWjM,EAAMuP,UAAWY,IAElE,OACE,mBAAGI,KAAK,IACL,iBAAgBD,EAChBvQ,UAAWE,YAAaD,EAAMD,UAAW,qBAAsB,CAC7D,gBAAiBuQ,IAEnBjI,QAAS,SAAA3E,GACPA,EAAEyE,iBAEG8D,GACLD,EAAQC,EAAOjM,EAAMuP,UAAWY,IACrC,EAAE,SACCnQ,EAAMe,UAGb,CAEA,OAAmB,QAAnB,EAAIf,EAAMuP,iBAAS,OAAf,EAAiBiB,IACjB,mBAAGD,KAAMvQ,EAAMuP,UAAUiB,IAAKC,OAAO,SAASC,IAAI,aAChD3Q,UAAWE,YAAaD,EAAMD,UAAW,0CAA0C,SACnFC,EAAMe,WAGL,qBAAKhB,UAAWC,EAAMD,UAAU,SAAEC,EAAMe,UACjD,CAEA,SAAS4O,EAAS3P,GAChB,OAAKA,EAAMgJ,KAAKrE,KACT,cAACiE,GAAW,CAACI,KAAMhJ,EAAMgJ,KAAKrE,KAAMgD,KAAM3H,EAAMgJ,KAAKrB,KAAMsB,MAAOjJ,EAAMgJ,KAAKC,QADvD,IAE/B,CACF,CEpEuB0H,CAAiBpJ,EAAOU,GAAIjD,EAAauI,EAAexF,EAAmB6E,GAC9FgC,EAAW9E,MAAyB,OAAjB/B,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB+B,MACtCsD,EAAYqB,GAAaG,EACzBvB,EAAgB9F,EAAOU,IAAM2G,EACR,OAAjB7G,QAAiB,IAAjBA,KAAmB6I,SAErBhC,EAAWiB,cAAe,EAC1BvC,EAAciB,IAAIhH,EAAOU,KAE3B2G,EAAWiC,mBAA+C,OAA1B7D,GAAkCA,EAAsB8D,IAAIvJ,EAAOU,GACrG,EAxBA,8BAwBC,mCAE0C,EAF1C,cAEqBiC,EAAKkE,QAAQC,UAAQ,IAA3C,2BAA6C,CAAC,IAAnCC,EAAO,QACVjJ,EAA8B,CAAC,EAC/B0L,EAA6B,CAAC,EACpC,IAAK,IAAMpD,KAAWW,EAAS,CAC7B,IAAM/G,EAAS4F,EAAoBQ,GAC/BA,KAAWN,IACbhI,EAAIsI,GAAWW,EAAQX,GAASnK,OAG9B+D,EAAOwG,UACTiD,EAAYD,EAAcxJ,EAAQ+G,EAAQX,GAASnK,MAEvD,CAEA8H,EAAS2C,KAAK5I,GACdkI,EAAcU,KAAK8C,EACrB,CAAC,+BAED,IAAK,IAAMzL,KAAYkI,EAAiB,CACtC,IAAM+B,EAAY/B,EAAgBlI,GAC9BiK,EAAUvJ,SAAS,QAAUuJ,EAAUvJ,SAAS,QAClDiL,MAAM,mBAAD,OAAoB3L,EAAQ,wHAErC,CASA,OAPAuH,EAAaqE,SAAQ,SAACnJ,EAAmBoJ,GACvC,IAAMlJ,EAAKF,EAAkBE,GACzBA,KAAMoF,GACLtF,EAAkBqJ,UACvBhE,EAAY+D,GDzET,SAAiClJ,EAAYqD,EAAoCvD,GACtF,MAAO,CACLE,KACA8G,OAAQhH,EAAkBC,OAAS,GACnC6H,cAAc,EACdP,KAIF,SAAqB,GAA2E,IAAD,EAAxEjK,EAAG,EAAHA,IACfgM,EAAWC,aAAY,CAC3BC,WAAW,WAAD,wCAAE,WAAOC,GAAiB,oGACbA,GAAO,wDAAX,OAANjG,EAAM,iBACTH,GAAe/F,EAAI4C,GAAIqD,EAAUC,GAAO,qMAEjD,mDAJU,KAOb,OAAI8F,EAASI,UAET,cAAC,IAAM,CAAC/J,QAAQ,QAAQsH,UAAQ,EAACjP,UAAWE,YAAa,eAAe,SACtE,cAACoJ,GAAA,EAAI,CAACL,KAAK,UAAU0I,MAAI,MAM7B,mCAC4B,QAD5B,EACG3J,EAAkBqJ,eAAO,aAAzB,EAA2B/G,KAAI,SAACsH,EAAKC,GACpC,OAAID,EAAIP,QAEJ,eAACzQ,EAAY,WACX,cAACE,EAAmB,CAACkB,SAAO,EAACsG,QAAS,SAAA3E,GAAC,OAAIA,EAAEmO,iBAAiB,EAAC,SAC7D,eAAC,IAAM,CAACnK,QAAQ,QAAQ3H,UAAWE,YAAa,eAAe,UAC7D,sBAAMF,UAAWE,YAAa,WAAW,SAAC,cAC1C,cAAC2I,GAAW,CAAC7I,UAAWE,YAAa,WAAY+I,KAAK,+BAG1D,cAAChI,EAAmB,CAAC6G,MAAM,MAAK,SAC7B8J,EAAIP,QAAQ/G,KAAI,SAACyH,EAAQF,GAAG,OAC3B,eAAC1Q,EAAgB,CAAWmH,QAAS,kBAAMyJ,EAAON,SAAWH,EAASU,OAAOD,EAAON,QAAQ,EAAEzR,UAAU,aAAY,UACjH+R,EAAO9I,MACN,cAACJ,GAAW,CAAC7I,UAAWE,YAAa,WAAY+I,KAAM8I,EAAO9I,OAE/D8I,EAAO9J,MAAQ8J,EAAO9J,MAAQ,OAJV4J,EAKJ,QAdNA,GAqBnB,cAAC,IAAM,CAAWlK,QAAQ,QAClB3H,UAAU,cACV8O,MAAO8C,EAAI3J,MACXK,QAAS,SAAA3E,GACPA,EAAEmO,kBACEF,EAAIH,SAASH,EAASU,OAAOJ,EAAIH,QACvC,EAAE,SACPG,EAAI3I,MACH,cAACJ,GAAW,CAAC7I,UAAWE,YAAa,WAAY+I,KAAM2I,EAAI3I,QARlD4I,EAanB,KAGN,EA9DE9H,MAAO/B,EAAkB+B,MA+D7B,CCIqBkI,CAAwB/J,EAAIqD,EAAUvD,GACzD,IAEO,CACLkK,QAAS,IAAI/E,IAAIgF,OAAOC,KAAK9E,IAC7BD,cACA9B,WACAgC,iBAGF,SAAS0D,EAAYD,EAA4BxJ,EAAoB/D,GAC7D+D,EAAOU,MAAM8I,IACjBA,EAAaxJ,EAAOU,IAAM,CAAC,GAE7B,IAAMsH,EAAYwB,EAAaxJ,EAAOU,IAEtC,OAAQV,EAAOwG,UACb,IAAK,OACEwB,EAAUvG,OAAMuG,EAAUvG,KAAO,CAAC,GACvCuG,EAAUvG,KAAKrE,KAAOnB,EACtB,MACF,IAAK,WACE+L,EAAUvG,OAAMuG,EAAUvG,KAAO,CAAC,GACvCuG,EAAUvG,KAAKrB,KAAOnE,EACtB,MACF,IAAK,YACE+L,EAAUvG,OAAMuG,EAAUvG,KAAO,CAAC,GACvCuG,EAAUvG,KAAKC,MAAQzF,EACvB,MACF,IAAK,MACH+L,EAAUY,IAAM3M,EAChB,MACF,IAAK,MACH+L,EAAUiB,IAAMhN,EAChB,MACF,QACEmG,QAAQyI,KAAK,kCAAD,OAAmC7K,EAAOwG,WAE5D,CACF,C,yLC7HMsE,GAAa,SAAH,OAAMtS,EAAS,EAATA,UAAcC,EAAK,yBACvC,iCACE8H,KAAK,aACL,aAAW,aACX/H,UAAWE,YAAa,qCAAsCF,IAC1DC,GACJ,EAEJqS,GAAWnS,YAAc,aAEzB,IAAMoS,GAAoBzS,cAGxB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,yBACtB,gCACEF,IAAKA,EACLC,UAAWE,YAAa,mCAAoCF,IACxDC,GACJ,IAEJsS,GAAkBpS,YAAc,oBAEhC,IAAMqS,GAAiB1S,cAGrB,WAA0BC,GAAG,IAA1BC,EAAS,EAATA,UAAcC,EAAK,yBACtB,gCAAIF,IAAKA,EAAKC,UAAWE,YAAa,GAAIF,IAAgBC,GAAS,IAErEuS,GAAerS,YAAc,iBAO7B,IAAMsS,GAAiB,SAAH,OACMzS,EAAS,EAATA,UACA0S,EAAQ,EAARA,SAAS,EAAD,EACR9K,YAAI,MAAG,OAAM,EACb5G,EAAQ,EAARA,SACGf,EAAK,yBAEhC,2CACE,cAAa0F,OAAO+M,GACpB,eAAcA,EAAW,YAASlP,EAClC,aAAW,cACXxD,UAAWE,YACT,oCACAyS,YAAe,CACbhL,QAAS+K,EAAW,UAAY,QAChC9K,SAEF5H,IAEEC,GAAK,aACTe,IAAa,EAEjByR,GAAetS,YAAc,iBAE7B,IAAMyS,GAAqB,SAAH,OACM5S,EAAS,EAATA,UACGC,EAAK,yBAEpC,eAAC,GAAc,yBACb,aAAW,sBACX2H,KAAK,UACL5H,UAAWE,YAAa,eAAgBF,IACpCC,GAAK,cAET,cAAC,KAAW,CAACD,UAAU,YACvB,+BAAM,gBACS,EAEnB4S,GAAmBzS,YAAc,qBAEjC,IAAM0S,GAAiB,SAAH,OACM7S,EAAS,EAATA,UACGC,EAAK,yBAEhC,eAAC,GAAc,yBACb,aAAW,kBACX2H,KAAK,UACL5H,UAAWE,YAAa,eAAgBF,IACpCC,GAAK,cAET,+BAAM,SACN,cAAC,KAAY,CAACD,UAAU,eACT,EAEnB6S,GAAe1S,YAAc,iBAE7B,IAAM2S,GAAqB,SAAH,OACM9S,EAAS,EAATA,UACGC,EAAK,yBAEpC,+CACE,iBACAD,UAAWE,YAAa,2CAA4CF,IAChEC,GAAK,cAET,cAAC,KAAc,CAACD,UAAU,YAC1B,sBAAMA,UAAU,UAAS,SAAC,kBACrB,EAET8S,GAAmB3S,YAAc,qB,cC1D3B4S,GAAyB,CAACb,QAAS,IAAI/E,IAAeE,YAAa,GAAI9B,SAAU,GAAIgC,cAAe,IAAIJ,KACxG6F,GAAuB,OAEd,SAASC,GAAchT,GAAe,IAAD,EAE5CiT,EAAkC,SAAC5N,GACvC,IAAKrF,EAAMkT,6BAA8B,OAAO,KAChD,IAAKlT,EAAMkK,KAAM,OAAO,KAExB,IACM1G,EADSxD,EAAMkK,KAAKkE,QAAQC,SAAShJ,EAAImK,OAC1BxP,EAAMkT,8BAC3B,OAAO1P,EAAQA,EAAMA,MAAQ,IAC/B,EAEM2P,EAAyB,SAAC9N,GAC9B,IAAM+N,EAAWH,EAAgC5N,GAC5CrF,EAAMqT,sBACND,GACLpT,EAAMgM,QAAQhM,EAAMqT,qBAAsBD,EAC5C,EAEA,EAAwDvT,WAAc,WACpE,IAAKG,EAAMkK,KAAM,OAAO4I,GAExB,IAAMQ,EAAY3G,GAAqB3M,EAAMkK,KAAMlK,GAGnD,MAF2B,aAAxBA,EAAMuT,eAA8BD,EAAUlG,YAAYoG,QAmQjE,SAA+BL,GAC7B,MAAO,CACLlL,GAAI,SACJ8G,OAAQ0E,EACRnE,KAAMoE,EACN1D,eAAe,EACfH,cAAc,EACd/F,MAAOiJ,IAGT,SAASU,EAAkB,GAA6E,IAA5EnL,EAAK,EAALA,MAC1B,OACE,cAAC/G,GAAQ,CAAC,aAAW,aACXoS,gBAAiB,SAACnQ,GAAK,OAAK8E,EAAMsL,4BAA4BpQ,EAAM,EACpEpC,QACEkH,EAAMuL,4BACLvL,EAAMwL,6BAA+B,iBAEtD,CAEA,SAASJ,EAAkB,GAAyE,IAAxErO,EAAG,EAAHA,IAC1B,OACE,cAAC9D,GAAQ,CAAC,aAAW,aACXH,QAASiE,EAAI0O,gBACbJ,gBAAiB,SAACnQ,GACZA,GAAO2P,EAAuB9N,GAClCA,EAAI2O,iBAAiBxQ,EACvB,GACd,CACF,CAhSyEyQ,CAAsBd,IACvFnT,EAAMkU,mBAAmBZ,EAAUlG,YAAYa,KAkSvD,WACE,MAAO,CACLhG,GAAI,UACJ4H,cAAc,EACdP,KAAM6E,EACNrK,MAAOiJ,IAGT,SAASoB,IACL,OACE,eAACxT,EAAY,WACX,cAACE,EAAmB,CAACkB,SAAO,WAC1B,eAAC,IAAM,CAAC2F,QAAQ,QAAQ3H,UAAWE,YAAa,eAAe,UAC7D,sBAAMF,UAAWE,YAAa,WAAW,SAAC,cAC1C,cAAC,qBAAkB,CAACF,UAAWE,YAAa,kBAGhD,eAACe,EAAmB,CAAC6G,MAAM,MAAK,UAC9B,cAACxG,EAAiB,UAAC,YACnB,cAACH,EAAgB,CAACmH,QAAS+L,GAAU,SAAC,oBAEtC,cAAC9S,EAAqB,IACtB,cAACJ,EAAgB,CAACmH,QAAS+L,GAAU,SAAC,kBAEtC,cAAClT,EAAgB,CAACmH,QAAS+L,GAAU,SAAC,8BAK9C,CACJ,CAhU4DC,IACjDf,CACT,GAAG,CACDtT,EAAMkK,KACNlK,EAAM6M,aACN7M,EAAMiN,iBACNjN,EAAMuT,cACNvT,EAAMkU,oBAZDjC,EAAO,EAAPA,QAAS7E,EAAW,EAAXA,YAAa9B,EAAQ,EAARA,SAAUgC,EAAa,EAAbA,cAevC,EAAoCgH,cAAmC,SAACC,GAAc,YAAM,CAC1FC,UAAoC,QAA3B,EAAgB,OAAdD,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,iBAAS,QAAI,EACxCC,SAAUzU,EAAM0U,mBAAqBjJ,SAASzL,EAAM0U,oBAAsB,GAC3E,GAAG,CAAE1U,EAAM0U,qBAAqB,mBAH1BC,EAAU,KAAEC,EAAa,KAIhC,EAA8B/U,WAA6B,IAAG,mBAAvDgV,EAAO,KAAEC,EAAU,KAC1B,EAAwCjV,WAAe,IAAG,mBAAnDkV,EAAY,KAAEC,EAAe,KACpC,EAA0CnV,WAAmC,IAAG,mBAAzEoV,EAAa,KAAEC,EAAgB,KACtC,GAAgDrV,WAAgC,CAAC,GAAE,qBAA5EsV,GAAgB,MAAEC,GAAmB,MACtCC,GAAyBxV,WAA+B,WAC5D,IAC8B,EADxByV,EAAc,eAAQH,IAAkB,cAC7B7H,GAAa,IAA9B,2BAAgC,CAC9BgI,EADW,UACU,CACvB,CAAC,+BACD,OAAOA,CACT,GAAG,CAAEH,GAAkB7H,IAEvB,GAAwCzN,WAAe,CAAC,GAAE,qBAAnD0V,GAAY,MAAEC,GAAe,MAE9BlN,GAAQmN,YAAc,CAC1BvL,KAAMoB,EACNoK,QAAStI,EACT/I,UTzDKD,GAASC,US0DdsR,mBAAoBf,EACpBgB,gBAAiBd,EACjBe,sBAAuBX,EACvBY,gBAAiBA,cACjBC,sBAAuB/V,EAAMgW,kBAAoBD,mBAA0BxS,EAC3E0S,kBAAmBA,cACnBC,oBAAqBA,cACrBC,yBAA0Bf,GAC1BgB,qBAAsBZ,GACtBa,MAAO,CACL1B,aACAE,UACAE,eACAE,gBACAE,iBAAkBE,GAClBE,iBACFe,iBAAiB,IAGbC,GAA+BvW,EAAMwW,yBAA2BxW,EAAM4L,OAAO5L,EAAMwW,yBACnFC,GAAmCzW,EAAMwW,yBAA2BxW,EAAM4L,OAAO,GAAD,OAAI5L,EAAMwW,wBAAuB,cACvH3W,aAAgB,WAAO,IAAD,EACd6W,EAAgBH,GACyF,QAD7D,EAC9CjO,GAAMqO,cAAcC,KAAKC,MAAK,SAAAxR,GAAG,OAAI4N,EAAgC5N,KAASkR,EAA4B,WAAC,aAA3G,EAA6GtO,GAC7G,KAEJuN,GAAgBkB,EAAa,eAC1BA,GAAgB,GACf,CAAC,EACP,GAAG,CAAEpO,GAAMqO,cAAeJ,GAA8BE,KAExD5W,aAAgB,WACd,GAAKG,EAAM8W,kBAAX,CAEA,IAAMC,EAASzO,GAAM0O,sBAAsBJ,KACxCvM,KAAI,SAAAhF,GAAG,aAAwC,QAAxC,EAAI4N,EAAgC5N,UAAI,QAAI,IAAI,IACvDX,QAAO,SAAAyL,GAAG,OAAW,MAAPA,CAAW,IAE5BnQ,EAAMgM,QAAQhM,EAAM8W,kBAAmBG,KAAaC,qBAAqBlX,EAAMmX,4BAA6BJ,GANxE,CAOtC,GAAG,CAAExB,KAEDvV,EAAMiN,kBAAoBgF,EAAQtK,OAASsK,EAAQnB,IAAI9Q,EAAMiN,mBAC/DtD,QAAQC,MAAM,CAAC,qBAAD,OACS5J,EAAMiN,iBAAgB,4DACK,YAAIgF,EAAQ8E,UAAUrM,KAAK,SAE/E,IAAM0M,GAAgBpX,EAAMqX,YAC1B,sBAAKtX,UAAWE,YAAa,gCAAgC,UAC3D,cAAC,KAAK,CACJqD,KAAK,SACLqD,YAAY,YACZnD,MAAOuR,EACPtR,SAAU,SAAAC,GAAC,OAAIsR,EAAgBtR,EAAEC,cAAcH,MAAM,EACrDzD,UAAWE,YAAa,eAE1B,eAACU,EAAY,WACX,cAACE,EAAmB,CAACkB,SAAO,WAC1B,eAAC,IAAM,CAAC2F,QAAQ,UAAU3H,UAAWE,YAAa,WAAW,UAAC,WACpD,cAAC,kBAAe,CAACF,UAAWE,YAAa,uBAGrD,cAACe,EAAmB,CAAC6G,MAAM,MAAK,SAC7BS,GACEgP,gBACA5S,QAAO,SAAC6C,GAAM,OAAKA,EAAOgQ,YAAY,IACtClN,KAAI,SAAC9C,GACJ,OACE,cAACpG,EAAwB,CAEvBpB,UAAWE,YAAa,cACxBmB,QAASmG,EAAOiQ,eAChB7D,gBAAiB,SAACnQ,GAAK,OACrB+D,EAAOkQ,mBAAmBjU,EAAM,EACjC,SAEA+D,EAAOU,IAPHV,EAAOU,GAUlB,YAhCgC,KAqCpCyP,GAAmB1X,EAAM2X,kBAAmB,KAAOrP,GAAMsP,kBAAkBvN,KAAI,SAACwN,GAAW,OAC/F,cAACvX,EAAQ,UAAuBuX,EAAYC,QAAQzN,KAAI,SAAC0E,GAAM,OAC7D,cAACxO,EAAS,UACPwO,EAAOgJ,cACJ,KACAC,YAAWjJ,EAAOxH,OAAO0Q,UAAUlJ,OAAQA,EAAOmJ,eAHxCnJ,EAAO9G,GAIX,KALC4P,EAAY5P,GAMhB,IAEPkQ,GAAyC,QAAxB,EAAA7P,GAAMqO,cAAcC,YAAI,OAAxB,EAA0BwB,OAC7C9P,GAAMqO,cAAcC,KAAKvM,KAAI,SAAChF,GAAG,OACjC,cAAC/E,EAAQ,CACCP,UAAW6H,YAAK,CACd,oCAA6D,WAAxB5H,EAAMuT,cAC3C,iBAAkBlO,EAAI0O,gBACtB,kBAAmB1O,EAAI0O,kBAEzB,aAAY1O,EAAI0O,iBAAmB,WAAW,SACrD1O,EAAIgT,kBAAkBhO,KAAI,SAACiF,GAAI,OAC9B,cAAC9O,EAAS,CAAe6H,QAAiC,WAAxBrI,EAAMuT,cAA6B,WACnEjL,GAAMkN,gBAAgB,eACnBnQ,EAAI4C,IAAK,IAEZkL,EAAuB9N,EACzB,OAAI9B,EAAU,SACXyU,YAAW1I,EAAK/H,OAAO0Q,UAAU3I,KAAMA,EAAK4I,eAN/B5I,EAAKrH,GAOT,KAfD5C,EAAI4C,GAiBR,IAGX,cAAC3H,EAAQ,UACP,cAACE,EAAS,CAAC8X,QAASlL,EAAYgL,OAAQrY,UAAWE,YAAa,oBAAoB,SAAC,kBAiErFsY,GACJ,sBAAKxY,UAAWE,YAAa,gDAAgD,UAClD,aAAxBD,EAAMuT,eACL,sBAAKxT,UAAWE,YAAa,wCAAwC,UAClEqI,GAAMkQ,8BAA8B5B,KAAKwB,OAAO,MAAI,IACpD9P,GAAM4N,sBAAsBU,KAAKwB,OAAO,uBAG5CpY,EAAMgW,mBACL,qBAAKjW,UAAWE,YAAa,aAAa,SApElB,WAC5B,IAAMwY,EAAanQ,GAAMoQ,eACnBlE,EAAYG,EAAWH,UAIvBmE,EAAqBC,KAAKC,MAAMC,KAChCC,EAAYvE,GAAaiE,EAAaE,EAAqB,EAC7DC,KAAKhW,IAAI,EAAG6V,EAJO,GAKnBG,KAAKhW,IAAI,EAAG4R,EAAYmE,GACtBK,EAAUxE,GAAamE,EACzBC,KAAKjW,IAAImW,EAAoBL,EAAa,GAC1CG,KAAKjW,IAAI6R,EAAYmE,EAAoBF,EAAa,GAEpDQ,EAAQ,GAERC,EAAmB,SAACC,GAAY,OACpC,cAAC5G,GAAc,UACb,cAAC,GAAc,CAAChC,KAAK,IACLlI,QAAS,kBAAMC,GAAM8Q,aAAaD,EAAK,EACvC1G,SAAU+B,IAAc2E,EAAK,SAC1CA,EAAO,KAJSA,EAMJ,EAGfJ,EAAY,IACdE,EAAMhL,KAAKiL,EAAiB,IACxBH,EAAY,GAAGE,EAAMhL,KAAK,cAAC,GAAkB,MAGnD,IAAK,IAAIkD,EAAI4H,EAAW5H,GAAK6H,EAAS7H,IACpC8H,EAAMhL,KAAKiL,EAAiB/H,IAQ9B,OALI6H,EAAUP,EAAa,IACrBO,EAAUP,EAAa,GAAGQ,EAAMhL,KAAK,cAAC,GAAkB,KAC5DgL,EAAMhL,KAAKiL,EAAiBT,EAAa,KAIzC,cAAC,GAAU,UACT,eAACnG,GAAiB,WAChB,cAACC,GAAc,UACb,cAAC,GAAkB,CAAChC,KAAK,IACLlI,QAAS,kBAAMC,GAAM+Q,cAAc,EACnC5G,SAAUnK,GAAMgR,yBAErCL,EACD,cAAC1G,GAAc,UACb,cAAC,GAAc,CAAChC,KAAK,IACLlI,QAAS,kBAAMC,GAAMiR,UAAU,EAC/B9G,SAAUnK,GAAMkR,yBAK1C,CAYSC,QAMHC,GAAcd,KAAKhW,IAAG,MAARgW,KAAI,YAAQtQ,GAAMsP,kBAAkBvN,KAAI,SAACwN,GAAW,OAAKA,EAAYC,QAAQM,MAAM,MAEvG,OACE,sBAAKrY,UAAU,gCAAgCoJ,MAAO,CACpDwQ,eAAgB,QAChB,UACCvC,GACD,eAACxX,EAAK,CAACG,UAAU,sBAAqB,UACpC,cAACU,EAAa,UACX6H,GAAMgP,gBAAgBjN,KAAI,SAAC9C,GAAM,aAChC,cAAC7G,EAAQ,CAAiByI,MAAO,CAAEW,MAA6B,QAAxB,EAAEvC,EAAO0Q,UAAUnO,aAAK,QAAIiJ,KAArDxL,EAAOU,GAAwE,MAGlG,cAAC9H,EAAW,CAACJ,UAAU,wBAAuB,SAC3C2X,KAEH,cAACtX,EAAS,UACP+X,KAEH,cAAC9X,EAAW,UACV,6BACE,oBAAIiY,QAASoB,GAAY,SAAEnB,cAMvC,CAmEA,SAASnE,KACPnD,MAAM,mBACR,C,uFC7YO,SAAS2I,IAGd,MAAwBC,sBAAW,iBAAO,CAAC,CAAC,GAAG,CAAC,GAChD,OADkD,iBAA9B,EAEtB,C,mCCVA,sDAGO,SAASvF,EACdwF,EACAC,GAEA,IAAMC,EAAcJ,cAEdK,EAAeC,mBAAQ,kBAAMJ,GAAc,GAAE,IAC7CK,EAAW/T,iBAAU6T,GAErBG,EAAWhU,iBAAO2T,IAgB1B,SAAgDK,EAAaL,GAC3D,OACEK,EAAShC,SAAW2B,EAAK3B,QACzB2B,EAAKM,OAAM,SAACC,EAAK9K,GAAK,OAAK0C,OAAOqI,GAAGD,EAAKF,EAAS5K,GAAO,GAE9D,EAnBOgL,CAAaJ,EAAS/T,QAAS0T,KAClCI,EAAS9T,QAAUyT,EAAaK,EAAS9T,SACzC+T,EAAS/T,QAAU0T,GAGrB,IAAMU,EAAcC,uBAAY,SAAUnP,GACxC,IAAMoP,EAgByB,oBAhBFpP,EAAUA,EAAO4O,EAAS9T,SAAWkF,EAClE4O,EAAS9T,QAAUsU,EACnBX,GACF,GAAG,IAEH,MAAO,CAAEG,EAAS9T,QAASoU,EAC7B,C","file":"static/js/26.2dab98b5.chunk.js","sourcesContent":["import * as React from 'react'\nimport {mergeClasses} from '../../helpers/styling'\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n    <table\n      ref={ref}\n      className={mergeClasses(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={mergeClasses(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={mergeClasses(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={mergeClasses(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={mergeClasses(\n      \"border-b transition-colors hover:bg-muted/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={mergeClasses(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:mt-1\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={mergeClasses(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:mt-1\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={mergeClasses(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nconst TableColGroup = React.forwardRef<\n  HTMLTableColElement,\n  React.HTMLAttributes<HTMLTableColElement>\n>(({ className, ...props }, ref) => (\n  <colgroup ref={ref} className={mergeClasses(className)} {...props} />\n));\nTableColGroup.displayName = \"TableColGroup\";\n\nconst TableCol = React.forwardRef<\n  HTMLTableColElement,\n  React.ColHTMLAttributes<HTMLTableColElement>\n>(({ className, ...props }, ref) => (\n  <col ref={ref} className={mergeClasses(className)} {...props} />\n));\nTableCol.displayName = \"TableCol\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n  TableColGroup,\n  TableCol\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {CheckIcon, ChevronRightIcon, DotFilledIcon} from \"@radix-ui/react-icons\"\n\nimport {mergeClasses} from '../../helpers/styling'\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={mergeClasses(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={mergeClasses(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={mergeClasses(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={mergeClasses(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={mergeClasses(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={mergeClasses(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={mergeClasses(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={mergeClasses(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={mergeClasses(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from 'react'\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox'\nimport { CheckIcon } from '@radix-ui/react-icons'\n\nimport {mergeClasses} from '../../helpers/styling'\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={mergeClasses(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={mergeClasses(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { mergeClasses as cn } from '../../helpers/styling'\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n        \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n          \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","import React from \"react\"\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectGroup, SelectItem } from \"../../../ui-primitives/select\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\n\nexport type BooleanFilter = boolean | null\n\nexport function booleanFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: BooleanFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (filterValue == null) return true\n\n  const booleanValue = parseBool(row.getValue(columnId))\n  return filterValue === booleanValue\n}\n\nexport function BooleanFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: BooleanFilter | null,\n  setFilterValue: (updater: (currentValue: BooleanFilter | null) => BooleanFilter | null) => void\n}) {\n  return (\n    <>\n      <Select value={props.filterValue == null ? \"all\" : String(props.filterValue)}\n              onValueChange={value => props.setFilterValue(() => value === \"all\" ? null : parseBool(value))}>\n        <SelectTrigger className=\"w-100\">\n          <SelectValue />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectGroup>\n            <SelectItem value=\"all\">All</SelectItem>\n            <SelectItem value=\"true\">True</SelectItem>\n            <SelectItem value=\"false\">False</SelectItem>\n          </SelectGroup>\n        </SelectContent>\n      </Select>\n    </>\n  )\n}\n\nfunction parseBool(str: string): boolean | null {\n  if (str === \"true\") return true\n  if (str === \"false\") return false\n  return null\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    booleanFilterFn: FilterFn<unknown>\n  }\n}\n","import React, { useEffect, useRef, useState } from \"react\"\nimport {\n  isValid as isDateValid,\n  isEqual as isDateEqual,\n  isBefore as isDateBefore,\n  isAfter as isDateAfter,\n  format as dateFormat,\n  parseISO\n} from \"date-fns\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\nimport { Label } from \"../../../ui-primitives/label\"\nimport { Input } from \"../../../ui-primitives/input\"\n\nexport type DateRangeFilter = {\n  min: Date | null\n  max: Date | null\n}\n\nexport function dateRangeFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: DateRangeFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (!filterValue) return true\n\n  const valueAsDate = parseDateIso(row.getValue(columnId))\n\n  if (filterValue.min && filterValue.max) {\n    if (!valueAsDate) return false\n    return isDateAfterOrEqual(valueAsDate, filterValue.min) && isDateBeforeOrEqual(valueAsDate, filterValue.max)\n  } else if (filterValue.min) {\n    if (!valueAsDate) return false\n    return isDateAfterOrEqual(valueAsDate, filterValue.min)\n  } else if (filterValue.max) {\n    if (!valueAsDate) return false\n    return isDateBeforeOrEqual(valueAsDate, filterValue.max)\n  } else {\n    return true\n  }\n}\n\nexport function DateRangeFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: DateRangeFilter | null,\n  setFilterValue: (updater: (currentValue: DateRangeFilter | null) => DateRangeFilter | null) => void\n}) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    inputRef.current?.focus()\n    inputRef.current?.select()\n  }, [])\n\n  const setFilterMin = (min: Date | null) => {\n    props.setFilterValue(currentValue => ({\n      min,\n      max: currentValue?.max ?? null\n    }))\n  }\n\n  const setFilterMax = (max: Date | null) => {\n    props.setFilterValue(currentValue => ({\n      min: currentValue?.min ?? null,\n      max\n    }))\n  }\n\n  return (\n    <div className=\"grid gap-2\">\n      <div>\n        <Label>After</Label>\n        <DateInput\n          max={props.filterValue?.max ?? null}\n          date={props.filterValue?.min ?? null}\n          setDate={setFilterMin}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n      <div>\n        <Label>Before</Label>\n        <DateInput\n          min={props.filterValue?.min ?? null}\n          date={props.filterValue?.max ?? null}\n          setDate={setFilterMax}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function DateInput(props: {\n  date: Date | null,\n  setDate: (date: Date | null) => void,\n  min?: Date | null,\n  max?: Date | null\n} & Omit<React.InputHTMLAttributes<HTMLInputElement>, \"type\" | \"min\" | \"max\">) {\n  const { date, setDate, min, max, ...otherProps } = props\n  const [ draftValue, setDraftValue ] = useState<string>(props.date ? formatDateIso(props.date) : \"\")\n\n  useEffect(() => {\n    setDraftValue(props.date ? formatDateIso(props.date) : \"\")\n  }, [ props.date ])\n\n  useEffect(() => {\n    if (draftValue === \"\") props.setDate(null)\n    const parsedDate = parseDateIso(draftValue)\n    if (!isDateValid(parsedDate)) return\n    props.setDate(parsedDate)\n  }, [ draftValue ])\n\n  return (\n    <Input\n      type=\"date\"\n      min={props.min ? formatDateIso(props.min) : undefined}\n      max={props.max ? formatDateIso(props.max) : undefined}\n      value={draftValue}\n      onChange={e => setDraftValue(e.currentTarget.value)}\n      {...otherProps}\n    />\n  )\n}\n\nfunction isDateBeforeOrEqual(date: Date, dateToCompare: Date) {\n  return isDateEqual(date, dateToCompare) || isDateBefore(date, dateToCompare)\n}\n\nfunction isDateAfterOrEqual(date: Date, dateToCompare: Date) {\n  return isDateEqual(date, dateToCompare) || isDateAfter(date, dateToCompare)\n}\n\nfunction parseDateIso(str: string) {\n  const date = parseISO(str)\n  return isDateValid(date) ? date : null\n}\n\nfunction formatDateIso(date: Date) {\n  return dateFormat(date, \"yyyy-MM-dd\")\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    dateRangeFilterFn: FilterFn<unknown>\n  }\n}\n","import { Column, FilterFn, FilterFnOption } from \"@tanstack/react-table\"\nimport { ReactElement } from \"react\"\nimport { advancedStringFilterFn, AdvancedStringFilterInputs } from \"./advanced-string-filter\"\nimport { booleanFilterFn, BooleanFilterInputs } from \"./boolean-filter\"\nimport { numberRangeFilterFn, NumberRangeFilterInputs } from \"./number-range-filter\"\nimport { dateRangeFilterFn, DateRangeFilterInputs } from \"./date-range-filter\"\n\nexport type FilterInputsProps<FilterType> = {\n  column: Column<any, unknown>\n  filterValue: FilterType | null\n  setFilterValue: (updater: (currentValue: FilterType | null) => FilterType | null) => void\n}\n\nexport type FilterInputsComponent<FilterType> = (props: FilterInputsProps<FilterType>) => ReactElement\n\nconst registry = {\n  filterFns: {} as Record<string, FilterFn<unknown>>,\n  componentsByFilterFn: new Map<FilterFn<unknown>, FilterInputsComponent<unknown>>(),\n  filterFnNameByDataType: new Map<string | null, string>()\n} as const\n\nexport function registerFilter<FilterType>(filter: {\n  name: string,\n  filterFn: FilterFn<unknown>,\n  component: FilterInputsComponent<FilterType>,\n  dataTypeUris: string[]\n}) {\n  registry.filterFns[filter.name] = filter.filterFn\n  registry.componentsByFilterFn.set(filter.filterFn, filter.component as FilterInputsComponent<unknown>)\n  for (const dataTypeUri of filter.dataTypeUris) {\n    registry.filterFnNameByDataType.set(dataTypeUri, filter.name)\n  }\n}\n\nexport function getFilterInputsComponent<FilterType>(filterFn: FilterFn<unknown>) {\n  return registry.componentsByFilterFn.get(filterFn) as FilterInputsComponent<FilterType>\n}\n\nexport function getFilterNameByDataType<T>(dataTypeUri: string | null): FilterFnOption<T>  {\n  const XSD_STRING = \"http://www.w3.org/2001/XMLSchema#string\"\n\n  // most string literals have no explicit data type...\n  if (dataTypeUri === null) return registry.filterFnNameByDataType.get(XSD_STRING) as FilterFnOption<T>\n\n  const foundFilterFnName = registry.filterFnNameByDataType.get(dataTypeUri)\n  if (foundFilterFnName) return foundFilterFnName as FilterFnOption<T>\n\n  // also use string filter for unknown data types\n  return registry.filterFnNameByDataType.get(XSD_STRING) as FilterFnOption<T>\n}\n\nexport function getFilterFns(): Record<string, FilterFn<unknown>> {\n  return registry.filterFns\n}\n\nregisterFilter({\n  name: \"advancedStringFilter\",\n  filterFn: advancedStringFilterFn,\n  component: AdvancedStringFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#string\"\n  ]\n})\nregisterFilter({\n  name: \"booleanFilter\",\n  filterFn: booleanFilterFn,\n  component: BooleanFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#boolean\"\n  ]\n})\nregisterFilter({\n  name: \"numberRangeFilter\",\n  filterFn: numberRangeFilterFn,\n  component: NumberRangeFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#double\",\n    \"http://www.w3.org/2001/XMLSchema#float\",\n    \"http://www.w3.org/2001/XMLSchema#decimal\",\n    \"http://www.w3.org/2001/XMLSchema#integer\"\n  ]\n})\nregisterFilter({\n  name: \"dateRangeFilter\",\n  filterFn: dateRangeFilterFn,\n  component: DateRangeFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#date\",\n    \"http://www.w3.org/2001/XMLSchema#dateTime\"\n  ]\n})\n","import React, { useEffect, useRef } from \"react\"\nimport { Input } from \"../../../ui-primitives/input\"\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectGroup, SelectLabel, SelectItem } from \"../../../ui-primitives/select\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\n\nexport type AdvancedStringFilter = {\n  filter: string\n  type: \"exact\" | \"includes\" | \"startsWith\" | \"endsWith\"\n  caseSensitive: boolean\n}\n\nexport function advancedStringFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: AdvancedStringFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (!filterValue) return true\n\n  const stringValue = String(row.getValue(columnId))\n\n  const normalizedStringValue = filterValue.caseSensitive\n    ? stringValue\n    : stringValue.toLowerCase()\n\n  const normalizedFilterValue = filterValue.caseSensitive\n    ? filterValue.filter\n    : filterValue.filter.toLowerCase()\n\n  switch (filterValue.type) {\n    case \"exact\":\n      return normalizedStringValue === normalizedFilterValue\n    case \"includes\":\n      return normalizedStringValue.includes(normalizedFilterValue)\n    case \"startsWith\":\n      return normalizedStringValue.startsWith(normalizedFilterValue)\n    case \"endsWith\":\n      return normalizedStringValue.endsWith(normalizedFilterValue)\n    default:\n      return false\n  }\n}\n\nexport function AdvancedStringFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: AdvancedStringFilter | null,\n  setFilterValue: (updater: (currentValue: AdvancedStringFilter | null) => AdvancedStringFilter | null) => void\n}) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    inputRef.current?.focus()\n    inputRef.current?.select()\n  }, [])\n\n  const setFilterType = (type: AdvancedStringFilter[\"type\"]) => {\n    props.setFilterValue(currentValue => ({\n      type,\n      filter: currentValue?.filter ?? '',\n      caseSensitive: currentValue?.caseSensitive ?? false\n    }))\n  }\n\n  const setFilterString = (value: string) => {\n    props.setFilterValue(currentValue => ({\n      type: currentValue?.type ?? 'startsWith',\n      filter: value,\n      caseSensitive: currentValue?.caseSensitive ?? false\n    }))\n  }\n\n  return (\n    <>\n      <div>\n        <Select value={props.filterValue?.type || \"startsWith\"}\n                onValueChange={value => setFilterType(value as AdvancedStringFilter[\"type\"])}>\n          <SelectTrigger className=\"w-100\">\n            <SelectValue placeholder=\"Select criteria\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectGroup>\n              <SelectLabel>Criteria</SelectLabel>\n              <SelectItem value=\"exact\">Exact</SelectItem>\n              <SelectItem value=\"includes\">Includes</SelectItem>\n              <SelectItem value=\"startsWith\">Starts with</SelectItem>\n              <SelectItem value=\"endsWith\">Ends with</SelectItem>\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      </div>\n      <div>\n        <Input\n          ref={inputRef}\n          placeholder={`Enter filter...`}\n          value={props.filterValue?.filter || \"\"}\n          onChange={e => setFilterString(e.currentTarget.value)}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n    </>\n  )\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    advancedStringFilterFn: FilterFn<unknown>\n  }\n}\n","import React, { useEffect, useRef } from \"react\"\nimport { Input } from \"../../../ui-primitives/input\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\nimport { Label } from \"../../../ui-primitives/label\"\n\nexport type NumberRangeFilter = {\n  min: number | null\n  max: number | null\n}\n\nexport function numberRangeFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: NumberRangeFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (!filterValue) return true\n\n  const valueAsNumber = parseFloat(row.getValue(columnId))\n\n  if (filterValue.min && filterValue.max) {\n    return valueAsNumber >= filterValue.min && valueAsNumber <= filterValue.max\n  } else if (filterValue.min) {\n    return valueAsNumber >= filterValue.min\n  } else if (filterValue.max) {\n    return valueAsNumber <= filterValue.max\n  } else {\n    return true\n  }\n}\n\nexport function NumberRangeFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: NumberRangeFilter | null,\n  setFilterValue: (updater: (currentValue: NumberRangeFilter | null) => NumberRangeFilter | null) => void\n}) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    inputRef.current?.focus()\n    inputRef.current?.select()\n  }, [])\n\n  const setFilterMin = (min: number | null) => {\n    props.setFilterValue(currentValue => ({\n      min,\n      max: currentValue?.max ?? null\n    }))\n  }\n\n  const setFilterMax = (max: number | null) => {\n    props.setFilterValue(currentValue => ({\n      min: currentValue?.min ?? null,\n      max\n    }))\n  }\n\n  return (\n    <div className=\"grid gap-2\">\n      <div>\n        <Label>Min</Label>\n        <Input\n          ref={inputRef}\n          type=\"number\"\n          value={props.filterValue?.min ?? \"\"}\n          max={props.filterValue?.max ?? \"\"}\n          onChange={e => {\n            const number = parseFloat(e.currentTarget.value)\n            isNaN(number) ? setFilterMin(null) : setFilterMin(number)\n          }}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n      <div>\n        <Label>Max</Label>\n        <Input\n          type=\"number\"\n          value={props.filterValue?.max ?? \"\"}\n          min={props.filterValue?.min ?? \"\"}\n          onChange={e => {\n            const number = parseFloat(e.currentTarget.value)\n            isNaN(number) ? setFilterMax(null) : setFilterMax(number)\n          }}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n    </div>\n  )\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    numberRangeFilterFn: FilterFn<unknown>\n  }\n}\n","import React, { useState } from \"react\"\n\nimport { Table, Column } from \"@tanstack/react-table\"\n\nimport { Button } from \"../../ui-primitives/button\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger\n} from \"../../ui-primitives/popover\"\nimport { Filter } from \"lucide-react\"\nimport clsx from \"clsx\"\nimport { getFilterInputsComponent } from \"./filters/registry\"\nimport { ColumnDescription } from \"./config-options\"\n\nexport function FilterPopover<T = unknown>(props: {\n  column: Column<any, unknown>\n  columnDescription?: ColumnDescription\n  table: Table<T>\n}) {\n  const [ open, setOpen ] = useState(false)\n\n  const isFiltered = props.column.getFilterValue() != null\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" aria-label=\"Open filter dialogue\">\n          <Filter className={clsx(\"h-4 w-4\",\n            isFiltered ? \"opacity-100\": \"opacity-50\",\n            {\n              \"text-blue-800\": isFiltered\n            }\n          )} />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80 p-0\" align=\"start\" sideOffset={2} role=\"dialog\">\n        <div className=\"p-2 text-sm bg-slate-100\">\n          <span className=\"font-medium\">Filter by:</span> {props.columnDescription?.label ?? props.column.id}\n        </div>\n        <form className=\"p-2 flex flex-col gap-2\" onSubmit={e => {\n          e.preventDefault()\n          setOpen(false)\n        }}>\n          <FilterInputsSwitch {...props} />\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={() => props.column.setFilterValue(null)}>\n              Clear\n            </Button>\n            <Button variant=\"outline\" onClick={() => props.table.resetColumnFilters()}>\n              Clear all\n            </Button>\n            <Button variant=\"default\" type=\"submit\" className=\"flex-grow\">Ok</Button>\n          </div>\n        </form>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nfunction FilterInputsSwitch<T = unknown>(props: {\n  column: Column<any, unknown>\n  table: Table<T>\n}) {\n  const filterFn = props.column.getFilterFn()\n  const Component = filterFn ? getFilterInputsComponent(filterFn) : null\n\n  if (Component == null) {\n    return <div>Unknown filter type</div>\n  }\n\n  return <Component column={props.column}\n                    filterValue={props.column.getFilterValue()}\n                    setFilterValue={updater => props.column.setFilterValue(updater)} />\n\n}","import { Icon } from \"./widgets/Icon\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport clsx from \"clsx\"\n\nexport function DynamicIcon(props: {\n  icon: string,\n  color?: string,\n  size?: string,\n  className?: string\n}) {\n  const loadedIcon = useQuery<React.ReactNode>({\n    queryKey: [ \"icon\", props.icon, props.size, props.color ],\n    queryFn: async () => {\n      const style = { fontSize: props.size, color: props.color }\n      if (props.icon.startsWith(\"fa-\")) {\n        return <Icon className={props.className} icon={props.icon as IconProp} style={style}\n                     data-testid={props.icon} />\n      }\n\n      if (props.icon.startsWith(\"radix-\")) {\n        const importName = kebabToCamelCase(props.icon.replace(/^radix-/, \"\")) + \"Icon\"\n        const allRadixIcons = await import(\"@radix-ui/react-icons\") as any\n        const RadixIcon = allRadixIcons[importName]\n        if (!RadixIcon) {\n          console.error(`could not find Radix icon ${importName}, try one of the following or visit https://www.radix-ui.com/icons`, allRadixIcons)\n          return null\n        }\n        return <RadixIcon className={clsx(\"svg-inline--fa\", props.className)} style={style}\n                          height={undefined} width={undefined} data-testid={props.icon} /> // remove hardcoded 15px from radix\n      }\n\n      if (props.icon.startsWith(\"mui-\")) {\n        const importName = kebabToCamelCase(props.icon.replace(/^mui-/, \"\"))\n        const allMuiIcons = await import(`@mui/icons-material`) as any\n        const MuiIcon = allMuiIcons[importName]\n        if (!MuiIcon) {\n          console.error(`could not find MUI icon ${importName}, try one of the following or visit https://mui.com/material-ui/material-icons/`, allMuiIcons)\n          return null\n        }\n\n        return <MuiIcon className={clsx(\"svg-inline--fa\", props.className)} style={style}\n                        data-testid={props.icon} />\n      }\n\n      return null\n    }\n  })\n\n  return loadedIcon.isSuccess ? loadedIcon.data : null\n}\n\n\nfunction kebabToCamelCase(kebabText: string): string {\n  return kebabText\n    .split('-')\n    .map(word => {\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n    })\n    .join('')\n}\n","import React from \"react\"\nimport {\n  WidgetColumn,\n  WidgetColumnCellComponentProps, WidgetColumnCellComponentReturn,\n  WidgetColumnHeaderComponentProps,\n  WidgetColumnHeaderComponentReturn, WidgetRow\n} from \"../TablePlusPlus\"\nimport { getFilterNameByDataType } from \"../filters/registry\"\nimport { Button } from \"../../../ui-primitives/button\"\nimport { mergeClasses } from \"../../../../helpers/styling\"\nimport { FilterPopover } from \"../FilterPopover\"\nimport { CaretSortIcon, CaretDownIcon, CaretUpIcon } from \"@radix-ui/react-icons\"\nimport { IconModifier, Modifiers, ModifiersRow } from \"../parse-table-widget-data\"\nimport { SortingFn } from \"@tanstack/react-table\"\nimport { parseISO } from \"date-fns\"\nimport { ColumnDescription, TablePlusPlusConfigOptions } from \"../config-options\"\nimport { DynamicIcon } from \"../../../DynamicIcon\"\nimport { usePubsub } from \"../../../../redux/pubsub\"\n\nexport function createDataColumn(id: string, dataTypeUri: string | null, modifiersRows: ModifiersRow[], columnDescription: ColumnDescription | undefined, config: TablePlusPlusConfigOptions): WidgetColumn {\n  const title = columnDescription?.label ?? id\n  return {\n    accessorKey: id,\n    header: DataColumnHeader,\n    cell: Cell,\n    filterFn: getFilterNameByDataType(dataTypeUri),\n    sortingFn: getSortingFnByDataType(dataTypeUri),\n    enableHiding: true,\n    enableColumnFilter: columnDescription?.filterable ?? true,\n    enableSorting: columnDescription?.sortable ?? true,\n    width: columnDescription?.width\n  }\n\n  function DataColumnHeader({column, table, header}: WidgetColumnHeaderComponentProps): WidgetColumnHeaderComponentReturn {\n    return (\n      <div className=\"flex align-items-center\">\n        <Button className=\"px-0\"\n                variant=\"ghost\"\n                aria-label=\"Sort\"\n                disabled={!column.getCanSort()}\n                onClick={() => {\n                  if (!column.getCanSort()) return\n                  column.toggleSorting(undefined, column.getCanMultiSort())\n                }}>\n          {title}\n          {column.getCanSort() && (\n            <>\n              {column.getIsSorted() === false && <CaretSortIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />}\n              {column.getIsSorted() === \"desc\" && <CaretDownIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />}\n              {column.getIsSorted() === \"asc\" && <CaretUpIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />}\n            </>\n          )}\n        </Button>\n        {column.getCanFilter() && (\n          <FilterPopover column={header.column}\n                         columnDescription={columnDescription}\n                         table={table} />\n        )}\n      </div>\n    )\n  }\n\n  function Cell({ row, cell }: WidgetColumnCellComponentProps): WidgetColumnCellComponentReturn {\n    const modifiers = modifiersRows[row.index][cell.column.id]\n    const value = row.getValue(id)\n    const valueString = value ? String(value) : \"\"\n\n    return (\n      <ClickableValue\n        className={mergeClasses({ \"inline-flex align-items-center gap-2\": !!modifiers?.icon })}\n        modifiers={modifiers}\n      >\n        {modifiers?.icon && <CellIcon icon={modifiers.icon} className=\"flex-shrink\" />}\n        {valueString && <span className=\"inline-flex\">{valueString}</span>}\n      </ClickableValue>\n    )\n  }\n\n  function ClickableValue(props: {\n    children: React.ReactNode\n    className?: string\n    modifiers?: Modifiers\n  }) {\n    const [ pubsub, publish ] = usePubsub()\n\n    if (props.modifiers?.uri) {\n      const topic = columnDescription?.publishTopic || config.publishVariable\n      const isUriSelected = topic && pubsub[topic] === props.modifiers!.uri\n\n      return (\n        <a href=\"#\"\n           aria-current={!!isUriSelected}\n           className={mergeClasses(props.className, \"[&>span]:underline\", {\n             \"bg-indigo-200\": isUriSelected\n           })}\n           onClick={e => {\n             e.preventDefault()\n\n             if (!topic) return\n             publish(topic, props.modifiers!.uri)\n        }}>\n          {props.children}\n        </a>\n      )\n    }\n\n    if (props.modifiers?.url) return (\n        <a href={props.modifiers.url} target=\"_blank\" rel=\"noreferrer\"\n          className={mergeClasses(props.className, \"[&>span]:underline hover:bg-indigo-200\")}\n        >{props.children}</a>\n    )\n\n    return <div className={props.className}>{props.children}</div>\n  }\n\n  function CellIcon(props: { icon: IconModifier, className: string }) {\n    if (!props.icon.name) return null\n    return <DynamicIcon icon={props.icon.name} size={props.icon.size} color={props.icon.color} />\n  }\n}\n\nfunction getSortingFnByDataType(dataTypeUri: string | null): SortingFn<WidgetRow> {\n  switch (dataTypeUri) {\n    case \"http://www.w3.org/2001/XMLSchema#double\":\n    case \"http://www.w3.org/2001/XMLSchema#float\":\n    case \"http://www.w3.org/2001/XMLSchema#decimal\":\n    case \"http://www.w3.org/2001/XMLSchema#integer\":\n      return (rowA, rowB, columnId) => {\n        const a = parseFloat(rowA.getValue(columnId))\n        const b = parseFloat(rowB.getValue(columnId))\n        return a - b\n      }\n\n    case \"http://www.w3.org/2001/XMLSchema#boolean\":\n      return (rowA, rowB, columnId) => {\n        const a = parseBoolAsSortableNum(rowA.getValue(columnId))\n        const b = parseBoolAsSortableNum(rowB.getValue(columnId))\n        return a - b\n      }\n\n    case \"http://www.w3.org/2001/XMLSchema#date\":\n    case \"http://www.w3.org/2001/XMLSchema#dateTime\":\n      return (rowA, rowB, columnId) => {\n        const a = parseISO(rowA.getValue(columnId))\n        const b = parseISO(rowB.getValue(columnId))\n        return (new Date(a)).getTime() - (new Date(b)).getTime()\n      }\n\n    case \"http://www.w3.org/2001/XMLSchema#string\":\n    default:\n      return (rowA, rowB, columnId) => {\n        const a = String(rowA.getValue(columnId))\n        const b = String(rowB.getValue(columnId))\n        return a.localeCompare(b)\n      }\n  }\n\n  // Non-booleans (e.g. empty values) come last\n  function parseBoolAsSortableNum(str: string) {\n    if (str === \"false\") return 0\n    if (str === \"true\") return 1\n    return 2\n  }\n}\n","import React from \"react\"\nimport { Action, ColumnDescription } from \"../config-options\"\nimport { WidgetColumn, WidgetColumnCellComponentProps, WidgetColumnCellComponentReturn } from \"../TablePlusPlus\"\nimport { Button } from \"../../../ui-primitives/button\"\nimport { mergeClasses } from \"../../../../helpers/styling\"\nimport { Icon } from \"../../Icon\"\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger\n} from \"../../../ui-primitives/dropdown-menu\"\nimport { resolveTemplateStringAndLogErrors } from \"../../../../helpers/resolve-template-string\"\nimport { runStartRule } from \"../../../../helpers/run-start-rule\"\nimport { useMutation } from \"@tanstack/react-query\"\nimport { DynamicIcon } from \"../../../DynamicIcon\"\nimport publishUtils from \"../../../../helpers/PublishUtils\"\nimport { getPubsub, publish } from \"../../../../redux/pubsub\"\n\nexport function createToolButtonsColumn(id: string, dataRows: Record<string, string>[], columnDescription: ColumnDescription): WidgetColumn {\n  return {\n    id,\n    header: columnDescription.label || \"\",\n    enableHiding: false,\n    cell: ToolButtons,\n    width: columnDescription.width\n  }\n\n  function ToolButtons({ row }: WidgetColumnCellComponentProps): WidgetColumnCellComponentReturn {\n    const mutation = useMutation({\n      mutationFn: async (actions: Action[]) => {\n        for (const action of actions) {\n          await dispatchAction(row.id, dataRows, action)\n        }\n      }\n    })\n\n    if (mutation.isPending) {\n      return (\n        <Button variant=\"ghost\" disabled className={mergeClasses(\"h-8 w-8 p-0\")}>\n          <Icon icon=\"spinner\" spin />\n        </Button>\n      )\n    }\n\n    return (\n      <>\n        {columnDescription.buttons?.map((btn, idx) => {\n          if (btn.buttons) {\n            return (\n              <DropdownMenu key={idx}>\n                <DropdownMenuTrigger asChild onClick={e => e.stopPropagation()}>\n                  <Button variant=\"ghost\" className={mergeClasses(\"h-8 w-8 p-0\")}>\n                    <span className={mergeClasses(\"sr-only\")}>Open menu</span>\n                    <DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon=\"radix-dots-horizontal\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\">\n                  {btn.buttons.map((subBtn, idx) => (\n                    <DropdownMenuItem key={idx} onClick={() => subBtn.actions && mutation.mutate(subBtn.actions)} className=\"flex gap-2\">\n                      {subBtn.icon && (\n                        <DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon={subBtn.icon} />\n                      )}\n                      {subBtn.label ? subBtn.label : null}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n            )\n          } else {\n            return (\n              <Button key={idx} variant=\"ghost\"\n                      className=\"h-8 w-8 p-0\"\n                      title={btn.label}\n                      onClick={e => {\n                        e.stopPropagation()\n                        if (btn.actions) mutation.mutate(btn.actions)\n                      }}>\n                {btn.icon && (\n                  <DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon={btn.icon} />\n                )}\n              </Button>\n            )\n          }\n        })}\n      </>\n    )\n  }\n}\n\nasync function dispatchAction(rowId: string, dataRows: Record<string, string>[], action: Action) {\n  const rowIndex = parseInt(rowId)\n  if (isNaN(rowIndex)) throw new Error(\"Expected rowId to be a number, was \" + rowId)\n\n  const dataRow = dataRows[rowIndex]\n  const pubsub = getPubsub()\n\n  if (action.type === \"publish\") {\n    const resolvedValue = resolveTemplateStringAndLogErrors(action.value, {\n      ...pubsub,\n      rowId,\n      ...dataRow\n    })\n    publish(action.topic, resolvedValue)\n  } else if (action.type === \"start-rule\") {\n    await runStartRule(action.startRule, action.parameters ? JSON.stringify(action.parameters) : null, {\n      rowId, ...dataRow\n    })\n    if (action.timestampVariable) {\n      publishUtils.setTimeStampParameter({\n        props: {\n          pubsub,\n          publish,\n          timestampParameters: action.timestampVariable\n        }\n      }, true)\n    }\n  }\n}\n","import { OpaqueSparqlResults } from \"../../../helpers/sparqlResultHelpers\"\nimport { WidgetRow, WidgetColumn } from \"./TablePlusPlus\"\nimport { ColumnDef } from \"@tanstack/react-table\"\nimport { TablePlusPlusConfigOptions } from \"./config-options\"\nimport { createDataColumn } from \"./columns/data-column\"\nimport { createToolButtonsColumn } from \"./columns/tool-buttons-column\"\n\nexport type Modifiers = {\n  uri?: string\n  url?: string\n  icon?: IconModifier\n}\n\nexport type IconModifier = {\n  name?: string\n  color?: string\n  size?: string\n}\n\ntype ColumnId = string\n\nexport type ModifiersRow = Record<ColumnId, Modifiers | undefined>\n\nexport function parseTableWidgetData(data: OpaqueSparqlResults, config: TablePlusPlusConfigOptions) {\n  const columnConfig = Array.isArray(config.columnConfig) ? config.columnConfig : []\n  const globalFilterColumnIds = config.idToFilterTextOf\n    ? new Set(config.idToFilterTextOf.split(','))\n    : null\n\n  const columnInfoByVarName: Record<string, ColumnInfo> = {}\n  const dataColumns: WidgetColumn[] = []\n  const dataColumnsById: Record<string, ColumnDef<WidgetRow>> = {}\n  const hiddenColumns = new Set<string>()\n  const modifiersRows: ModifiersRow[] = []\n  const dataRows: Record<string, string>[] = []\n  const columnModifiers: Record<string, string[]> = {}\n\n  for (const varName of data.head.vars) {\n    const column = getColumnInfo(varName)\n    columnInfoByVarName[varName] = column\n    if (column.modifier) {\n      if (!columnModifiers[column.id]) columnModifiers[column.id] = []\n      columnModifiers[column.id].push(column.modifier)\n      continue\n    }\n\n    const dataTypeUri = getUniqueColumnDataTypeUri(column.id, data)\n    const columnIdx = columnConfig.findIndex(colDesc => colDesc.id === column.id)\n    if (columnIdx === -1) continue\n\n    const columnDescription = columnConfig[columnIdx]\n    const dataColumn = createDataColumn(column.id, dataTypeUri, modifiersRows, columnDescription, config)\n    dataColumn.width = columnDescription?.width\n    dataColumns[columnIdx] = dataColumn\n    dataColumnsById[column.id] = dataColumn\n    if (columnDescription?.hidden) {\n      // Column configured to be hidden, make visibility *not* toggleable by end-user\n      dataColumn.enableHiding = false\n      hiddenColumns.add(column.id)\n    }\n    dataColumn.enableGlobalFilter = globalFilterColumnIds === null || globalFilterColumnIds.has(column.id)\n  }\n\n  for (const binding of data.results.bindings) {\n    const row: Record<string, string> = {}\n    const modifiersRow: ModifiersRow = {}\n    for (const varName in binding) {\n      const column = columnInfoByVarName[varName]\n      if (varName in dataColumnsById) {\n        row[varName] = binding[varName].value\n      }\n\n      if (column.modifier) {\n        addModifier(modifiersRow, column, binding[varName].value)\n      }\n    }\n\n    dataRows.push(row)\n    modifiersRows.push(modifiersRow)\n  }\n\n  for (const columnId in columnModifiers) {\n    const modifiers = columnModifiers[columnId]\n    if (modifiers.includes('uri') && modifiers.includes('url')) {\n      alert(`query-variable \"${columnId}\" has modifiers \"_URL\" and \"_URI\". You cannot have both as it is ambiguous what on-click-modifier should be applied.`)\n    }\n  }\n\n  columnConfig.forEach((columnDescription, i) => {\n    const id = columnDescription.id\n    if (id in dataColumnsById) return\n    if (!columnDescription.buttons) return\n    dataColumns[i] = createToolButtonsColumn(id, dataRows, columnDescription)\n  })\n\n  return {\n    dataIds: new Set(Object.keys(dataColumnsById)),\n    dataColumns,\n    dataRows,\n    hiddenColumns\n  }\n\n  function addModifier(modifiersRow: ModifiersRow, column: ColumnInfo, value: string) {\n    if (!(column.id in modifiersRow)) {\n      modifiersRow[column.id] = {}\n    }\n    const modifiers = modifiersRow[column.id]!\n\n    switch (column.modifier) {\n      case \"icon\":\n        if (!modifiers.icon) modifiers.icon = {}\n        modifiers.icon.name = value\n        break\n      case \"iconsize\":\n        if (!modifiers.icon) modifiers.icon = {}\n        modifiers.icon.size = value\n        break\n      case \"iconcolor\":\n        if (!modifiers.icon) modifiers.icon = {}\n        modifiers.icon.color = value\n        break\n      case \"uri\":\n        modifiers.uri = value\n        break\n      case \"url\":\n        modifiers.url = value\n        break\n      default:\n        console.warn(`Unrecognized Table++ modifier: ${column.modifier}`)\n    }\n  }\n}\n\ntype ColumnInfo = ReturnType<typeof getColumnInfo>\n\nfunction getColumnInfo(varName: OpaqueSparqlResults['head']['vars'][number]) {\n  type RegexpMatch = null | {groups: {id: string, modifier?: string}}\n  const regexp = /(?<id>[a-zA-Z0-9]+)(_(?<modifier>[a-zA-Z0-9]+))?/\n  const match = varName.match(regexp) as RegexpMatch\n\n  if (!match?.groups) throw new Error(`unable to parse data.head.vars: ${varName}`)\n  return {\n    id: match.groups.id,\n    modifier: match.groups.modifier ? match.groups.modifier.toLowerCase() : null\n  }\n}\n\nfunction getUniqueColumnDataTypeUri(columnKey: string, data: OpaqueSparqlResults) {\n  const dataTypeSet = new Set<string>()\n  for (const binding of data.results.bindings) {\n    if (!(columnKey in binding)) continue\n    const data = binding[columnKey]\n    dataTypeSet.add((data as any)[\"datatype\"])\n  }\n\n  if (dataTypeSet.size !== 1) return null\n  return [ ...dataTypeSet ][0]\n}\n\n","import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { mergeClasses } from \"../../helpers/styling\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={mergeClasses(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={mergeClasses(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={mergeClasses(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n                          className,\n                          isActive,\n                          size = \"icon\",\n                          children,\n                          ...props\n                        }: PaginationLinkProps) => (\n  <a\n    data-active={String(isActive)}\n    aria-current={isActive ? \"page\" : undefined}\n    aria-label=\"Select page\"\n    className={mergeClasses(\n      \"hover:no-underline cursor-pointer\",\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  >{children}</a>\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n                              className,\n                              ...props\n                            }: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={mergeClasses(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n                          className,\n                          ...props\n                        }: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={mergeClasses(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n                              className,\n                              ...props\n                            }: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={mergeClasses(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}","import * as React from 'react'\nimport clsx from 'clsx'\nimport { TablePlusPlusConfigOptions } from \"./config-options\"\nimport {BaseWidgetProps, SparqlWidgetProps} from '../../../helpers/widget'\n\nimport {mergeClasses} from '../../../helpers/styling'\n\nimport {Row, ColumnDef, ColumnFiltersState, PaginationState, SortingState, VisibilityState,\n        flexRender, getCoreRowModel, getFilteredRowModel, getPaginationRowModel,\n        getSortedRowModel, useReactTable, RowData} from \"@tanstack/react-table\"\n\nimport {ChevronDownIcon, DotsHorizontalIcon } from '@radix-ui/react-icons'\n\nimport {Table, TableBody, TableCell, TableHead, TableHeader, TableFooter, TableRow, TableColGroup, TableCol} from '../../ui-primitives/table'\nimport {DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent,\n        DropdownMenuItem, DropdownMenuLabel, DropdownMenuSeparator,\n        DropdownMenuTrigger} from '../../ui-primitives/dropdown-menu'\nimport {Button} from '../../ui-primitives/button'\nimport {Checkbox} from '../../ui-primitives/checkbox'\nimport {Input} from '../../ui-primitives/input'\nimport { getFilterFns } from \"./filters/registry\"\nimport { parseTableWidgetData } from \"./parse-table-widget-data\"\nimport PublishUtils from \"../../../helpers/PublishUtils\"\nimport {\n  Pagination, PaginationContent, PaginationEllipsis, PaginationItem,\n  PaginationLink, PaginationNext, PaginationPrevious\n} from \"../../ui-primitives/pagination\"\nimport { useDependentState } from \"../../../hooks/use-dependent-state\"\n\ndeclare module \"@tanstack/react-table\" {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface ColumnDefBase<TData extends RowData, TValue = unknown> {\n    width?: string\n  }\n}\n\nexport type WidgetRow = Record<string, any>\nexport type WidgetColumn = ColumnDef<WidgetRow>\n\nexport type WidgetColumnHeaderComponent = Exclude<NonNullable<WidgetColumn['header']>, string>\nexport type WidgetColumnHeaderComponentProps = Parameters<WidgetColumnHeaderComponent>[0]\nexport type WidgetColumnHeaderComponentReturn = ReturnType<WidgetColumnHeaderComponent>\n\nexport type WidgetColumnCellComponent = Exclude<NonNullable<WidgetColumn['cell']>, string>\nexport type WidgetColumnCellComponentProps = Parameters<WidgetColumnCellComponent>[0]\nexport type WidgetColumnCellComponentReturn = ReturnType<WidgetColumnCellComponent>\n\n\ntype Props = BaseWidgetProps\n           & SparqlWidgetProps\n           & TablePlusPlusConfigOptions\n\nconst TABLE_DATA_PLACEHOLDER = {dataIds: new Set<string>(), dataColumns: [], dataRows: [], hiddenColumns: new Set<string>()}\nconst DEFAULT_COLUMN_WIDTH = \"auto\"\n\nexport default function TablePlusPlus(props: Props) {\n\n  const getRowValueToPublishOnSelection = (row: Row<WidgetRow>) => {\n    if (!props.variableToPublishOnSelection) return null\n    if (!props.data) return null\n\n    const values = props.data.results.bindings[row.index]\n    const value = values[props.variableToPublishOnSelection]\n    return value ? value.value : null\n  }\n\n  const publishLastSelectedRow = (row: Row<WidgetRow>) => {\n    const rowValue = getRowValueToPublishOnSelection(row)\n    if (!props.lastSelectedRowTopic) return\n    if (!rowValue) return\n    props.publish(props.lastSelectedRowTopic, rowValue)\n  }\n\n  const {dataIds, dataColumns, dataRows, hiddenColumns} = React.useMemo(() => {\n    if (!props.data) return TABLE_DATA_PLACEHOLDER\n\n    const tableData = parseTableWidgetData(props.data, props)\n   if (props.selectionMode === \"MULTIPLE\") tableData.dataColumns.unshift(createSelectionColumn(publishLastSelectedRow))\n    if (props.enableMockActions) tableData.dataColumns.push(createMockActionsColumn())\n    return tableData\n  }, [\n    props.data,\n    props.columnConfig,\n    props.idToFilterTextOf,\n    props.selectionMode,\n    props.enableMockActions\n  ])\n\n  const [pagination, setPagination] = useDependentState<PaginationState>((prevPagination) => ({\n    pageIndex: prevPagination?.pageIndex ?? 0,\n    pageSize: props.paginationPageSize ? parseInt(props.paginationPageSize) : 50\n  }), [ props.paginationPageSize ])\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [globalFilter, setGlobalFilter] = React.useState(\"\")\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({})\n  const actualColumnVisibility = React.useMemo<VisibilityState>(() => {\n    const trueVisibility = { ...columnVisibility }\n    for (const id of hiddenColumns) {\n      trueVisibility[id] = false\n    }\n    return trueVisibility\n  }, [ columnVisibility, hiddenColumns ])\n\n  const [rowSelection, setRowSelection] = React.useState({})\n\n  const table = useReactTable({\n    data: dataRows,\n    columns: dataColumns,\n    filterFns: getFilterFns(),\n    onPaginationChange: setPagination,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: props.paginationEnabled ? getPaginationRowModel() : undefined,\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      pagination,\n      sorting,\n      globalFilter,\n      columnFilters,\n      columnVisibility: actualColumnVisibility,\n      rowSelection},\n    enableMultiSort: false\n  })\n\n  const selectedRowSubscriptionValue = props.selectedRowSubscription && props.pubsub[props.selectedRowSubscription]\n  const selectedRowSubscriptionTimestamp = props.selectedRowSubscription && props.pubsub[`${props.selectedRowSubscription}Timestamp`]\n  React.useEffect(() => {\n    const rowIdToSelect = selectedRowSubscriptionValue\n      ? table.getRowModel().rows.find(row => getRowValueToPublishOnSelection(row) === selectedRowSubscriptionValue)?.id\n      : null\n\n    setRowSelection(rowIdToSelect ? {\n      [rowIdToSelect]: true\n    } : {})\n  }, [ table.getRowModel(), selectedRowSubscriptionValue, selectedRowSubscriptionTimestamp ])\n\n  React.useEffect(() => {\n    if (!props.selectedRowsTopic) return\n\n    const values = table.getSelectedRowModel().rows\n      .map(row => getRowValueToPublishOnSelection(row) ?? null)\n      .filter(uri => uri != null) as string[]\n\n    props.publish(props.selectedRowsTopic, PublishUtils.getListAsSingleValue(props.multipleselectparametertype, values))\n  }, [ rowSelection ])\n\n  if (props.idToFilterTextOf && dataIds.size && !dataIds.has(props.idToFilterTextOf))\n    console.error([\n      `cannot filter on \"${props.idToFilterTextOf}\"`,\n      `as we only have the following IDs available: ${[...dataIds.values()].join(', ')}`])\n\n  const tableFilters = !props.showFilters ? null : (\n    <div className={mergeClasses(\"flex items-center py-2 gap-2\")}>\n      <Input\n        type=\"search\"\n        placeholder=\"Search...\"\n        value={globalFilter}\n        onChange={e => setGlobalFilter(e.currentTarget.value)}\n        className={mergeClasses(\"flex-grow\")}\n      />\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"outline\" className={mergeClasses(\"ml-auto\")}>\n            Columns <ChevronDownIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\">\n          {table\n            .getAllColumns()\n            .filter((column) => column.getCanHide())\n            .map((column) => {\n              return (\n                <DropdownMenuCheckboxItem\n                  key={column.id}\n                  className={mergeClasses(\"capitalize\")}\n                  checked={column.getIsVisible()}\n                  onCheckedChange={(value) =>\n                    column.toggleVisibility(!!value)\n                  }\n                >\n                  {column.id}\n                </DropdownMenuCheckboxItem>\n              )\n            })}\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>)\n\n  const tableHeaderItems = props.hideColumnHeaders? null : table.getHeaderGroups().map((headerGroup) => (\n    <TableRow key={headerGroup.id}>{headerGroup.headers.map((header) => (\n      <TableHead key={header.id}>\n        {header.isPlaceholder\n          ? null\n          : flexRender(header.column.columnDef.header, header.getContext())}\n      </TableHead>))}\n    </TableRow>))\n\n  const tableRowItems = (table.getRowModel().rows?.length\n    ? table.getRowModel().rows.map((row) => (\n      <TableRow key={row.id}\n                className={clsx({\n                  \"cursor-pointer hover:bg-indigo-50\": props.selectionMode === \"SINGLE\",\n                  \"!bg-indigo-100\": row.getIsSelected(),\n                  \"text-indigo-900\": row.getIsSelected()\n                })}\n                data-state={row.getIsSelected() && \"selected\"}>\n        {row.getVisibleCells().map((cell) => (\n          <TableCell key={cell.id} onClick={props.selectionMode === \"SINGLE\" ? () => {\n            table.setRowSelection({\n              [row.id]: true\n            })\n            publishLastSelectedRow(row)\n          } : undefined}>\n            {flexRender(cell.column.columnDef.cell, cell.getContext())}\n          </TableCell>\n        ))}\n      </TableRow>\n      ))\n    : (\n      <TableRow>\n        <TableCell colSpan={dataColumns.length} className={mergeClasses(\"h-24 text-center\")}>\n          No results.\n        </TableCell>\n      </TableRow>\n    ))\n\n  const renderTablePagination = () => {\n    const totalPages = table.getPageCount()\n    const pageIndex = pagination.pageIndex\n\n    const maxPageNumbers = 7\n\n    const halfMaxPageNumbers = Math.floor(maxPageNumbers / 2)\n    const startPage = pageIndex >= totalPages - halfMaxPageNumbers - 1\n      ? Math.max(0, totalPages - maxPageNumbers)\n      : Math.max(0, pageIndex - halfMaxPageNumbers)\n    const endPage = pageIndex <= halfMaxPageNumbers\n      ? Math.min(maxPageNumbers - 1, totalPages - 1)\n      : Math.min(pageIndex + halfMaxPageNumbers, totalPages - 1)\n\n    const pages = []\n\n    const createPageButton = (page: number) => (\n      <PaginationItem key={page}>\n        <PaginationLink href=\"#\"\n                        onClick={() => table.setPageIndex(page)}\n                        isActive={pageIndex === page}>\n          {page + 1}\n        </PaginationLink>\n      </PaginationItem>\n    )\n\n    if (startPage > 0) {\n      pages.push(createPageButton(0))\n      if (startPage > 1) pages.push(<PaginationEllipsis />)\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(createPageButton(i))\n    }\n\n    if (endPage < totalPages - 1) {\n      if (endPage < totalPages - 2) pages.push(<PaginationEllipsis />)\n      pages.push(createPageButton(totalPages - 1))\n    }\n\n    return (\n      <Pagination>\n        <PaginationContent>\n          <PaginationItem>\n            <PaginationPrevious href=\"#\"\n                                onClick={() => table.previousPage()}\n                                isActive={table.getCanPreviousPage()} />\n          </PaginationItem>\n          {pages}\n          <PaginationItem>\n            <PaginationNext href=\"#\"\n                            onClick={() => table.nextPage()}\n                            isActive={table.getCanNextPage()} />\n          </PaginationItem>\n        </PaginationContent>\n      </Pagination>\n    )\n  }\n\n  const tableFooter = (\n    <div className={mergeClasses(\"flex items-center justify-end space-x-2 py-4\")}>\n      {props.selectionMode === \"MULTIPLE\" &&\n        <div className={mergeClasses(\"flex-1 text-sm text-muted-foreground\")}>\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n      }\n      {props.paginationEnabled && (\n        <div className={mergeClasses(\"space-x-2\")}>\n          {renderTablePagination()}\n        </div>\n      )}\n    </div>\n  )\n\n  const columnCount = Math.max(...table.getHeaderGroups().map((headerGroup) => headerGroup.headers.length))\n\n  return (\n    <div className=\"w-full h-full overflow-y-auto\" style={{\n      scrollbarWidth: \"thin\"\n    }}>\n      {tableFilters}\n      <Table className=\"rounded-md relative\">\n        <TableColGroup>\n          {table.getAllColumns().map((column) => (\n            <TableCol key={column.id} style={{ width: column.columnDef.width ?? DEFAULT_COLUMN_WIDTH }} />\n          ))}\n        </TableColGroup>\n        <TableHeader className=\"sticky top-0 bg-white\">\n          {tableHeaderItems}\n        </TableHeader>\n        <TableBody>\n          {tableRowItems}\n        </TableBody>\n        <TableFooter>\n          <tr>\n            <td colSpan={columnCount}>{tableFooter}</td>\n          </tr>\n        </TableFooter>\n      </Table>\n    </div>\n  )\n}\n\n\nfunction createSelectionColumn(publishLastSelectedRow: (row: Row<WidgetRow>) => void): WidgetColumn {\n  return {\n    id: \"select\",\n    header: SelectAllCheckbox,\n    cell: SelectRowCheckbox,\n    enableSorting: false,\n    enableHiding: false,\n    width: DEFAULT_COLUMN_WIDTH,\n  }\n\n  function SelectAllCheckbox({table}: WidgetColumnHeaderComponentProps): WidgetColumnCellComponentReturn {\n    return (\n      <Checkbox aria-label=\"Select all\"\n                onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n                checked={\n                  table.getIsAllPageRowsSelected() ||\n                  (table.getIsSomePageRowsSelected() && \"indeterminate\")\n                }/>)\n  }\n\n  function SelectRowCheckbox({row}: WidgetColumnCellComponentProps): WidgetColumnCellComponentReturn {\n    return (\n      <Checkbox aria-label=\"Select row\"\n                checked={row.getIsSelected()}\n                onCheckedChange={(value) => {\n                  if (value) publishLastSelectedRow(row)\n                  row.toggleSelected(!!value)\n                }} />)\n  }\n}\n\n\nfunction createMockActionsColumn(): WidgetColumn {\n  return {\n    id: \"actions\",\n    enableHiding: false,\n    cell: RowAction,\n    width: DEFAULT_COLUMN_WIDTH,\n  }\n\n  function RowAction(): WidgetColumnCellComponentReturn {\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"ghost\" className={mergeClasses(\"h-8 w-8 p-0\")}>\n              <span className={mergeClasses(\"sr-only\")}>Open menu</span>\n              <DotsHorizontalIcon className={mergeClasses(\"h-4 w-4\")} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem onClick={alertMock}>\n              Copy payment ID</DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem onClick={alertMock}>\n              View customer</DropdownMenuItem>\n            <DropdownMenuItem onClick={alertMock}>\n              View payment details</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      )\n    }\n}\n\nfunction alertMock() {\n  alert('this is a mockkk')\n}\n\n","import { useReducer } from \"react\"\n\n/**\n * Hook that forces a re-render, similar to `forceUpdate` in class components.\n */\nexport function useForceUpdate(): () => void {\n  // Create a new empty object each update, so that the new state always\n  // has different referential equality than the previous state\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  return forceUpdate\n}\n","import { DependencyList, Dispatch, SetStateAction, useCallback, useMemo, useRef } from \"react\"\nimport { useForceUpdate } from \"./use-force-update\"\n\nexport function useDependentState<S>(\n  stateCreator: (prevState?: S) => S,\n  deps: DependencyList,\n): [S, Dispatch<SetStateAction<S>>] {\n  const forceUpdate = useForceUpdate()\n\n  const initialState = useMemo(() => stateCreator(), [])\n  const stateRef = useRef<S>(initialState)\n\n  const prevDeps = useRef(deps)\n\n  if (!depsAreEqual(prevDeps.current, deps)) {\n    stateRef.current = stateCreator(stateRef.current)\n    prevDeps.current = deps\n  }\n\n  const updateState = useCallback(function (action: SetStateAction<S>) {\n    const nextState = isFunction(action) ? action(stateRef.current) : action\n    stateRef.current = nextState\n    forceUpdate()\n  }, [])\n\n  return [ stateRef.current, updateState ]\n}\n\nfunction depsAreEqual<D extends DependencyList>(prevDeps: D, deps: D): boolean {\n  return (\n    prevDeps.length === deps.length &&\n    deps.every((dep, index) => Object.is(dep, prevDeps[index]))\n  );\n}\n\nfunction isFunction<S>(setStateAction: SetStateAction<S>): setStateAction is (prevState: S) => S {\n  return typeof setStateAction === \"function\"\n}\n"],"sourceRoot":""}