{"version":3,"sources":["components/widgets/bb/rules/StartRuleButton.module.css","components/widgets/bb/rules/StartRuleButton.js"],"names":["module","exports","StartRuleButton","state","enabled","handleButtonClick","rule","props","startRule","alert","setState","setLoading","runStartRule","parameters","PublishUtils","setTimeStampParameter","msg","failureMessage","tooltip","this","title","disable","disableParameter","dvalue","pubsub","beginIcon","endIcon","className","styles","openButton","button1","buttonStyles","button","color","size","startIcon","onClick","variant","disabled","Boolean","customStyling","hasButtonShadow","style","buttonBorderRadius","textColor","bgColor","buttonFontSize","buttonFontFamily","Component"],"mappings":"2HACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,QAAU,iCAAiC,WAAa,oCAAoC,YAAc,qCAAqC,QAAU,iCAAiC,WAAa,oCAAoC,WAAa,oCAAoC,yBAAyB,gDAAgD,uBAAuB,8CAA8C,mBAAqB,4CAA4C,MAAQ,+BAA+B,aAAe,sCAAsC,MAAQ,+BAA+B,UAAY,mCAAmC,WAAa,oCAAoC,YAAc,qCAAqC,OAAS,gCAAgC,MAAQ,+BAA+B,MAAQ,+B,2OCY33BC,EAAe,iKA6BjC,OA7BiC,oCAClCC,MAAQ,CAACC,SAAQ,GAAM,EAEvBC,kBAAiB,gCAAG,gGACc,GAA1BC,EAAM,EAAKC,MAAMC,UACb,CAAD,eACqB,OAA5BC,MAAM,sBAAsB,0BAMD,GANC,SAK5B,EAAKC,SAAS,CAAEN,SAAQ,IACxB,EAAKG,MAAMI,YAAW,GACX,UAAPL,EAAc,0DAIRM,YAAaN,EAAM,EAAKC,MAAMM,YAAW,QAGnDC,IAAaC,sBAAsB,gBAAK,GACzC,kDAEOC,EAAM,EAAKT,MAAMU,gBAAc,kCAA+BX,GACpEG,MAAMO,GAAI,QAGqB,OAHrB,UAEV,EAAKT,MAAMI,YAAW,GACtB,EAAKD,SAAS,CAAEN,SAAQ,IAAO,6EAElC,EAmEA,OAnEA,mCAED,WAAU,IAAD,OAEHc,EAAUC,KAAKZ,MAAMW,QACV,MAAXA,IACFA,EAAU,IAEZ,IAAIE,EAAQD,KAAKZ,MAAMa,MACV,MAATA,IACFA,EAAQ,IAGV,IAAIC,GAAQ,EACZ,GAAwB,MAApBF,KAAKZ,MAAMc,QACf,CACE,IAAIC,EAAmBH,KAAKZ,MAAMc,QAC9BE,EAAOJ,KAAKZ,MAAMiB,OAAOF,GAEjB,MAARC,IAEFF,GAAQ,GAEE,oCAARE,IAEFF,GAAQ,EAGZ,CAEwB,GAApBF,KAAKhB,MAAMC,UAEbiB,GAAQ,GAGV,IAAII,EAAYN,KAAKZ,MAAMkB,UACvBC,EAAUP,KAAKZ,MAAMmB,QAGzB,OAEI,cAAC,IAAO,CAACN,MAAOF,EAAQ,SACtB,cAAC,IAAM,CACLS,UAAS,UAAKC,IAAOC,WAAU,YAAID,IAAOE,QAAO,YAAIC,IAAaC,QAClEC,MAAM,OACNC,KAAK,QACLR,QAASA,GAAW,cAAC,IAAI,UAAEA,IAC3BS,UAAWV,GAAa,cAAC,IAAI,UAAEA,IAC/BW,QAAS,kBAAM,EAAK/B,mBAAmB,EACvCgC,QAAQ,YACRC,SAAUjB,EACV,sBAAqBkB,QAAQpB,KAAKZ,MAAMiC,eACxC,yBAAwBD,QAAQpB,KAAKZ,MAAMkC,iBAC3CC,MAAO,CACL,yBAA0BvB,KAAKZ,MAAMoC,mBACrC,eAAgBxB,KAAKZ,MAAMqC,UAC3B,qBAAsBzB,KAAKZ,MAAMsC,QACjC,qBAAsB1B,KAAKZ,MAAMuC,gBAAkB,UACnD,uBAAwB3B,KAAKZ,MAAMwC,kBAAoB,WACvD,SAED3B,KAMX,KAAC,EAhGiC,CAAS4B,Y","file":"static/js/34.3da7fa4d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"StartRuleButton_main__Y05k9\",\"button1\":\"StartRuleButton_button1__Ze1L8\",\"openButton\":\"StartRuleButton_openButton__18k2h\",\"closeButton\":\"StartRuleButton_closeButton__38wAs\",\"divtext\":\"StartRuleButton_divtext__3Iir3\",\"textfield2\":\"StartRuleButton_textfield2__3Lykh\",\"weirdlabel\":\"StartRuleButton_weirdlabel__2F3m0\",\"MuiInputLabel-outlined\":\"StartRuleButton_MuiInputLabel-outlined__1WEr0\",\"MuiInputLabel-shrink\":\"StartRuleButton_MuiInputLabel-shrink__3G5D1\",\"defaultValueButton\":\"StartRuleButton_defaultValueButton__MuBgT\",\"outer\":\"StartRuleButton_outer__3F06_\",\"productTitle\":\"StartRuleButton_productTitle__3JUE-\",\"inner\":\"StartRuleButton_inner__KQqUf\",\"buttonDiv\":\"StartRuleButton_buttonDiv__3_bnj\",\"linkbutton\":\"StartRuleButton_linkbutton__1TvzD\",\"verstrekken\":\"StartRuleButton_verstrekken__1MdS3\",\"appBar\":\"StartRuleButton_appBar__whduk\",\"title\":\"StartRuleButton_title__3Hd2f\",\"vpane\":\"StartRuleButton_vpane__NMg8C\"};","import React, { Component } from 'react'\r\nimport styles from './StartRuleButton.module.css'\r\nimport buttonStyles from '../Button.module.css'\r\n\r\nimport {\r\n  Button,\r\n  Tooltip,\r\n  Icon\r\n} from '@mui/material'\r\n\r\nimport PublishUtils from '../../../../helpers/PublishUtils'\r\nimport { runStartRule } from \"../../../../helpers/run-start-rule\"\r\n\r\nexport default class StartRuleButton extends Component {\r\n  state = {enabled:true }\r\n\r\n  handleButtonClick = async () => {\r\n    const rule =this.props.startRule\r\n    if (!rule) {\r\n      alert(\"no rule configured\");\r\n      return\r\n    }\r\n\r\n    try {\r\n      this.setState({ enabled:false })\r\n      this.props.setLoading(true)\r\n      if (rule===\"EMPTY\")\r\n      {}\r\n      else\r\n      {\r\n          await runStartRule(rule, this.props.parameters)\r\n      }\r\n     // console.log(\"set Timestamp\");\r\n      PublishUtils.setTimeStampParameter(this,true)\r\n     // console.log(\"rules executed successfully\")\r\n    } catch (e) {\r\n      const msg = this.props.failureMessage || `error in executing rule ${rule}`\r\n      alert(msg)\r\n    } finally {\r\n      this.props.setLoading(false)\r\n      this.setState({ enabled:true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n \r\n    let tooltip = this.props.tooltip\r\n    if (tooltip == null) {\r\n      tooltip = ''\r\n    }\r\n    let title = this.props.title\r\n    if (title == null) {\r\n      title = ''\r\n    }\r\n   \r\n    let disable=false;\r\n    if (this.props.disable!=null)\r\n    {\r\n      var disableParameter = this.props.disable;\r\n      var dvalue=this.props.pubsub[disableParameter];\r\n      //console.log(disableParameter,dvalue)\r\n      if (dvalue==null) \r\n      {\r\n        disable=true;\r\n      }\r\n      if (dvalue==\"http://www.buildingbits.nl/reset\")\r\n      {\r\n        disable=true;\r\n      }\r\n     \r\n    }\r\n\r\n    if (this.state.enabled==false)\r\n    {\r\n      disable=true;\r\n    }\r\n\r\n    let beginIcon = this.props.beginIcon\r\n    let endIcon = this.props.endIcon\r\n\r\n   \r\n    return (\r\n     \r\n        <Tooltip title={tooltip}>\r\n          <Button\r\n            className={`${styles.openButton} ${styles.button1} ${buttonStyles.button}`}\r\n            color=\"grey\"\r\n            size=\"small\"\r\n            endIcon={endIcon && <Icon>{endIcon}</Icon>}\r\n            startIcon={beginIcon && <Icon>{beginIcon}</Icon>}\r\n            onClick={() => this.handleButtonClick()}\r\n            variant=\"contained\"\r\n            disabled={disable}\r\n            data-custom-styling={Boolean(this.props.customStyling)}\r\n            data-has-button-shadow={Boolean(this.props.hasButtonShadow)}\r\n            style={{\r\n              '--button-border-radius': this.props.buttonBorderRadius,\r\n              '--text-color': this.props.textColor,\r\n              '--background-color': this.props.bgColor,\r\n              '--button-font-size': this.props.buttonFontSize || 'inherit',\r\n              '--button-font-family': this.props.buttonFontFamily || 'inherit',\r\n            }}\r\n          >\r\n            {title}\r\n          </Button>\r\n        </Tooltip>\r\n\r\n       \r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}