{"version":3,"sources":["components/widgets/bb/editor/BBDForm.module.css","components/widgets/bb/editor/BBDFormCreateAndAdd.js","components/widgets/bb/editor/BBDFormAddExisting.js","components/widgets/bb/editor/BBDFormRelationComponent.js","components/widgets/bb/editor/BBDFormBuilderFromLDResource.js","components/widgets/bb/editor/BBDFormMultiSelectComponent.tsx","components/widgets/bb/editor/BBDFormColorPickerComponent.tsx","components/widgets/bb/editor/create-result-json.ts","utils/create-random-hex-color.ts","components/widgets/bb/editor/BBDForm.js"],"names":["module","exports","BBDFormCreateAndAdd","x","ref","React","createRef","handleClose","e","current","remove","Dialog","open","onClose","PaperProps","sx","width","height","DialogTitle","DialogContent","DialogContentText","DialogActions","disableSpacing","gap","Button","variant","onClick","BBDFormAddExisting","refParent","props","input","selected","selectBoxChangeEvent","row","rows","target","checked","push","nn","uri","splice","handleSubmit","ar","value","Array","isArray","n","change","id","getTable","axios","CancelToken","query","decodeURIComponent","propuri","graph","window","top","results","data","bindings","o","binding","label","label2","includes","split","t","length","console","log","table","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","color","padding","Checkbox","disabled","inputProps","TableBody","map","onChange","renderMe","div","element","document","createElement","appendChild","ReactDOM","render","BBDFormRelationComponent","useRef","formOptions","useFormApi","getUriName","ts","useFieldApi","meta","dialog","no","title","mt","minWidth","align","startIcon","border","scope","prop","schema","hyperlinkPar","publish","hyperlink","className","styles","link","inlineblock","deleteClick","BBDFormBuilderFromLDResource","bbdform","this","Schema","filterOptions","createFilterOptions","SUPPORTED_FLEXIBLE_DATA_TYPES","Set","BBDFormMultiSelectComponent","form","valuesRef","setValues","updater","values","useFormMultiInputValue","dataType","type","isCreatable","has","optionValues","useMemo","option","options","find","availableOptions","presentValueSet","filter","opt","FormControl","fullWidth","Autocomplete","multiple","freeSolo","_","newValues","optionValue","renderTags","renderInput","params","TextField","margin","placeholder","name","InputLabelProps","shrink","filtered","inputValue","isExisting","some","onDragEnd","over","active","oldIdx","findIndex","v","newIdx","arrayMove","reorderValues","style","maxHeight","scrollbarWidth","fontFamily","role","items","sortable","Tooltip","BBDFormColorPickerComponent","useState","setOpen","setColor","Popover","isOpen","positions","onClickOutside","containerClassName","content","onFocus","currentTarget","InputProps","startAdornment","RDF_LIST","determineValueType","fieldSchemaType","isValidUri","ONE_HEX_DIGIT_SPACE","NUMBER_OF_DIGITS","VALUE_SPACE","createRandomHexColor","randomColor","Math","floor","random","toString","repeat","BBDForm","state","fields","componentTypes","TEXT_FIELD","validate","validatorTypes","REQUIRED","CHECKBOX","DATE_PICKER","SWITCH","SELECT","SLIDER","submitFormCommand","waardes","extra","masseditmode","uris","getAllUris","ooR","getResultJSON","oo","ruleTagAfterSubmit","parameters","PublishUtils","processStringForParameters","pa","JSON","parse","ruleTagAfterSubmitParameters","Command","sendCommand","submitFormSuccesful","submitFormFailure","setTimeStampParameter","successMessage","toast","closePopup","closeDialog","failureMessage","alert","submitInternalParameters","result","key","waarde","parameter","publishMultipleValues","onSubmit","submit","componentMapper","relation","multiselect","colorpicker","pubsub","i","item_def","id_def","propsID","volgorde","encodeURIComponent","propUri","aantal","fieldIsArray","isMulti","isDisabled","required","Boolean","toLowerCase","hidden","hideField","addmodus","clearedValue","initialValue","defaultValue","ee","replace","datatype","inputFormat","outputFormat","FIELD_ARRAY","TEXTAREA","optionLabel","noOptionsMessage","isClearable","simpleValue","decodeURI","collectionType","alreadyAvailable","datatype2","error","schemaById","formValuesById","fieldSchema","rawValue","valuetype","Date","toISOString","listValue","createResultJSON","createClass","cls","getCreateClass","classOrUri","getSchema","resource","processResource","createButton","emptyText","style2","cancelbutton","createClick","submitlabel","submitbuttonlabel","FormTemplate2","submitLabel","children","readonly","formFields","Grid","container","rowSpacing","LocalizationProvider","dateAdapter","AdapterDateFns","FormTemplate","onCancel","Component"],"mappings":"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","file":"static/js/33.7bbedd94.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"BBDForm_grid__2VcLy\",\"bbdform\":\"BBDForm_bbdform__2RjzR\"};","import React, { Component, Fragment,useRef } from 'react'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Button } from '@mui/material';\r\nimport ReactDOM from 'react-dom';\r\nconst BBDFormCreateAndAdd=(x)=>{\r\n\r\n    const ref =React.createRef()\r\n\r\n    const handleClose=(e)=>\r\n{\r\n   \r\n    ref.current.remove();\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n    return (<Dialog ref={ref} open={true} onClose={handleClose}\r\n        PaperProps={{ sx: { width: \"50%\", height: \"70%\" } }}\r\n      >\r\n        <DialogTitle>Create And Add</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>hier dus alle relaties in een selectable table </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions disableSpacing sx={{gap: '10px'}}>\r\n            <Button  variant=\"outlined\"  onClick={(e)=>handleClose(e)}>Cancel</Button>\r\n            <Button variant=\"outlined\"  onClick={handleClose}>Submit</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n      );\r\n\r\n\r\n}\r\n\r\n\r\nexport default BBDFormCreateAndAdd;","import React, { Component, Fragment,useRef } from 'react'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport { Button } from '@mui/material';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport axios from 'axios'\r\n\r\n\r\nconst BBDFormAddExisting=(refParent,props,x,input)=>{\r\n  \r\n    const ref =React.createRef()\r\n   \r\n    var selected=[];\r\n\r\nconst selectBoxChangeEvent=(e,row,rows)=>\r\n{\r\n    if (e.target.checked)\r\n    {\r\n             selected.push(row);\r\n    }\r\n    else\r\n    {\r\n       \r\n        for (var nn in selected)\r\n        {\r\n            var oo=selected[nn];\r\n            if (oo.uri===row.uri)\r\n            {\r\n                selected.splice(nn,1);\r\n                break;\r\n            }        \r\n\r\n        }\r\n        \r\n    }\r\n    //console.log(e.target.checked,row,rows);\r\n\r\n}\r\n\r\n const handleSubmit=(e)=>\r\n {\r\n  \r\n       var ar = [];\r\n       if ((input.value!=null) && (Array.isArray(input.value)) )\r\n       {\r\n         for (var n in input.value)\r\n         {\r\n            ar.push(input.value[n]);\r\n         }\r\n       }\r\n       for (var n in selected)\r\n       {\r\n        ar.push(selected[n]);\r\n       }\r\n     \r\n     x.change(props.id,ar);\r\n\r\n     handleClose();\r\n     \r\n }\r\n   const handleClose=(e)=>\r\n     {\r\n         ref.current.remove();\r\n     }\r\n     const CancelToken = axios.CancelToken\r\n\r\nconst delay=(time) =>{\r\n    return new Promise(resolve => setTimeout(resolve, time));\r\n  }\r\n\r\n\r\n\r\n const getTable=async()=>\r\n {\r\n  \r\n    var query=\"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>   select distinct ?uri ?label ?label2 where {graph ?g {<\"+decodeURIComponent(props.propuri)+\"> rdfs:range/^rdfs:subClassOf* ?cls } graph<\"+decodeURIComponent(props.graph)+\">{?uri a ?cls. optional {?uri rdfs:label ?label} optional {?uri skos:prefLabel ?label2}}}\";\r\n    var results= await window.top.query(query);\r\n    var rows=[];\r\n    try\r\n    {\r\n            for (var n in results.data.results.bindings)\r\n            {\r\n                var o={};\r\n                var binding = results.data.results.bindings[n];\r\n                o.value=binding.uri.value;\r\n                if (binding.label!=null) o.label=binding.label.value;\r\n                if ((o.label==null) && (binding.label2!=null)) o.label=binding.label2.value;\r\n                if (o.label==null)\r\n                {\r\n                    if (o.value.includes(\"#\")) { o.label=o.value.split(\"#\")[1]} else \r\n                    {\r\n                        var t=o.value.split(\"/\");\r\n                        o.label=t[t.length-1];\r\n                    }\r\n                }\r\n                rows.push(o);\r\n                \r\n            }\r\n    }\r\n    catch(e){console.log(e);}\r\n    \r\n       \r\n\r\n    var table= ( \r\n        <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n            <TableCell  color=\"primary\" padding=\"checkbox\">\r\n\r\n          <Checkbox\r\n             disabled={true}\r\n            inputProps={{\r\n              'aria-label': 'select all ',\r\n            }}\r\n          />\r\n        </TableCell>\r\n              <TableCell  color=\"primary\">name</TableCell>\r\n           {//   <TableCell   color=\"primary\" >uri</TableCell>\r\n           }\r\n              </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n\r\n            <TableRow\r\n              key={row.value}\r\n            \r\n            > <TableCell>\r\n                  <Checkbox onChange={(e)=>{selectBoxChangeEvent(e,row,rows)}}>\r\n                  \r\n                  </Checkbox>\r\n                  </TableCell>\r\n              <TableCell >\r\n                {row.label}\r\n              </TableCell>\r\n          {//  <TableCell >{row.value}</TableCell>\r\n          }\r\n             \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n\r\n    renderMe(table);\r\n \r\n }\r\n\r\n\r\n    const renderMe=(table)=>\r\n    {\r\n\r\n        var element= (<Dialog ref={ref} open={true} onClose={handleClose}\r\n        PaperProps={{ sx: { width: \"50%\", height: \"70%\" } }}\r\n      >\r\n        <DialogTitle>Add relations</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText></DialogContentText>\r\n           {table}\r\n        </DialogContent>\r\n        <DialogActions disableSpacing sx={{gap: '10px'}}>\r\n            <Button  variant=\"outlined\"  onClick={(e)=>handleClose(e)}>Cancel</Button>\r\n            <Button variant=\"outlined\"  onClick={handleSubmit}>Submit</Button>\r\n        </DialogActions>\r\n\r\n      </Dialog>\r\n      );\r\n\r\n      var div=React.createElement(\"div\");\r\n      div=document.createElement(\"div\")\r\n      refParent.current.appendChild(div);\r\n      ReactDOM.render(element,div);\r\n    }\r\n\r\n      var table = getTable();\r\n\r\n\r\n}\r\n\r\n\r\nexport default BBDFormAddExisting;","import React, { Component, Fragment,useRef } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/AddLink';\r\nimport CreateIcon from '@mui/icons-material/CreateRounded';\r\nimport Button from '@mui/material/Button';\r\nimport { useFieldApi, useFormApi } from '@data-driven-forms/react-form-renderer';\r\nimport FieldProvider from '@data-driven-forms/react-form-renderer/field-provider';\r\n\r\nimport  BBDFormCreateAndAdd from './BBDFormCreateAndAdd';\r\nimport BBDFormAddExisting from './BBDFormAddExisting';\r\nimport styles from '../../Table.module.css'\r\n\r\n\r\n\r\nconst BBDFormRelationComponent =(props) => \r\n{ \r\n    const ref =useRef(null);\r\n    const formOptions = useFormApi();\r\n\r\n    const addCreateAndAddClick =()=>\r\n    {\r\n      \r\n      const element = new BBDFormCreateAndAdd(props,ref);\r\n        var div=React.createElement(\"div\");\r\n        div=document.createElement(\"div\")\r\n        ref.current.appendChild(div);\r\n        ReactDOM.render(element,div);\r\n   }\r\n\r\n  const getUriName=(uri)=>\r\n  {\r\n    if (uri==null) return null;\r\n    if (uri.includes(\"#\")) return uri.split(\"#\")[1];\r\n    var ts=uri.split(\"/\");\r\n    return ts[ts.length-1];\r\n  }\r\n  const hyperlink=(uri)=>\r\n  {\r\n   \r\n    var prop = formOptions.schema.props.hyperlinkPar;\r\n    if (prop==null) return;\r\n       \r\n    window.top.publish(prop,uri);\r\n  }\r\n\r\n    const addExistingClick =()=>\r\n    {\r\n      \r\n         new BBDFormAddExisting(ref,props,x,input);\r\n       \r\n    }\r\n\r\n        const deleteClick=(uri)=>\r\n        {\r\n           \r\n            try\r\n            {\r\n                var ar=[];\r\n               for (var n in input.value)\r\n               {\r\n                if (input.value[n].uri===uri)\r\n                {\r\n                   \r\n                }\r\n                else\r\n                {\r\n                    ar.push(input.value[n]);\r\n                }\r\n               }\r\n             \r\n              x.change(props.id,ar);\r\n             \r\n            }\r\n            catch(e)\r\n            {\r\n                console.log(e);\r\n            }\r\n         \r\n\r\n\r\n           \r\n        }\r\n      //\r\n\r\n      const {input,meta} =useFieldApi(props);\r\n      const x=useFormApi(props);\r\n\r\n      meta.data.dialog=false;\r\n    \r\n      if ( (input.value==null) || (Array.isArray(input.value)==false) )\r\n      {\r\n       // input.value= [{uri:\"1\",label:\"label 1\"},{uri:\"2\",label:\"label 2\"},{uri:\"3\",label:\"label 3\"}];\r\n       input.value= [];\r\n      }\r\n      var ar=[];\r\n      for (var n in input.value)\r\n      {\r\n        var no= input.value[n];\r\n     \r\n        if (typeof no != \"object\")\r\n        {\r\n             ar.push({uri:no,label:getUriName(no)});\r\n        }\r\n        else\r\n        {\r\n          if ((no.label==null) || (no.label==\"\") )\r\n          {\r\n            no.label= getUriName(no.uri);\r\n          }\r\n          ar.push(no);\r\n        }\r\n      }\r\n       input.value=ar;\r\n\r\n      var title = props.label|| \"relations\" ;\r\n    \r\n          return (\r\n            <Fragment>\r\n          <div ref={ref}></div>\r\n           \r\n            <TableContainer sx={{ mt: 2 }} component={Paper}>\r\n              <Table sx={{ minWidth: 150 }} size=\"small\" aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>{title}</TableCell>\r\n                   \r\n                   <TableCell align=\"right\">\r\n                    <Button onClick={addExistingClick} size=\"small\" variant=\"outlined\" startIcon={<AddIcon />}>add existing</Button>\r\n                   <Button onClick={addCreateAndAddClick} size=\"small\" variant=\"outlined\" startIcon={<CreateIcon />}>create and add</Button>\r\n                   </TableCell>\r\n                   \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n               \r\n                  {input.value.map((row) => (\r\n                    <TableRow\r\n                      key={row.uri}\r\n                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                    >\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                      <div onClick={() => hyperlink(row.uri)} className={styles.link + ' ' + \" \"+styles.inlineblock} >{row.label}</div>\r\n                        \r\n                      \r\n                      </TableCell>\r\n                    \r\n                      <TableCell align=\"right\"><Button size=\"small\" sx={{    \":hover\": {          color: \"blue\" } }} startIcon={<DeleteIcon />} onClick={() => deleteClick(row.uri)} ></Button></TableCell>\r\n                   \r\n                    </TableRow>\r\n                  ))}\r\n                 \r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            </Fragment>\r\n          );\r\n            \r\n\r\n    \r\n}\r\n\r\nexport default BBDFormRelationComponent;","import { Schema } from \"@mui/icons-material\";\r\n\r\nexport class BBDFormBuilderFromLDResource\r\n{\r\n   constructor(bbdform)\r\n   {\r\n    this.bbdform=bbdform;\r\n\r\n   }\r\n   processResource(uri)\r\n   {\r\n       console.log(\"is it a cls or uri \",uri);\r\n\r\n       var schema={};\r\n       return Schema;\r\n   }\r\n}","import React, { SetStateAction, useMemo, useRef } from \"react\";\nimport { useFieldApi, useFormApi } from \"@data-driven-forms/react-form-renderer\"\nimport { FormControl, TextField, Tooltip } from \"@mui/material\"\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\"\nimport { UseFieldApiConfig } from \"@data-driven-forms/react-form-renderer/use-field-api/use-field-api\"\nimport FormFieldGrid from \"@data-driven-forms/mui-component-mapper/form-field-grid/form-field-grid\"\nimport { Cross2Icon, DragHandleDots2Icon } from \"@radix-ui/react-icons\"\nimport { arrayMove, SortableContext } from \"@dnd-kit/sortable\"\nimport { Button } from \"../../../ui-primitives/button\"\nimport { DndContext, DragEndEvent } from \"@dnd-kit/core\"\nimport { SortableItem } from \"../../../sortable/sortable-item\"\nimport { FilterOptionsState } from \"@mui/base/useAutocomplete/useAutocomplete\"\n\nconst filterOptions = createFilterOptions<Option>();\n\ntype Option = {\n  label: string\n  value: string\n}\n\nconst SUPPORTED_FLEXIBLE_DATA_TYPES = new Set([\n  \"http://www.w3.org/2001/XMLSchema#string\"\n])\n\nexport function BBDFormMultiSelectComponent(props: UseFieldApiConfig & {\n  id: string\n  label: string\n  options: Option[]\n  type?: string | null\n  sortable?: boolean\n  collectionType?: string | null\n}) {\n  const { input } = useFieldApi(props)\n  const { values, setValues } = useFormMultiInputValue(props)\n\n  const dataType = props.type && decodeURIComponent(props.type)\n  const isCreatable = !!dataType && SUPPORTED_FLEXIBLE_DATA_TYPES.has(dataType)\n\n  const optionValues = useMemo(() => {\n    return values.map(value => {\n      const option = props.options.find(option => option.value === value)\n      return option ?? { value, label: value }\n    })\n  }, [ values, props.options ])\n\n  const availableOptions = useMemo(() => {\n    const presentValueSet = new Set(values)\n    return props.options.filter(opt => !presentValueSet.has(opt.value))\n  }, [ values, props.options ])\n\n  const reorderValues = (e: DragEndEvent) => {\n    if (!e.over) return\n    if (e.active.id === e.over.id) return\n    setValues(values => {\n      const oldIdx = values.findIndex(v => v === e.active.id)\n      const newIdx = values.findIndex(v => v === e.over!.id)\n      return arrayMove(values, oldIdx, newIdx)\n    })\n  }\n\n  const removeValue = (value: string) => {\n    setValues(values => values.filter(v => v !== value))\n  }\n\n  const handleInputChange = (_: React.SyntheticEvent, optionValues: (string | Option)[]) => {\n    const newValues: string[] = optionValues.map(optionValue => {\n      return typeof optionValue === \"string\" // creation: whenever user types and presses Enter\n        ? optionValue\n        : optionValue.value\n    })\n    setValues(newValues)\n  }\n\n  const creatableFilterOptions = (options: Option[], params: FilterOptionsState<Option>) => {\n    const filtered = filterOptions(options, params)\n    const { inputValue } = params\n\n    const isExisting = options.some((option) => inputValue === option.value)\n    if (inputValue !== '' && !isExisting) {\n      filtered.push({\n        value: inputValue,\n        label: `Add \"${inputValue}\" or press enter`\n      })\n    }\n\n    return filtered\n  }\n\n  return (\n    <FormFieldGrid>\n      <FormControl fullWidth>\n        <Autocomplete\n          options={availableOptions}\n          multiple\n          value={optionValues}\n          freeSolo={isCreatable}\n          onChange={handleInputChange}\n          renderTags={() => \"\"}\n          renderInput={params => (\n            <TextField margin=\"normal\"\n                       label={props.label}\n                       placeholder={isCreatable ? \"Search existing options or type new values to add\" : \"Search\"}\n                       name={input.name}\n                       {...params}\n                       InputLabelProps={{ shrink: true }} /* to always show the label AND placeholder */\n            />\n          )}\n          filterOptions={isCreatable ? creatableFilterOptions : filterOptions}\n        />\n\n        {values.length > 0 && (\n          <DndContext onDragEnd={(e) => reorderValues(e)}>\n            <div className=\"bg-stone-100 border border-slate-600 rounded flex flex-col overflow-y-auto\" style={{\n              maxHeight: \"200px\",\n              scrollbarWidth: \"thin\",\n              fontFamily: \"Roboto, sans-serif\"\n            }} role=\"list\">\n              <SortableContext items={values}>\n                {optionValues.map(optionValue => {\n                  return (\n                    <div key={optionValue.value}\n                         role=\"listitem\"\n                         aria-label={optionValue.label}\n                         className=\"w-full flex gap-1 py-1 pl-2 pr-1 text-xs align-items-center\">\n                      {props.sortable ? (\n                        <SortableItem\n                          id={optionValue.value}\n                          className=\"flex flex-grow gap-1 [&>svg]:hover:opacity-50\">\n                          <DragHandleDots2Icon className=\"opacity-25\" />\n                          <div className=\"flex-grow\">\n                            {optionValue.label}\n                          </div>\n                        </SortableItem>\n                      ) : (\n                        <div className=\"flex-grow\">\n                          {optionValue.label}\n                        </div>\n                      )}\n                      <div className=\"[&>button]:hover:opacity-100\">\n                        <Tooltip title=\"Delete\">\n                          <Button type=\"button\" variant=\"ghost\" className=\"opacity-50 w-5 h-5 p-0\" onClick={() => removeValue(optionValue.value)}>\n                            <Cross2Icon />\n                          </Button>\n                        </Tooltip>\n                      </div>\n                    </div>\n                  )\n                })}\n              </SortableContext>\n            </div>\n          </DndContext>\n        )}\n      </FormControl>\n    </FormFieldGrid>\n  )\n}\n\n/**\n * Hook to deal with tracking and updating the input selection array.\n * It handles some gnarly details with the interaction of MUI, data-driven-forms,\n * and <Autocomplete> with 'freeSolo' enabled.\n */\nfunction useFormMultiInputValue(props: UseFieldApiConfig) {\n  const form = useFormApi()\n  const { input } = useFieldApi(props)\n\n  // This ref is needed because the <Autocomplete> input value toggles between\n  // string and string[] types when 'freeSolo' is used.\n  // Whenever a new user-defined option is in draft, the string[] value is\n  // temporarily replaced by a bare string, and the currently selected options\n  // become unavailable...\n  const valuesRef = useRef<string[]>([])\n\n  const setValues = (updater: SetStateAction<string[]>) => {\n    if (typeof updater === \"function\") {\n      form.change(props.id, updater(valuesRef.current))\n    } else {\n      form.change(props.id, updater)\n    }\n  }\n\n  if (Array.isArray(input.value)) {\n    valuesRef.current = input.value\n  }\n\n  return {\n    values: valuesRef.current,\n    valuesRef: valuesRef,\n    setValues\n  }\n}\n","import React, { useState } from 'react'\r\nimport { useFieldApi, useFormApi } from \"@data-driven-forms/react-form-renderer\"\r\nimport { UseFieldApiConfig } from \"@data-driven-forms/react-form-renderer/use-field-api/use-field-api\"\r\nimport { HexColorPicker } from \"react-colorful\"\r\nimport FormFieldGrid from \"@data-driven-forms/mui-component-mapper/form-field-grid/form-field-grid\"\r\nimport { FormControl, TextField } from \"@mui/material\"\r\nimport { Popover } from 'react-tiny-popover'\r\n\r\nexport function BBDFormColorPickerComponent(props: UseFieldApiConfig & {\r\n  id: string\r\n  label: string\r\n}) {\r\n  const form = useFormApi()\r\n  const { input } = useFieldApi(props)\r\n\r\n  const [ open, setOpen ] = useState(false)\r\n\r\n  const setColor = (color: string) => {\r\n    form.change(props.id, color)\r\n  }\r\n\r\n  return (\r\n    <FormFieldGrid className=\"position-relative\">\r\n      <Popover\r\n        isOpen={open}\r\n        positions={['top', 'bottom']}\r\n        align=\"start\"\r\n        onClickOutside={() => setOpen(false)}\r\n        containerClassName=\"z-10 shadow-lg\"\r\n        content={() => (\r\n          <HexColorPicker color={input.value} onChange={setColor} />\r\n        )}\r\n      >\r\n        <FormControl fullWidth>\r\n          <TextField\r\n            onFocus={() => setOpen(true)}\r\n            label={props.label}\r\n            value={input.value}\r\n            onChange={e => setColor(e.currentTarget.value)}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <div className=\"mr-2\" onClick={() => setOpen(true)}>\r\n                  <div className=\"w-6 h-6 rounded-full\" style={{ 'backgroundColor': input.value }} />\r\n                </div>\r\n              )\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </Popover>\r\n    </FormFieldGrid>\r\n  )\r\n}","import { isValidUri } from \"../../../../utils/uri\"\n\nexport const RDF_LIST = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#List'\n\ntype ValueType = null | string | string[] | Date\n\ntype SchemaInfo = {\n  propuri: string\n  type: string\n  graph: string\n  uri: string\n  isMulti?: boolean\n  sortable?: boolean\n  addmodus?: boolean\n  collectionType?: typeof RDF_LIST\n}\n\ntype Result = {\n  propuri: string\n  valuetype?: string\n  graph: string\n  uri: string\n  addmodus?: boolean\n  value: string | string[] | null\n  collectionType?: typeof RDF_LIST\n}\n\nexport function createResultJSON(schemaById: Record<string, SchemaInfo>, formValuesById: Record<string, ValueType>) {\n  const results: Result[] = []\n\n  for (const key in formValuesById) {\n    const fieldSchema = schemaById[key]\n    if (!fieldSchema) continue\n\n    const rawValue = formValuesById[key]\n    const values = Array.isArray(rawValue)\n      ? (rawValue.length === 0 ? [ null ] : rawValue)\n      : [ rawValue ]\n\n    if (fieldSchema.collectionType === RDF_LIST) {\n      const listValue = Array.isArray(rawValue)\n        ? rawValue\n        : []\n      const result: Result = {\n        propuri: fieldSchema.propuri,\n        graph: fieldSchema.graph,\n        uri: fieldSchema.uri,\n        addmodus: fieldSchema.addmodus,\n        value: listValue,\n        collectionType: fieldSchema.collectionType\n      }\n\n      result.valuetype = determineValueType(fieldSchema.type)\n\n      results.push(result)\n      continue\n    }\n\n    for (const value of values) {\n      const result: Result = {\n        propuri: fieldSchema.propuri,\n        graph: fieldSchema.graph,\n        uri: fieldSchema.uri,\n        addmodus: fieldSchema.addmodus,\n        value: null\n      }\n\n      result.valuetype = determineValueType(fieldSchema.type)\n\n      const assumeValueIsUri = typeof value === \"string\"\n        && (fieldSchema.type === \"select\" || fieldSchema.type === \"uri\")\n\n      if (assumeValueIsUri) {\n        result.value = value\n        delete result.valuetype\n      } else if (value instanceof Date) {\n        result.value = value.toISOString()\n      } else  {\n        result.value = value == null ? null : encodeURIComponent(value)\n      }\n\n      results.push(result)\n    }\n  }\n\n  return results\n}\n\nfunction determineValueType(fieldSchemaType: string) {\n  if (isValidUri(decodeURIComponent(fieldSchemaType))) {\n    return fieldSchemaType\n  } else if (fieldSchemaType === \"colorhex\") {\n    return \"http://www.w3.org/1999/02/22-rdf-syntax-ns#string\"\n  } else {\n    return undefined\n  }\n}\n","const ONE_HEX_DIGIT_SPACE = 16\r\nconst NUMBER_OF_DIGITS = 6\r\nconst VALUE_SPACE = ONE_HEX_DIGIT_SPACE ** NUMBER_OF_DIGITS\r\n\r\nexport function createRandomHexColor() {\r\n  const randomColor = Math.floor(Math.random() * (VALUE_SPACE - 1)).toString(ONE_HEX_DIGIT_SPACE)\r\n  return \"#\" + \"0\".repeat(NUMBER_OF_DIGITS - randomColor.length) + randomColor\r\n}\r\n","import React, { Component } from \"react\"\n\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\n\nimport FormRenderer from \"@data-driven-forms/react-form-renderer/form-renderer\";\nimport componentTypes from \"@data-driven-forms/react-form-renderer/component-types\";\n\nimport FormTemplate from \"@data-driven-forms/mui-component-mapper/form-template\";\n\nimport validatorTypes from \"@data-driven-forms/react-form-renderer/validator-types\";\n\nimport componentMapper from \"@data-driven-forms/mui-component-mapper/component-mapper\";\nimport Grid from \"@mui/material/Grid\"\n\nimport styles from \"./BBDForm.module.css\"\nimport \"./BBDForm.module.css\"\nimport Command from \"../../../../helpers/Command\";\nimport PublishUtils from \"../../../../helpers/PublishUtils\";\nimport BBDFormRelationComponent from \"./BBDFormRelationComponent\";\nimport { Button } from \"@mui/material\";\nimport { BBDFormBuilderFromLDResource } from \"./BBDFormBuilderFromLDResource\";\nimport { BBDFormMultiSelectComponent } from \"./BBDFormMultiSelectComponent\"\nimport { BBDFormColorPickerComponent} from './BBDFormColorPickerComponent'\nimport { RDF_LIST, createResultJSON } from \"./create-result-json\"\nimport { toast } from \"react-toastify\"\nimport { createRandomHexColor } from '../../../../utils/create-random-hex-color'\n\n\nexport default class BBDForm extends Component {\n\n  state = {\n    schema: {\n      fields: [\n        {\n          component: componentTypes.TEXT_FIELD,\n          name: \"voornaam\",\n          label: \"voornaam\",\n          validate: [{ type: validatorTypes.REQUIRED }]\n        },\n\n        {\n          component: componentTypes.CHECKBOX,\n          name: \"adres2\",\n          label: \"adres of zoiets v22\"\n        },\n        {\n          component: componentTypes.DATE_PICKER,\n          name: \"datepicker\",\n          label: \"datum of zoiets\"\n        },\n        {\n          component: componentTypes.SWITCH,\n          name: \"iets3\",\n          label: \"datum of zoiets\"\n        },\n        {\n          component: componentTypes.SELECT,\n          name: \"iets34\",\n          label: \"datum of zoiets\",\n          options: [\n            {\n              label: \"Dogs\",\n              value: \"1\"\n            },\n            {\n              label: \"Cats\",\n              value: \"2\"\n            },\n            {\n              label: \"Hamsters\",\n              value: \"3\"\n            }\n          ]\n        },\n        {\n          component: componentTypes.SLIDER,\n          name: \"iets35\",\n          label: \"datum of zoiets\"\n        }\n      ]\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    componentMapper.relation = BBDFormRelationComponent;\n    componentMapper.multiselect = BBDFormMultiSelectComponent\n    componentMapper.colorpicker = BBDFormColorPickerComponent\n\n    window.top.publish = props.publish;\n    window.top.pubsub = props.pubsub;\n    this.BBDFormBuilderFromLDResource = new BBDFormBuilderFromLDResource(this);\n  }\n\n  getAllUris() {\n    var oo = {}\n    for (var i in this.props.data.results.bindings) {\n      var binding = this.props.data.results.bindings[i]\n      var value = binding.uri.value;\n      oo[value] = value;\n    }\n    return oo;\n  }\n\n  getSchema() {\n\n    try {\n      var schema = { fields: [] }\n      if (this.props.data == null) {\n        return null\n      }\n\n      var item_def = {}\n      var id_def = {}\n      this.id_def = id_def;\n      schema.props = item_def\n      schema.propsID = id_def\n      var volgorde = []\n      for (var i in this.props.data.results.bindings) {\n        var binding = this.props.data.results.bindings[i]\n        var uri = encodeURIComponent(binding.uri.value);  // testing\n        var propuri = encodeURIComponent(binding.propUri.value);\n        var o = item_def[uri + \"_\" + propuri];\n        if (this.props.masseditmode) o = item_def[propuri]\n\n        var label = binding.label.value\n\n        if (this.aantal == null) this.aantal = 0;\n        this.aantal++;\n\n        const fieldIsArray = binding.isMulti?.value === \"true\"\n          || binding.type?.value === \"uri\"\n          || binding.type?.value === \"relation\"\n\n        if (o == null) {\n          var id = this.aantal + \"id\" + volgorde.length\n          o = { id: id, validate: [] }\n          o.propuri = propuri;\n          //\n          if (this.props.masseditmode) {\n            item_def[propuri] = o\n          } else {\n            item_def[uri + \"_\" + propuri] = o;\n          }\n          volgorde.push(o)\n          o.isDisabled = false;\n\n          try {\n            o.graph = encodeURIComponent(binding.graph.value);\n          } catch (e) {\n          }\n          try {\n            o.uri = encodeURIComponent(binding.uri.value);\n          } catch (e) {\n          }\n          try {\n            o.type = encodeURIComponent(binding.type.value);\n          } catch (e) {\n          }\n\n\n          if (binding.required != null) {\n            try {\n              var b = Boolean(JSON.parse(binding.required.value.toLowerCase()));\n\n              if (b) o.validate.push({ type: validatorTypes.REQUIRED });\n            } catch (e) {\n            }\n\n          }\n\n          if (binding.disabled != null) {\n            o.isDisabled = Boolean(JSON.parse(binding.disabled.value.toLowerCase()));\n          }\n          if (binding.hidden != null) {\n            o.hideField = Boolean(JSON.parse(binding.hidden.value.toLowerCase()));\n          }\n          if (binding.addmodus != null) {\n            o.addmodus = Boolean(JSON.parse(binding.addmodus.value.toLowerCase()));\n          }\n\n\n          id_def[id] = o\n          o.propuri = propuri\n\n          //   console.log(componentTypes);\n\n\n          o.name = id;\n          o.label = label\n          try {\n\n            o.clearedValue = null;\n            o.initialValue = null;\n            o.defaultValue = null;\n\n            o.initialValue = fieldIsArray\n              ? [ binding.value.value ]\n              : binding.value.value\n\n\n          } catch (ee) {\n          }\n        \n\n          var component = componentTypes.TEXT_FIELD;\n\n          if (binding.type != null) {\n            var type = \"\";\n            try {\n              type = binding.type.value;\n\n              // type=decodeURIComponent(type);\n\n              type = type.replace(\"http://www.w3.org/2001/XMLSchema#\", \"\");\n\n\n              if ((type === \"int\") || (type === \"integer\")) {\n                component = componentTypes.TEXT_FIELD;\n                /*o.validate.push({\n                type: validatorTypes.PATTERN,\n                pattern: '[0-9]*',\n                message: 'Not valid ineger'\n                });\n                */\n                o.datatype = \"integer\";\n\n              }\n              if ((type === \"float\") || (type === \"decimal\")) {\n                component = componentTypes.TEXT_FIELD;\n                o.datatype = \"number\";\n              }\n\n              if (\n                type === \"boolean\"\n              ) {\n                component = componentTypes.CHECKBOX;\n                try {o.initialValue = Boolean(JSON.parse(binding.value.value.toLowerCase()));}catch(e){}\n               \n              }\n\n              if (type === \"colorhex\") {\n                component = \"colorpicker\"\n                if (binding.value?.value === \"random\") {\n                  o.initialValue = createRandomHexColor()\n                }\n              }\n\n              if (type === \"date\") {\n                o.variant = \"date\";\n                component = componentTypes.DATE_PICKER;\n                o.inputFormat = \"L\";\n                o.outputFormat = \"L\";\n\n              }\n              if (type === \"dateTime\") {\n                component = componentTypes.DATE_PICKER;\n              }\n              if ((type === \"uri\") || (type === \"relation\")) {\n                component = \"relation\";\n                if (binding.value != null) {\n                  o.initialValue = [binding.value.value];\n                }\n              }\n\n              if (type === \"stringlist\") {\n\n                component = componentTypes.FIELD_ARRAY;\n                o.fields = [{ component: componentTypes.TEXT_FIELD, label: \"label\" }]\n              }\n\n              if (type == \"textarea\") {\n\n                o.datatype = \"string\";\n                o.type = \"http://www.w3.org/2001/XMLSchema#string\";\n                component = componentTypes.TEXTAREA;\n              }\n\n\n              //  o.dataType=type\n            } catch (ee) {\n              console.log(ee);\n            }\n          }\n          // console.log(\"component\",component);\n          o.component = component\n\n\n        } else {\n          if (binding.type != null) {\n            var type = \"\";\n            try {\n              type = binding.type.value;\n\n              const value = binding.value.value\n\n              if (fieldIsArray) {\n                if (!o.initialValue.includes(value)) {\n                  o.initialValue.push(value);\n                }\n              } else {\n                o.initialValue = value\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n\n        } //else\n\n\n        //select types\n        try {\n\n          var option = binding.optionLabel.value; // triggers error when not available\n          o.noOptionsMessage = \"no options found\"\n          if (o.options == null) {\n\n            o.options = []\n            o.component = \"select\"\n            o.isClearable = true\n            o.simpleValue = true\n          }\n\n          if (binding.isMulti?.value === \"true\") {\n            o.component = \"multiselect\"\n            o.isMulti = true\n            o.sortable = binding.sortable?.value === \"true\"\n            if (decodeURI(binding.collectionType?.value) === RDF_LIST) {\n              o.sortable = true\n              o.collectionType = RDF_LIST\n            }\n          }\n\n          if (binding.optionValue == null) {\n            var alreadyAvailable = false;\n            for (var no in o.options) {\n              var oo = o.options[no];\n              if (oo.value == option) alreadyAvailable = true;\n            }\n            if (!alreadyAvailable) {\n              o.options.push({ label: option, value: option })\n              o.dataType = \"string\"\n              o.datatype2 = \"string\" // case sensitive\n            }\n          } else {\n\n            o.dataType = \"string\"\n            try {\n              if (binding.optionValue.type != \"literal\") {\n                o.dataType = \"string\";\n                o.datatype2 = \"uri\"\n              }\n            } catch (e) {\n            }\n\n            const optionValue = binding.optionValue.value\n\n            var alreadyAvailable = false;\n            for (var no in o.options) {\n              var oo = o.options[no];\n              if (oo.value == optionValue) alreadyAvailable = true;\n            }\n            if (!alreadyAvailable) {\n              o.options.push({ label: option, value: optionValue })\n            }\n          }\n        } catch (error) {\n        }\n\n\n        if (o.options == null) {\n          //datatype\n\n        }\n        // console.log(o)\n        if (this.props.masseditmode) {\n          o.value = null;\n        }\n\n      }// binding\n\n      // console.log(binding,propUri);\n\n      schema.volgorde = volgorde\n      schema.fields = volgorde\n      schema.props = this.props;\n      //this.setState({schema:schema});\n      return schema;\n    } catch (e) {\n      //  console.log(e);\n    }\n    return null;\n  }\n\n\n  getResultJSON(waardes) {\n    return createResultJSON(this.id_def, waardes)\n  }\n\n  submitFormCommand = (waardes, extra) => {\n    var ar = [];\n\n    if (this.props.masseditmode) {\n      var uris = this.getAllUris();\n      for (var n in uris) {\n        var uri = uris[n];\n\n        var ooR = this.getResultJSON(waardes);\n        for (var n in ooR) {\n          var oo = ooR[n];\n          oo.uri = uri;\n          ar.push(oo);\n        }\n      }\n    } else {\n      ar = this.getResultJSON(waardes)\n\n\n    }\n\n\n    var results = { results: ar }\n\n    if (this.props.ruleTagAfterSubmit != null) {\n      results.ruleTagAfterSubmit = this.props.ruleTagAfterSubmit;\n      var parameters = this.props.parameters;\n\n      if (parameters != null) {\n        try\n        {\n        parameters = PublishUtils.processStringForParameters(this, parameters);\n        var pa = JSON.parse(parameters);\n        results.ruleTagAfterSubmitParameters = pa;\n        }\n         catch(e)\n         {\n           console.log(\"cannot set parameters for rule execution \",this.props.parameters)\n         }\n      }\n\n    }\n\n \n    Command.sendCommand(this, \"formCommand\", results, this.submitFormSuccesful, this.submitFormFailure);\n\n\n  }\n  submitFormSuccesful = () => {\n\n\n    \n\n\n\n    PublishUtils.setTimeStampParameter(this, true);\n    if (this.props.successMessage) {\n      toast(this.props.successMessage)\n    }\n\n    //this.props.publish(\"ifc\",\"hallo\");\n    if (this.props.closePopup) {\n      try {\n        this.props.closeDialog();\n      } catch (e) {\n      }\n    }\n  }\n  submitFormFailure = () => {\n\n    if (this.props.failureMessage != null) {\n      window.alert(this.props.failureMessage);\n    }\n  }\n\n  submitInternalParameters = (waardes) => {\n    try {\n\n      var waardes = this.getResultJSON(waardes);\n\n      var result = {};\n      for (var key in waardes) {\n        var waarde = waardes[key];\n\n        var parameter = decodeURIComponent(waarde.propuri);\n        var value = decodeURIComponent(waarde.value);\n        result[parameter] = value;\n\n      }\n\n      // console.log(result)\n      this.props.publishMultipleValues(result);\n      // use multi publish?true\n      if (false) {\n        for (var id in waardes) {\n          this.props.publish(id, waardes[id])\n          // console.log('submitting internal values ', id, waardes[id])\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n  }\n\n\n  onSubmit = (waardes, extra) => {\n\n\n    try {\n\n      var r = { props: {} }\n\n      if (this.props.submit === \"internalparameters\") {\n        this.submitInternalParameters(waardes);\n        return\n      }\n\n      if (this.props.submit === \"formCommand\") {\n        // console.log(waardes,iets);\n        this.submitFormCommand(waardes, extra);\n\n        return;\n      }\n      if (this.props.submit === \"javascript\") {\n        console.log(waardes);\n\n        return;\n      }\n\n    } catch (e) {\n    }\n  }\n\n\n  getCreateClass() {\n    var createClass = null;\n\n    try {\n      //console.log(this.props.data.results.bindings);\n      for (var i in this.props.data.results.bindings) {\n        var binding = this.props.data.results.bindings[i];\n\n        createClass = binding.createClass.value;\n        return createClass;\n      }\n    } catch (e) {\n      //  console.log(e)\n    }\n    // console.log(createClass);\n    return createClass;\n  }\n\n  createClick() {\n    var cls = this.getCreateClass();\n    console.log(\"create not yet implemented\", cls);\n\n    // this.submitFormCommand(waardes);\n\n\n  }\n\n  render() {\n\n    if ((this.props.data == null) && (this.props.classOrUri == null)) return null;\n\n    let schema = null;\n    if (this.props.data != null) {\n      schema = this.getSchema();\n    } else {\n\n\n      var resource = PublishUtils.processStringForParameters(this, this.props.classOrUri);\n      schema = this.BBDFormBuilderFromLDResource.processResource(resource);\n    }\n\n\n    var createClass = this.getCreateClass();\n    var createButton = false;\n    if (createClass != null) createButton = true;\n    ///console.log(createClass,createButton);\n\n    if ((createButton == false) && (schema == null) && (this.props.emptyText != null) && (this.props.emptyText != \"\")) {\n\n      return (<div style2=\"padding: 35px;\"><p>{this.props.emptyText}</p></div>);\n    }\n\n    let cancelbutton = this.props.cancelbutton\n    if (cancelbutton == null) {\n      cancelbutton = false\n    }\n\n    //let schema = this.state.schema;\n    if ((schema == null)) {\n      if (createButton == true) {\n        return (<Button color=\"grey\" onClick={this.createClick}>create </Button>);\n      } else {\n        return null\n      }\n    }\n    var submitlabel = this.props.submitbuttonlabel\n    if ((submitlabel == null) || (submitlabel == \"\")) {\n      submitlabel = \"submit\";\n    }\n    const FormTemplate4 = (props, schema) => {\n      return (\n        <FormTemplate {...props} submitLabel={submitlabel}>\n          {props.children}\n\n        </FormTemplate>\n      );\n    };\n\n\n    var FormTemplateReadOnly = ({ formFields, schema }) => {\n\n\n      return (\n\n        <Grid container rowSpacing={3}>\n          {formFields}\n\n\n        </Grid>\n\n      );\n    };\n\n\n    let FormTemplate2 = FormTemplate4\n\n    if (this.props.readonly) FormTemplate2 = FormTemplateReadOnly;\n\n\n    return (\n\n\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <div className={styles.bbdform}>\n          {this.props.title && (\n            <div className={styles.title}>{this.props.title}</div>\n          )}\n          <FormRenderer // ref={this.ref}\n            schema={schema}\n            componentMapper={componentMapper}\n            FormTemplate={FormTemplate2}\n\n\n            {...(({ onSubmit: this.onSubmit }))}\n            {...(cancelbutton && { onCancel: this.onCancel })}\n\n\n          />\n        </div>\n      </LocalizationProvider>\n\n    )\n  }\n}\n"],"sourceRoot":""}