{"version":3,"sources":["../node_modules/web-ifc sync","components/widgets/bb/ifc/BBThreeJSViewer.module.css","../node_modules/openbim-components/node_modules/web-ifc sync","components/widgets/bb/ifc/IFCGLBFile.js","components/widgets/bb/ifc/IFCFile.js","components/widgets/bb/ifc/IFCDBSparql.js","components/widgets/bb/ifc/IFCDB.js","components/widgets/bb/ifc/ThreeJSViewer.js","components/widgets/bb/ifc/GLBFromSparqlResults.js","components/widgets/bb/ifc/BBThreeJSViewer.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","IFCGLBFile","ifcdb","file","rv","simpleMode","doNotLoad","name","gltf","visible","allBFGs","allNodes","allFirstChild","allFirstMaterial","loading","defaultChilds","MANAGER","LoadingManager","THREE_PATH","REVISION","DRACO_LOADER","DRACOLoader","setDecoderPath","KTX2_LOADER","KTX2Loader","setTranscoderPath","Cache","enabled","this","loader","GLTFLoader","setCrossOrigin","setMeshoptDecoder","MeshoptDecoder","setDRACOLoader","setKTX2Loader","detectSupport","viewer","renderer","setWithCredentials","manager","setResourcePath","me","parseTextForVariables","props","loadAsync","then","needsTranslation","processGLTF","getCenter","call","error","console","log","window","alert","catch","err","Box3","setFromObject","scene","Vector3","center","Math","abs","x","y","z","rootGroup","add","guid","n","child","ncenter","resetMatrix","children","processGLTFElement","matrix","Matrix4","matrixWorld","parent","isMesh","isObject3D","geometry","length","isBufferGeometry","cid","color","r","b","g","material","ar","updateMatrix","updateMatrixWorld","sub","clone","matrixT","makeTranslation","multiply","applyMatrix4","push","aantal","subAantal","colorMat","key","mat2","mat","getDefaultColor","processColoring","IFCFile","root","IFCLoader","ifcManager","setWasmPath","wasmLoaded","loadReallyIFC","load","mesh","groups","IFCDBSparql","guid_label","latestData","guid_color","data","results","bindings","guid_hidden","binding","value","label","hidden","startsWith","stringToColour","str","hash","i","charCodeAt","colour","toString","substr","c","hex","componentToHex","visualiseOnlySparqlResults","setSparqlColors_ReOrganise","createNewPickGroup","fn","ifcfiles","ifc","visualize","ifcguid","colorString","getColor","MeshPhysicalMaterial","vertexColors","cchild2","Mesh","zoomAt","defaultColor","loadingInProgress","processSparqlResults","amount","amoutOfSparqlResults","setSparqlColors_double","IFCDB","onlyOnce","pickGroup","inputChanged","ifcdbsparql","latestBindings","selectOnlySparqlResults","tx","ty","tz","vertexShader","fragmentShader","fragmentShaderINV","reusepickgroup","updateRender","emptyScene","useSparqlColors","setSparqlColors","controls","update","setSelectedGuid","setAnimeerAantal","setLoading","top","translateIntoView","onlyOnceTranslationDebug","processedAll","aabb","getSize","defaultMat","hint","fog","transparent","opacity","MeshPhongMaterial","shininess","emissiveIntensity","lightMapIntensity","emissive","side","DoubleSide","ShaderMaterial","uniforms","userColor","Color","MeshToonMaterial","depthWrite","addDefaultToScene","colorHash","rar","outlinePass","selectedObjects","mergeGeometries","matrixAutoUpdate","castShadow","receiveShadow","edgeGeometries","map","EdgesGeometry","Group","getNewRootGroup","getDefaultScene","updateWorldMatrix","files","nfile","f","getIFCFile","includes","ifcFile","getChild","createNewScene","orbiting","asyncLoadGLBFiles","slice","loadedfiles","reset","setVisible","loadingNewFiles","toLowerCase","endsWith","readyLoading","processBindings","lm","tobeprocessedBindings","aantalBindings","gltfB","JSON","parse","uri","userData","ThreeJSViewer","raycaster","camera","pointer","Vector2","selectedChild","selectedChilds","hooverChild","threeCanvas","animeerAantal","useComposer","target","distance","size","gsap","to","position","duration","onUpdate","lookAt","orbitControls","onComplete","tcid","document","getElementById","components","OBC","init","get","directionalLight","DirectionalLight","set","intensity","ambientLight","AmbientLight","grid","tools","Raycaster","canvasBounds","getBoundingClientRect","width","right","left","height","bottom","Scene","aspect","PerspectiveCamera","near","far","PointLight","background","WebGLRenderer","canvas","alpha","powerPreference","antialias","logarithmicDepthBuffer","sortObjects","colorManagement","setPixelRatio","devicePixelRatio","setSize","GridHelper","axes","AxesHelper","depthTest","renderOrder","composer","EffectComposer","renderPass","RenderPass","addPass","OutlinePass","fxaaPass","ShaderPass","FXAAShader","innerWidth","innerHeight","OrbitControls","enableDamping","animate","render","requestAnimationFrame","addEventListener","event","mousemove","mouseclick","mouseDoubleClick","updateProjectionMatrix","clear","lightColor","light","HemisphereLight","SpotLight","normalize","resize","preventDefault","getContext","clientX","clientY","pg","getPickGroup","setFromCamera","intersectObjects","intersects","getIntersection","object","orgMatrix","orgMaterial","specular","remove","msg","getLabel","showTippy","destroyTippy","newGuid","pubsub","guidselector","selectedGuid","par","publish","showSelectChild","tippy","div","trigger","placement","plugins","followCursor","content","setContent","show","hide","boundingBox","fov","PI","fovh","atan","tan","dx","dy","cameraZ","max","minZ","min","cameraToFarEdge","undefined","maxDistance","GLBFromSparqlResults","vars","head","processSparql","rotation","nodes","color_nodes","colors","getRandomHexColor","setupIFCDB","glb","loadedN","processedN","resultsN","arg","onLoad","onError","randomColor","floor","random","repeat","onLoadReady","toInteger","convertToHex","o3d","THREE","group","makeScale","getMat","BBThreeJSViewer","canvasDiv","React","createRef","onResize","currentCanvasDiv","current","ResizeObserver","entries","observe","initViewer","ready","prefix","files2","file2","PublishUtils","processStringForParameters","files22","split","nn","file3","replace","state","a1","getGLBFilesFromProps","a2","stringify","sel","sel2","sela","loadIFC","ifcLoader","ifcModel","force","isEmpty","shouldLoadNewFiles","loadGLBFiles","needsUpdate","idN","tippyID","ref","className","styles","fullWidget","src","gearWhite","alt","onClick","setState","dialogVisible","style","Component","connect"],"mappings":"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","file":"static/js/19.52758f25.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1089;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullWidget\":\"BBThreeJSViewer_fullWidget__16tbM\",\"right\":\"BBThreeJSViewer_right__35Xyd\",\"drawer\":\"BBThreeJSViewer_drawer__2Omkl\"};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1335;","import { ConstructionOutlined } from \"@mui/icons-material\";\r\nimport {FrontSide, Box3,Cache,Object3D,Vector3, REVISION,Matrix4,BufferGeometry,LoadingManager } from \"three\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport { parseTextForVariables } from '../../../../helpers/sparql';\r\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\r\n\r\nclass IFCGLBFile\r\n{\r\n    ifcdb=null;\r\n    name=null;\r\n    gltf =null;\r\n    visible=true;\r\n    allBFGs={};\r\n    allNodes=[];\r\n    allFirstChild={}\r\n    allFirstMaterial={};\r\n    loading=null;\r\n    defaultChilds=null;\r\n    simpleMode=false;\r\n\r\n\r\n\r\n  \r\n\r\n  //  size={};\r\n   // center={};\r\n\r\n   \r\n\r\nconstructor(ifcdb,file,rv,simpleMode,doNotLoad)\r\n{\r\n  const MANAGER = new LoadingManager();\r\n  const THREE_PATH = `https://unpkg.com/three@0.${REVISION}.x`\r\n  const DRACO_LOADER = new DRACOLoader( MANAGER ).setDecoderPath( `${THREE_PATH}/examples/jsm/libs/draco/gltf/` );\r\n  const KTX2_LOADER = new KTX2Loader( MANAGER ).setTranscoderPath( `${THREE_PATH}/examples/jsm/libs/basis/` );\r\n  Cache.enabled = true;\r\n  this.ifcdb=ifcdb;\r\n  //Object3D.DefaultUp.set(0, 0, 1);\r\n  if (simpleMode==true) {this.simpleMode=true;}\r\n  var loader = new GLTFLoader();\r\n  this.loader=loader;\r\n  loader.setCrossOrigin('anonymous');\r\n  loader.setMeshoptDecoder( MeshoptDecoder );\r\n  loader.setDRACOLoader( DRACO_LOADER )\r\n  loader.setKTX2Loader( KTX2_LOADER.detectSupport( this.ifcdb.viewer.viewer.renderer ) )\r\n   if (doNotLoad==true) return;\r\n\r\n  loader.setWithCredentials(true);\r\n  loader.manager.file=file;\r\n  loader.setResourcePath(file);\r\n\r\n\r\n  this.name=file;\r\n  var me=this;\r\n  this.loading=true;\r\ntry\r\n{\r\n  //console.log(\"loading \"+file);\r\n  \r\n  file=parseTextForVariables(file,ifcdb.viewer.props);\r\n  //console.log(\"loading \"+file);\r\n  loader.setCrossOrigin(\"*\");\r\n  loader.loadAsync(file).then(function(gltf)\r\n  {\r\n    // console.log(\"loaded \"+file,gltf);\r\n      me.gltf=gltf;\r\n      if (!me.simpleMode)\r\n      {\r\n        if (!me.needsTranslation)\r\n        {\r\n           me.processGLTF(gltf);\r\n        }\r\n        else\r\n        {\r\n        //  console.log(\"glb file needs translation so not processed\");\r\n          me.processGLTF(gltf,me.getCenter());\r\n        }\r\n      }\r\n      me.loading=false;\r\n      if (rv!=null){rv.call(me);}\r\n   },function (error){\r\n    console.log(error);\r\n    me.loading=false;\r\n\r\n    if (rv!=null){rv.call(me);}\r\n\r\n  },function(error)\r\n    {\r\n      console.log(\"error\",error);\r\n      window.alert(\"error loading file\");\r\n      me.loading=false;\r\n      if (rv!=null){rv.call(me);}\r\n\r\n    }\r\n  \r\n   ).catch(err => {console.log(err); alert(\"could not load 3d file\")});\r\n  }\r\n  catch(e)\r\n  {\r\n    window.alert(\"error loading model \");\r\n    me.loading=false;\r\n    if (rv!=null){rv.call(me);}\r\n  }\r\n}\r\n\r\ngetCenter()\r\n{\r\n  //console.log(this,this.gltf);\r\n  const aabb = new Box3().setFromObject(this.gltf.scene);\r\n  const center = aabb.getCenter( new Vector3() );\r\n  return center;\r\n}\r\n\r\nneedsTranslation()\r\n{\r\n \r\n  const center = this.getCenter();\r\n \r\n  if ((Math.abs(center.x)>1000) || (Math.abs(center.y)>1000) || (Math.abs(center.z)>1000) )\r\n  {\r\n  \r\n    return true;\r\n  }\r\n  else\r\n  {\r\n    console.log(\"no need for extra translations\");\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n\r\naddDefaultToScene()\r\n{\r\n\r\n  this.ifcdb.rootGroup.add(this.gltf.scene);\r\n // console.log(this.gltf.scene);\r\n}\r\ngetDefaultScene()\r\n{\r\n  return this.gltf.scene;\r\n}\r\n\r\n\r\n\r\ngetChild(guid)\r\n {\r\n      for (var n in this.allNodes)\r\n      {\r\n          var child = this.allNodes[n];\r\n          if (child.name==guid)\r\n          return child;\r\n      }\r\n    return null;\r\n  }\r\n\r\nprocessGLTF(gltf,ncenter)\r\n{\r\n \r\n   this.allBFGs={};\r\n   this.allNodes=[];\r\n   this.allFirstChild={}\r\n   this.allFirstMaterial={};\r\n   this.loading=null;\r\n   this.defaultChilds=null;\r\n\r\n   this.resetMatrix(gltf.scene);\r\nif (ncenter!=null)\r\n{\r\n \r\n  console.log(\"translating the scene \",this.name);\r\n  this.ncenter=ncenter;\r\n \r\n\r\n}\r\n \r\n/*\r\n const aabb = new Box3().setFromObject( gltf.scene );\r\n  const center = aabb.getCenter( new Vector3() );\r\n  var size = aabb.getSize( new Vector3() );\r\n*/\r\n \r\n      for (var n in gltf.scene.children )\r\n      {\r\n                let child = gltf.scene.children[n];\r\n                this.processGLTFElement(child,ncenter);\r\n      }\r\n\r\n\r\n      //console.log(\"ready processing gltf\");\r\n\r\n}\r\n\r\nresetMatrix(child)\r\n{\r\n             child.matrix=new Matrix4();\r\n             child.matrixWorld=new Matrix4();\r\n             if (child.parent!=null)\r\n             {\r\n                this.resetMatrix(child.parent);\r\n             }\r\n}\r\n\r\nprocessGLTFElement(child,ncenter)\r\n{\r\n     if ( (child.isMesh) && (child.isObject3D)  && (child.geometry!=null) && (child.children.length==0))\r\n     {\r\n         if (child.geometry.isBufferGeometry)\r\n         {\r\n          \r\n         }\r\n         else\r\n         {\r\n          console.log(\"dit heeft een andere geometry \",child.geometry);\r\n         // child.removeFromParent();\r\n          return;\r\n         }\r\n     }\r\n  \r\n\r\n      let cid=\"default\";\r\n      let color={r:1,b:1,g:1};\r\n      try\r\n      {\r\n           color=child.material.color;\r\n           cid= color.r+\"_\"+color.g+\"_\"+color.b;\r\n      }\r\n      catch(e)\r\n      {\r\n     //  console.log(e,child);\r\n\r\n\r\n      }\r\n      var ar=this.allBFGs[cid];\r\n \r\n      if (ar==null)\r\n      {\r\n        ar=[];\r\n        this.allBFGs[cid]=ar;\r\n        this.allFirstChild[cid]=color;\r\n        this.allFirstMaterial[cid]=child.material;\r\n       \r\n      }\r\n     \r\n\r\n     \r\n\r\n      child.updateMatrix(true);\r\n      child.updateMatrixWorld(true);\r\n      \r\n     \r\n        if (child.children!=null)\r\n        {\r\n        \r\n          \r\n          for (var n in child.children)\r\n          {\r\n                  var sub=child.children[n];\r\n                  this.processGLTFElement(sub,ncenter);\r\n              \r\n          }\r\n          if (child.geometry==null)\r\n          {\r\n            return;\r\n          }\r\n         // return;\r\n        }\r\n\r\n             var g = child.geometry;\r\n             g=g.clone(); // geometry can be re-used by other childs\r\n             var matrix = child.matrixWorld.clone();\r\n             child.geometry=g;\r\n         \r\n             if (ncenter!=null)\r\n             {\r\n                  var matrixT=new Matrix4();\r\n                  matrixT.makeTranslation(-ncenter.x,-ncenter.y,-ncenter.z);\r\n                  matrix=matrixT.multiply(matrix);\r\n             }\r\n             g=g.applyMatrix4(matrix);\r\n         \r\n     \r\n        ar.push(g);\r\n       g.guid=child.name;\r\n\r\n        this.allNodes.push(child); //for picking and for reference\r\n        this.aantal++;\r\n        this.subAantal++;\r\n        if (this.subAantal>1000)\r\n        {\r\n         // console.log(child);\r\n         //  console.log(this.aantal+\" objecten verwerkt. nog niet klaar\");\r\n         //   console.log(this.tobeprocessedBindings,this.aantalBindings);\r\n            this.subAantal=0;\r\n        }\r\n     \r\n\r\n    }\r\n\r\n\r\n    visualize(b)\r\n    {\r\n      this.visible=b;\r\n       if (this.defaultChilds==null)\r\n       {\r\n\r\n        let colorMat={};\r\n        for (var key in this.allBFGs)\r\n          {\r\n            let color=this.allFirstChild[key];\r\n            let mat2 =this.allFirstMaterial[key];\r\n            var mat=this.ifcdb.getDefaultColor(color,mat2);\r\n            colorMat[key]=mat;\r\n          }\r\n          this.defaultChilds=this.ifcdb.processColoring(this.allBFGs,colorMat);\r\n       }\r\n\r\n     //   console.log(this.defaultChilds);\r\n    // console.log(this.name+\" visualise \"+b);\r\n      for (var n in this.defaultChilds)\r\n      {\r\n        this.ifcdb.rootGroup.add( this.defaultChilds[n]);\r\n      }\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  export default IFCGLBFile\r\n","import { IFCLoader  } from \"web-ifc-three/IFCLoader\";\r\n\r\nclass IFCFile\r\n{\r\n\r\n    ifcdb=null;\r\n    name=null;\r\n    visible=true;\r\n    root=null;\r\n    allBFGs={};\r\n    allFirstChild={}\r\n    allFirstMaterial={};\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    static wasmLoaded=false;\r\n\r\n\r\n  constructor(ifcdb,file,rv)\r\n{\r\n  this.ifcdb=ifcdb;\r\n  var loader = new IFCLoader();\r\n  this.name=file;\r\n  var me=this;\r\n  this.loading=true;\r\n  var me=this;\r\n   \r\n      loader.ifcManager.setWasmPath(\"../../../bb/wasm/\").then(function(){\r\n        IFCFile.wasmLoaded=true;\r\n        me.loadReallyIFC(loader,file,rv)\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\nloadReallyIFC(loader,file,rv)\r\n{\r\n    loader.setWithCredentials(true);\r\n    var me=this;\r\n   \r\n    loader.load(file,function(gltf)\r\n    {\r\n     //  console.log(gltf);\r\n       var materials =gltf.mesh.material;\r\n       var groups=gltf.mesh.groups; //{ start: 0, count: 3450, materialIndex: 0 }\r\n\r\n\r\n       me.allBFGs[\"default\"]=gltf;\r\n       me.allFirstChild[\"default\"]=gltf.material.color;\r\n       me.allFirstMaterial[\"default\"]=gltf.material;\r\n      \r\n      me.loading=false;\r\n      if (rv!=null){rv.call(me);}\r\n    }\r\n  );\r\n}\r\n\r\n}\r\n\r\nexport default IFCFile","\r\nimport { ConstructionOutlined } from \"@mui/icons-material\";\r\nimport { tr } from \"date-fns/locale\";\r\nimport {Color,MeshPhysicalMaterial,Mesh,BufferGeometry,MeshToonMaterial, MeshPhongMaterial,MeshLambertMaterial } from \"three\";\r\n\r\n\r\nclass IFCDBSparql\r\n{\r\n    ifcdb=null;\r\n    guid_label={};\r\n    colorMat={};\r\n    latestData=null;\r\n    guid_color=null;\r\n\r\nconstructor(ifcdb)\r\n{\r\n  this.ifcdb=ifcdb;\r\n}\r\n\r\nuseSparqlColors()\r\n{\r\n  try\r\n  {\r\n    if (this.ifcdb.viewer.props.data!=null)\r\n    {\r\n      var results=this.ifcdb.viewer.props.data.results;\r\n      if (results.bindings.length>0) return true;\r\n      this.latestData=null;\r\n\r\n    }\r\n  }\r\n  catch(e)\r\n  {}\r\n  return false;\r\n}\r\n\r\namoutOfSparqlResults()\r\n{\r\n  try\r\n  {\r\n  if (this.ifcdb.viewer.props.data!=null)\r\n  {\r\n    var results=this.ifcdb.viewer.props.data.results;\r\n    return results.bindings.length;\r\n  }\r\n}\r\ncatch(e)\r\n{}\r\n  return 0;\r\n}\r\n\r\ngetLabel(guid)\r\n{\r\n  return this.guid_label[guid];\r\n}\r\n\r\n\r\n\r\nprocessSparqlResults()\r\n{\r\n  var guid_color = {};\r\n  this.guid_color=guid_color;\r\n  this.guid_label={};\r\n  this.guid_hidden={};\r\n  try\r\n  {\r\n    var results=this.ifcdb.viewer.props.data.results;\r\n    for (var n in results.bindings)\r\n    {\r\n         var binding = results.bindings[n];\r\n         var guid=binding.guid.value;\r\n         var color=binding.color.value;\r\n         guid_color[guid]=color;\r\n         try{var label = binding.label.value; this.guid_label[guid]=label;}catch(e){}\r\n         try{var hidden = binding.hidden.value; this.guid_hidden[guid]=hidden;}catch(e){}\r\n    }\r\n  }\r\n  catch(e)\r\n  {}\r\n  return guid_color;\r\n}\r\n\r\ngetColor(value)\r\n{\r\n  try\r\n  {\r\n      if ( (value.startsWith(\"#\")) && (value.length==7) )\r\n    {\r\n       return value;\r\n    }\r\n  }\r\n  catch(e){}\r\n   try\r\n   {\r\n    return this.stringToColour(value);\r\n   }\r\n   catch(e){}\r\n\r\n  return \"#ff0000\";\r\n}\r\n\r\nstringToColour(str) {\r\n  var hash = 0\r\n  for (let i = 0; i < str.length; i++) {\r\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\r\n  }\r\n  var colour = '#'\r\n  for (let i = 0; i < 3; i++) {\r\n    var value = (hash >> (i * 8)) & 0xff\r\n    colour += ('00' + value.toString(16)).substr(-2)\r\n  }\r\n  return colour\r\n}\r\n componentToHex(c) {\r\n  var hex = c.toString(16);\r\n  return hex.length == 1 ? \"0\" + hex : hex;\r\n}\r\n\r\n rgbToHex(r, g, b) {\r\n  return \"#\" + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nneedsUpdate()\r\n{\r\n  //console.log(this.latestData,this.ifcdb.viewer.props.data);\r\n  try {if (this.latestData==this.ifcdb.viewer.props.data) return false;}\r\n  catch(e ){}\r\n  return true;\r\n}\r\n\r\nsetSparqlColors_double(guid_color)\r\n{\r\n\r\n var visualiseOnlySparqlResults =    this.ifcdb.viewer.props.visualiseOnlySparqlResults;\r\n   if (visualiseOnlySparqlResults==null)visualiseOnlySparqlResults=false;\r\n  \r\n   if (visualiseOnlySparqlResults)\r\n   {\r\n      //reset picking\r\n      \r\n     \r\n      this.setSparqlColors_ReOrganise(guid_color);\r\n      this.ifcdb.createNewPickGroup();\r\n      return;\r\n   }\r\n   console.log(\"double coloring strategy \");\r\n\r\n\r\n  try\r\n  {\r\n       for (var fn in this.ifcdb.ifcfiles)\r\n        {\r\n          var ifc = this.ifcdb.ifcfiles[fn];\r\n          if (!ifc.visible) continue;\r\n          ifc.visualize(true);\r\n          for (var n in ifc.allNodes)\r\n          {\r\n    \r\n                let child = ifc.allNodes[n];\r\n                if (child.geometry!=null)\r\n                {\r\n                  var ifcguid=child.name;\r\n                  var ifcguid=child.name;\r\n                  try {\r\n                        if (this.guid_hidden[ifcguid]==\"true\")\r\n                        {\r\n                          continue;\r\n                        }\r\n                  } catch(e){}\r\n\r\n\r\n\r\n\r\n                  var colorString=guid_color[ifcguid];\r\n                if (colorString==\"default\")\r\n                {\r\n                  console.log(visualiseOnlySparqlResults);\r\n\r\n                    if ((visualiseOnlySparqlResults==\"true\")  || (visualiseOnlySparqlResults)   )\r\n                    {\r\n                      \r\n                      delete guid_color.ifcguid;\r\n                                continue;\r\n                    }\r\n                }\r\n\r\n                  if (colorString!=null) \r\n                  {\r\n                      let color=this.getColor(colorString);\r\n                      var mat = new  MeshPhysicalMaterial({color:color});\r\n                      mat.vertexColors=false;\r\n                      var g=child.geometry.clone();\r\n                      var cchild2=new Mesh();\r\n                      cchild2.geometry=g;\r\n                      cchild2.material=mat;\r\n                      this.ifcdb.rootGroup.add(cchild2);\r\n                   }\r\n                }\r\n        \r\n          }     \r\n        }\r\n\r\n\r\n       \r\n\r\n       this.ifcdb.viewer.viewer.zoomAt(this.ifcdb.rootGroup);\r\n\r\n      \r\n       \r\n\r\n\r\n  }\r\n  catch(e)\r\n  {\r\n     console.log(e);\r\n     this.ifcdb.defaultColor();\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nsetSparqlColors_ReOrganise(guid_color)\r\n{\r\n  console.log(\"reorganise coloring strategy\");\r\n  try\r\n  {\r\n   var visualiseOnlySparqlResults =    this.ifcdb.viewer.props.visualiseOnlySparqlResults;\r\n   if (visualiseOnlySparqlResults==null)visualiseOnlySparqlResults=false;\r\n    var colorMat={};\r\n    this.colorMat=colorMat;\r\n     this.hash={};\r\n    var hash=this.hash;\r\n\r\n        hash[\"default\"]=[];\r\n        colorMat[\"default\"]=this.ifcdb.getDefaultColor(\"#aaaaaa\");\r\n   \r\n        for (var fn in this.ifcdb.ifcfiles)\r\n        {\r\n          var ifc = this.ifcdb.ifcfiles[fn];\r\n          if (!ifc.visible) continue;\r\n    \r\n          for (var n in ifc.allNodes)\r\n          {\r\n    \r\n                let child = ifc.allNodes[n];\r\n                if (child.geometry!=null)\r\n                {\r\n                  var ifcguid=child.name;\r\n                  try {\r\n                        if (this.guid_hidden[ifcguid]==\"true\")\r\n                        {\r\n                          continue;\r\n                        }\r\n                  } catch(e){}\r\n\r\n                  var colorString=guid_color[ifcguid];\r\n                  if (colorString==null)\r\n                  {\r\n                       colorString=\"default\";\r\n                      if (visualiseOnlySparqlResults)              continue;\r\n                  } \r\n                  var ar=hash[colorString];\r\n                   if (ar==null)\r\n                   {\r\n                    ar=[];\r\n                    hash[colorString]=ar;\r\n                    let color=this.getColor(colorString);\r\n                    var mat = new  MeshPhysicalMaterial({color:color});\r\n                    mat.vertexColors=false;\r\n                    colorMat[colorString]=mat;\r\n                   }\r\n                 // ar.push(child.geometry.clone()); //not sure about this\r\n                 ar.push(child.geometry);\r\n                }\r\n        \r\n          }     \r\n        }\r\n    // console.log(hash,colorMat);\r\n        this.ifcdb.processColoring(hash,colorMat);\r\n\r\n  }\r\n  catch(e)\r\n  {\r\n     console.log(e);\r\n     this.ifcdb.defaultColor();\r\n  }\r\n}\r\n\r\n\r\n\r\nsetSparqlColors()\r\n{\r\n  if (this.ifcdb.loadingInProgress) {\r\n    //console.log(\"no sparql colors because of loading =true\");\r\n    return;\r\n  }\r\n // console.log(\"set sparql colors\");\r\n     if (this.ifcdb.viewer.props.data==this.latestData) return;\r\n  try {this.latestData=this.ifcdb.viewer.props.data}catch(e){}\r\n  \r\n    var guid_color =this.processSparqlResults();\r\n    var amount=this.amoutOfSparqlResults();\r\n    console.log(\"amount of sparql results \"+amount)\r\n   if (amount<100)\r\n   {\r\n    \r\n        this.setSparqlColors_double(guid_color);\r\n   }\r\n   else\r\n   {\r\n        this.setSparqlColors_ReOrganise(guid_color); //good\r\n   }\r\n  \r\n}\r\n\r\n\r\n}\r\nexport default IFCDBSparql;\r\n\r\n","import _ from \"lodash\";\r\nimport {ShaderMaterial, EdgesGeometry,Mesh,BufferAttribute,TextureLoader,MeshNormalMaterial,FrontSide,MeshBasicMaterial,LoadingManager,Box3,MeshDepthMaterial,DoubleSide,Group,Color,Vector3,Matrix4, BufferGeometry,MeshPhysicalMaterial,MeshStandardMaterial, MeshDistanceMaterial, MeshToonMaterial, MeshPhongMaterial,MeshLambertMaterial,AmbientLight, AxesHelper, DirectionalLight, GridHelper, PerspectiveCamera, Scene, WebGLRenderer,Object3D } from \"three\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport {mergeGeometries}  from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\nimport IFCGLBFile from \"./IFCGLBFile\";\r\nimport IFCFile from \"./IFCFile\";\r\nimport IFCDBSparql from \"./IFCDBSparql\";\r\n\r\n\r\nclass IFCDB\r\n{\r\n    onlyOnce=true;\r\n    pickGroup=null;\r\n    rootGroup=null;\r\n\r\n    ifcfiles=[];\r\n\r\n    inputChanged=false;\r\n    loadingInProgress=false;\r\n    ifcdbsparql=null;\r\n  //sparql variant\r\n   latestBindings=null;\r\n   selectOnlySparqlResults=false;\r\n\r\n\r\n   tx=0;\r\n   ty=0;\r\n   tz=0;\r\n\r\n     \r\n constructor()\r\n {\r\n    //  console.log(\"creating IFCDB.....\");\r\n    this.ifcdbsparql=new IFCDBSparql(this);\r\n    this.vertexShader = `\r\n    varying vec3 vNormal;\r\n    varying vec3 vViewPosition;\r\n    \r\n    void main() {\r\n        vNormal = normalize(normalMatrix * normal);\r\n        vec4 viewPosition = modelViewMatrix * vec4(position, 1.0);\r\n        vViewPosition = -viewPosition.xyz;\r\n        gl_Position = projectionMatrix * viewPosition;\r\n    }\r\n    `;\r\n    \r\n    // Fragment shader\r\n    this.fragmentShader = `\r\n    varying vec3 vNormal;\r\n    varying vec3 vViewPosition;\r\n    uniform vec3 userColor; // User-defined color uniform\r\n    \r\n    void main() {\r\n        // Calculate angle between normal and view direction\r\n        float cosAngle = dot(normalize(vNormal), normalize(vViewPosition));\r\n       // cosAngle=1.0 - cosAngle;\r\n        // Map cosine angle to a dark grey color near the edges\r\n        vec3 color = mix(userColor, vec3(0.8), cosAngle);\r\n    \r\n        gl_FragColor = vec4(color, 1);\r\n    }\r\n    `;\r\n    this.fragmentShaderINV = `\r\n    varying vec3 vNormal;\r\n    varying vec3 vViewPosition;\r\n    uniform vec3 userColor; // User-defined color uniform\r\n    \r\n    void main() {\r\n        // Calculate angle between normal and view direction\r\n        float cosAngle = dot(normalize(vNormal), normalize(vViewPosition));\r\n        cosAngle=1.0 - cosAngle;\r\n        // Map cosine angle to a dark grey color near the edges\r\n        vec3 color = mix(userColor, vec3(0.8), cosAngle);\r\n    \r\n        gl_FragColor = vec4(color, 1);\r\n    }\r\n    `;\r\n\r\n\r\n\r\n\r\n\r\n }\r\n\r\n\r\nprocessedAll(reusepickgroup)\r\n{\r\n var center=null;\r\n\r\n \r\n  if(this.inputChanged)\r\n  {\r\n      //console.log(\"we should update so not processing\");\r\n     // console.log(\"loading fasle\",this.loadingInProgress);\r\n      this.loadingInProgress=false;\r\n      this.inputChanged=false;\r\n      this.viewer.updateRender(true);\r\n\r\n      return;\r\n\r\n  }\r\n\r\n  this.selectOnlySparqlResults   = this.viewer.props.selectOnlySparqlResults;\r\n  if (this.selectOnlySparqlResults==null) this.selectOnlySparqlResults=false;\r\n\r\n\r\n\r\n\r\n  \r\n  this.emptyScene();\r\n \r\n\r\n      if (this.ifcdbsparql.useSparqlColors())\r\n      {\r\n       // console.log(\"setting sparql based colors\");\r\n        this.loadingInProgress=false;\r\n        this.ifcdbsparql.setSparqlColors();\r\n      }\r\n      else\r\n      {\r\n       // console.log(\"setting default colors\");\r\n        this.defaultColor();\r\n      \r\n      }\r\n      \r\n      \r\n\r\n\r\n   if ((this.pickGroup!=null) && (reusepickgroup) )\r\n   {\r\n      console.log(\"reusing pickgroup\")\r\n   }\r\n   else\r\n   {\r\n        this.pickGroup=null;\r\n        this.createNewPickGroup();\r\n   }\r\n  //console.log(\"ready inserting\");\r\n\r\n  if (this.onlyOnce)\r\n  \r\n  {\r\n    \r\n\r\n    //console.log(\"fit camera\",this.viewer.viewer.scene);\r\n    let l =this.viewer.viewer.scene.children.length;\r\n    //this.viewer.viewer.fitCameraToCenteredObject(this.viewer.viewer.scene.children[l-1]);\r\n\r\n    //this.onlyOnce=false;\r\n  }\r\n\r\n  //this.viewer.viewer.camera.near=100;\r\n  //this.viewer.viewer.camera.updateProjectionMatrix();\r\n\r\n  this.viewer.viewer.controls.update();\r\n  this.viewer.viewer.setSelectedGuid();\r\n  this.viewer.viewer.setAnimeerAantal(20);\r\n\r\n\r\n\r\nthis.viewer.props.setLoading(false);\r\n//console.log(\"loading fasle\",this.loadingInProgress);\r\nthis.loadingInProgress=false;\r\n\r\nwindow.top.scene=this.viewer.viewer.scene;// for debug\r\nif (this.needsTranslation()) \r\n{\r\n   // this.performTranslation(reusepickgroup);\r\n}\r\n;\r\nthis.translateIntoView();\r\n\r\n \r\n}\r\n\r\nperformTranslation(reusepickgroup)\r\n{\r\n  if (this.onlyOnceTranslationDebug==true) return;\r\n  this.onlyOnceTranslationDebug=true;\r\n\r\n  const aabb = new Box3().setFromObject(this.viewer.viewer.scene);\r\n  const center = aabb.getCenter( new Vector3() );\r\n   // console.log(\"needs translation so we should do this \",center);\r\n    for (var fn in this.ifcfiles)\r\n    {\r\n      var ifc = this.ifcfiles[fn];\r\n      if (!ifc.visible) continue;\r\n      ifc.processGLTF(ifc.gltf,center);\r\n    }\r\n\r\n\r\n    this.processedAll(reusepickgroup);\r\n\r\n\r\n}\r\n\r\nneedsTranslation()\r\n{\r\n // const aabb = new Box3().setFromObject(this.viewer.viewer.scene);\r\n  const aabb = new Box3().setFromObject(this.rootGroup);\r\n  const center = aabb.getCenter( new Vector3() );\r\n  var size = aabb.getSize( new Vector3() );\r\n \r\n  if ((Math.abs(center.x)>1000) || (Math.abs(center.y)>1000) || (Math.abs(center.z)>1000) )\r\n  {\r\n  \r\n    return true;\r\n  }\r\n  else\r\n  {\r\n    console.log(\"no need for extra translations\");\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\ntranslateIntoView()\r\n{\r\n  this.viewer.viewer.zoomAt(this.rootGroup);\r\n  //console.log(\"translate into view\");\r\n \r\n   \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ngetDefaultColor(color,defaultMat)\r\n{\r\n\r\n  var hint=this.viewer.props[\"visualisation hint\"];\r\n  if (hint==null)hint=\"normal\";\r\n\r\n  //var mat= new MeshStandardMaterial({color:color}); //good!\r\n\r\n  var mat = new MeshPhysicalMaterial({color:color});\r\n  \r\n\r\n  if (hint==\"grey\")\r\n  {\r\n    mat = new MeshPhysicalMaterial({color:\"#c0c0c0\"});\r\n    mat.vertexColors=false;//bijna zeker\r\n    mat.fog=true;\r\n   \r\n  }\r\n  if (hint==\"greytransparent\")\r\n  {\r\n    mat = new MeshPhysicalMaterial({color:\"#c0c0c0\"});\r\n    mat.vertexColors=false;//bijna zeker\r\n    mat.fog=true;\r\n    mat.transparent=true;\r\n    mat.opacity=0.4;\r\n   \r\n  }\r\n\r\n  if (hint==\"greyverytransparent\")\r\n  {\r\n    mat = new MeshPhysicalMaterial({color:\"#c0c0c0\"});\r\n    mat.vertexColors=false;//bijna zeker\r\n    mat.fog=true;\r\n    mat.transparent=true;\r\n    mat.opacity=0.1;\r\n   \r\n  }\r\n  if (hint==\"nice\")\r\n    {\r\n      mat= new MeshPhongMaterial({shininess: 0.5, emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color,color:color, side: DoubleSide});\r\n    }  \r\n\r\n\r\n    if (hint==\"nicerGrey\")\r\n      {\r\n      //  mat= new MeshPhongMaterial({shininess: 0.5, emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color,color:color, side: DoubleSide});\r\n        //mat= new MeshBasicMaterial({color:color});\r\n    \r\n      //  mat = new MeshNormalMaterial({color:color,side:DoubleSide});\r\n        \r\n       \r\n    \r\n    // Create ShaderMaterial\r\n    var mat = new ShaderMaterial({\r\n        vertexShader: this.vertexShader,\r\n        fragmentShader: this.fragmentShader,\r\n        uniforms: {\r\n          userColor: { value: new Color(0xaaaaaa) } // Default color (red)\r\n      }\r\n        //transparent: true, \r\n        //opacity:0.1\r\n    });\r\n    \r\n      \r\n       \r\n      }\r\n\r\n\r\n  if (hint==\"nicer\")\r\n  {\r\n    \r\n\r\n// Create ShaderMaterial\r\nvar mat = new ShaderMaterial({\r\n    vertexShader: this.vertexShader,\r\n    fragmentShader: this.fragmentShaderINV,\r\n    uniforms: {\r\n      userColor: { value: color } // Default color (red)\r\n  }\r\n    //transparent: true, \r\n    //opacity:0.1\r\n});\r\n  \r\n   \r\n  }\r\n\r\n  if (hint==\"normal\")\r\n  {\r\n   // mat.vertexColors=false;//bijna zeker\r\n    //mat.fog=true;\r\n    if (defaultMat!=null)\r\n    {\r\n      //mat=defaultMat;\r\n    }\r\n    mat.transparent=true;\r\n    mat.opacity=0.99;\r\n   \r\n \r\n  }\r\n  if (hint==\"transparent\")\r\n  {\r\n    mat.transparent=true;\r\n    mat.opacity=0.4;\r\n  }\r\n  if (hint==\"vtransparent\")\r\n  {\r\n    mat.transparent=true;\r\n    mat.opacity=0.1;\r\n  }\r\n\r\n  if (hint==\"toon\")\r\n  {\r\n    mat=new MeshToonMaterial({shininess: 50,emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color,color:color})\r\n  \r\n  }\r\n  if (hint==\"toontransparent\")\r\n  {\r\n    mat=new MeshToonMaterial({shininess: 50,emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color,color:color})\r\n    mat.transparent=true;\r\n    mat.opacity=0.4;\r\n  \r\n  }\r\n\r\n  mat.depthWrite =true;\r\nreturn mat;\r\n}\r\n\r\ndefaultColor()\r\n{\r\n \r\n  for (var fn in this.ifcfiles)\r\n  {\r\n    var ifc = this.ifcfiles[fn];\r\n    if (!ifc.visible) continue;\r\n\r\n    let colorMat={};\r\n    \r\n    \r\n\r\n   if (!ifc.simpleMode)\r\n   {\r\n\r\n      for (var key in ifc.allBFGs)\r\n        {\r\n          let color=ifc.allFirstChild[key];\r\n          let mat2 =ifc.allFirstMaterial[key];\r\n          var mat=this.getDefaultColor(color,mat2);\r\n          colorMat[key]=mat;\r\n        }\r\n        this.processColoring(ifc.allBFGs,colorMat);\r\n    }\r\n    else\r\n    {\r\n      ifc.addDefaultToScene();\r\n    //  console.log(ifc.gltf);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nprocessColoring(colorHash,colorMat)\r\n{\r\n  // console.log(\"inserting array objects into scene \",colorHash,colorMat);\r\n   this.colorMat=colorMat;\r\n  var rar=[];\r\n  \r\n   this.viewer.viewer.outlinePass.selectedObjects = [];\r\n    var latestChild=null;\r\n    for (var key in colorHash)\r\n    {\r\n      var ar = colorHash[key];\r\n      var cchild2=new Mesh();\r\n      latestChild=cchild2;\r\n     \r\n      if ((ar==null) || (ar.length==0) ) continue;\r\n\r\n     // cchild2.geometry=BufferGeometryUtils.mergeBufferGeometries(ar);\r\n     \r\n     cchild2.geometry=mergeGeometries(ar);\r\n     \r\n       var mat  = colorMat[key];\r\n       cchild2.material=mat;\r\n       cchild2.matrixAutoUpdate=true;\r\n       cchild2.castShadow=true;\r\n       cchild2.receiveShadow=true;\r\n      // this.viewer.viewer.outlinePass.selectedObjects.push(cchild2) ;\r\n\r\n       var edgeGeometries = ar.map((geometry) => new EdgesGeometry(geometry));\r\n       this.rootGroup.add(edgeGeometries);\r\n       rar.push(edgeGeometries);\r\n\r\n\r\n\r\n\r\n// var geometry= cchild2.geometry;\r\n//   // console.log(geometry);\r\n\r\n//    var bufferGeometry =geometry;\r\n//    const normals = bufferGeometry.getAttribute('normal');\r\n\r\n//    // Create a new Float32Array to hold inverted normals\r\n\r\n//    const invertedNormals = new Float32Array(normals.count * normals.itemSize);\r\n   \r\n//    // Invert normals\r\n//    for (let i = 0; i < normals.count; i++) {\r\n//        // Get original normal\r\n//        const nx = normals.getX(i);\r\n//        const ny = normals.getY(i);\r\n//        const nz = normals.getZ(i);\r\n   \r\n//        // Invert normal\r\n//        invertedNormals[i * normals.itemSize] = -nx;\r\n//        invertedNormals[i * normals.itemSize + 1] = -ny;\r\n//        invertedNormals[i * normals.itemSize + 2] = -nz;\r\n//    }\r\n   \r\n//    // Replace the original normals with inverted normals\r\n//    bufferGeometry.setAttribute('normal', new BufferAttribute(invertedNormals, normals.itemSize));\r\n\r\n\r\n\r\n\r\n       \r\n      \r\n       this.rootGroup.add(cchild2);\r\n       rar.push(cchild2);\r\n    }\r\n    \r\n\r\n  return rar;\r\n}\r\n\r\n\r\ngetNewRootGroup(b)\r\n{\r\n    var g =new Group();\r\n    g.matrixAutoUpdate=true;\r\n    g.castShadow=true;\r\n    g.receiveShadow=true;\r\n    return g;\r\n}\r\n\r\n\r\n\r\ngetPickGroup()\r\n{\r\n   if (this.pickGroup!=null) return this.pickGroup.children;\r\n   return [];\r\n}\r\n\r\n\r\ncreateNewPickGroup()\r\n{\r\n \r\n   this.pickGroup=this.getNewRootGroup();\r\n \r\n   for (var fn in this.ifcfiles)\r\n   {\r\n        var ifc = this.ifcfiles[fn];\r\n        if (!ifc.visible) continue;\r\n\r\n        if (ifc.simpleMode)\r\n        {\r\n          \r\n          this.pickGroup.add(ifc.getDefaultScene().clone(true));\r\n        }\r\n        else\r\n        {\r\n     \r\n              for (var n in ifc.allNodes)\r\n              {\r\n                try\r\n                {\r\n                 \r\n              \r\n                var child =ifc.allNodes[n];\r\n                \r\n               \r\n\r\n                var mesh=new Mesh();\r\n\r\n                mesh.geometry=child.geometry;\r\n                if (mesh.geometry==null) continue;\r\n                mesh.ifcguid=child.name;\r\n\r\n                var c=null;\r\n              \r\n                if (this.selectOnlySparqlResults)\r\n                {\r\n                  try {c=this.ifcdbsparql.guid_color[mesh.ifcguid];} catch(e){}\r\n                  if (c!=null)\r\n                  {\r\n                      this.pickGroup.add(mesh);\r\n                      mesh.updateMatrix();\r\n                      mesh.updateWorldMatrix(true,true);\r\n                  }\r\n                \r\n\r\n                }\r\n                else\r\n                {\r\n                  this.pickGroup.add(mesh);\r\n                  mesh.updateMatrix();\r\n                  mesh.updateWorldMatrix(true,true);\r\n                }\r\n            \r\n                }\r\n                catch(e){}\r\n                \r\n\r\n              }\r\n    }\r\n  }\r\n\r\n  //console.log(\"created pickgroup children \",this.pickGroup.children.length);\r\n   return  this.pickGroup.children;\r\n\r\n}\r\n\r\n\r\n\r\n  shouldLoadNewFiles(files)\r\n  {\r\n  \r\n    for (var n in files)\r\n    {\r\n      var nfile =files[n];\r\n      var f =this.getIFCFile(nfile);\r\n      if (f==null) return true;\r\n      if (f.visible==false) return true;\r\n    }\r\n    // zijn er ook ifc files visible die niet visible moeten zijn?\r\n     for (var n in this.ifcfiles)\r\n     {\r\n        var ifc =this.ifcfiles[n];\r\n        if (ifc.visible)\r\n        {\r\n          if (files.includes(ifc.name)==false) return true;\r\n        }\r\n     }\r\n\r\n   \r\n\r\nreturn false;\r\n    \r\n\r\n  }\r\n\r\n  getChild(guid)\r\n  {\r\n    for (var n in this.ifcfiles)\r\n    {\r\n      var ifcFile=this.ifcfiles[n];\r\n      if (ifcFile.visible)\r\n      {\r\n           var child = ifcFile.getChild(guid);\r\n           if (child!=null) return child;\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  setVisible(b)\r\n  { \r\n    for (var n in this.ifcfiles)\r\n    {\r\n      var ifcFile=this.ifcfiles[n];\r\n      ifcFile.visible=b;\r\n    }\r\n  }\r\n  isEmpty()\r\n  {\r\n    \r\n    for (var n in this.ifcfiles)\r\n    {\r\n      var ifcFile=this.ifcfiles[n];\r\n      if (ifcFile.visible) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\nemptyScene()\r\n{\r\n\r\n  if (this.viewer.viewer.scene!=null)  \r\n    {\r\n\r\n      this.viewer.viewer.createNewScene(this.viewer.viewer.scene);\r\n      this.viewer.viewer.controls.enabled=true;\r\n      this.viewer.viewer.orbiting=true;\r\n      this.rootGroup=this.getNewRootGroup(false);\r\n      this.viewer.viewer.scene.add(this.rootGroup);\r\n     \r\n    }\r\n}\r\n\r\nloadGLBFiles(viewer,files)\r\n  {\r\n    this.viewer=viewer;\r\n    \r\n    //console.log(\"loadGLBFiles called \",this.loadingInProgress,files);\r\n     if (this.loadingInProgress)\r\n     { \r\n            console.log(\"not loading glb files because already loading \");\r\n       return     false;\r\n     }\r\n \r\n     this.loadingInProgress=true;\r\n\r\n     this.asyncLoadGLBFiles(viewer,files.slice());\r\n\r\n  }\r\n\r\n  getIFCFile(file)\r\n  {\r\n     for (var n in this.ifcfiles)\r\n     {\r\n\r\n        if (this.ifcfiles[n].name==file) return this.ifcfiles[n];\r\n     }\r\n     return null;\r\n  }\r\n\r\n // async asyncLoadGLBFiles(viewer,files)\r\n  asyncLoadGLBFiles(viewer,files)\r\n  {\r\n   \r\n   var me=this;\r\n \r\n    this.loadedfiles=files;\r\n  \r\n    var me = this;\r\n   \r\n      this.reset();\r\n    this.setVisible(false);\r\n\r\n       \r\n   // console.log(\"setting amount of files to be loaded \",this.tobeprocessedFiles);\r\n   var loadingNewFiles = false;\r\n    for (var n in files)\r\n    {\r\n                var file = files[n];\r\n              \r\n                var ifcFile=this.getIFCFile(file);\r\n                if (ifcFile!=null)\r\n                {\r\n                  ifcFile.visible=true;\r\n                \r\n                   continue;\r\n                }\r\n               \r\n                loadingNewFiles=true;\r\n              \r\n                if (file.toLowerCase().endsWith(\".glb\"))\r\n                {\r\n                   var simpleMode=this.viewer.props.simpleMode;\r\n                  // console.log(\"simple mode \",simpleMode);\r\n                   \r\n                  var ifcFile = new IFCGLBFile(this,file,function(){me.readyLoading()},simpleMode);\r\n                  this.ifcfiles.push(ifcFile);\r\n                }\r\n                else\r\n                {\r\n                  if (file.toLowerCase().endsWith(\".ifc\"))\r\n                  {\r\n                \r\n                    var ifcFile = new IFCFile(this,file,function(){me.readyLoading()});\r\n                    this.ifcfiles.push(ifcFile);\r\n                  }\r\n                  else\r\n                  {\r\n                    console.log(\"cannot load file \");\r\n                  // window.alert(\"cannot load file \"+file);\r\n                    me.readyLoading();\r\n                  }\r\n                }\r\n\r\n\r\n               \r\n           \r\n                //)\r\n      }\r\n\r\n      if (loadingNewFiles==false)\r\n      {\r\n         this.processedAll();\r\n      }\r\n\r\n   \r\n  }\r\nreadyLoading()\r\n{\r\n  //console.log(\"ready loading called\");\r\n  for (var n in this.ifcfiles)\r\n  {\r\n    if (this.ifcfiles[n].loading) return;\r\n  }\r\n // console.log(\"all are loading to processing them all\");\r\n  this.processedAll();\r\n}\r\n \r\n\r\n reset()\r\n {\r\n  \r\n  \r\n  //console.log(\"RESET empy\");\r\n  \r\n\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  processSparqlResults(viewer)\r\n {\r\n    if (viewer.props.data==null) return;\r\n        this.viewer=viewer;\r\n        var bindings = viewer.props.data.results.bindings;\r\n\r\n     \r\n        \r\n       this.processBindings(bindings);\r\n\r\n }\r\n\r\n \r\n processBindings(bindings)\r\n {\r\n  //process sparql bindings icm glb files\r\n  if (bindings==this.latestBindings) return;\r\n      var viewer= this.viewer;\r\n\r\n        var lm =new LoadingManager();\r\n        var loader = new GLTFLoader(lm);\r\n        var me =this;\r\n       \r\n        \r\n          \r\n          // console.log(\"really processing sparql results geometry\");\r\n           if (viewer.scene!=null)  \r\n           {\r\n             viewer.createNewScene(viewer.scene);\r\n           }\r\n\r\n\r\n           this.latestBindings=bindings;\r\n           this.reset();\r\n\r\n           this.tobeprocessedBindings=bindings.length;\r\n           this.aantalBindings=0;\r\n          // console.log(\"aantal bindingen:\"+  this.tobeprocessedBindings);\r\n           loader = new GLTFLoader();\r\n           var aantal=0;\r\n      \r\n        for (var n in bindings)\r\n        {\r\n          aantal++;\r\n        \r\n         \r\n          try{\r\n                    var binding = bindings[n];\r\n                    var gltfB= binding.gltf.value;\r\n                    gltfB =JSON.parse(gltfB);\r\n                   \r\n\r\n                    var uri= binding.uri.value;\r\n                    gltfB.userData={uri:uri};\r\n                    gltfB.name=uri;\r\n\r\n                 \r\n                    loader.parse(gltfB,\"\",function(gltf){\r\n                     \r\n                      //  let child = gltf.scene.children[0];\r\n                         if  ((gltf.scene!=null) && (gltf.scene.children!=null))\r\n                         {\r\n                            me.aantalBindings++;\r\n                            me.processGLTFElement(gltf.scene.children[0],true);\r\n                         }\r\n                         else\r\n                         {\r\n\r\n                          this.aantalBindings++;\r\n                         }\r\n                    },function(err){console.log(err);})\r\n                 \r\n          }\r\n          catch(e)\r\n          {\r\n            console.log(e);\r\n            this.aantalBindings++;\r\n          }\r\n        \r\n          \r\n        }\r\n        console.log(\"klaar met bindingen\");\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n}\r\n\r\nexport default IFCDB;\r\n","import {Color,Box3,OrthographicCamera,Vector3,HemisphereLight,HemisphereLightHelper,Mesh,BufferGeometry,PointLight, Vector2,Raycaster,MeshToonMaterial, MeshPhongMaterial,MeshLambertMaterial,SpotLight,AmbientLight, AxesHelper, DirectionalLight, GridHelper, PerspectiveCamera, Scene, WebGLRenderer,Object3D } from \"three\";\r\n\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\r\n//import { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\r\n//import { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\n\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { OutlinePass } from 'three/examples/jsm/postprocessing/OutlinePass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\r\n\r\n\r\n\r\n\r\nimport  \"popper.js\"\r\nimport tippy,{followCursor} from \"tippy.js\"\r\n\r\nimport 'tippy.js/dist/tippy.css'; \r\nimport 'tippy.js/dist/backdrop.css';\r\nimport 'tippy.js/animations/shift-away.css';\r\n\r\nimport * as OBC from \"openbim-components\";\r\nimport gsap from \"gsap\";\r\n//import \"./tippy.js/dist/tippy-bundle.cjs.js\"\r\n\r\n\r\n\r\nclass ThreeJSViewer\r\n\r\n{\r\n  viewer=null;\r\n  scene=null;\r\n   // ifcLoader=null;\r\n    renderer=null;\r\n    raycaster=null;\r\n    //acceleratedRaycast=null;\r\n    camera=null;\r\n    pointer=new Vector2();\r\n    selectedChild=null;\r\n    selectedChilds=[];\r\n    hooverChild=null;\r\n    orbiting=false;\r\n    threeCanvas=null;\r\n    animeerAantal=10;\r\n    useComposer=false;\r\n\r\n\r\n\r\n    initViewerNT(viewer)\r\n    {\r\n       this.viewer=viewer;\r\n\r\n       const tcid=\"three-canvas\"+this.viewer.id;\r\n       const threeCanvas = document.getElementById(tcid);\r\n      \r\n       this.threeCanvas=threeCanvas;\r\n\r\n       const components = new OBC.Components();\r\n       components.scene = new OBC.SimpleScene(components);\r\n       components.renderer = new OBC.SimpleRenderer(components, threeCanvas);\r\n       \r\n        this.renderer = components.renderer;\r\n       // renderer.postproduction.outlineColor = 0x999999;\r\n\r\n        const camera =  new OBC.SimpleCamera(components);\r\n        components.camera = camera;\r\n        \r\n        this.camera=camera;\r\n       components.raycaster = new OBC.SimpleRaycaster(components);\r\n       \r\n       components.init();\r\n\r\n\r\n\r\n       \r\n       // Add some elements to the scene\r\n       \r\n       const scene = components.scene.get();\r\n     this.scene=scene;\r\n\r\n\r\n     const shadows = new OBC.ShadowDropper(components);\r\n\r\n\r\n\r\n     const directionalLight = new DirectionalLight();\r\ndirectionalLight.position.set(5, 10, 3);\r\ndirectionalLight.intensity = 0.5;\r\nscene.add(directionalLight);\r\n\r\nconst ambientLight = new AmbientLight();\r\nambientLight.intensity = 0.5;\r\nscene.add(ambientLight);\r\n\r\n\r\n\r\nconst grid = new OBC.SimpleGrid(components);\r\n    components.tools.add(grid);\r\n    this.grid=grid.get();\r\n  //  renderer.postproduction.excludedItems.add(grid.get());\r\n    this.raycaster = new Raycaster();\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n     initViewer(viewer)\r\n    {\r\n          this.viewer=viewer;\r\n    /*      if (false)\r\n          {\r\n          BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;\r\n          BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;\r\n          Mesh.prototype.raycast = acceleratedRaycast;\r\n          }\r\n          */\r\n          //this.setState({loading:false});\r\n\r\n            \r\n            const tcid=\"three-canvas\"+this.viewer.id;\r\n          const threeCanvas = document.getElementById(tcid);\r\n         \r\n          this.threeCanvas=threeCanvas;\r\n                    \r\n          // Object3D.DefaultUp.set(0, 1, 0);\r\n          let canvasBounds = threeCanvas.getBoundingClientRect();\r\n          \r\n          var width = canvasBounds.right - canvasBounds.left;\r\n          var height=canvasBounds.bottom - canvasBounds.top;\r\n      \r\n       \r\n   \r\n                       \r\n                           const size = {\r\n                               width: width,\r\n                               height: height,\r\n                             };\r\n                         \r\n                             const scene = new Scene();\r\n                   const aspect = size.width / size.height;\r\n                 \r\n                   const camera = new PerspectiveCamera(75, aspect);\r\n                   camera.position.z = 15;\r\n                   camera.position.y = 13;\r\n                   camera.position.x = 8;\r\n                   camera.near=1;\r\n                   camera.far=1000;\r\n                  \r\n                    this.camera=camera;\r\n   \r\n                   var pointLight = new PointLight( 0xffffff,1000 );\r\n                   pointLight.position.set(0,0,0);\r\n                   //camera.add(pointLight);\r\n   \r\n   \r\n   \r\n                   //Creates the lights of the scene\r\n                  \r\n                   scene.background = new Color( 0xeeeeee );\r\n                   scene.background = new Color( 0xADD8E6 );\r\n                 \r\n   \r\n                   //Sets up the renderer, fetching the canvas of the HTML\r\n                   \r\n                   const renderer = new WebGLRenderer({\r\n                     canvas: threeCanvas,\r\n                     alpha: true,\r\n                     powerPreference:\"high-performance\",\r\n                     antialias:true,\r\n                     logarithmicDepthBuffer: false,\r\n                     sortObjects: true,\r\n                     colorManagement: true,\r\n                   \r\n                   });\r\n                  \r\n\r\n                 \r\n                   \r\n                 \r\n\r\n                  // renderer.physicallyCorrectLights = true;\r\n                   renderer.setPixelRatio( window.devicePixelRatio );\r\n\r\n                 \r\n                   this.renderer=renderer;\r\n                   this.raycaster = new Raycaster();\r\n   \r\n                   renderer.setSize(size.width, size.height);\r\n                \r\n                  // renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\r\n                   this.renderer=renderer;\r\n                   //Creates grids and axes in the scene\r\n                   const grid = new GridHelper(50, 30);\r\n                 \r\n                   this.grid=grid;\r\n   \r\n                   const axes = new AxesHelper();\r\n                   axes.material.depthTest = false;\r\n                   axes.renderOrder = 1;\r\n\r\n                   if (true)\r\n                   {\r\n                      scene.add(axes);\r\n                       scene.add(grid);\r\n                   }\r\n                   if (true)\r\n                   {\r\n                    var composer = new EffectComposer(renderer);\r\n                    composer.setSize(size.width, size.height);\r\n                    this.composer=composer;\r\n                    // Render Pass\r\n                    const renderPass = new RenderPass(scene, camera);\r\n                    composer.addPass(renderPass);\r\n              \r\n                    // Outline Pass\r\n                    var outlinePass = new OutlinePass(new Vector2(size.width, size.height), scene, camera);\r\n                    //outlinePass.selectedObjects = [cube];\r\n                    this.outlinePass=outlinePass;\r\n                    composer.addPass(outlinePass);\r\n              \r\n                    // FXAA Pass (optional for better outline quality)\r\n                    const fxaaPass = new ShaderPass(FXAAShader);\r\n                    fxaaPass.uniforms['resolution'].value.set(1 / window.innerWidth, 1 / window.innerHeight);\r\n                    composer.addPass(fxaaPass);\r\n\r\n\r\n                   }\r\n   \r\n                   //Creates the orbit controls (to navigate the scene)\r\n                   const controls = new OrbitControls(camera, threeCanvas);\r\n                   controls.enableDamping = true;\r\n                   controls.target.set(-2, 0, 0);\r\n                   this.controls=controls;\r\n   \r\n                   //Animation loop\r\n                   this.animeerAantal=50;\r\n                   var me = this;\r\n   \r\n                   const animate = () => {\r\n                     if (me.animeerAantal>0)\r\n                     {\r\n                       controls.update();\r\n                       renderer.render(scene, camera);\r\n                       if (this.useComposer)                       composer.render(scene,camera);\r\n                       me.animeerAantal--;\r\n                     }\r\n                     if (me.animeerAantal>100)\r\n                     {\r\n                      me.animeerAantal=100;\r\n                     }\r\n                     requestAnimationFrame(animate);\r\n                     \r\n                   };\r\n   \r\n                   animate();\r\n                   \r\n                  \r\n                  \r\n                     renderer.render(scene, camera);\r\n                     controls.addEventListener(\"change\", () => \r\n                     {\r\n                       this.animeerAantal=50;\r\n                       });\r\n                       controls.addEventListener(\"start\", () => \r\n                       {\r\n                         this.orbiting=true;\r\n                       });\r\n                       controls.addEventListener(\"end\", () => \r\n                       {\r\n                         this.orbiting=false;\r\n                       });\r\n                  \r\n   \r\n                   //Adjust the viewport to the size of the browser\r\n                 \r\n   \r\n                   threeCanvas.addEventListener(\"hide\",(event)=>{\r\n                    console.log(event);\r\n                   });\r\n\r\n                   threeCanvas.addEventListener(\"mousemove\",(event)=>{\r\n                   \r\n                     if (this.orbiting) return;\r\n                     this.mousemove(event);\r\n                   },false)\r\n\r\n\r\n                   threeCanvas.addEventListener(\"click\",(event)=>{\r\n                  \r\n                    this.mouseclick(event);\r\n                  },false)\r\n\r\n                  threeCanvas.addEventListener(\"dblclick\",(event)=>{\r\n                  \r\n                    this.mouseDoubleClick(event);\r\n                  },false)\r\n                \r\n                   this.scene=scene;\r\n                   this.camera=camera;\r\n                   camera.updateProjectionMatrix();\r\n                 \r\n    }\r\n    resize()\r\n    {\r\n       try\r\n       {\r\n        const tcid=\"three-canvas\"+this.viewer.id;\r\n      const threeCanvas = document.getElementById(tcid);\r\n             let canvasBounds = threeCanvas.getBoundingClientRect();\r\n\r\n               var width = canvasBounds.right - canvasBounds.left+200;\r\n               var height=canvasBounds.bottom - canvasBounds.top+200;\r\n\r\n                         \r\n                           \r\n                               const size = {\r\n                                   width: width,\r\n                                   height: height,\r\n                                 };\r\n           var camera=this.camera;\r\n           camera.aspect = size.width / size.height;\r\n           camera.updateProjectionMatrix();\r\n           this.renderer.setSize(size.width, size.height);\r\n           this.composer.setSize(size.width, size.height);\r\n           this.animeerAantal=50;\r\n                                }\r\n                                catch(e)\r\n                                {}\r\n\r\n    }\r\n\r\n    \r\n     createNewScene(scene)\r\n    {\r\n      if (scene==null) scene=this.scene;\r\n\r\n    //  console.log(\"new scene\");\r\n       scene.clear();\r\n       const lightColor = 0xFFFFFF;\r\n       const lightColor2 = 0x445544;\r\n\r\n\r\n       const light = new HemisphereLight( 0xffffbb, 0x080808, 0.1 );\r\n   // const helper = new HemisphereLightHelper( light, 5 );\r\n       scene.add( light );\r\n\r\n     \r\n    \r\n       const ambientLight = new AmbientLight(lightColor, 0.01);\r\n       scene.add(ambientLight);\r\n    \r\n       var directionalLight = new SpotLight(lightColor);\r\n       directionalLight.castShadow = true;\r\n       directionalLight.position.set(2500, 2500, 2500);\r\n       directionalLight.target.position.set(0, 0, 0);\r\n       \r\n       //scene.add(directionalLight);\r\n       scene.add(directionalLight.target);\r\n    \r\n    \r\n       var directionalLight = new SpotLight(lightColor, .3);\r\n       directionalLight.castShadow = true;\r\n       directionalLight.position.set(0, 2500, 2500);\r\n       directionalLight.target.position.set(0, 0, 50);\r\n     //  directionalLight.target.position.set(0, 1000, 0);\r\n      //scene.add(directionalLight);\r\n\r\n\r\n\r\n        directionalLight = new SpotLight(lightColor, .2);\r\n       directionalLight.castShadow = true;\r\n       directionalLight.position.set(0, 2500, 5200);\r\n       directionalLight.target.position.set(50, 0, 0);\r\n     //  directionalLight.target.position.set(0, 1000, 0);\r\n      // scene.add(directionalLight);\r\n\r\n        directionalLight = new DirectionalLight(0xffffff, 0.2);\r\n       directionalLight.position.set(520, 550, 550).normalize();\r\n      //scene.add(directionalLight);\r\n\r\n      directionalLight = new DirectionalLight(0xaaaaaa, 0.1);\r\n      directionalLight.position.set(250, -50, -50).normalize();\r\n     //scene.add(directionalLight);\r\n\r\n     directionalLight = new DirectionalLight(0xffffff, 0.1);\r\n     directionalLight.position.set(250, 150, -250).normalize();\r\n    //scene.add(directionalLight);\r\n\r\n    directionalLight = new DirectionalLight(0xaaaaaa, 0.1);\r\n    directionalLight.position.set(-250, 250, 250).normalize();\r\n  // scene.add(directionalLight);\r\n\r\n\r\n\r\n\r\n\r\n       //scene.add(directionalLight.target);\r\n       \r\n    \r\n    \r\n         //Creates grids and axes in the scene\r\n         const grid = new GridHelper(50, 30);\r\n       \r\n        \r\n       const axes = new AxesHelper();\r\n       axes.material.depthTest = false;\r\n       axes.renderOrder = 1;\r\n       if (false)\r\n       {\r\n        scene.add(axes);\r\n        scene.add(grid);\r\n       }\r\n       this.setAnimeerAantal(1);\r\n       this.resize();\r\n    \r\n    }\r\n\r\n\r\n    \r\ngetIntersection(event)\r\n{\r\n\r\n //if(true) return;\r\n if (this.orbiting)return null;\r\n if (this.raycaster==null)return null;\r\n\r\n  event.preventDefault();\r\n  \r\n  let canvasBounds = this.renderer.getContext().canvas.getBoundingClientRect();\r\n  this.pointer.x = ( ( event.clientX - canvasBounds.left ) / ( canvasBounds.right - canvasBounds.left ) ) * 2 - 1;\r\n  this.pointer.y = - ( ( event.clientY - canvasBounds.top ) / ( canvasBounds.bottom - canvasBounds.top) ) * 2 + 1;\r\n  var pg = this.viewer.ifcdb.getPickGroup();\r\n  this.raycaster.setFromCamera(this.pointer,this.camera);\r\n\r\n  if (pg==null) return;\r\n  try\r\n  {\r\n  var intersects = this.raycaster.intersectObjects(pg, true);\r\n  return intersects;\r\n  }\r\n  catch(e)\r\n  {console.log(e);}\r\n  return null;\r\n\r\n}\r\n\r\nmousemove(event)\r\n{\r\n try\r\n {\r\n     var intersects = this.getIntersection(event);\r\n     if (intersects==null) return ;\r\n  if (intersects.length>0)\r\n  {\r\n   \r\n    var child = intersects[0].object;\r\n\r\n    child=child.clone();\r\n\r\n    //console.log(child,this.selectedChild);\r\n\r\n      if ((this.hooverChild!=null) && (child==this.hooverChild.children[0])) { return;}\r\n      if ((this.selectedChild!=null) && (child==this.selectedChild.children[0])) { return;}// no hoovering on selected objects\r\n      \r\n    if (child.orgMatrix==null)\r\n    { child.orgMatrix=child.matrix;\r\n\r\n      //child.matrix.multiply(root.matrix );\r\n    }\r\n     // console.log(\"Found a child\",child,intersects);\r\n    if (child.orgMaterial==null) child.orgMaterial=child.material;\r\n    child.material=new MeshPhongMaterial({color:0x0000ff,specular: 0xaaaaaa,shininess: 1000,emissive:0x0000ff});\r\n    child.material.opacity=0.5;\r\n    child.renderOrder=10;\r\n    if (this.hooverChild!=null)\r\n    {\r\n      this.scene.remove(this.hooverChild);\r\n    }\r\n    var root =this.viewer.ifcdb.getNewRootGroup();\r\n    this.hooverChild=root;\r\n    root.add(child)\r\n    this.scene.add(root);\r\n     // console.log(child);\r\n      var msg=null;\r\n      try {\r\n        msg=this.viewer.ifcdb.ifcdbsparql.getLabel(child.geometry.guid);\r\n      } catch(e){}\r\n      if (msg!=null)\r\n      {\r\n      //\r\n        this.showTippy(msg);\r\n      }\r\n      else{\r\n        this.showTippy(\"IFC GUID:\"+child.geometry.guid);\r\n      }\r\n  }\r\n  else\r\n  {\r\n    if (this.hooverChild!=null)\r\n    {\r\n      this.scene.remove(this.hooverChild);\r\n      this.destroyTippy();\r\n    }\r\n  \r\n  }\r\n\r\n  this.setAnimeerAantal(1);\r\n  \r\n\r\n\r\n\r\n }\r\n catch(e)\r\n {\r\n    console.log(e);\r\n }\r\n\r\n}\r\nsetAnimeerAantal(aantal)\r\n{\r\n  this.animeerAantal+=aantal;\r\n}\r\n\r\nsetSelectedGuid()\r\n{\r\n\r\n\r\nvar newGuid = this.viewer.props.pubsub[this.viewer.props.guidselector];\r\n            if ((newGuid!=null) && (newGuid!=this.selectedGuid) )\r\n            {\r\n              var child=this.viewer.ifcdb.getChild(newGuid);\r\n              if (child!=null)\r\n              {\r\n              \r\n                var mesh =new Mesh();\r\n                mesh.geometry=child.geometry;\r\n                mesh.name=child.name;\r\n                var par=this.viewer.props[\"guidpublishparameter\"];\r\n                if (par!=null)\r\n              {\r\n                this.viewer.props.publish(par,child.name);\r\n                this.showSelectChild(mesh);\r\n              }\r\n              else\r\n              {\r\n                   console.log(\"could not find child\");\r\n              }\r\n\r\n\r\n            }\r\n          }\r\n\r\n\r\n\r\n}\r\nmouseDoubleClick(event)\r\n{\r\n  if (this.selectedChild!=null)\r\n  {\r\n    this.zoomAt(this.selectedChild,4);\r\n  }\r\n  \r\n}\r\n\r\nmouseclick(event)\r\n{\r\n\r\n if (this.orbiting)return;\r\n event.preventDefault();\r\nvar intersects = this.getIntersection(event);\r\nif (intersects==null) \r\n{\r\n  if (this.selectedChild!=null)\r\n  {\r\n    this.scene.remove(this.selectedChild);\r\n    this.selectedGuid=null;\r\n  }\r\nreturn ;\r\n}\r\n\r\n\r\nif (intersects.length>0)\r\n{\r\n \r\n  var child = intersects[0].object;\r\n\r\n  this.showSelectChild(child);\r\n\r\n  var par=this.viewer.props[\"guidpublishparameter\"];\r\n  if (par!=null)\r\n  {\r\n      this.viewer.props.publish(par,intersects[0].object.ifcguid);\r\n  }\r\n//guidpublishparameter\r\n\r\n\r\n\r\n\r\n}\r\nelse\r\n{\r\n  if (this.selectedChild!=null)\r\n  {\r\n   // this.scene.remove(this.selectedChild);\r\n  }\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\nshowSelectChild(child)\r\n{\r\n\r\n// console.log(\"geen par gevonden \",intersects[0].object)\r\nchild=child.clone();\r\n\r\n//console.log(child,this.selectedChild);\r\n\r\n  if ((this.selectedChild!=null) && (child==this.selectedChild.children[0])) { \r\n  //  console.log(\"show selected child is already selected\")\r\n    return;\r\n  }\r\n  \r\n      if (child.orgMatrix==null)\r\n      { child.orgMatrix=child.matrix;\r\n\r\n        //child.matrix.multiply(root.matrix );\r\n      }\r\n  \r\n // console.log(\"Found a child\",child,intersects);\r\nif (child.orgMaterial==null) child.orgMaterial=child.material;\r\nchild.material=new MeshPhongMaterial({color:0xff0000,specular: 0xaaaaaa,shininess: 1000,emissive:0xff0000});\r\nchild.material.opacity=0;\r\nchild.renderOrder=11;\r\nif (this.selectedChild!=null)\r\n{\r\n  this.scene.remove(this.selectedChild);\r\n  this.selectedGuid=null;\r\n}\r\nvar root =this.viewer.ifcdb.getNewRootGroup();\r\nthis.selectedChild=root;\r\nroot.add(child)\r\nthis.selectedGuid=child.name;\r\nthis.scene.add(root);\r\n\r\nthis.setAnimeerAantal(1);\r\n\r\n\r\n}\r\n\r\n\r\n\r\nzoomAt = (target,distance)=>{\r\n  \r\n  if (distance==null) distance=1;\r\n\tvar camera=this.camera;\r\n  //use this code for a object size agnostic solution; build a bounding box around your object you want to zoom and  get its size: \r\nconst aabb = new Box3().setFromObject( target );\r\nconst center = aabb.getCenter( new Vector3() );\r\nvar size = aabb.getSize( new Vector3() );\r\n\r\n\r\n  //now use gsap and not tweenjs.. never use tweenjs again. never. \r\ngsap.to( camera.position, {\r\nduration: 1,\r\nx: center.x,\r\ny: center.y+3, // place camera a bit higher than the object\r\nz: center.z + size.z+distance, // maybe adding even more offset depending on your model\r\nonUpdate: function() {\r\ncamera.lookAt( target.position ); //important \r\n}\r\n} );\r\nvar orbitControls= this.controls;\r\nthis.setAnimeerAantal(1000);\r\ngsap.to(  this.controls.target, {\r\nduration: 1,\r\nx: center.x,\r\ny: center.y, //set the center of the controler to the zoomed object \r\nz: center.z , // no distance needed\r\nonComplete: ()=>{\r\norbitControls.enabled = true; // activate the controler again after animation\r\nthis.setAnimeerAantal(10);\r\n}\r\n} );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n showTippy(msg)\r\n{\r\n   try\r\n   {\r\n    if (msg==null)\r\n    {\r\n        msg=\"no info\";\r\n    }\r\n    if (document.tippy==null)\r\n    {\r\n    //  document.tippy=tippy( document.body, {placement:\"followCursor\", plugins: [followCursor],content: msg,followCursor: true  });\r\n    var div=document.getElementById(\"tippydiv\"+this.viewer.id);\r\n    if (div!=null)\r\n    {\r\n      document.tippy=tippy( div, {trigger: 'manual',placement:\"followCursor\", plugins: [followCursor],content: msg,followCursor: true  });\r\n    }\r\n      //document.tippy=tippy( this.threeCanvas, {placement:\"followCursor\", plugins: [followCursor],content: msg,followCursor: true  });\r\n    }\r\n    document.tippy.setContent(msg);\r\n   \r\n\r\n    try {document.tippy.show();} catch(e){}\r\n\r\n      try\r\n      {\r\n     // document.tippy.popperInstance.scheduleUpdate();\r\n      //document.tippy.popperInstance.update();\r\n      }\r\n      catch(e)\r\n      {}\r\n\r\n    \r\n     \r\n    }\r\n    catch(e){} \r\n   \r\n   \r\n    \r\n}\r\n\r\n\r\n destroyTippy()\r\n{\r\n \r\n  try {document.tippy.hide();} catch(e){}\r\n \r\n}\r\n\r\n\r\n\r\n\r\nfitCameraToCenteredObject (object ) {\r\n \r\n  var camera=this.camera;\r\n  var offset=1;\r\n  var orbitControls=this.orbitControls;\r\n\r\n  const boundingBox = new Box3();\r\n  boundingBox.setFromObject( object );\r\n\r\n  var middle = new Vector3();\r\n  var size = new Vector3();\r\n  boundingBox.getSize(size);\r\n\r\n  // figure out how to fit the box in the view:\r\n  // 1. figure out horizontal FOV (on non-1.0 aspects)\r\n  // 2. figure out distance from the object in X and Y planes\r\n  // 3. select the max distance (to fit both sides in)\r\n  //\r\n  // The reason is as follows:\r\n  //\r\n  // Imagine a bounding box (BB) is centered at (0,0,0).\r\n  // Camera has vertical FOV (camera.fov) and horizontal FOV\r\n  // (camera.fov scaled by aspect, see fovh below)\r\n  //\r\n  // Therefore if you want to put the entire object into the field of view,\r\n  // you have to compute the distance as: z/2 (half of Z size of the BB\r\n  // protruding towards us) plus for both X and Y size of BB you have to\r\n  // figure out the distance created by the appropriate FOV.\r\n  //\r\n  // The FOV is always a triangle:\r\n  //\r\n  //  (size/2)\r\n  // +--------+\r\n  // |       /\r\n  // |      /\r\n  // |     /\r\n  // | F° /\r\n  // |   /\r\n  // |  /\r\n  // | /\r\n  // |/\r\n  //\r\n  // F° is half of respective FOV, so to compute the distance (the length\r\n  // of the straight line) one has to: `size/2 / Math.tan(F)`.\r\n  //\r\n  // FTR, from https://threejs.org/docs/#api/en/cameras/PerspectiveCamera\r\n  // the camera.fov is the vertical FOV.\r\n\r\n  const fov = camera.fov * ( Math.PI / 180 );\r\n  const fovh = 2*Math.atan(Math.tan(fov/2) * camera.aspect);\r\n  let dx = size.z / 2 + Math.abs( size.x / 2 / Math.tan( fovh / 2 ) );\r\n  let dy = size.z / 2 + Math.abs( size.y / 2 / Math.tan( fov / 2 ) );\r\n  let cameraZ = Math.max(dx, dy);\r\n\r\n  // offset the camera, if desired (to avoid filling the whole canvas)\r\n  if( offset !== undefined && offset !== 0 ) cameraZ *= offset;\r\n\r\n  camera.position.set( 0, 0, cameraZ );\r\n\r\n  // set the far plane of the camera so that it easily encompasses the whole object\r\n  const minZ = boundingBox.min.z;\r\n  const cameraToFarEdge = ( minZ < 0 ) ? -minZ + cameraZ : cameraZ - minZ;\r\n\r\n  camera.far = cameraToFarEdge * 3;\r\n  camera.updateProjectionMatrix();\r\n\r\n  if ( orbitControls !== undefined ) {\r\n      // set camera to rotate around the center\r\n      orbitControls.target = new Vector3(0, 0, 0);\r\n\r\n      // prevent camera from zooming out far enough to create far plane cutoff\r\n      orbitControls.maxDistance = cameraToFarEdge * 2;\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ThreeJSViewer\r\n","import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { KTX2Loader } from 'three/examples/jsm/loaders/KTX2Loader.js';\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport { parseTextForVariables } from '../../../../helpers/sparql';\r\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\r\nimport {Box3,Cache,Object3D,Vector3, REVISION,Matrix4,BufferGeometry,LoadingManager } from \"three\";\r\nimport {Mesh,MeshDepthMaterial,MeshPhysicalMaterial,MeshStandardMaterial, MeshDistanceMaterial, MeshToonMaterial, MeshPhongMaterial,MeshLambertMaterial } from \"three\";\r\nimport * as THREE from 'three';\r\nimport IFCGLBFile from './IFCGLBFile';\r\nimport { toInteger } from 'lodash';\r\nimport  {mergeBufferGeometries,mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils.js\";\r\n\r\n\r\n\r\n\r\nexport class GLBFromSparqlResults\r\n{\r\n    constructor(viewer)\r\n    {\r\n        this.viewer=viewer;\r\n        this.ifcdb=viewer.ifcdb;\r\n        if (this.viewer.props.data==null) return;\r\n        try\r\n        {\r\n            var vars=this.viewer.props.data.head.vars;\r\n            for (var n in vars)\r\n            {\r\n                if (vars[n]==\"gltf\")\r\n                {\r\n                          this.processSparql();\r\n                }\r\n            }\r\n            \r\n\r\n        }\r\n        catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n     setupIFCDB()\r\n     {\r\n              \r\n        this.viewer.ifcdb.viewer=this.viewer;\r\n        this.ifcdb.pickGroup=null;\r\n        this.ifcdb.createNewPickGroup();\r\n        this.ifcdb.rootGroup=this.ifcdb.getNewRootGroup();\r\n        this.ifcdb.rootGroup.rotation.x = -Math.PI / 2;\r\n        this.viewer.viewer.scene.add(this.ifcdb.rootGroup);\r\n\r\n\r\n    // part 2\r\n        this.rootGroup=this.ifcdb.getNewRootGroup();\r\n         this.nodes=[];\r\n         this.color_nodes={};\r\n\r\n         if (this.colors==null)\r\n          {\r\n            this.colors=[];\r\n            \r\n            this.colors.push(this.getRandomHexColor());\r\n            this.colors.push(this.getRandomHexColor());\r\n            this.colors.push(this.getRandomHexColor());\r\n            this.colors.push(this.getRandomHexColor());\r\n            this.colors.push(this.getRandomHexColor());\r\n            \r\n          }\r\n         \r\n        \r\n      \r\n     }\r\n\r\n    processSparql()\r\n    {\r\n\r\n        console.log(\"processing sparql results\");\r\n        if (this.viewer.props.data==null) return;\r\n        this.setupIFCDB();\r\n      \r\n       \r\n       var glb=new IFCGLBFile(this.viewer.ifcdb,null,null,null,true);\r\n       this.glb=glb;\r\n       var me=this;\r\n      \r\n       this.loadedN=0;\r\n       this.processedN=0;\r\n        try{\r\n                var bindings=this.viewer.props.data.results.bindings;\r\n                this.resultsN=bindings.length;\r\n             \r\n                for (var b in bindings)\r\n                {\r\n                    var binding=bindings[b];\r\n                    var gltf = binding.gltf.value;\r\n                    var color = null;\r\n                    try {color= binding.color.value;}catch(e){}\r\n                   \r\n                   //  try {  gltf.color=color;} catch(e){gltf=JSON.parse(gltf); gltf.color=color;}\r\n                        var r=glb.loader.parse(gltf,\"\",function(arg){me.onLoad(arg);},function(arg){me.onError(arg);});\r\n                   \r\n                    \r\n                }\r\n        }\r\n         catch(e)\r\n         {console.log(e);}\r\n\r\n                \r\n\r\n\r\n\r\n\r\n    }\r\n\r\n     getRandomHexColor() {\r\n        // Generate a random number between 0 and 16777215 (0xFFFFFF in hexadecimal)\r\n        const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n      \r\n        // Ensure the color has six digits by padding with zeros if necessary\r\n        return \"#\" + \"0\".repeat(6 - randomColor.length) + randomColor;\r\n      }\r\n       convertToHex(str) {\r\n        var hex = '';\r\n        for(var i=0;i<str.length;i++) {\r\n            hex += ''+str.charCodeAt(i).toString(16);\r\n        }\r\n        return hex;\r\n    }\r\n\r\n      onError(arg)\r\n      {\r\n        console.log(\"error parsing gltf\");\r\n        this.loadedN++;\r\n        if (this.loadedN==this.resultsN)\r\n        {\r\n            this.onLoadReady();\r\n        }\r\n\r\n      }\r\n    \r\n    onLoad(gltf)\r\n    {\r\n\r\n       // console.log(gltf.scene.children[0].geometry);\r\n       \r\n          \r\n            var c=this.colors[(toInteger(Math.random()*5)+\"\")];\r\n\r\n            if (gltf.color!=null)\r\n            {\r\n                c=this.convertToHex(gltf.color);\r\n            }\r\n\r\n              var o3d=gltf.scene.children[0];\r\n                    this.nodes.push(o3d);\r\n                    var ar =this.color_nodes[c];\r\n                    if (ar==null)\r\n                    {\r\n                        ar=[];\r\n                        this.color_nodes[c]=ar;\r\n                    }\r\n                    ar.push(o3d.geometry);\r\n\r\n                    this.loadedN++;\r\n                    if (this.loadedN==this.resultsN)\r\n                    {\r\n                        this.onLoadReady();\r\n                    }\r\n                    this.processedN++;\r\n                    if (this.processedN>999)\r\n                    {\r\n                        console.log(\"processed 1000 ifc objects in total \"+this.loadedN);\r\n                        this.processedN=0;\r\n                    }\r\n\r\n      \r\n    }\r\n    getMat1(c)\r\n    {\r\n        var mat= new MeshPhongMaterial({shininess: 50,emissiveIntensity:0.4,lightMapIntensity:0.4,emissive:c});\r\n        mat.vertexColors=false;//bijna zeker\r\n        mat.fog=false;\r\n       // mat.alphaHash = true\r\n        mat.side=THREE.DoubleSide;\r\n    }\r\n    getMat(color,hint)\r\n    {\r\n\r\n\r\n    var mat = new MeshPhysicalMaterial({color:color});\r\n  \r\n\r\n    if (hint==\"grey\")\r\n    {\r\n      mat = new MeshPhysicalMaterial({color:\"#c0c0c0\"});\r\n      mat.vertexColors=false;//bijna zeker\r\n      mat.fog=true;\r\n     \r\n    }\r\n    if (hint==\"greytransparent\")\r\n    {\r\n      mat = new MeshPhysicalMaterial({color:\"#c0c0c0\"});\r\n      mat.vertexColors=false;//bijna zeker\r\n      mat.fog=true;\r\n      mat.transparent=true;\r\n      mat.opacity=0.4;\r\n     \r\n    }\r\n    \r\n    if (hint==\"greyverytransparent\")\r\n    {\r\n      mat = new MeshPhysicalMaterial({color:\"#c0c0c0\"});\r\n      mat.vertexColors=false;//bijna zeker\r\n      mat.fog=true;\r\n      mat.transparent=true;\r\n      mat.opacity=0.1;\r\n    \r\n     \r\n    }\r\n  \r\n    if (hint==\"nice\")\r\n    {\r\n      mat= new MeshPhongMaterial({shininess: 50,emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color});\r\n      mat.vertexColors=false;//bijna zeker\r\n      mat.fog=true;\r\n     \r\n    }\r\n  \r\n    if (hint==\"normal\")\r\n    {\r\n     // mat.vertexColors=false;//bijna zeker\r\n      //mat.fog=true;\r\n     \r\n      mat.transparent=true;\r\n      mat.opacity=0.99;\r\n     \r\n   \r\n    }\r\n    if (hint==\"transparent\")\r\n    {\r\n      mat.transparent=true;\r\n      mat.opacity=0.4;\r\n    }\r\n    if (hint==\"vtransparent\")\r\n    {\r\n      mat.transparent=true;\r\n      mat.opacity=0.1;\r\n    }\r\n  \r\n    if (hint==\"toon\")\r\n    {\r\n      mat=new MeshToonMaterial({shininess: 50,emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color,color:color})\r\n    \r\n    }\r\n    if (hint==\"toontransparent\")\r\n    {\r\n      mat=new MeshToonMaterial({shininess: 50,emissiveIntensity:0.2,lightMapIntensity:0.4,emissive:color,color:color})\r\n      mat.transparent=true;\r\n      mat.opacity=0.4;\r\n    \r\n    }\r\n  \r\n    mat.depthWrite =true;\r\n    mat.vertexColors=true;//bijna zeker\r\n    mat.side=THREE.DoubleSide;\r\n  return mat;\r\n}\r\n\r\n\r\n    onLoadReady()\r\n    {\r\n      var group=this.ifcdb.rootGroup;\r\n      for (var i=group.children.length-1; i >= 0; --i)            \r\n    group.remove(group.children[i]);\r\n\r\n       \r\n       \r\n        for (var c in this.color_nodes)\r\n        {\r\n            var ar =this.color_nodes[c];\r\n            var cchild2=new Mesh();\r\n\r\n                                    cchild2.geometry=mergeGeometries(ar);\r\n                                    cchild2.geometry.applyMatrix4(new Matrix4().makeScale(-1, 1, 1));//flip the normals\r\n           // cchild2.geometry=BufferGeometryUtils.mergeBufferGeometries(ar);\r\n\r\n        \r\n            cchild2.material=this.getMat(c,\"greytransparent\");\r\n\r\n            this.ifcdb.rootGroup.add(cchild2);\r\n\r\n        }\r\n        \r\n       // this.rootGroup.add(o3d);\r\n\r\n\r\n        console.log(\"onLoadReady\");\r\n     \r\n\r\n\r\n    }\r\n}","import React, {useRef, Component } from 'react'\r\n //trheejs version\r\nimport {Color,Mesh,BufferGeometry,PointLight, Vector2,Raycaster,MeshToonMaterial, MeshPhongMaterial,MeshLambertMaterial,SpotLight,AmbientLight, AxesHelper, DirectionalLight, GridHelper, PerspectiveCamera, Scene, WebGLRenderer,Object3D } from \"three\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\n//import { IFCLoader  } from \"web-ifc-three/IFCLoader\";\r\n\r\nimport IFCDB from './IFCDB';\r\n\r\nimport styles from './BBThreeJSViewer.module.css'\r\nimport ThreeJSViewer from './ThreeJSViewer';\r\n\r\nimport PublishUtils from '../../../../helpers/PublishUtils';\r\n\r\nimport gearWhite from '../../../../images/gear-white.svg'\r\nimport gearBlue from '../../../../images/gear-blue.svg'\r\nimport { connect } from \"react-redux\"\r\nimport { GLBFromSparqlResults } from './GLBFromSparqlResults';\r\n\r\n\r\n\r\n\r\n//import { acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from \"three-mesh-bvh\";\r\n\r\n\r\n\r\n\r\nclass BBThreeJSViewer extends Component \r\n{\r\nstatic idN=0;\r\n    \r\n    ifcdb=new IFCDB();\r\n    viewer=null;\r\n  \r\n   canvasDiv = React.createRef();\r\n    onResize=() => {\r\n      // on resize logic\r\n      console.log(\"resized\");\r\n    }\r\n\r\n\r\n    /*constructor(props)\r\n    {\r\n      super(props);\r\n    \r\n    }\r\n    */\r\n    \r\n    resize=()=>\r\n    {\r\n      console.log(\"resize event\");\r\n\r\n\r\n     \r\n\r\n\r\n    }\r\n\r\n    \r\n   \r\n      componentDidMount() \r\n    {\r\n     \r\n      const currentCanvasDiv = this.canvasDiv.current;\r\n     var me=this;\r\n      var resizeObserver = new ResizeObserver((entries) => {\r\n      try\r\n      {\r\n         me.viewer.resize();\r\n      }\r\n      catch(e){}\r\n\r\n      });\r\n      resizeObserver.observe(currentCanvasDiv);\r\n\r\n\r\n     // const element = this.ref.current;\r\n     // element.addEventListener('resize', (event) => console.log(event.detail));\r\n              this.viewer=new ThreeJSViewer();\r\n               this.viewer.initViewer(this);\r\n                this.ready();\r\n               // this.ifcLoader = new IFCLoader();\r\n\r\n              //  var o=this.ifcLoader.ifcManager.setWasmPath(\"../../bb/wasm/\").then(function(){me.ready();});\r\n    }\r\n\r\n\r\n\r\n\r\n    ready()\r\n    {\r\n      this.processSparqlResults=false;\r\n      this.updateRender();\r\n\r\n      \r\n    }\r\n\r\n\r\n    getGLBFilesFromProps(props)\r\n    {\r\n      var prefix =props[\"glb files prefix\"];\r\n      if (prefix==null)prefix=\"\";\r\n      var files = props[\"glb files\"];\r\n      var files2=[];\r\n      if (files!=null)\r\n      {\r\n        for (var n in files)\r\n        {\r\n          var file=files[n];\r\n        \r\n          var file2=PublishUtils.processStringForParameters({props:props},file);\r\n\r\n          if (file2!=null)\r\n          {\r\n            var files22= file2.split(\",\");\r\n            for (var nn in files22)\r\n            {\r\n              var file3 = files22[nn];\r\n              file3=file3.replace(\"\\\"\",\"\").replace(\"\\\"\",\"\").replace(\"<\",\"\").replace(\">\",\"\").replace(\"\\\\\\\"\",\"\").replace(\"\\\\\\\"\",\"\");\r\n              if (file3.length>4)\r\n              {\r\n                files2.push(prefix+file3);\r\n              }\r\n            }\r\n          }\r\n          \r\n        }\r\n      }\r\n      return files2;\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(props,state)\r\n    {\r\n        //no unless\r\n       \r\n        try\r\n        {\r\n          var a1=this.getGLBFilesFromProps(this.props);\r\n          var a2=this.getGLBFilesFromProps(props);\r\n          if (JSON.stringify(a1)!=JSON.stringify(a2)) return true;\r\n        }\r\n        catch(e) {}\r\n\r\n        try\r\n        {\r\n           if (this.props.data!=props.data) \r\n           {\r\n          //  console.log(\"data change so update is necessary \");\r\n            return true;\r\n           }\r\n        }\r\n        catch(e) {}\r\n\r\n        try{\r\n        var sel = this.props.guidselector;\r\n        var sel2 = this.props.pubsub[sel];\r\n\r\n        var sela = props.guidselector;\r\n        var sela2 = props.pubsub[sela];\r\n        if (sela2!=sel2) return true;\r\n      }\r\n      catch(e) {}\r\n   \r\n\r\n    \r\n       return false;\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n    loadTestIFC() {\r\n\r\n      var me=this;\r\nvar files=[];\r\nfiles.push(\"SITE_HOW.ifc\");\r\nif (false)\r\n{\r\nfiles.push(\"SITE_HOW_CTRAY.ifc\");\r\nfiles.push(\"SITE_HOW_EQUIPMENT.ifc\");\r\nfiles.push(\"SITE_HOW_EQUIPMENT2.ifc\");\r\nfiles.push(\"SITE_HOW_EXTRAS_HOA.ifc\");\r\nfiles.push(\"SITE_HOW_HVAC.ifc\");\r\nfiles.push(\"SITE_HOW_PENETRATIONS.ifc\");\r\nfiles.push(\"SITE_HOW_PIPING.ifc\");\r\n}\r\n\r\nif (false)\r\n{\r\n\r\nfiles.push(\"SITE_HOW_STRUCTURE.ifc\");\r\nfiles.push(\"SITE_HOW_STRUCTURE1.ifc\");\r\nfiles.push(\"SITE_HOW_STRUCTURE2.ifc\");\r\nfiles.push(\"SITE_HOW_STRUCTURE3.ifc\");\r\nfiles.push(\"SITE_HOW_STRUCTURE4.ifc\");\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfor (var n in files)\r\n{\r\n    var file= files[n];\r\n     me.loadIFC(\"http://localhost:3000/temp/\"+file);\r\n}\r\n   \r\n\r\n//});\r\n}\r\n\r\nloadIFC(file)\r\n{\r\n    var me=this;\r\n    \r\n  //  console.log(file);\r\n\r\n  \r\n    this.ifcLoader.load(file, (ifcModel) => me.scene.add(ifcModel));\r\n}\r\n\r\n\r\n\r\nupdateRender(force)\r\n{\r\n \r\n  if (this.viewer!=null)\r\n  {\r\n   \r\n      if ( (this.viewer.renderer!=null) && (this.processSparqlResults) )\r\n      {\r\n       \r\n        this.ifcdb.processSparqlResults(this);\r\n      }\r\n      else\r\n      {\r\n        if (this.viewer.renderer!=null) \r\n        {\r\n          var files2=this.getGLBFilesFromProps(this.props);\r\n          if (this.isEmpty(files2))\r\n            {\r\n                new GLBFromSparqlResults(this);\r\n                \r\n              if (!this.ifcdb.isEmpty())\r\n              {\r\n               \r\n                this.viewer.controls.enabled=false;\r\n                this.ifcdb.setVisible(false);\r\n                this.ifcdb.emptyScene();\r\n                this.ifcdb.processedAll();\r\n\r\n              }\r\n             // console.log(\"returning \");\r\n              return;\r\n            }\r\n          \r\n          if ((force) || (this.ifcdb.shouldLoadNewFiles(files2)))\r\n          {\r\n            this.viewer.controls.enabled=false;\r\n            this.props.setLoading(true);\r\n             \r\n            this.ifcdb.loadGLBFiles(this,files2);\r\n           // console.log(\"returning 2\");\r\n            return;\r\n          }\r\n\r\n          if (this.ifcdb.ifcdbsparql.needsUpdate())\r\n          {\r\n            this.viewer.controls.enabled=false;\r\n            this.props.setLoading(true);\r\n          //  console.log(\"triggered setSparql update\");\r\n            this.ifcdb.processedAll(true); // reuse pickgroup if possible\r\n             return;\r\n          }\r\n          if (this.props.guidselector!=null)\r\n          {\r\n            this.viewer.setSelectedGuid();\r\n            \r\n          }\r\n          \r\n\r\n         \r\n        }\r\n        //console.log(\"no sparql results \");\r\n      }\r\n}\r\n}\r\n\r\nisEmpty(files)\r\n{\r\n  if (files==null) return true;\r\n  if (files.length==0) return true;\r\n  if (files.length==1)\r\n  {\r\n    var file =files[0];\r\n    if (file.includes(\"http://www.buildingbits.nl/reset\"))\r\n    {\r\n      return true;\r\n    }\r\n    if (file.length<3)\r\n    {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n\r\n \r\n               \r\n\r\n}\r\n\r\n\r\n    render() {\r\n\r\n        \r\n    \r\n      if (this.ifcdb.loadingInProgress)\r\n      {\r\n            console.log(\"input changed. we might have to check because loading is true\");\r\n            this.ifcdb.inputChanged=true;\r\n      }\r\n      else\r\n      {\r\n        this.updateRender();\r\n      }\r\n      if (this.id==null)\r\n      {\r\n          BBThreeJSViewer.idN++;\r\n        this.id=\"id\"+BBThreeJSViewer.idN;\r\n      }\r\n\r\n    \r\n      const tippyID=\"tippydiv\"+this.id;\r\n      const tcid=\"three-canvas\"+this.id;\r\n      const legendID=\"legenddiv\"+this.id;\r\n      \r\n        return (\r\n          \r\n          <div ref={this.canvasDiv} id={tippyID} className={styles.fullWidget} >\r\n           <div   className={ styles.right}>\r\n                <img \r\n                    src={gearWhite}\r\n                    alt=\"gear\"\r\n                  \r\n                    onClick={() => this.setState({ dialogVisible: true })}\r\n                  />\r\n            </div>\r\n\r\n           \r\n           \r\n         \r\n            <canvas   className={styles.fullWidget} style={{position: \"relative\"}} id={tcid}>\r\n\r\n\r\n      \r\n            </canvas>\r\n            </div>\r\n        )\r\n      }\r\n\r\n\r\n      \r\n}\r\n\r\nexport default connect()(BBThreeJSViewer)\r\n"],"sourceRoot":""}