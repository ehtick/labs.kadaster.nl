(()=>{var dr=Object.create;var D3=Object.defineProperty;var hr=Object.getOwnPropertyDescriptor;var fr=Object.getOwnPropertyNames;var br=Object.getPrototypeOf,gr=Object.prototype.hasOwnProperty;var Se=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports);var kr=(e,a,s,h)=>{if(a&&typeof a=="object"||typeof a=="function")for(let d of fr(a))!gr.call(e,d)&&d!==s&&D3(e,d,{get:()=>a[d],enumerable:!(h=hr(a,d))||h.enumerable});return e};var yr=(e,a,s)=>(s=e!=null?dr(br(e)):{},kr(a||!e||!e.__esModule?D3(s,"default",{value:e,enumerable:!0}):s,e));var gt=Se((ca,I3)=>{var x2=class{constructor(){return Nr||this}equals(a){return a&&this.termType===a.termType}};Object.defineProperty(x2.prototype,"value",{enumerable:!0,value:"*"});Object.defineProperty(x2.prototype,"termType",{enumerable:!0,value:"Wildcard"});var Nr=new x2;I3.exports.Wildcard=x2});var N3=Se((la,A3)=>{var Cr=function(){var e=function(i,n,o,u){for(o=o||{},u=i.length;u--;o[i[u]]=n);return o},a=[6,12,13,15,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],s=[2,247],h=[100,110,113,115,116,123,126,131,329,330,331,332,333],d=[2,409],C=[1,18],Fe=[1,27],we=[13,16,45,197,224,229,308],be=[28,29,53],Oe=[28,53],p=[1,42],c=[1,45],f=[1,41],l=[1,44],Je=[123,126],_e=[1,67],a2=[39,45,87],It=[13,16,45,197,224,308],n2=[1,87],s2=[2,281],m2=[1,86],pe=[13,16,45,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],O2=[6,28,29,53,63,70,73,81,83,85],At=[6,13,16,28,29,53,63,70,73,81,83,85,87,308],Nt=[6,13,16,28,29,45,53,63,70,73,81,82,83,85,87,89,197,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314],i1=[6,13,16,28,29,31,39,45,47,48,53,63,70,73,81,82,83,85,87,89,109,112,121,123,126,128,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,337,338,340,341,342,343,344,345,346],Ge=[13,16,308],Ct=[112,132,327,334],Vt=[13,16,112,132,308],G2=[1,111],Rt=[1,117],Lt=[112,132,327,328,334],K1=[13,16,112,132,308,328],o1=[28,29,45,53,87],R=[1,138],v=[1,151],re=[1,128],ae=[1,127],ne=[1,129],L=[1,140],P=[1,141],x=[1,142],O=[1,143],G=[1,144],B=[1,145],U=[1,147],j=[1,148],q=[2,457],z=[1,158],K=[1,159],M=[1,160],S=[1,152],I=[1,153],A=[1,156],g=[1,171],k=[1,172],y=[1,173],m=[1,174],F=[1,175],_=[1,176],E=[1,167],D=[1,168],T=[1,169],w=[1,170],$=[1,157],W=[1,166],Q=[1,161],H=[1,162],Z=[1,163],J=[1,164],Y=[1,165],Ne=[6,13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],B2=[1,195],U2=[6,31,73,81,83,85],M1=[2,285],W1=[1,199],Ye=[1,201],Xe=[6,31,70,73,81,83,85],F2=[2,283],_2=[1,207],j2=[1,218],Be=[1,223],q2=[1,219],Ie=[1,225],Ae=[1,226],Ee=[1,224],Pt=[6,63,70,73,81,83,85],xt=[1,236],Ot=[2,334],Gt=[1,243],Bt=[1,241],he=[6,193],u1=[2,349],Ut=[2,339],$e=[28,128],jt=[47,48,193,272],c1=[47,48,193,242,272],E2=[47,48,193,242,246,272],D2=[47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,341,342,343,344,345,346],de=[39,47,48,193,242,246,250,263,265,272,290,297,298,299,300,301,302,338,341,342,343,344,345,346],qt=[1,271],zt=[1,270],ce=[6,13,16,29,31,39,45,47,48,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],Kt=[1,281],Mt=[1,280],ge=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],z2=[45,89],l1=[13,16,29,31,39,45,47,48,82,85,87,89,112,159,160,161,163,164,174,193,197,224,229,231,232,242,246,250,263,265,272,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346],p1=[13,16,31,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],d1=[31,89],h1=[48,87],i2=[6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338],Ce=[6,13,16,39,45,48,82,87,89,231,263,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337,338,340],Wt=[1,313],T2=[6,85],Q1=[6,31,81,83,85],Qt=[2,361],Ue=[2,353],o2=[1,343],K2=[31,112,335],je=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],H1=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335],Ht=[6,109,193],u2=[31,112],le=[13,16,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],Z1=[1,390],J1=[1,391],e2=[13,16,87,197,308,314],Zt=[13,16,39,45,82,87,224,263,265,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312,346,347,348,349,350,351],f1=[1,417],b1=[1,418],Jt=[13,16,48,197,229,308],t2=[6,31,85],Yt=[6,13,16,31,45,73,81,83,85,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],Y1=[6,13,16,29,31,45,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,231,268,269,270,271,273,274,276,277,279,280,283,285,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,346,347,348,349,350,351],c2=[29,31,85,112,159,160,161,163,164],g1=[1,443],k1=[1,444],Xt=[1,449],l2=[31,112,193,232,318,335],y1=[13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],$t=[13,16,31,45,48,82,87,89,112,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],X1=[13,16,29,31,45,48,82,85,87,89,112,159,160,161,163,164,193,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],M2=[13,16,31,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],W2=[31,45],e3=[1,507],t3=[1,508],r3=[6,13,16,29,31,39,45,47,48,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,336,338,341,342,343,344,345,346,347,348,349,350,351],m1=[29,31,85,112,159,160,161,163,164,335],p2=[6,13,16,31,45,70,73,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],a3=[13,16,31,45,48,82,87,89,112,193,197,231,232,272,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,317,318,335],n3=[2,352],$1=[13,16,197,308,314],s3=[1,565],w2=[6,13,16,31,45,76,78,81,83,85,87,268,269,270,271,273,274,276,277,279,280,283,285,308,346,347,348,349,350,351],i3=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],qe=[13,16,29,31,45,82,85,87,89,112,159,160,161,163,164,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335],o3=[13,16,87,308],ze=[2,364],v2=[29,31,85,112,159,160,161,163,164,193,232,318,335],F1=[31,112,193,232,272,318,335],Ke=[2,359],u3=[13,16,48,82,174,294,295,296,297,298,299,300,301,302,303,304,305,306,308,312],_1=[29,31,85,112,159,160,161,163,164,193,232,272,318,335],c3=[13,16,31,45,82,87,89,112,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],l3=[2,347],et={trace:function(){},yy:{},symbols_:{error:2,QueryOrUpdate:3,Prologue:4,QueryOrUpdate_group0:5,EOF:6,Query:7,Qry:8,Query_option0:9,Prologue_repetition0:10,BaseDecl:11,BASE:12,IRIREF:13,PrefixDecl:14,PREFIX:15,PNAME_NS:16,SelectClauseWildcard:17,Qry_repetition0:18,WhereClause:19,SolutionModifierNoGroup:20,SelectClauseVars:21,Qry_repetition1:22,SolutionModifier:23,CONSTRUCT:24,ConstructTemplate:25,Qry_repetition2:26,Qry_repetition3:27,WHERE:28,"{":29,Qry_option0:30,"}":31,DESCRIBE:32,Qry_group0:33,Qry_repetition4:34,Qry_option1:35,ASK:36,Qry_repetition5:37,SelectClauseBase:38,"*":39,SelectClauseVars_repetition_plus0:40,SELECT:41,SelectClauseBase_option0:42,SelectClauseItem:43,Var:44,"(":45,Expression:46,AS:47,")":48,SubSelect:49,SubSelect_option0:50,SubSelect_option1:51,DatasetClause:52,FROM:53,DatasetClause_option0:54,iri:55,WhereClause_option0:56,GroupGraphPattern:57,SolutionModifier_option0:58,SolutionModifierNoGroup_option0:59,SolutionModifierNoGroup_option1:60,SolutionModifierNoGroup_option2:61,GroupClause:62,GROUP:63,BY:64,GroupClause_repetition_plus0:65,GroupCondition:66,BuiltInCall:67,FunctionCall:68,HavingClause:69,HAVING:70,HavingClause_repetition_plus0:71,OrderClause:72,ORDER:73,OrderClause_repetition_plus0:74,OrderCondition:75,ASC:76,BrackettedExpression:77,DESC:78,Constraint:79,LimitOffsetClauses:80,LIMIT:81,INTEGER:82,OFFSET:83,ValuesClause:84,VALUES:85,InlineData:86,VAR:87,InlineData_repetition0:88,NIL:89,InlineData_repetition1:90,InlineData_repetition_plus2:91,InlineData_repetition3:92,DataBlock:93,DataBlockValueList:94,DataBlockValueList_repetition_plus0:95,Update:96,Update_repetition0:97,Update1:98,Update_option0:99,LOAD:100,Update1_option0:101,Update1_option1:102,Update1_group0:103,Update1_option2:104,GraphRefAll:105,Update1_group1:106,Update1_option3:107,GraphOrDefault:108,TO:109,CREATE:110,Update1_option4:111,GRAPH:112,INSERTDATA:113,QuadPattern:114,DELETEDATA:115,DELETEWHERE:116,Update1_option5:117,InsertDeleteClause:118,Update1_repetition0:119,IntoGraphClause:120,INTO:121,GraphRef:122,DELETE:123,InsertDeleteClause_option0:124,InsertClause:125,INSERT:126,UsingClause:127,USING:128,UsingClause_option0:129,WithClause:130,WITH:131,DEFAULT:132,GraphOrDefault_option0:133,GraphRefAll_group0:134,Quads:135,Quads_option0:136,Quads_repetition0:137,QuadsNotTriples:138,VarOrIri:139,QuadsNotTriples_option0:140,QuadsNotTriples_option1:141,QuadsNotTriples_option2:142,TriplesTemplate:143,TriplesTemplate_repetition0:144,TriplesSameSubject:145,TriplesTemplate_option0:146,GroupGraphPatternSub:147,GroupGraphPatternSub_option0:148,GroupGraphPatternSub_repetition0:149,GroupGraphPatternSubTail:150,GraphPatternNotTriples:151,GroupGraphPatternSubTail_option0:152,GroupGraphPatternSubTail_option1:153,TriplesBlock:154,TriplesBlock_repetition0:155,TriplesSameSubjectPath:156,TriplesBlock_option0:157,GroupOrUnionGraphPattern:158,OPTIONAL:159,MINUS:160,SERVICE:161,GraphPatternNotTriples_option0:162,FILTER:163,BIND:164,InlineDataOneVar:165,InlineDataFull:166,InlineDataOneVar_repetition0:167,InlineDataFull_repetition0:168,InlineDataFull_repetition_plus1:169,InlineDataFull_repetition2:170,DataBlockValue:171,Literal:172,QuotedTriple:173,UNDEF:174,GroupOrUnionGraphPattern_repetition0:175,ArgList:176,ArgList_option0:177,ArgList_repetition0:178,ExpressionList:179,ExpressionList_repetition0:180,ConstructTemplate_option0:181,ConstructTriples:182,ConstructTriples_repetition0:183,ConstructTriples_option0:184,VarOrTermOrQuotedTP:185,PropertyListNotEmpty:186,TriplesNode:187,PropertyList:188,PropertyList_option0:189,VerbObjectList:190,PropertyListNotEmpty_repetition0:191,SemiOptionalVerbObjectList:192,";":193,SemiOptionalVerbObjectList_option0:194,Verb:195,ObjectList:196,a:197,ObjectList_repetition0:198,Object:199,GraphNode:200,Object_option0:201,PropertyListPathNotEmpty:202,TriplesNodePath:203,TriplesSameSubjectPath_option0:204,O:205,PropertyListPathNotEmpty_repetition0:206,PropertyListPathNotEmptyTail:207,O_group0:208,ObjectListPath:209,ObjectListPath_repetition0:210,ObjectPath:211,GraphNodePath:212,ObjectPath_option0:213,Path:214,Path_repetition0:215,PathSequence:216,PathSequence_repetition0:217,PathEltOrInverse:218,PathElt:219,PathPrimary:220,PathElt_option0:221,PathEltOrInverse_option0:222,IriOrA:223,"!":224,PathNegatedPropertySet:225,PathOneInPropertySet:226,PathNegatedPropertySet_repetition0:227,PathNegatedPropertySet_option0:228,"^":229,TriplesNode_repetition_plus0:230,"[":231,"]":232,TriplesNodePath_repetition_plus0:233,VarOrTermOrQuotedTPExpr:234,VarOrTerm:235,GraphTerm:236,BlankNode:237,ConditionalOrExpression:238,ConditionalAndExpression:239,ConditionalOrExpression_repetition0:240,ConditionalOrExpressionTail:241,"||":242,RelationalExpression:243,ConditionalAndExpression_repetition0:244,ConditionalAndExpressionTail:245,"&&":246,NumericExpression:247,RelationalExpression_group0:248,RelationalExpression_option0:249,IN:250,MultiplicativeExpression:251,NumericExpression_repetition0:252,AdditiveExpressionTail:253,AdditiveExpressionTail_group0:254,NumericLiteralPositive:255,AdditiveExpressionTail_repetition0:256,NumericLiteralNegative:257,AdditiveExpressionTail_repetition1:258,UnaryExpression:259,MultiplicativeExpression_repetition0:260,MultiplicativeExpressionTail:261,MultiplicativeExpressionTail_group0:262,"+":263,PrimaryExpression:264,"-":265,ExprQuotedTP:266,Aggregate:267,FUNC_ARITY0:268,FUNC_ARITY1:269,FUNC_ARITY1_SPARQL_STAR:270,FUNC_ARITY2:271,",":272,FUNC_ARITY3:273,FUNC_ARITY3_SPARQL_STAR:274,BuiltInCall_group0:275,BOUND:276,BNODE:277,BuiltInCall_option0:278,EXISTS:279,COUNT:280,Aggregate_option0:281,Aggregate_group0:282,FUNC_AGGREGATE:283,Aggregate_option1:284,GROUP_CONCAT:285,Aggregate_option2:286,Aggregate_option3:287,GroupConcatSeparator:288,SEPARATOR:289,"=":290,String:291,LANGTAG:292,"^^":293,DECIMAL:294,DOUBLE:295,BOOLEAN:296,INTEGER_POSITIVE:297,DECIMAL_POSITIVE:298,DOUBLE_POSITIVE:299,INTEGER_NEGATIVE:300,DECIMAL_NEGATIVE:301,DOUBLE_NEGATIVE:302,STRING_LITERAL1:303,STRING_LITERAL2:304,STRING_LITERAL_LONG1:305,STRING_LITERAL_LONG2:306,PrefixedName:307,PNAME_LN:308,BLANK_NODE_LABEL:309,ANON:310,QuotedTP:311,"<<":312,qtSubjectOrObject:313,">>":314,DataValueTerm:315,AnnotationPattern:316,"{|":317,"|}":318,AnnotationPatternPath:319,ExprVarOrTerm:320,QueryOrUpdate_group0_option0:321,Prologue_repetition0_group0:322,Qry_group0_repetition_plus0:323,SelectClauseBase_option0_group0:324,DISTINCT:325,REDUCED:326,NAMED:327,SILENT:328,CLEAR:329,DROP:330,ADD:331,MOVE:332,COPY:333,ALL:334,".":335,UNION:336,"|":337,"/":338,PathElt_option0_group0:339,"?":340,"!=":341,"<":342,">":343,"<=":344,">=":345,NOT:346,CONCAT:347,COALESCE:348,SUBSTR:349,REGEX:350,REPLACE:351,$accept:0,$end:1},terminals_:{2:"error",6:"EOF",12:"BASE",13:"IRIREF",15:"PREFIX",16:"PNAME_NS",24:"CONSTRUCT",28:"WHERE",29:"{",31:"}",32:"DESCRIBE",36:"ASK",39:"*",41:"SELECT",45:"(",47:"AS",48:")",53:"FROM",63:"GROUP",64:"BY",70:"HAVING",73:"ORDER",76:"ASC",78:"DESC",81:"LIMIT",82:"INTEGER",83:"OFFSET",85:"VALUES",87:"VAR",89:"NIL",100:"LOAD",109:"TO",110:"CREATE",112:"GRAPH",113:"INSERTDATA",115:"DELETEDATA",116:"DELETEWHERE",121:"INTO",123:"DELETE",126:"INSERT",128:"USING",131:"WITH",132:"DEFAULT",159:"OPTIONAL",160:"MINUS",161:"SERVICE",163:"FILTER",164:"BIND",174:"UNDEF",193:";",197:"a",224:"!",229:"^",231:"[",232:"]",242:"||",246:"&&",250:"IN",263:"+",265:"-",268:"FUNC_ARITY0",269:"FUNC_ARITY1",270:"FUNC_ARITY1_SPARQL_STAR",271:"FUNC_ARITY2",272:",",273:"FUNC_ARITY3",274:"FUNC_ARITY3_SPARQL_STAR",276:"BOUND",277:"BNODE",279:"EXISTS",280:"COUNT",283:"FUNC_AGGREGATE",285:"GROUP_CONCAT",289:"SEPARATOR",290:"=",292:"LANGTAG",293:"^^",294:"DECIMAL",295:"DOUBLE",296:"BOOLEAN",297:"INTEGER_POSITIVE",298:"DECIMAL_POSITIVE",299:"DOUBLE_POSITIVE",300:"INTEGER_NEGATIVE",301:"DECIMAL_NEGATIVE",302:"DOUBLE_NEGATIVE",303:"STRING_LITERAL1",304:"STRING_LITERAL2",305:"STRING_LITERAL_LONG1",306:"STRING_LITERAL_LONG2",308:"PNAME_LN",309:"BLANK_NODE_LABEL",310:"ANON",312:"<<",314:">>",317:"{|",318:"|}",325:"DISTINCT",326:"REDUCED",327:"NAMED",328:"SILENT",329:"CLEAR",330:"DROP",331:"ADD",332:"MOVE",333:"COPY",334:"ALL",335:".",336:"UNION",337:"|",338:"/",340:"?",341:"!=",342:"<",343:">",344:"<=",345:">=",346:"NOT",347:"CONCAT",348:"COALESCE",349:"SUBSTR",350:"REGEX",351:"REPLACE"},productions_:[0,[3,3],[7,2],[4,1],[11,2],[14,3],[8,4],[8,4],[8,5],[8,7],[8,5],[8,4],[17,2],[21,2],[38,2],[43,1],[43,5],[49,4],[49,4],[52,3],[19,2],[23,2],[20,3],[62,3],[66,1],[66,1],[66,3],[66,5],[66,1],[69,2],[72,3],[75,2],[75,2],[75,1],[75,1],[80,2],[80,2],[80,4],[80,4],[84,2],[86,4],[86,4],[86,6],[86,2],[94,3],[96,3],[98,4],[98,3],[98,5],[98,4],[98,2],[98,2],[98,2],[98,5],[120,2],[118,3],[118,1],[125,2],[127,3],[130,2],[108,1],[108,2],[122,2],[105,1],[105,1],[114,3],[135,2],[138,7],[143,3],[57,3],[57,3],[147,2],[150,3],[154,3],[151,1],[151,2],[151,2],[151,3],[151,4],[151,2],[151,6],[151,1],[93,1],[93,1],[165,4],[166,4],[166,6],[171,1],[171,1],[171,1],[171,1],[158,2],[79,1],[79,1],[79,1],[68,2],[176,1],[176,5],[179,1],[179,4],[25,3],[182,3],[145,2],[145,2],[188,1],[186,2],[192,2],[190,2],[195,1],[195,1],[196,2],[199,2],[156,2],[156,2],[202,2],[207,1],[207,2],[205,2],[209,2],[211,2],[214,2],[216,2],[219,2],[218,2],[220,1],[220,2],[220,3],[225,1],[225,1],[225,4],[226,1],[226,2],[187,3],[187,3],[203,3],[203,3],[200,1],[200,1],[212,1],[212,1],[234,1],[235,1],[235,1],[139,1],[139,1],[44,1],[236,1],[236,1],[236,1],[236,1],[46,1],[238,2],[241,2],[239,2],[245,2],[243,1],[243,3],[243,4],[247,2],[253,2],[253,2],[253,2],[251,2],[261,2],[259,2],[259,2],[259,2],[259,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[264,1],[77,3],[67,1],[67,2],[67,4],[67,4],[67,6],[67,8],[67,8],[67,2],[67,4],[67,2],[67,4],[67,3],[267,5],[267,5],[267,6],[288,4],[172,1],[172,2],[172,3],[172,1],[172,1],[172,1],[172,1],[172,1],[172,1],[255,1],[255,1],[255,1],[257,1],[257,1],[257,1],[291,1],[291,1],[291,1],[291,1],[55,1],[55,1],[307,1],[307,1],[237,1],[237,1],[311,5],[173,5],[313,1],[313,1],[313,1],[313,1],[313,1],[315,1],[315,1],[315,1],[185,1],[185,1],[185,1],[316,3],[319,3],[266,5],[320,1],[320,1],[320,1],[223,1],[223,1],[321,0],[321,1],[5,1],[5,1],[5,1],[9,0],[9,1],[322,1],[322,1],[10,0],[10,2],[18,0],[18,2],[22,0],[22,2],[26,0],[26,2],[27,0],[27,2],[30,0],[30,1],[323,1],[323,2],[33,1],[33,1],[34,0],[34,2],[35,0],[35,1],[37,0],[37,2],[40,1],[40,2],[324,1],[324,1],[42,0],[42,1],[50,0],[50,1],[51,0],[51,1],[54,0],[54,1],[56,0],[56,1],[58,0],[58,1],[59,0],[59,1],[60,0],[60,1],[61,0],[61,1],[65,1],[65,2],[71,1],[71,2],[74,1],[74,2],[88,0],[88,2],[90,0],[90,2],[91,1],[91,2],[92,0],[92,2],[95,1],[95,2],[97,0],[97,4],[99,0],[99,2],[101,0],[101,1],[102,0],[102,1],[103,1],[103,1],[104,0],[104,1],[106,1],[106,1],[106,1],[107,0],[107,1],[111,0],[111,1],[117,0],[117,1],[119,0],[119,2],[124,0],[124,1],[129,0],[129,1],[133,0],[133,1],[134,1],[134,1],[134,1],[136,0],[136,1],[137,0],[137,2],[140,0],[140,1],[141,0],[141,1],[142,0],[142,1],[144,0],[144,3],[146,0],[146,1],[148,0],[148,1],[149,0],[149,2],[152,0],[152,1],[153,0],[153,1],[155,0],[155,3],[157,0],[157,1],[162,0],[162,1],[167,0],[167,2],[168,0],[168,2],[169,1],[169,2],[170,0],[170,2],[175,0],[175,3],[177,0],[177,1],[178,0],[178,3],[180,0],[180,3],[181,0],[181,1],[183,0],[183,3],[184,0],[184,1],[189,0],[189,1],[191,0],[191,2],[194,0],[194,1],[198,0],[198,3],[201,0],[201,1],[204,0],[204,1],[206,0],[206,2],[208,1],[208,1],[210,0],[210,3],[213,0],[213,1],[215,0],[215,3],[217,0],[217,3],[339,1],[339,1],[339,1],[221,0],[221,1],[222,0],[222,1],[227,0],[227,3],[228,0],[228,1],[230,1],[230,2],[233,1],[233,2],[240,0],[240,2],[244,0],[244,2],[248,1],[248,1],[248,1],[248,1],[248,1],[248,1],[249,0],[249,1],[252,0],[252,2],[254,1],[254,1],[256,0],[256,2],[258,0],[258,2],[260,0],[260,2],[262,1],[262,1],[275,1],[275,1],[275,1],[275,1],[275,1],[278,0],[278,1],[281,0],[281,1],[282,1],[282,1],[284,0],[284,1],[286,0],[286,1],[287,0],[287,1]],performAction:function(n,o,u,b,N,t,ye){var r=t.length-1;switch(N){case 1:if(t[r-1]=t[r-1]||{},V.base&&(t[r-1].base=V.base),V.base="",t[r-1].prefixes=V.prefixes,V.prefixes=null,V.pathOnly){if(t[r-1].type==="path"||"termType"in t[r-1])return t[r-1];throw new Error("Received full SPARQL query in path only mode")}else if(t[r-1].type==="path"||"termType"in t[r-1])throw new Error("Received only path in full SPARQL mode");if(t[r-1].type==="update"){let te={};for(let ie of t[r-1].updates)if(ie.updateType==="insert"){let X={};for(let ee of ie.insert)if(ee.type==="bgp"||ee.type==="graph")for(let me of ee.triples)me.subject.termType==="BlankNode"&&(X[me.subject.value]=!0),me.predicate.termType==="BlankNode"&&(X[me.predicate.value]=!0),me.object.termType==="BlankNode"&&(X[me.object.value]=!0);for(let ee of Object.keys(X)){if(te[ee])throw new Error("Detected reuse blank node across different INSERT DATA clauses");te[ee]=!0}}}return t[r-1];case 2:this.$={...t[r-1],...t[r],type:"query"};break;case 4:V.base=Q2(t[r]);break;case 5:V.prefixes||(V.prefixes={}),t[r-1]=t[r-1].substr(0,t[r-1].length-1),t[r]=Q2(t[r]),V.prefixes[t[r-1]]=t[r];break;case 6:this.$={...t[r-3],...f2(t[r-2]),...t[r-1],...t[r]};break;case 7:if(!V.skipValidation&&(ut(t[r-3].variables.map(ie=>ot(ie.expression))).some(ie=>ie.aggregation==="count"&&!(ie.expression instanceof E1))||t[r].group)){for(let ie of t[r-3].variables)if(ie.termType==="Variable"){if(!t[r].group||!t[r].group.map(X=>N2(X)).includes(N2(ie)))throw Error("Projection of ungrouped variable (?"+N2(ie)+")")}else if(ot(ie.expression).length===0){let X=cr(ie.expression);for(let ee of X)if(!t[r].group||!t[r].group.map||!t[r].group.map(me=>N2(me)).includes(N2(ee)))throw Error("Use of ungrouped variable in projection of operation (?"+N2(ee)+")")}}let Pe=t[r-1].where.filter(te=>te.type==="query");if(Pe.length>0){let te=t[r-3].variables.filter(X=>X.variable&&X.variable.value).map(X=>X.variable.value),ie=ut(Pe.map(X=>X.variables)).map(X=>X.value||X.variable.value);for(let X of te)if(ie.indexOf(X)>=0)throw Error("Target id of 'AS' (?"+X+") already used in subquery")}this.$=ue(t[r-3],f2(t[r-2]),t[r-1],t[r]);break;case 8:this.$=ue({queryType:"CONSTRUCT",template:t[r-3]},f2(t[r-2]),t[r-1],t[r]);break;case 9:this.$=ue({queryType:"CONSTRUCT",template:t[r-2]=t[r-2]?t[r-2].triples:[]},f2(t[r-5]),{where:[{type:"bgp",triples:h2([],t[r-2])}]},t[r]);break;case 10:this.$=ue({queryType:"DESCRIBE",variables:t[r-3]==="*"?[new E1]:t[r-3]},f2(t[r-2]),t[r-1],t[r]);break;case 11:this.$=ue({queryType:"ASK"},f2(t[r-2]),t[r-1],t[r]);break;case 12:this.$=ue(t[r-1],{variables:[new E1]});break;case 13:let X2=t[r].map(te=>te.value||te.variable.value),C2=lr(X2);if(C2.length>0)throw Error("Two or more of the resulting columns have the same name (?"+C2[0]+")");this.$=ue(t[r-1],{variables:t[r]});break;case 14:this.$=ue({queryType:"SELECT"},t[r]&&(t[r-1]=ke(t[r]),t[r]={},t[r][t[r-1]]=!0,t[r]));break;case 16:case 27:this.$=S2(t[r-3],{variable:t[r-1]});break;case 17:case 18:this.$=ue(t[r-3],t[r-2],t[r-1],t[r],{type:"query"});break;case 19:case 58:this.$={iri:t[r],named:!!t[r-1]};break;case 20:this.$={where:t[r].patterns};break;case 21:this.$=ue(t[r-1],t[r]);break;case 22:this.$=ue(t[r-2],t[r-1],t[r]);break;case 23:this.$={group:t[r]};break;case 24:case 25:case 28:case 31:case 33:case 34:this.$=S2(t[r]);break;case 26:this.$=S2(t[r-1]);break;case 29:this.$={having:t[r]};break;case 30:this.$={order:t[r]};break;case 32:this.$=S2(t[r],{descending:!0});break;case 35:this.$={limit:A2(t[r])};break;case 36:this.$={offset:A2(t[r])};break;case 37:this.$={limit:A2(t[r-2]),offset:A2(t[r])};break;case 38:this.$={limit:A2(t[r]),offset:A2(t[r-2])};break;case 39:case 43:this.$={type:"values",values:t[r]};break;case 40:case 84:this.$=t[r-1].map(te=>({[t[r-3]]:te}));break;case 41:case 85:this.$=t[r-1].map(()=>({}));break;case 42:case 86:var Le=t[r-4].length;t[r-4]=t[r-4].map(tt),this.$=t[r-1].map(function(te){if(te.length!==Le)throw Error("Inconsistent VALUES length");for(var ie={},X=0;X<Le;X++)ie["?"+t[r-4][X].value]=te[X];return ie});break;case 44:case 65:case 100:case 126:case 175:this.$=t[r-1];break;case 45:this.$={type:"update",updates:Me(t[r-2],t[r-1])};break;case 46:this.$=ue({type:"load",silent:!!t[r-2],source:t[r-1]},t[r]&&{destination:t[r]});break;case 47:this.$={type:ke(t[r-2]),silent:!!t[r-1],graph:t[r]};break;case 48:this.$={type:ke(t[r-4]),silent:!!t[r-3],source:t[r-2],destination:t[r]};break;case 49:this.$={type:"create",silent:!!t[r-2],graph:{type:"graph",name:t[r]}};break;case 50:this.$={updateType:"insert",insert:_3(t[r])};break;case 51:this.$={updateType:"delete",delete:pt(_3(t[r]))};break;case 52:this.$={updateType:"deletewhere",delete:pt(t[r])};break;case 53:this.$={updateType:"insertdelete",...t[r-4],...t[r-3],...f2(t[r-2],"using"),where:t[r].patterns};break;case 54:case 57:case 62:case 167:case 191:case 236:this.$=t[r];break;case 55:this.$={delete:pt(t[r-1]),insert:t[r]||[]};break;case 56:this.$={delete:[],insert:t[r]};break;case 59:this.$={graph:t[r]};break;case 60:this.$={type:"graph",default:!0};break;case 61:case 63:this.$={type:"graph",name:t[r]};break;case 64:this.$={[ke(t[r])]:!0};break;case 66:this.$=t[r-1]?Ve(t[r],[t[r-1]]):Ve(t[r]);break;case 67:var J2=ue(t[r-3]||{triples:[]},{type:"graph",name:t[r-5]});this.$=t[r]?[J2,t[r]]:[J2];break;case 68:case 73:this.$={type:"bgp",triples:Ve(t[r-2],[t[r-1]])};break;case 69:this.$={type:"group",patterns:[t[r-1]]};break;case 70:for(let te of t[r-1].filter(ie=>ie.type==="bind")){let ie=t[r-1].indexOf(te),X=new Set;for(let ee of t[r-1].slice(0,ie))(ee.type==="group"||ee.type==="bgp")&&m3(ee).forEach(me=>X.add(me));if(X.has(te.variable.value))throw Error("Variable used to bind is already bound (?"+te.variable.value+")")}this.$={type:"group",patterns:t[r-1]};break;case 71:this.$=t[r-1]?Ve([t[r-1]],t[r]):Ve(t[r]);break;case 72:this.$=t[r]?[t[r-2],t[r]]:t[r-2];break;case 75:this.$=ue(t[r],{type:"optional"});break;case 76:this.$=ue(t[r],{type:"minus"});break;case 77:this.$=ue(t[r],{type:"graph",name:t[r-1]});break;case 78:this.$=ue(t[r],{type:"service",name:t[r-1],silent:!!t[r-2]});break;case 79:this.$={type:"filter",expression:t[r]};break;case 80:this.$={type:"bind",variable:t[r-1],expression:t[r-3]};break;case 89:this.$=Z2(t[r]);break;case 90:this.$=void 0;break;case 91:this.$=t[r-1].length?{type:"union",patterns:Ve(t[r-1].map(at),[at(t[r])])}:t[r];break;case 95:this.$={...t[r],function:t[r-1]};break;case 96:this.$={type:"functionCall",args:[]};break;case 97:this.$={type:"functionCall",args:Me(t[r-2],t[r-1]),distinct:!!t[r-3]};break;case 98:case 115:case 128:case 247:case 249:case 251:case 253:case 255:case 263:case 267:case 297:case 299:case 303:case 307:case 328:case 341:case 349:case 355:case 361:case 367:case 369:case 373:case 375:case 379:case 381:case 385:case 391:case 395:case 401:case 405:case 409:case 411:case 420:case 428:case 430:case 440:case 444:case 446:case 448:this.$=[];break;case 99:this.$=Me(t[r-2],t[r-1]);break;case 101:this.$=Ve(t[r-2],[t[r-1]]);break;case 102:case 112:this.$=lt(t[r].map(te=>ue(We(t[r-1]),te)));break;case 103:this.$=lt(h2(t[r].map(te=>ue(We(t[r-1].entity),te)),t[r-1].triples));break;case 105:this.$=Ve([t[r-1]],t[r]);break;case 106:this.$=Ve(t[r]);break;case 107:this.$=it(t[r-1],t[r]);break;case 109:case 237:this.$=V.factory.namedNode($3);break;case 110:case 118:this.$=Me(t[r-1],t[r]);break;case 111:this.$=t[r]?{annotation:t[r],object:t[r-1]}:t[r-1];break;case 113:this.$=t[r]?lt(h2(t[r].map(te=>ue(We(t[r-1].entity),te)),t[r-1].triples)):t[r-1].triples;break;case 114:this.$=it(...t[r-1],t[r]);break;case 116:this.$=it(...t[r]);break;case 117:case 159:case 163:this.$=[t[r-1],t[r]];break;case 119:this.$=t[r]?{object:t[r-1],annotation:t[r]}:t[r-1];break;case 120:this.$=t[r-1].length?I2("|",Me(t[r-1],t[r])):t[r];break;case 121:this.$=t[r-1].length?I2("/",Me(t[r-1],t[r])):t[r];break;case 122:this.$=t[r]?I2(t[r],[t[r-1]]):t[r-1];break;case 123:this.$=t[r-1]?I2(t[r-1],[t[r]]):t[r];break;case 125:case 131:this.$=I2(t[r-1],[t[r]]);break;case 129:this.$=I2("|",Me(t[r-2],t[r-1]));break;case 132:case 134:this.$=or(t[r-1]);break;case 133:case 135:this.$=ur(t[r-1]);break;case 140:this.$={entity:t[r],triples:[]};break;case 145:this.$=tt(t[r]);break;case 149:this.$=V.factory.namedNode(p3);break;case 151:case 153:case 158:case 162:this.$=rt(t[r-1],t[r]);break;case 152:this.$=["||",t[r]];break;case 154:this.$=["&&",t[r]];break;case 156:this.$=fe(t[r-1],[t[r-2],t[r]]);break;case 157:this.$=fe(t[r-2]?"notin":"in",[t[r-3],t[r]]);break;case 160:this.$=["+",rt(t[r-1],t[r])];break;case 161:var w1=Re(t[r-1].value.replace("-",""),t[r-1].datatype);this.$=["-",rt(w1,t[r])];break;case 164:this.$=fe("UPLUS",[t[r]]);break;case 165:this.$=fe(t[r-1],[t[r]]);break;case 166:this.$=fe("UMINUS",[t[r]]);break;case 177:this.$=fe(ke(t[r-1]));break;case 178:this.$=fe(ke(t[r-3]),[t[r-1]]);break;case 179:this.$=Z2(fe(ke(t[r-3]),[t[r-1]]));break;case 180:this.$=fe(ke(t[r-5]),[t[r-3],t[r-1]]);break;case 181:this.$=fe(ke(t[r-7]),[t[r-5],t[r-3],t[r-1]]);break;case 182:this.$=Z2(fe(ke(t[r-7]),[t[r-5],t[r-3],t[r-1]]));break;case 183:this.$=fe(ke(t[r-1]),t[r]);break;case 184:this.$=fe("bound",[tt(t[r-1])]);break;case 185:this.$=fe(t[r-1],[]);break;case 186:this.$=fe(t[r-3],[t[r-1]]);break;case 187:this.$=fe(t[r-2]?"notexists":"exists",[at(t[r])]);break;case 188:case 189:this.$=S2(t[r-1],{type:"aggregate",aggregation:ke(t[r-4]),distinct:!!t[r-2]});break;case 190:this.$=S2(t[r-2],{type:"aggregate",aggregation:ke(t[r-5]),distinct:!!t[r-3],separator:typeof t[r-1]=="string"?t[r-1]:" "});break;case 192:this.$=Re(t[r]);break;case 193:this.$=ar(t[r-1],ke(t[r].substr(1)));break;case 194:this.$=Re(t[r-2],t[r]);break;case 195:case 204:this.$=Re(t[r],d3);break;case 196:case 205:this.$=Re(t[r],h3);break;case 197:case 206:this.$=Re(ke(t[r]),f3);break;case 200:this.$=Re(t[r].toLowerCase(),rr);break;case 201:this.$=Re(t[r].substr(1),d3);break;case 202:this.$=Re(t[r].substr(1),h3);break;case 203:this.$=Re(t[r].substr(1).toLowerCase(),f3);break;case 207:case 208:this.$=y3(t[r],1);break;case 209:case 210:this.$=y3(t[r],3);break;case 211:this.$=V.factory.namedNode(Q2(t[r]));break;case 213:var v1=t[r].indexOf(":"),Y2=t[r].substr(0,v1),S1=V.prefixes[Y2];if(!S1)throw new Error("Unknown prefix: "+Y2);var oe=Q2(S1+t[r].substr(v1+1));this.$=V.factory.namedNode(oe);break;case 214:if(t[r]=t[r].substr(0,t[r].length-1),!(t[r]in V.prefixes))throw new Error("Unknown prefix: "+t[r]);var oe=Q2(V.prefixes[t[r]]);this.$=V.factory.namedNode(oe);break;case 215:this.$=H2(t[r].replace(/^(_:)/,""));break;case 216:this.$=H2();break;case 217:case 218:case 232:this.$=Z2(nt(t[r-3],t[r-2],t[r-1]));break;case 230:case 231:this.$=Z2(t[r-1]);break;case 248:case 250:case 252:case 254:case 256:case 260:case 264:case 268:case 270:case 292:case 294:case 296:case 298:case 300:case 302:case 304:case 306:case 329:case 342:case 356:case 368:case 370:case 372:case 374:case 392:case 402:case 425:case 427:case 429:case 431:case 441:case 445:case 447:case 449:t[r-1].push(t[r]);break;case 259:case 269:case 291:case 293:case 295:case 301:case 305:case 371:case 424:case 426:this.$=[t[r]];break;case 308:t[r-3].push(t[r-2]);break;case 350:case 362:case 376:case 380:case 382:case 386:case 396:case 406:case 410:case 412:case 421:t[r-2].push(t[r-1]);break}},table:[e(a,s,{3:1,4:2,10:3}),{1:[3]},e(h,[2,307],{5:4,7:5,321:6,214:7,8:8,96:9,215:10,17:11,21:12,97:16,38:17,6:[2,238],13:d,16:d,45:d,197:d,224:d,229:d,308:d,24:[1,13],32:[1,14],36:[1,15],41:C}),e([6,13,16,24,32,36,41,45,100,110,113,115,116,123,126,131,197,224,229,308,329,330,331,332,333],[2,3],{322:19,11:20,14:21,12:[1,22],15:[1,23]}),{6:[1,24]},{6:[2,240]},{6:[2,241]},{6:[2,242]},{6:[2,243],9:25,84:26,85:Fe},{6:[2,239]},e(we,[2,411],{216:28,217:29}),e(be,[2,249],{18:30}),e(be,[2,251],{22:31}),e(Oe,[2,255],{25:32,27:33,29:[1,34]}),{13:p,16:c,33:35,39:[1,37],44:39,55:40,87:f,139:38,307:43,308:l,323:36},e(be,[2,267],{37:46}),e(Je,[2,326],{98:47,103:49,106:50,117:55,130:61,100:[1,48],110:[1,51],113:[1,52],115:[1,53],116:[1,54],131:[1,62],329:[1,56],330:[1,57],331:[1,58],332:[1,59],333:[1,60]}),{39:[1,63],40:64,43:65,44:66,45:_e,87:f},e(a2,[2,273],{42:68,324:69,325:[1,70],326:[1,71]}),e(a,[2,248]),e(a,[2,245]),e(a,[2,246]),{13:[1,72]},{16:[1,73]},{1:[2,1]},{6:[2,2]},{6:[2,244]},{45:[1,77],85:[1,78],86:74,87:[1,75],89:[1,76]},e([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312],[2,120],{337:[1,79]}),e(It,[2,418],{218:80,222:81,229:[1,82]}),{19:83,28:n2,29:s2,52:84,53:m2,56:85},{19:88,28:n2,29:s2,52:89,53:m2,56:85},e(be,[2,253],{26:90}),{28:[1,91],52:92,53:m2},e(pe,[2,385],{181:93,182:94,183:95,31:[2,383]}),e(O2,[2,263],{34:96}),e(O2,[2,261],{44:39,55:40,307:43,139:97,13:p,16:c,87:f,308:l}),e(O2,[2,262]),e(At,[2,259]),e(Nt,[2,143]),e(Nt,[2,144]),e([6,13,16,28,29,31,39,45,47,48,53,63,70,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,197,224,229,231,232,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,314,317,318,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,145]),e(i1,[2,211]),e(i1,[2,212]),e(i1,[2,213]),e(i1,[2,214]),{19:98,28:n2,29:s2,52:99,53:m2,56:85},{6:[2,309],99:100,193:[1,101]},e(Ge,[2,311],{101:102,328:[1,103]}),e(Ct,[2,317],{104:104,328:[1,105]}),e(Vt,[2,322],{107:106,328:[1,107]}),{111:108,112:[2,324],328:[1,109]},{29:G2,114:110},{29:G2,114:112},{29:G2,114:113},{118:114,123:[1,115],125:116,126:Rt},e(Lt,[2,315]),e(Lt,[2,316]),e(K1,[2,319]),e(K1,[2,320]),e(K1,[2,321]),e(Je,[2,327]),{13:p,16:c,55:118,307:43,308:l},e(be,[2,12]),e(be,[2,13],{44:66,43:119,45:_e,87:f}),e(o1,[2,269]),e(o1,[2,15]),{13:p,16:c,44:136,45:R,46:120,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(a2,[2,14]),e(a2,[2,274]),e(a2,[2,271]),e(a2,[2,272]),e(a,[2,4]),{13:[1,177]},e(Ne,[2,39]),{29:[1,178]},{29:[1,179]},{87:[1,181],91:180},{45:[1,187],87:[1,185],89:[1,186],93:182,165:183,166:184},e(we,[2,410]),e([6,13,16,45,48,82,87,89,231,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,337],[2,121],{338:[1,188]}),{13:p,16:c,45:[1,193],55:194,197:B2,219:189,220:190,223:191,224:[1,192],307:43,308:l},e(It,[2,419]),e(U2,M1,{20:196,59:197,69:198,70:W1}),e(be,[2,250]),{29:Ye,57:200},e(Ge,[2,279],{54:202,327:[1,203]}),{29:[2,282]},e(Xe,F2,{23:204,58:205,62:206,63:_2}),e(be,[2,252]),{19:208,28:n2,29:s2,52:209,53:m2,56:85},{29:[1,210]},e(Oe,[2,256]),{31:[1,211]},{31:[2,384]},{13:p,16:c,44:215,45:j2,55:220,82:v,87:f,89:Be,145:212,172:221,185:213,187:214,231:q2,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(Pt,[2,265],{56:85,35:227,52:228,19:229,28:n2,29:s2,53:m2}),e(At,[2,260]),e(Xe,F2,{58:205,62:206,23:230,63:_2}),e(be,[2,268]),{6:[2,45]},e(a,s,{10:3,4:231}),{13:p,16:c,55:232,307:43,308:l},e(Ge,[2,312]),{105:233,112:xt,122:234,132:[1,237],134:235,327:[1,238],334:[1,239]},e(Ct,[2,318]),e(Ge,Ot,{108:240,133:242,112:Gt,132:Bt}),e(Vt,[2,323]),{112:[1,244]},{112:[2,325]},e(he,[2,50]),e(pe,u1,{135:245,136:246,143:247,144:248,31:Ut,112:Ut}),e(he,[2,51]),e(he,[2,52]),e($e,[2,328],{119:249}),{29:G2,114:250},e($e,[2,56]),{29:G2,114:251},e(Je,[2,59]),e(o1,[2,270]),{47:[1,252]},e(jt,[2,150]),e(c1,[2,428],{240:253}),e(E2,[2,430],{244:254}),e(E2,[2,155],{248:255,249:256,250:[2,438],290:[1,257],341:[1,258],342:[1,259],343:[1,260],344:[1,261],345:[1,262],346:[1,263]}),e(D2,[2,440],{252:264}),e(de,[2,448],{260:265}),{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,255:154,257:155,264:266,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,255:154,257:155,264:267,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,255:154,257:155,264:268,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(de,[2,167]),e(de,[2,168]),e(de,[2,169]),e(de,[2,170],{176:269,45:qt,89:zt}),e(de,[2,171]),e(de,[2,172]),e(de,[2,173]),e(de,[2,174]),{13:p,16:c,44:136,45:R,46:272,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(ce,[2,176]),{89:[1,273]},{45:[1,274]},{45:[1,275]},{45:[1,276]},{45:[1,277]},{45:[1,278]},{45:Kt,89:Mt,179:279},{45:[1,282]},{45:[1,284],89:[1,283]},{279:[1,285]},e(ge,[2,192],{292:[1,286],293:[1,287]}),e(ge,[2,195]),e(ge,[2,196]),e(ge,[2,197]),e(ge,[2,198]),e(ge,[2,199]),e(ge,[2,200]),{13:p,16:c,44:39,55:40,82:v,87:f,139:289,172:291,255:154,257:155,266:290,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,320:288},{45:[1,292]},{45:[1,293]},{45:[1,294]},e(z2,[2,452]),e(z2,[2,453]),e(z2,[2,454]),e(z2,[2,455]),e(z2,[2,456]),{279:[2,458]},e(l1,[2,207]),e(l1,[2,208]),e(l1,[2,209]),e(l1,[2,210]),e(ge,[2,201]),e(ge,[2,202]),e(ge,[2,203]),e(ge,[2,204]),e(ge,[2,205]),e(ge,[2,206]),e(a,[2,5]),e(p1,[2,297],{88:295}),e(d1,[2,299],{90:296}),{48:[1,297],87:[1,298]},e(h1,[2,301]),e(Ne,[2,43]),e(Ne,[2,82]),e(Ne,[2,83]),{29:[1,299]},{29:[1,300]},{87:[1,302],169:301},e(we,[2,412]),e(i2,[2,123]),e(i2,[2,416],{221:303,339:304,39:[1,306],263:[1,307],340:[1,305]}),e(Ce,[2,124]),{13:p,16:c,45:[1,311],55:194,89:[1,310],197:B2,223:312,225:308,226:309,229:Wt,307:43,308:l},e(we,d,{215:10,214:314}),e(Ce,[2,236]),e(Ce,[2,237]),e(T2,[2,6]),e(Q1,[2,287],{60:315,72:316,73:[1,317]}),e(U2,[2,286]),{13:p,16:c,45:R,55:323,67:321,68:322,71:318,77:320,79:319,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,307:43,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y},e([6,31,63,70,73,81,83,85],[2,20]),e(pe,Qt,{38:17,49:324,147:325,17:326,21:327,148:328,154:329,155:330,29:Ue,31:Ue,85:Ue,112:Ue,159:Ue,160:Ue,161:Ue,163:Ue,164:Ue,41:C}),{13:p,16:c,55:331,307:43,308:l},e(Ge,[2,280]),e(T2,[2,7]),e(U2,M1,{59:197,69:198,20:332,70:W1}),e(Xe,[2,284]),{64:[1,333]},e(Xe,F2,{58:205,62:206,23:334,63:_2}),e(be,[2,254]),e(pe,u1,{144:248,30:335,143:336,31:[2,257]}),e(be,[2,100]),{31:[2,387],184:337,335:[1,338]},{13:p,16:c,44:39,55:40,87:f,139:342,186:339,190:340,195:341,197:o2,307:43,308:l},e(K2,[2,389],{44:39,55:40,307:43,190:340,195:341,139:342,188:344,189:345,186:346,13:p,16:c,87:f,197:o2,308:l}),e(je,[2,227]),e(je,[2,228]),e(je,[2,229]),{13:p,16:c,44:215,45:j2,55:220,82:v,87:f,89:Be,172:221,185:351,187:350,200:348,230:347,231:q2,234:349,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},{13:p,16:c,44:39,55:40,87:f,139:342,186:352,190:340,195:341,197:o2,307:43,308:l},e(je,[2,146]),e(je,[2,147]),e(je,[2,148]),e(je,[2,149]),{13:p,16:c,44:354,55:355,82:v,87:f,172:357,237:356,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:358,312:Ee,313:353},e(H1,[2,215]),e(H1,[2,216]),e(Xe,F2,{58:205,62:206,23:359,63:_2}),e(O2,[2,264]),e(Pt,[2,266]),e(T2,[2,11]),e(h,[2,308],{6:[2,310]}),e(he,[2,313],{102:360,120:361,121:[1,362]}),e(he,[2,47]),e(he,[2,63]),e(he,[2,64]),{13:p,16:c,55:363,307:43,308:l},e(he,[2,336]),e(he,[2,337]),e(he,[2,338]),{109:[1,364]},e(Ht,[2,60]),{13:p,16:c,55:365,307:43,308:l},e(Ge,[2,335]),{13:p,16:c,55:366,307:43,308:l},{31:[1,367]},e(u2,[2,341],{137:368}),e(u2,[2,340]),{13:p,16:c,44:215,45:j2,55:220,82:v,87:f,89:Be,145:369,172:221,185:213,187:214,231:q2,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},{28:[1,370],127:371,128:[1,372]},e($e,[2,330],{124:373,125:374,126:Rt}),e($e,[2,57]),{44:375,87:f},e(jt,[2,151],{241:376,242:[1,377]}),e(c1,[2,153],{245:378,246:[1,379]}),{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,247:380,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{250:[1,381]},e(le,[2,432]),e(le,[2,433]),e(le,[2,434]),e(le,[2,435]),e(le,[2,436]),e(le,[2,437]),{250:[2,439]},e([47,48,193,242,246,250,272,290,341,342,343,344,345,346],[2,158],{253:382,254:383,255:384,257:385,263:[1,386],265:[1,387],297:g,298:k,299:y,300:m,301:F,302:_}),e(D2,[2,162],{261:388,262:389,39:Z1,338:J1}),e(de,[2,164]),e(de,[2,165]),e(de,[2,166]),e(ce,[2,95]),e(ce,[2,96]),e(le,[2,377],{177:392,325:[1,393]}),{48:[1,394]},e(ce,[2,177]),{13:p,16:c,44:136,45:R,46:395,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:396,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:397,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:398,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:399,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(ce,[2,183]),e(ce,[2,98]),e(le,[2,381],{180:400}),{87:[1,401]},e(ce,[2,185]),{13:p,16:c,44:136,45:R,46:402,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{29:Ye,57:403},e(ge,[2,193]),{13:p,16:c,55:404,307:43,308:l},{13:p,16:c,44:39,55:40,87:f,139:342,195:405,197:o2,307:43,308:l},e(e2,[2,233]),e(e2,[2,234]),e(e2,[2,235]),e(Zt,[2,459],{281:406,325:[1,407]}),e(le,[2,463],{284:408,325:[1,409]}),e(le,[2,465],{286:410,325:[1,411]}),{13:p,16:c,31:[1,412],55:414,82:v,171:413,172:415,173:416,174:f1,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:b1},{31:[1,419],89:[1,420]},{29:[1,421]},e(h1,[2,302]),e(p1,[2,367],{167:422}),e(d1,[2,369],{168:423}),{48:[1,424],87:[1,425]},e(h1,[2,371]),e(i2,[2,122]),e(i2,[2,417]),e(i2,[2,413]),e(i2,[2,414]),e(i2,[2,415]),e(Ce,[2,125]),e(Ce,[2,127]),e(Ce,[2,128]),e(Jt,[2,420],{227:426}),e(Ce,[2,130]),{13:p,16:c,55:194,197:B2,223:427,307:43,308:l},{48:[1,428]},e(t2,[2,289],{61:429,80:430,81:[1,431],83:[1,432]}),e(Q1,[2,288]),{64:[1,433]},e(U2,[2,29],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:434,13:p,16:c,45:R,268:L,269:P,270:x,271:O,273:G,274:B,276:U,277:j,279:q,280:z,283:K,285:M,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y}),e(Yt,[2,293]),e(Y1,[2,92]),e(Y1,[2,93]),e(Y1,[2,94]),{45:qt,89:zt,176:269},{31:[1,435]},{31:[1,436]},{19:437,28:n2,29:s2,56:85},{19:438,28:n2,29:s2,56:85},e(c2,[2,355],{149:439}),e(c2,[2,354]),{13:p,16:c,44:215,45:g1,55:220,82:v,87:f,89:Be,156:440,172:221,185:441,203:442,231:k1,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(O2,[2,19]),e(t2,[2,21]),{13:p,16:c,44:450,45:Xt,55:323,65:445,66:446,67:447,68:448,87:f,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,307:43,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(T2,[2,8]),{31:[1,451]},{31:[2,258]},{31:[2,101]},e(pe,[2,386],{31:[2,388]}),e(K2,[2,102]),e(l2,[2,391],{191:452}),e(pe,[2,395],{196:453,198:454}),e(pe,[2,108]),e(pe,[2,109]),e(K2,[2,103]),e(K2,[2,104]),e(K2,[2,390]),{13:p,16:c,44:215,45:j2,48:[1,455],55:220,82:v,87:f,89:Be,172:221,185:351,187:350,200:456,231:q2,234:349,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(y1,[2,424]),e($t,[2,136]),e($t,[2,137]),e(X1,[2,140]),{232:[1,457]},{13:p,16:c,44:39,55:40,87:f,139:342,195:458,197:o2,307:43,308:l},e(e2,[2,219]),e(e2,[2,220]),e(e2,[2,221]),e(e2,[2,222]),e(e2,[2,223]),e(T2,[2,10]),e(he,[2,46]),e(he,[2,314]),{112:xt,122:459},e(he,[2,62]),e(Ge,Ot,{133:242,108:460,112:Gt,132:Bt}),e(Ht,[2,61]),e(he,[2,49]),e([6,28,126,128,193],[2,65]),{31:[2,66],112:[1,462],138:461},e(u2,[2,351],{146:463,335:[1,464]}),{29:Ye,57:465},e($e,[2,329]),e(Ge,[2,332],{129:466,327:[1,467]}),e($e,[2,55]),e($e,[2,331]),{48:[1,468]},e(c1,[2,429]),{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,239:469,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(E2,[2,431]),{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,243:470,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(E2,[2,156]),{45:Kt,89:Mt,179:471},e(D2,[2,441]),{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,251:472,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(de,[2,444],{256:473}),e(de,[2,446],{258:474}),e(le,[2,442]),e(le,[2,443]),e(de,[2,449]),{13:p,16:c,44:136,45:R,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,255:154,257:155,259:475,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(le,[2,450]),e(le,[2,451]),e(le,[2,379],{178:476}),e(le,[2,378]),e([6,13,16,29,31,39,45,47,48,73,76,78,81,82,83,85,87,89,112,159,160,161,163,164,193,231,242,246,250,263,265,268,269,270,271,272,273,274,276,277,279,280,283,285,290,294,295,296,297,298,299,300,301,302,303,304,305,306,308,309,310,312,335,338,341,342,343,344,345,346,347,348,349,350,351],[2,175]),{48:[1,477]},{48:[1,478]},{272:[1,479]},{272:[1,480]},{272:[1,481]},{13:p,16:c,44:136,45:R,46:482,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{48:[1,483]},{48:[1,484]},e(ce,[2,187]),e(ge,[2,194]),{13:p,16:c,44:39,55:40,82:v,87:f,139:289,172:291,255:154,257:155,266:290,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,320:485},{13:p,16:c,39:[1,487],44:136,45:R,46:488,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,282:486,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(Zt,[2,460]),{13:p,16:c,44:136,45:R,46:489,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(le,[2,464]),{13:p,16:c,44:136,45:R,46:490,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(le,[2,466]),e(Ne,[2,40]),e(p1,[2,298]),e(M2,[2,87]),e(M2,[2,88]),e(M2,[2,89]),e(M2,[2,90]),{13:p,16:c,55:492,82:v,172:493,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,311:494,312:Ee,315:491},e(Ne,[2,41]),e(d1,[2,300]),e(W2,[2,303],{92:495}),{13:p,16:c,31:[1,496],55:414,82:v,171:497,172:415,173:416,174:f1,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:b1},{31:[1,498],89:[1,499]},{29:[1,500]},e(h1,[2,372]),{13:p,16:c,48:[2,422],55:194,197:B2,223:312,226:502,228:501,229:Wt,307:43,308:l},e(Ce,[2,131]),e(Ce,[2,126]),e(t2,[2,22]),e(t2,[2,290]),{82:[1,503]},{82:[1,504]},{13:p,16:c,44:510,45:R,55:323,67:321,68:322,74:505,75:506,76:e3,77:320,78:t3,79:509,87:f,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,307:43,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(Yt,[2,294]),e(r3,[2,69]),e(r3,[2,70]),e(U2,M1,{59:197,69:198,20:511,70:W1}),e(Xe,F2,{58:205,62:206,23:512,63:_2}),{29:[2,375],31:[2,71],84:522,85:Fe,112:[1,518],150:513,151:514,158:515,159:[1,516],160:[1,517],161:[1,519],163:[1,520],164:[1,521],175:523},e(c2,[2,363],{157:524,335:[1,525]}),e(we,d,{215:10,202:526,205:527,208:528,214:529,44:530,87:f}),e(m1,[2,399],{215:10,205:527,208:528,214:529,44:530,204:531,202:532,13:d,16:d,45:d,197:d,224:d,229:d,308:d,87:f}),{13:p,16:c,44:215,45:g1,55:220,82:v,87:f,89:Be,172:221,185:351,203:536,212:534,231:k1,233:533,234:535,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(we,d,{215:10,205:527,208:528,214:529,44:530,202:537,87:f}),e(Xe,[2,23],{307:43,267:139,275:146,278:149,55:323,67:447,68:448,44:450,66:538,13:p,16:c,45:Xt,87:f,268:L,269:P,270:x,271:O,273:G,274:B,276:U,277:j,279:q,280:z,283:K,285:M,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y}),e(p2,[2,291]),e(p2,[2,24]),e(p2,[2,25]),{13:p,16:c,44:136,45:R,46:539,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(p2,[2,28]),e(Xe,F2,{58:205,62:206,23:540,63:_2}),e([31,112,232,318,335],[2,105],{192:541,193:[1,542]}),e(l2,[2,107]),{13:p,16:c,44:215,45:j2,55:220,82:v,87:f,89:Be,172:221,185:351,187:350,199:543,200:544,231:q2,234:349,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(a3,[2,132]),e(y1,[2,425]),e(a3,[2,133]),{13:p,16:c,44:354,55:355,82:v,87:f,172:357,237:356,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:358,312:Ee,313:545},e(he,[2,54]),e(he,[2,48]),e(u2,[2,342]),{13:p,16:c,44:39,55:40,87:f,139:546,307:43,308:l},e(u2,[2,68]),e(pe,[2,350],{31:n3,112:n3}),e(he,[2,53]),{13:p,16:c,55:547,307:43,308:l},e(Ge,[2,333]),e(o1,[2,16]),e(c1,[2,152]),e(E2,[2,154]),e(E2,[2,157]),e(D2,[2,159]),e(D2,[2,160],{262:389,261:548,39:Z1,338:J1}),e(D2,[2,161],{262:389,261:549,39:Z1,338:J1}),e(de,[2,163]),{13:p,16:c,44:136,45:R,46:550,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(ce,[2,178]),e(ce,[2,179]),{13:p,16:c,44:136,45:R,46:551,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:552,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:553,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{48:[1,554],272:[1,555]},e(ce,[2,184]),e(ce,[2,186]),{314:[1,556]},{48:[1,557]},{48:[2,461]},{48:[2,462]},{48:[1,558]},{48:[2,467],193:[1,561],287:559,288:560},{13:p,16:c,55:194,197:B2,223:562,307:43,308:l},e($1,[2,224]),e($1,[2,225]),e($1,[2,226]),{31:[1,563],45:s3,94:564},e(Ne,[2,84]),e(p1,[2,368]),e(Ne,[2,85]),e(d1,[2,370]),e(W2,[2,373],{170:566}),{48:[1,567]},{48:[2,423],337:[1,568]},e(t2,[2,35],{83:[1,569]}),e(t2,[2,36],{81:[1,570]}),e(Q1,[2,30],{307:43,267:139,275:146,278:149,77:320,67:321,68:322,55:323,79:509,44:510,75:571,13:p,16:c,45:R,76:e3,78:t3,87:f,268:L,269:P,270:x,271:O,273:G,274:B,276:U,277:j,279:q,280:z,283:K,285:M,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y}),e(w2,[2,295]),{45:R,77:572},{45:R,77:573},e(w2,[2,33]),e(w2,[2,34]),{31:[2,275],50:574,84:575,85:Fe},{31:[2,277],51:576,84:577,85:Fe},e(c2,[2,356]),e(i3,[2,357],{152:578,335:[1,579]}),e(qe,[2,74]),{29:Ye,57:580},{29:Ye,57:581},{13:p,16:c,44:39,55:40,87:f,139:582,307:43,308:l},e(o3,[2,365],{162:583,328:[1,584]}),{13:p,16:c,45:R,55:323,67:321,68:322,77:320,79:585,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,307:43,308:l,346:W,347:Q,348:H,349:Z,350:J,351:Y},{45:[1,586]},e(qe,[2,81]),{29:Ye,57:587},e(c2,[2,73]),e(pe,[2,362],{29:ze,31:ze,85:ze,112:ze,159:ze,160:ze,161:ze,163:ze,164:ze}),e(m1,[2,112]),e(v2,[2,401],{206:588}),e(pe,[2,405],{209:589,210:590}),e(pe,[2,403]),e(pe,[2,404]),e(m1,[2,113]),e(m1,[2,400]),{13:p,16:c,44:215,45:g1,48:[1,591],55:220,82:v,87:f,89:Be,172:221,185:351,203:536,212:592,231:k1,234:535,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(y1,[2,426]),e(X1,[2,138]),e(X1,[2,139]),{232:[1,593]},e(p2,[2,292]),{47:[1,595],48:[1,594]},e(T2,[2,9]),e(l2,[2,392]),e(l2,[2,393],{44:39,55:40,307:43,195:341,139:342,194:596,190:597,13:p,16:c,87:f,197:o2,308:l}),e(l2,[2,110],{272:[1,598]}),e(F1,[2,397],{201:599,316:600,317:[1,601]}),{314:[1,602]},{29:[1,603]},e($e,[2,58]),e(de,[2,445]),e(de,[2,447]),{48:[1,604],272:[1,605]},{48:[1,606]},{272:[1,607]},{272:[1,608]},e(ce,[2,99]),e(le,[2,382]),e([13,16,39,47,48,87,193,197,242,246,250,263,265,272,290,297,298,299,300,301,302,308,314,338,341,342,343,344,345,346],[2,232]),e(ce,[2,188]),e(ce,[2,189]),{48:[1,609]},{48:[2,468]},{289:[1,610]},{13:p,16:c,55:492,82:v,172:493,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,311:494,312:Ee,315:611},e(Ne,[2,42]),e(W2,[2,304]),{13:p,16:c,55:414,82:v,95:612,171:613,172:415,173:416,174:f1,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:b1},{31:[1,614],45:s3,94:615},e(Ce,[2,129]),e(Jt,[2,421]),{82:[1,616]},{82:[1,617]},e(w2,[2,296]),e(w2,[2,31]),e(w2,[2,32]),{31:[2,17]},{31:[2,276]},{31:[2,18]},{31:[2,278]},e(pe,Qt,{155:330,153:618,154:619,29:Ke,31:Ke,85:Ke,112:Ke,159:Ke,160:Ke,161:Ke,163:Ke,164:Ke}),e(i3,[2,358]),e(qe,[2,75]),e(qe,[2,76]),{29:Ye,57:620},{13:p,16:c,44:39,55:40,87:f,139:621,307:43,308:l},e(o3,[2,366]),e(qe,[2,79]),{13:p,16:c,44:136,45:R,46:622,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(qe,[2,91],{336:[1,623]}),e([29,31,85,112,159,160,161,163,164,232,318,335],[2,114],{207:624,193:[1,625]}),e(v2,[2,117]),{13:p,16:c,44:215,45:g1,55:220,82:v,87:f,89:Be,172:221,185:351,203:536,211:626,212:627,231:k1,234:535,236:216,237:222,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,309:Ie,310:Ae,311:217,312:Ee},e(je,[2,134]),e(y1,[2,427]),e(je,[2,135]),e(p2,[2,26]),{44:628,87:f},e(l2,[2,106]),e(l2,[2,394]),e(pe,[2,396]),e(F1,[2,111]),e(F1,[2,398]),{13:p,16:c,44:39,55:40,87:f,139:342,186:629,190:340,195:341,197:o2,307:43,308:l},e(H1,[2,217]),e(pe,u1,{144:248,140:630,143:631,31:[2,343]}),e(ce,[2,97]),e(le,[2,380]),e(ce,[2,180]),{13:p,16:c,44:136,45:R,46:632,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},{13:p,16:c,44:136,45:R,46:633,55:133,67:132,68:134,77:131,82:v,87:f,172:135,224:re,238:121,239:122,243:123,247:124,251:125,255:154,257:155,259:126,263:ae,264:130,265:ne,266:137,267:139,268:L,269:P,270:x,271:O,273:G,274:B,275:146,276:U,277:j,278:149,279:q,280:z,283:K,285:M,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:$,346:W,347:Q,348:H,349:Z,350:J,351:Y},e(ce,[2,190]),{290:[1,634]},{314:[1,635]},{13:p,16:c,48:[1,636],55:414,82:v,171:637,172:415,173:416,174:f1,255:154,257:155,291:150,294:S,295:I,296:A,297:g,298:k,299:y,300:m,301:F,302:_,303:E,304:D,305:T,306:w,307:43,308:l,312:b1},e(u3,[2,305]),e(Ne,[2,86]),e(W2,[2,374]),e(t2,[2,37]),e(t2,[2,38]),e(c2,[2,72]),e(c2,[2,360]),e(qe,[2,77]),{29:Ye,57:638},{47:[1,639]},{29:[2,376]},e(v2,[2,402]),e(v2,[2,115],{215:10,208:528,214:529,44:530,205:640,13:d,16:d,45:d,197:d,224:d,229:d,308:d,87:f}),e(v2,[2,118],{272:[1,641]}),e(_1,[2,407],{213:642,319:643,317:[1,644]}),{48:[1,645]},{318:[1,646]},{31:[1,647]},{31:[2,344]},{48:[1,648]},{48:[1,649]},{291:650,303:E,304:D,305:T,306:w},e(M2,[2,218]),e(W2,[2,44]),e(u3,[2,306]),e(qe,[2,78]),{44:651,87:f},e(v2,[2,116]),e(pe,[2,406]),e(_1,[2,119]),e(_1,[2,408]),e(we,d,{215:10,205:527,208:528,214:529,44:530,202:652,87:f}),e(p2,[2,27]),e(F1,[2,230]),e(c3,[2,345],{141:653,335:[1,654]}),e(ce,[2,181]),e(ce,[2,182]),{48:[2,191]},{48:[1,655]},{318:[1,656]},e(pe,u1,{144:248,142:657,143:658,31:l3,112:l3}),e(c3,[2,346]),e(qe,[2,80]),e(_1,[2,231]),e(u2,[2,67]),e(u2,[2,348])],defaultActions:{5:[2,240],6:[2,241],7:[2,242],9:[2,239],24:[2,1],25:[2,2],26:[2,244],87:[2,282],94:[2,384],100:[2,45],109:[2,325],166:[2,458],263:[2,439],336:[2,258],337:[2,101],487:[2,461],488:[2,462],560:[2,468],574:[2,17],575:[2,276],576:[2,18],577:[2,278],623:[2,376],631:[2,344],650:[2,191]},parseError:function(n,o){if(o.recoverable)this.trace(n);else{var u=new Error(n);throw u.hash=o,u}},parse:function(n){var o=this,u=[0],b=[],N=[null],t=[],ye=this.table,r="",Le=0,J2=0,w1=0,v1=2,Y2=1,S1=t.slice.call(arguments,1),oe=Object.create(this.lexer),Pe={yy:{}};for(var X2 in this.yy)Object.prototype.hasOwnProperty.call(this.yy,X2)&&(Pe.yy[X2]=this.yy[X2]);oe.setInput(n,Pe.yy),Pe.yy.lexer=oe,Pe.yy.parser=this,typeof oe.yylloc>"u"&&(oe.yylloc={});var C2=oe.yylloc;t.push(C2);var te=oe.options&&oe.options.ranges;typeof Pe.yy.parseError=="function"?this.parseError=Pe.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function ie(xe){u.length=u.length-2*xe,N.length=N.length-xe,t.length=t.length-xe}for(var X=function(){var xe;return xe=oe.lex()||Y2,typeof xe!="number"&&(xe=o.symbols_[xe]||xe),xe},ee,me,b2,ve,Yr,dt,V2={},I1,Qe,E3,A1;;){if(b2=u[u.length-1],this.defaultActions[b2]?ve=this.defaultActions[b2]:((ee===null||typeof ee>"u")&&(ee=X()),ve=ye[b2]&&ye[b2][ee]),typeof ve>"u"||!ve.length||!ve[0]){var ht="";A1=[];for(I1 in ye[b2])this.terminals_[I1]&&I1>v1&&A1.push("'"+this.terminals_[I1]+"'");oe.showPosition?ht="Parse error on line "+(Le+1)+`:
`+oe.showPosition()+`
Expecting `+A1.join(", ")+", got '"+(this.terminals_[ee]||ee)+"'":ht="Parse error on line "+(Le+1)+": Unexpected "+(ee==Y2?"end of input":"'"+(this.terminals_[ee]||ee)+"'"),this.parseError(ht,{text:oe.match,token:this.terminals_[ee]||ee,line:oe.yylineno,loc:C2,expected:A1})}if(ve[0]instanceof Array&&ve.length>1)throw new Error("Parse Error: multiple actions possible at state: "+b2+", token: "+ee);switch(ve[0]){case 1:u.push(ee),N.push(oe.yytext),t.push(oe.yylloc),u.push(ve[1]),ee=null,me?(ee=me,me=null):(J2=oe.yyleng,r=oe.yytext,Le=oe.yylineno,C2=oe.yylloc,w1>0&&w1--);break;case 2:if(Qe=this.productions_[ve[1]][1],V2.$=N[N.length-Qe],V2._$={first_line:t[t.length-(Qe||1)].first_line,last_line:t[t.length-1].last_line,first_column:t[t.length-(Qe||1)].first_column,last_column:t[t.length-1].last_column},te&&(V2._$.range=[t[t.length-(Qe||1)].range[0],t[t.length-1].range[1]]),dt=this.performAction.apply(V2,[r,J2,Le,Pe.yy,ve[1],N,t].concat(S1)),typeof dt<"u")return dt;Qe&&(u=u.slice(0,-1*Qe*2),N=N.slice(0,-1*Qe),t=t.slice(0,-1*Qe)),u.push(this.productions_[ve[1]][0]),N.push(V2.$),t.push(V2._$),E3=ye[u[u.length-2]][u[u.length-1]],u.push(E3);break;case 3:return!0}}return!0}},E1=gt().Wildcard,D1="http://www.w3.org/1999/02/22-rdf-syntax-ns#",$3=D1+"type",er=D1+"first",tr=D1+"rest",p3=D1+"nil",T1="http://www.w3.org/2001/XMLSchema#",d3=T1+"integer",h3=T1+"decimal",f3=T1+"double",rr=T1+"boolean",d2="",b3="",g3="";function ke(i){return i.toLowerCase()}function Me(i,n){return i.push(n),i}function h2(i,n){return i.push.apply(i,n),i}function ue(i){i||(i={});for(var n=1,o=arguments.length,u;n<o&&(u=arguments[n]||{});n++)for(var b in u)i[b]=u[b];return i}function Ve(){for(var i=[],n=0,o=arguments.length;n<o;n++)i=i.concat.apply(i,arguments[n]);return i}function Q2(i){if(i[0]==="<"&&(i=i.substring(1,i.length-1)),/^[a-z]+:/i.test(i))return i;if(!V.base)throw new Error("Cannot resolve relative IRI "+i+" because no base IRI was set.");switch(d2!==V.base&&(d2=V.base,b3=d2.replace(/[^\/:]*$/,""),g3=d2.match(/^(?:[a-z]+:\/*)?[^\/]*/)[0]),i[0]){case void 0:return d2;case"#":return d2+i;case"?":return d2.replace(/(?:\?.*)?$/,i);case"/":return g3+i;default:return b3+i}}function tt(i){if(i){var n=i[0];if(n==="?"||n==="$")return V.factory.variable(i.substr(1))}return i}function fe(i,n){return{type:"operation",operator:i,args:n||[]}}function S2(i,n){var o={expression:i==="*"?new E1:i};if(n)for(var u in n)o[u]=n[u];return o}function I2(i,n){return{type:"path",pathType:i,items:n}}function rt(i,n){for(var o=0,u=n.length,b;o<u&&(b=n[o]);o++)i=fe(b[0],[i,b[1]]);return i}function f2(i,n){var o=[],u=[],b=i.length,N,t={};if(!b)return null;for(var ye=0;ye<b&&(N=i[ye]);ye++)(N.named?u:o).push(N.iri);return t[n||"from"]={default:o,named:u},t}function A2(i){return parseInt(i,10)}function at(i){return i.type==="group"&&i.patterns.length===1?i.patterns[0]:i}function Re(i,n){return n&&n.termType!=="NamedNode"&&(n=V.factory.namedNode(n)),V.factory.literal(i,n)}function ar(i,n){return V.factory.literal(i,n)}function nt(i,n,o){if(!("termType"in n))throw new Error("Nested triples cannot contain paths");return V.factory.quad(i,n,o)}function We(i,n,o,u){var b={};return i!=null&&(b.subject=i),n!=null&&(b.predicate=n),o!=null&&(b.object=o),u!=null&&(b.annotations=u),b}function H2(i){return typeof i=="string"?i.startsWith("e_")?V.factory.blankNode(i):V.factory.blankNode("e_"+i):V.factory.blankNode("g_"+k3++)}var k3=0;V._resetBlanks=function(){k3=0};var nr=/\\u([a-fA-F0-9]{4})|\\U([a-fA-F0-9]{8})|\\(.)/g,sr={"\\":"\\","'":"'",'"':'"',t:"	",b:"\b",n:`
`,r:"\r",f:"\f"},ir=/[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/,st=String.fromCharCode;function y3(i,n){i=i.substring(n,i.length-n);try{i=i.replace(nr,function(o,u,b,N){var t;if(u){if(t=parseInt(u,16),isNaN(t))throw new Error;return st(t)}else if(b){if(t=parseInt(b,16),isNaN(t))throw new Error;return t<65535?st(t):st(55296+((t-=65536)>>10),56320+(t&1023))}else{var ye=sr[N];if(!ye)throw new Error;return ye}})}catch{return""}if(ir.exec(i))throw new Error("Invalid unicode codepoint of surrogate pair without corresponding codepoint in "+i);return i}function or(i){var n=H2(),o=n,u=[],b,N=[];i.forEach(function(Le){u.push(Le.entity),h2(N,Le.triples)});for(var t=0,ye=0,r=u.length,b=Array(r*2);t<r;)b[ye++]=We(o,V.factory.namedNode(er),u[t]),b[ye++]=We(o,V.factory.namedNode(tr),o=++t<r?H2():V.factory.namedNode(p3));return{entity:n,triples:h2(b,N)}}function ur(i){var n=H2();return{entity:n,triples:i.map(function(o){return ue(We(n),o)})}}function it(i,n,o){var u=[],b=[];return n.forEach(function(N){let t=null;N.annotation&&(t=N.annotation,N=N.object),u.push(We(null,i,N.entity,t)),h2(b,N.triples)}),Ve(u,o||[],b)}function Zr(i){for(var n=[],o,u=0,b;b=i[u];u++)switch(b.type){case"bgp":b.triples.length&&(o?h2(o.triples,b.triples):Me(n,o=b));break;default:(!b.patterns||b.patterns.length>0)&&(Me(n,b),o=null)}return n}function N2(i){return i.variable?i.variable.value:i.value||i.expression.value}function ot(i){if(!i)return[];if(i.type==="aggregate")return[i];if(i.type==="operation"){let n=[];for(let o of i.args)n.push(...ot(o));return n}return[]}function cr(i){let n=new Set,o=function(u){u&&(u.termType==="Variable"?n.add(u):u.type==="operation"&&u.args.forEach(o))};return o(i),n}function ut(i,n=1,o=[]){for(let u of i)n>0&&u instanceof Array?ut(u,n-1,o):o.push(u);return o}function ct(i){return i.termType==="Variable"}function m3(i){if(i.triples){let n=[];for(let o of i.triples)ct(o.subject)&&n.push(o.subject.value),ct(o.predicate)&&n.push(o.predicate.value),ct(o.object)&&n.push(o.object.value);return n}else if(i.patterns){let n=[];for(let o of i.patterns)n.push(...m3(o));return n}return[]}function lr(i){let n=i.slice().sort(),o=[];for(let u=0;u<n.length-1;u++)n[u+1]==n[u]&&o.push(n[u]);return o}function Z2(i){if(!V.sparqlStar)throw new Error("SPARQL-star support is not enabled");return i}function F3(i,n,o){for(let u of n){let b=We("subject"in u?u.subject:i,u.predicate,u.object);o.push(b),u.annotations&&F3(nt(i,u.predicate,u.object),u.annotations,o)}}function lt(i){if(V.sparqlStar){let n=[];return i.forEach(o=>{let u=We(o.subject,o.predicate,o.object);n.push(u),o.annotations&&F3(nt(o.subject,o.predicate,o.object),o.annotations,n)}),n}return i}function Jr(i){if(!V.sparqlStarNestedQuads)throw new Error("Lenient SPARQL-star support with nested quads is not enabled");return i}function _3(i){for(let n of i){if(n.type==="graph"&&n.name.termType==="Variable")throw new Error("Detected illegal variable in GRAPH");if(n.type==="bgp"||n.type==="graph"){for(let o of n.triples)if(o.subject.termType==="Variable"||o.predicate.termType==="Variable"||o.object.termType==="Variable")throw new Error("Detected illegal variable in BGP")}}return i}function pt(i){for(let n of i)if(n.type==="bgp"){for(let o of n.triples)if(o.subject.termType==="BlankNode"||o.predicate.termType==="BlankNode"||o.object.termType==="BlankNode")throw new Error("Detected illegal blank node in BGP")}return i}var pr=function(){var i={EOF:1,parseError:function(o,u){if(this.yy.parser)this.yy.parser.parseError(o,u);else throw new Error(o)},setInput:function(n,o){return this.yy=o||this.yy||{},this._input=n,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var n=this._input[0];this.yytext+=n,this.yyleng++,this.offset++,this.match+=n,this.matched+=n;var o=n.match(/(?:\r\n?|\n).*/g);return o?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),n},unput:function(n){var o=n.length,u=n.split(/(?:\r\n?|\n)/g);this._input=n+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-o),this.offset-=o;var b=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),u.length-1&&(this.yylineno-=u.length-1);var N=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:u?(u.length===b.length?this.yylloc.first_column:0)+b[b.length-u.length].length-u[0].length:this.yylloc.first_column-o},this.options.ranges&&(this.yylloc.range=[N[0],N[0]+this.yyleng-o]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(n){this.unput(this.match.slice(n))},pastInput:function(){var n=this.matched.substr(0,this.matched.length-this.match.length);return(n.length>20?"...":"")+n.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var n=this.match;return n.length<20&&(n+=this._input.substr(0,20-n.length)),(n.substr(0,20)+(n.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var n=this.pastInput(),o=new Array(n.length+1).join("-");return n+this.upcomingInput()+`
`+o+"^"},test_match:function(n,o){var u,b,N;if(this.options.backtrack_lexer&&(N={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(N.yylloc.range=this.yylloc.range.slice(0))),b=n[0].match(/(?:\r\n?|\n).*/g),b&&(this.yylineno+=b.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:b?b[b.length-1].length-b[b.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+n[0].length},this.yytext+=n[0],this.match+=n[0],this.matches=n,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(n[0].length),this.matched+=n[0],u=this.performAction.call(this,this.yy,this,o,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),u)return u;if(this._backtrack){for(var t in N)this[t]=N[t];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var n,o,u,b;this._more||(this.yytext="",this.match="");for(var N=this._currentRules(),t=0;t<N.length;t++)if(u=this._input.match(this.rules[N[t]]),u&&(!o||u[0].length>o[0].length)){if(o=u,b=t,this.options.backtrack_lexer){if(n=this.test_match(u,N[t]),n!==!1)return n;if(this._backtrack){o=!1;continue}else return!1}else if(!this.options.flex)break}return o?(n=this.test_match(o,N[b]),n!==!1?n:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var o=this.next();return o||this.lex()},begin:function(o){this.conditionStack.push(o)},popState:function(){var o=this.conditionStack.length-1;return o>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(o){return o=this.conditionStack.length-1-Math.abs(o||0),o>=0?this.conditionStack[o]:"INITIAL"},pushState:function(o){this.begin(o)},stateStackSize:function(){return this.conditionStack.length},options:{flex:!0,"case-insensitive":!0},performAction:function(o,u,b,N){var t=N;switch(b){case 0:break;case 1:return 12;case 2:return 15;case 3:return 41;case 4:return 325;case 5:return 326;case 6:return 45;case 7:return 47;case 8:return 48;case 9:return 39;case 10:return 24;case 11:return 28;case 12:return 29;case 13:return 31;case 14:return 32;case 15:return 36;case 16:return 53;case 17:return 327;case 18:return 63;case 19:return 64;case 20:return 70;case 21:return 73;case 22:return 76;case 23:return 78;case 24:return 81;case 25:return 83;case 26:return 85;case 27:return 193;case 28:return 100;case 29:return 328;case 30:return 121;case 31:return 329;case 32:return 330;case 33:return 110;case 34:return 331;case 35:return 109;case 36:return 332;case 37:return 333;case 38:return 113;case 39:return 115;case 40:return 116;case 41:return 131;case 42:return 123;case 43:return 126;case 44:return 128;case 45:return 132;case 46:return 112;case 47:return 334;case 48:return 335;case 49:return 159;case 50:return 161;case 51:return 164;case 52:return 174;case 53:return 160;case 54:return 336;case 55:return 163;case 56:return 312;case 57:return 314;case 58:return 317;case 59:return 318;case 60:return 272;case 61:return 197;case 62:return 337;case 63:return 338;case 64:return 229;case 65:return 340;case 66:return 263;case 67:return 224;case 68:return 231;case 69:return 232;case 70:return 242;case 71:return 246;case 72:return 290;case 73:return 341;case 74:return 342;case 75:return 343;case 76:return 344;case 77:return 345;case 78:return 250;case 79:return 346;case 80:return 265;case 81:return 276;case 82:return 277;case 83:return 268;case 84:return 269;case 85:return 270;case 86:return 271;case 87:return 347;case 88:return 348;case 89:return 273;case 90:return 274;case 91:return 350;case 92:return 349;case 93:return 351;case 94:return 279;case 95:return 280;case 96:return 283;case 97:return 285;case 98:return 289;case 99:return 293;case 100:return 296;case 101:return 13;case 102:return 16;case 103:return 308;case 104:return 309;case 105:return 87;case 106:return 292;case 107:return 82;case 108:return 294;case 109:return 295;case 110:return 297;case 111:return 298;case 112:return 299;case 113:return 300;case 114:return 301;case 115:return 302;case 116:return"EXPONENT";case 117:return 303;case 118:return 304;case 119:return 305;case 120:return 306;case 121:return 89;case 122:return 310;case 123:return 6;case 124:return"INVALID";case 125:console.log(u.yytext);break}},rules:[/^(?:\s+|(#[^\n\r]*))/i,/^(?:BASE)/i,/^(?:PREFIX)/i,/^(?:SELECT)/i,/^(?:DISTINCT)/i,/^(?:REDUCED)/i,/^(?:\()/i,/^(?:AS)/i,/^(?:\))/i,/^(?:\*)/i,/^(?:CONSTRUCT)/i,/^(?:WHERE)/i,/^(?:\{)/i,/^(?:\})/i,/^(?:DESCRIBE)/i,/^(?:ASK)/i,/^(?:FROM)/i,/^(?:NAMED)/i,/^(?:GROUP)/i,/^(?:BY)/i,/^(?:HAVING)/i,/^(?:ORDER)/i,/^(?:ASC)/i,/^(?:DESC)/i,/^(?:LIMIT)/i,/^(?:OFFSET)/i,/^(?:VALUES)/i,/^(?:;)/i,/^(?:LOAD)/i,/^(?:SILENT)/i,/^(?:INTO)/i,/^(?:CLEAR)/i,/^(?:DROP)/i,/^(?:CREATE)/i,/^(?:ADD)/i,/^(?:TO)/i,/^(?:MOVE)/i,/^(?:COPY)/i,/^(?:INSERT((\s+|(#[^\n\r]*)\n\r?)+)DATA)/i,/^(?:DELETE((\s+|(#[^\n\r]*)\n\r?)+)DATA)/i,/^(?:DELETE((\s+|(#[^\n\r]*)\n\r?)+)WHERE)/i,/^(?:WITH)/i,/^(?:DELETE)/i,/^(?:INSERT)/i,/^(?:USING)/i,/^(?:DEFAULT)/i,/^(?:GRAPH)/i,/^(?:ALL)/i,/^(?:\.)/i,/^(?:OPTIONAL)/i,/^(?:SERVICE)/i,/^(?:BIND)/i,/^(?:UNDEF)/i,/^(?:MINUS)/i,/^(?:UNION)/i,/^(?:FILTER)/i,/^(?:<<)/i,/^(?:>>)/i,/^(?:\{\|)/i,/^(?:\|\})/i,/^(?:,)/i,/^(?:a)/i,/^(?:\|)/i,/^(?:\/)/i,/^(?:\^)/i,/^(?:\?)/i,/^(?:\+)/i,/^(?:!)/i,/^(?:\[)/i,/^(?:\])/i,/^(?:\|\|)/i,/^(?:&&)/i,/^(?:=)/i,/^(?:!=)/i,/^(?:<)/i,/^(?:>)/i,/^(?:<=)/i,/^(?:>=)/i,/^(?:IN)/i,/^(?:NOT)/i,/^(?:-)/i,/^(?:BOUND)/i,/^(?:BNODE)/i,/^(?:(RAND|NOW|UUID|STRUUID))/i,/^(?:(LANG|DATATYPE|IRI|URI|ABS|CEIL|FLOOR|ROUND|STRLEN|STR|UCASE|LCASE|ENCODE_FOR_URI|YEAR|MONTH|DAY|HOURS|MINUTES|SECONDS|TIMEZONE|TZ|MD5|SHA1|SHA256|SHA384|SHA512|isIRI|isURI|isBLANK|isLITERAL|isNUMERIC))/i,/^(?:(SUBJECT|PREDICATE|OBJECT|isTRIPLE))/i,/^(?:(LANGMATCHES|CONTAINS|STRSTARTS|STRENDS|STRBEFORE|STRAFTER|STRLANG|STRDT|sameTerm))/i,/^(?:CONCAT)/i,/^(?:COALESCE)/i,/^(?:IF)/i,/^(?:TRIPLE)/i,/^(?:REGEX)/i,/^(?:SUBSTR)/i,/^(?:REPLACE)/i,/^(?:EXISTS)/i,/^(?:COUNT)/i,/^(?:SUM|MIN|MAX|AVG|SAMPLE)/i,/^(?:GROUP_CONCAT)/i,/^(?:SEPARATOR)/i,/^(?:\^\^)/i,/^(?:true|false)/i,/^(?:(<(?:[^<>\"\{\}\|\^`\\\u0000-\u0020])*>))/i,/^(?:((([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?)?:))/i,/^(?:(((([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?)?:)((?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|:|[0-9]|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%))))*(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|:|((%([0-9A-Fa-f])([0-9A-Fa-f]))|(\\(_|~|\.|-|!|\$|&|'|\(|\)|\*|\+|,|;|=|\/|\?|#|@|%)))))?)))/i,/^(?:(_:(?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9])(?:(?:(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])|\.)*(((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|-|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040]))?))/i,/^(?:([\?\$]((?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9])(?:((?:([A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])|_))|[0-9]|\u00B7|[\u0300-\u036F\u203F-\u2040])*)))/i,/^(?:(@[a-zA-Z]+(?:-[a-zA-Z0-9]+)*))/i,/^(?:([0-9]+))/i,/^(?:([0-9]*\.[0-9]+))/i,/^(?:([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+)))/i,/^(?:(\+([0-9]+)))/i,/^(?:(\+([0-9]*\.[0-9]+)))/i,/^(?:(\+([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:(-([0-9]+)))/i,/^(?:(-([0-9]*\.[0-9]+)))/i,/^(?:(-([0-9]+\.[0-9]*([eE][+-]?[0-9]+)|\.([0-9])+([eE][+-]?[0-9]+)|([0-9])+([eE][+-]?[0-9]+))))/i,/^(?:([eE][+-]?[0-9]+))/i,/^(?:('(?:(?:[^\u0027\u005C\u000A\u000D])|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*'))/i,/^(?:("(?:(?:[^\u0022\u005C\u000A\u000D])|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])))*"))/i,/^(?:('''(?:(?:'|'')?(?:[^'\\]|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*'''))/i,/^(?:("""(?:(?:"|"")?(?:[^\"\\]|(\\[tbnrf\\\"']|\\u([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])|\\U([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f])([0-9A-Fa-f]))))*"""))/i,/^(?:(\((\u0020|\u0009|\u000D|\u000A)*\)))/i,/^(?:(\[(\u0020|\u0009|\u000D|\u000A)*\]))/i,/^(?:$)/i,/^(?:.)/i,/^(?:.)/i],conditions:{INITIAL:{rules:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],inclusive:!0}}};return i}();et.lexer=pr;function V(){this.yy={}}return V.prototype=et,et.Parser=V,new V}();A3.exports=Cr});var L3=Se((pa,R3)=>{var Vr="http://www.w3.org/2001/XMLSchema#integer",Rr="http://www.w3.org/2001/XMLSchema#string";function se(e){this._options=e=e||{};var a=e.prefixes||{};this._prefixByIri={};var s=[];for(var h in a){var d=a[h];a1(d)&&(this._prefixByIri[d]=h,s.push(d))}var C=s.join("|").replace(/[\]\/\(\)\*\+\?\.\\\$]/g,"\\$&");this._prefixRegex=new RegExp("^("+C+")([a-zA-Z][\\-_a-zA-Z0-9]*)$"),this._usedPrefixes={},this._sparqlStar=e.sparqlStar,this._indent=a1(e.indent)?e.indent:"  ",this._newline=a1(e.newline)?e.newline:`
`,this._explicitDatatype=!!e.explicitDatatype}se.prototype.toQuery=function(e){var a="";return e.queryType&&(a+=e.queryType.toUpperCase()+" "),e.reduced&&(a+="REDUCED "),e.distinct&&(a+="DISTINCT "),e.variables?a+=De(e.variables,void 0,function(s){return r2(s)?this.toEntity(s):"("+this.toExpression(s.expression)+" AS "+L1(s.variable)+")"},this)+" ":e.template&&(a+=this.group(e.template,!0)+this._newline),e.from&&(a+=this.graphs("FROM ",e.from.default)+this.graphs("FROM NAMED ",e.from.named)),e.where&&(a+="WHERE "+this.group(e.where,!0)+this._newline),e.updates&&(a+=De(e.updates,";"+this._newline,this.toUpdate,this)),e.group&&(a+="GROUP BY "+De(e.group,void 0,function(s){var h=r2(s.expression)?this.toEntity(s.expression):"("+this.toExpression(s.expression)+")";return s.variable?"("+h+" AS "+L1(s.variable)+")":h},this)+this._newline),e.having&&(a+="HAVING ("+De(e.having,void 0,this.toExpression,this)+")"+this._newline),e.order&&(a+="ORDER BY "+De(e.order,void 0,function(s){var h="("+this.toExpression(s.expression)+")";return s.descending?"DESC "+h:h},this)+this._newline),e.offset&&(a+="OFFSET "+e.offset+this._newline),e.limit&&(a+="LIMIT "+e.limit+this._newline),e.values&&(a+=this.values(e)),a=this.baseAndPrefixes(e)+a,a.trim()};se.prototype.baseAndPrefixes=function(e){var a=e.base?"BASE <"+e.base+">"+this._newline:"",s="";for(var h in e.prefixes)(this._options.allPrefixes||this._usedPrefixes[h])&&(s+="PREFIX "+h+": <"+e.prefixes[h]+">"+this._newline);return a+s};se.prototype.toPattern=function(e){var a=e.type||e instanceof Array&&"array"||(e.subject&&e.predicate&&e.object?"triple":"");if(!(a in this))throw new Error("Unknown entry type: "+a);return this[a](e)};se.prototype.triple=function(e){return this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+"."};se.prototype.array=function(e){return De(e,this._newline,this.toPattern,this)};se.prototype.bgp=function(e){return this.encodeTriples(e.triples)};se.prototype.encodeTriples=function(e){if(!e.length)return"";for(var a=[],s=void 0,h=void 0,d=0;d<e.length;d++){var C=e[d];g2(C.subject,s)?g2(C.predicate,h)?a.push(","):(h=C.predicate,a.push(";"+this._newline,this._indent,this.toEntity(h))):(s&&a.push("."+this._newline),s=C.subject,h=C.predicate,a.push(this.toEntity(s)," ",this.toEntity(h))),a.push(" ",this.toEntity(C.object))}return a.push("."),a.join("")};se.prototype.graph=function(e){return"GRAPH "+this.toEntity(e.name)+" "+this.group(e)};se.prototype.graphs=function(e,a){return!a||a.length===0?"":De(a,"",function(s){return e+this.toEntity(s)+this._newline},this)};se.prototype.group=function(e,a){return e=a!==!0?this.array(e.patterns||e.triples):this.toPattern(e.type!=="group"?e:e.patterns),e.indexOf(this._newline)===-1?"{ "+e+" }":"{"+this._newline+this.indent(e)+this._newline+"}"};se.prototype.query=function(e){return this.toQuery(e)};se.prototype.filter=function(e){return"FILTER("+this.toExpression(e.expression)+")"};se.prototype.bind=function(e){return"BIND("+this.toExpression(e.expression)+" AS "+L1(e.variable)+")"};se.prototype.optional=function(e){return"OPTIONAL "+this.group(e)};se.prototype.union=function(e){return De(e.patterns,this._newline+"UNION"+this._newline,function(a){return this.group(a,!0)},this)};se.prototype.minus=function(e){return"MINUS "+this.group(e)};se.prototype.values=function(e){var a=Object.keys(e.values.reduce(function(d,C){for(var Fe in C)d[Fe]=!0;return d},{})),s,h;return a.length===1?s=h="":(s="(",h=")"),"VALUES "+s+a.join(" ")+h+" {"+this._newline+De(e.values,this._newline,function(d){return"  "+s+De(a,void 0,function(C){return d[C]?this.toEntity(d[C]):"UNDEF"},this)+h},this)+this._newline+"}"};se.prototype.service=function(e){return"SERVICE "+(e.silent?"SILENT ":"")+this.toEntity(e.name)+" "+this.group(e)};se.prototype.toExpression=function(e){if(r2(e))return this.toEntity(e);switch(e.type.toLowerCase()){case"aggregate":return e.aggregation.toUpperCase()+"("+(e.distinct?"DISTINCT ":"")+this.toExpression(e.expression)+(typeof e.separator=="string"?'; SEPARATOR = "'+e.separator.replace(C3,V3)+'"':"")+")";case"functioncall":return this.toEntity(e.function)+"("+De(e.args,", ",this.toExpression,this)+")";case"operation":var a=e.operator.toUpperCase(),s=e.args||[];switch(e.operator.toLowerCase()){case"<":case">":case">=":case"<=":case"&&":case"||":case"=":case"!=":case"+":case"-":case"*":case"/":return(r2(s[0])?this.toEntity(s[0]):"("+this.toExpression(s[0])+")")+" "+a+" "+(r2(s[1])?this.toEntity(s[1]):"("+this.toExpression(s[1])+")");case"!":return"!("+this.toExpression(s[0])+")";case"uplus":return"+("+this.toExpression(s[0])+")";case"uminus":return"-("+this.toExpression(s[0])+")";case"notin":a="NOT IN";case"in":return this.toExpression(s[0])+" "+a+"("+(a1(s[1])?s[1]:De(s[1],", ",this.toExpression,this))+")";case"notexists":a="NOT EXISTS";case"exists":return a+" "+this.group(s[0],!0);default:return a+"("+De(s,", ",this.toExpression,this)+")"}default:throw new Error("Unknown expression type: "+e.type)}};se.prototype.toEntity=function(e){if(r2(e))switch(e.termType){case"Wildcard":return"*";case"Variable":return L1(e);case"BlankNode":return"_:"+e.value;case"Literal":var a=e.value||"",s=e.language||"",h=e.datatype;if(e='"'+a.replace(C3,V3)+'"',s)e+="@"+s;else if(h){if(!this._explicitDatatype)switch(h.value){case Rr:return e;case Vr:if(/^\d+$/.test(a))return a+" "}e+="^^"+this.encodeIRI(h.value)}return e;case"Quad":if(!this._sparqlStar)throw new Error("SPARQL* support is not enabled");return e.graph&&e.graph.termType!=="DefaultGraph"?"<< GRAPH "+this.toEntity(e.graph)+" { "+this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+" }  >>":"<< "+this.toEntity(e.subject)+" "+this.toEntity(e.predicate)+" "+this.toEntity(e.object)+" >>";default:return this.encodeIRI(e.value)}else{var d=e.items.map(this.toEntity,this),C=e.pathType;switch(C){case"^":case"!":return C+d[0];case"*":case"+":case"?":return"("+d[0]+C+")";default:return"("+d.join(C)+")"}}};var C3=/["\\\t\n\r\b\f]/g,V3=function(e){return Lr[e]},Lr={"\\":"\\\\",'"':'\\"',"	":"\\t","\n":"\\n","\r":"\\r","\b":"\\b","\f":"\\f"};se.prototype.encodeIRI=function(e){var a=this._prefixRegex.exec(e);if(a){var s=this._prefixByIri[a[1]];return this._usedPrefixes[s]=!0,s+":"+a[2]}return"<"+e+">"};se.prototype.toUpdate=function(e){switch(e.type||e.updateType){case"load":return"LOAD"+(e.source?" "+this.toEntity(e.source):"")+(e.destination?" INTO GRAPH "+this.toEntity(e.destination):"");case"insert":return"INSERT DATA "+this.group(e.insert,!0);case"delete":return"DELETE DATA "+this.group(e.delete,!0);case"deletewhere":return"DELETE WHERE "+this.group(e.delete,!0);case"insertdelete":return(e.graph?"WITH "+this.toEntity(e.graph)+this._newline:"")+(e.delete.length?"DELETE "+this.group(e.delete,!0)+this._newline:"")+(e.insert.length?"INSERT "+this.group(e.insert,!0)+this._newline:"")+(e.using?this.graphs("USING ",e.using.default):"")+(e.using?this.graphs("USING NAMED ",e.using.named):"")+"WHERE "+this.group(e.where,!0);case"add":case"copy":case"move":return e.type.toUpperCase()+" "+(e.silent?"SILENT ":"")+(e.source.default?"DEFAULT":this.toEntity(e.source.name))+" TO "+this.toEntity(e.destination.name);case"create":case"clear":case"drop":return e.type.toUpperCase()+(e.silent?" SILENT ":" ")+(e.graph.default?"DEFAULT":e.graph.named?"NAMED":e.graph.all?"ALL":"GRAPH "+this.toEntity(e.graph.name));default:throw new Error("Unknown update query type: "+e.type)}};se.prototype.indent=function(e){return e.replace(/^/gm,this._indent)};function L1(e){return"?"+e.value}function a1(e){return typeof e=="string"}function r2(e){return typeof e.termType=="string"}function g2(e,a){if(!e||!r2(e)||!a||!r2(a)||e.termType!==a.termType)return!1;switch(e.termType){case"Literal":return e.value===a.value&&e.language===a.language&&g2(e.datatype,a.datatype);case"Quad":return g2(e.subject,a.subject)&&g2(e.predicate,a.predicate)&&g2(e.object,a.object)&&g2(e.graph,a.graph);default:return e.value===a.value}}function De(e,a,s,h){return e.map(s,h).join(a1(a)?a:" ")}R3.exports=function(a={}){return{stringify:function(s){var h=Object.create(a);return h.prefixes=s.prefixes,new se(h).toQuery(s)},createGenerator:function(){return new se(a)}}}});var yt=Se(P1=>{"use strict";Object.defineProperty(P1,"__esModule",{value:!0});P1.BlankNode=void 0;var kt=class{constructor(a){this.termType="BlankNode",this.value=a}equals(a){return!!a&&a.termType==="BlankNode"&&a.value===this.value}};P1.BlankNode=kt});var mt=Se(x1=>{"use strict";Object.defineProperty(x1,"__esModule",{value:!0});x1.DefaultGraph=void 0;var n1=class{constructor(){this.termType="DefaultGraph",this.value=""}equals(a){return!!a&&a.termType==="DefaultGraph"}};x1.DefaultGraph=n1;n1.INSTANCE=new n1});var G1=Se(O1=>{"use strict";Object.defineProperty(O1,"__esModule",{value:!0});O1.NamedNode=void 0;var Ft=class{constructor(a){this.termType="NamedNode",this.value=a}equals(a){return!!a&&a.termType==="NamedNode"&&a.value===this.value}};O1.NamedNode=Ft});var _t=Se(B1=>{"use strict";Object.defineProperty(B1,"__esModule",{value:!0});B1.Literal=void 0;var P3=G1(),s1=class e{constructor(a,s){this.termType="Literal",this.value=a,typeof s=="string"?(this.language=s,this.datatype=e.RDF_LANGUAGE_STRING):s?(this.language="",this.datatype=s):(this.language="",this.datatype=e.XSD_STRING)}equals(a){return!!a&&a.termType==="Literal"&&a.value===this.value&&a.language===this.language&&this.datatype.equals(a.datatype)}};B1.Literal=s1;s1.RDF_LANGUAGE_STRING=new P3.NamedNode("http://www.w3.org/1999/02/22-rdf-syntax-ns#langString");s1.XSD_STRING=new P3.NamedNode("http://www.w3.org/2001/XMLSchema#string")});var Dt=Se(U1=>{"use strict";Object.defineProperty(U1,"__esModule",{value:!0});U1.Quad=void 0;var Et=class{constructor(a,s,h,d){this.termType="Quad",this.value="",this.subject=a,this.predicate=s,this.object=h,this.graph=d}equals(a){return!!a&&(a.termType==="Quad"||!a.termType)&&this.subject.equals(a.subject)&&this.predicate.equals(a.predicate)&&this.object.equals(a.object)&&this.graph.equals(a.graph)}};U1.Quad=Et});var wt=Se(j1=>{"use strict";Object.defineProperty(j1,"__esModule",{value:!0});j1.Variable=void 0;var Tt=class{constructor(a){this.termType="Variable",this.value=a}equals(a){return!!a&&a.termType==="Variable"&&a.value===this.value}};j1.Variable=Tt});var O3=Se(q1=>{"use strict";Object.defineProperty(q1,"__esModule",{value:!0});q1.DataFactory=void 0;var Pr=yt(),xr=mt(),x3=_t(),Or=G1(),Gr=Dt(),Br=wt(),Ur=0,vt=class{constructor(a){this.blankNodeCounter=0,a=a||{},this.blankNodePrefix=a.blankNodePrefix||`df_${Ur++}_`}namedNode(a){return new Or.NamedNode(a)}blankNode(a){return new Pr.BlankNode(a||`${this.blankNodePrefix}${this.blankNodeCounter++}`)}literal(a,s){return new x3.Literal(a,s)}variable(a){return new Br.Variable(a)}defaultGraph(){return xr.DefaultGraph.INSTANCE}quad(a,s,h,d){return new Gr.Quad(a,s,h,d||this.defaultGraph())}fromTerm(a){switch(a.termType){case"NamedNode":return this.namedNode(a.value);case"BlankNode":return this.blankNode(a.value);case"Literal":return a.language?this.literal(a.value,a.language):a.datatype.equals(x3.Literal.XSD_STRING)?this.literal(a.value):this.literal(a.value,this.fromTerm(a.datatype));case"Variable":return this.variable(a.value);case"DefaultGraph":return this.defaultGraph();case"Quad":return this.quad(this.fromTerm(a.subject),this.fromTerm(a.predicate),this.fromTerm(a.object),this.fromTerm(a.graph))}}fromQuad(a){return this.fromTerm(a)}resetBlankNodeCounter(){this.blankNodeCounter=0}};q1.DataFactory=vt});var G3=Se(Te=>{"use strict";var jr=Te&&Te.__createBinding||(Object.create?function(e,a,s,h){h===void 0&&(h=s),Object.defineProperty(e,h,{enumerable:!0,get:function(){return a[s]}})}:function(e,a,s,h){h===void 0&&(h=s),e[h]=a[s]}),k2=Te&&Te.__exportStar||function(e,a){for(var s in e)s!=="default"&&!Object.prototype.hasOwnProperty.call(a,s)&&jr(a,e,s)};Object.defineProperty(Te,"__esModule",{value:!0});k2(yt(),Te);k2(O3(),Te);k2(mt(),Te);k2(_t(),Te);k2(G1(),Te);k2(Dt(),Te);k2(wt(),Te)});var U3=Se((Fa,B3)=>{var Ze=N3().Parser,qr=L3(),zr=gt().Wildcard,{DataFactory:Kr}=G3();B3.exports={Parser:function({prefixes:e,baseIRI:a,factory:s,sparqlStar:h,skipValidation:d,skipUngroupedVariableCheck:C,pathOnly:Fe}={}){var we={};for(var be in e||{})we[be]=e[be];var Oe=new Ze;return Oe.parse=function(){return Ze.base=a||"",Ze.prefixes=Object.create(we),Ze.factory=s||new Kr,Ze.sparqlStar=!!h,Ze.pathOnly=!!Fe,Ze.skipValidation=!!d||!!C,Ze.prototype.parse.apply(Oe,arguments)},Oe._resetBlanks=Ze._resetBlanks,Oe},Generator:qr,Wildcard:zr}});var ft="./logo-NRR6YETF.png";var T3=`# GeoData Wizard

GeoData Wizard is een programma waarmee tabellen omgezet kunnen worden naar linked data.

## Hoe werkt de GeoData Wizard?

De GeoData Wizard stelt de gebruiker in staat om tabellen om te zetten naar linked data. Dit gebeurt aan de hand van de volgende 3 stappen:

- Stap 1: Upload
- Stap 2: Configure
- Stap 3: Publish

### Stap 1: Upload

GeoData Wizard kan bestanden in het CSV formaat inlezen. CSV staat voor "Comma Separated Values". De meeste spreadsheet programma's (zoals MS Excel) en database programma's (zoals MS Access) hebben een standaard optie om data in dit formaat te exporteren.

Wanneer het CSV bestand vanaf de harde schijf beschikbaar is kan het tijdens de "Upload" stap worden geselecteerd (Figuur 1).

<figure>
  <img src="step-1.png">
  <figcaption>
    Figuur 1 - De upload stap in de GeoData Wizard.
  </figcaption>
</figure>

Wanneer geen eigen tabel voorhanden is kan ook gebruik worden gemaakt van een voorbeeld tabel door op "example CSV file" te klikken.

## Stap 2: Configure

Wanneer de data ge\xFCpload is in de GeoData Wizard kunnen we de transformatie gaan configureren. Deze configuratie bestaat uit de volgende stappen (Figuur 2):

1. Stel in welke kolom wordt gebruikt voor identificatie.
2. Stel in wat het type is van de objecten die in de rijen worden beschreven.
3. Stel in welke eigenschap bij welke kolom hoort.
4. Stel in welke verrijking moet worden toegepast op de cellen.

<figure>
  <img src="step-2.png">
  <figcaption>
    Figuur 2 - De configuratie stap in de GeoData Wizard. Dit is waar de transformatie wordt ingesteld.
  </figcaption>
</figure>

## Stap 3: Publish

Wanneer de GeoData Wizard de transformatie heeft uitgevoerd wordt deze in de volgende formaten aangeboden:

- Download het verrijkte CSV bestand
- Download de gegenereerde linked data
- Download het RML script dat kan worden doorontwikkeld

Daarnaast kan de data direct worden ge\xFCpload naar de triple store van het Platform Linked Data Nederland (PLDN) of naar het Kadaster (Figuur 3).

<figure>
  <img src="step-3.png">
  <figcaption>
    Figuur 3 - De publicatie stap in de GeoData Wizard.
  </figcaption>
</figure>

## Waarom linked data?

De kracht van linked data is dat datasets via het web aan elkaar kunnen worden gekoppeld. Bovendien worden in linked data standaarden toegepast waardoor de gegevens beter uitwisselbaar zijn. Neem een kijkje op [de website van het Platform Linked Data Nederland](https://www.pldn.nl/wiki/Wat_is_het) voor meer informatie over linked data.
`;var w3=`\uFEFFKerk,Straat,Huisnummer,Postcode,Woonplaats,Denominatie,BAG ID,Punt co\xF6rdinaat
Munsterkerk,Munsterplein,12,6041HD,Roermond,Rooms-Katholiek Kerkgenootschap in Nederland,0957100000260969,Point(5.9885077122575 51.19355309031)
De Grote of St. Bavokerk te Haarlem,Oude Groenmarkt,3,2011HL,Haarlem,Protestantse Kerk in Nederland: Protestantse Gemeente,0392100000037432,Point(4.6367852414904 52.380867128717)
Plein Kerk,Plein,27,3991DL,Houten,Hersteld Hervormde Kerk,0321100000006718,Point(5.1617524367345 52.027577800006)
Lutherse Kerk,Hondstraat,6,6211HX,Maastricht,Pinkstergemeente,0935100000019820,Point(5.6912975823322 50.847527370354)
Doopsgezind Amsterdam,Singel,452,1017AW,Amsterdam,Algemene Doopsgezinde Soci\xEBteit,0363100012177610,Point(4.888625965831 52.367707869405)
Oud-katholieke Parochie vd H.H Jacobus en Augustinus,Juffrouw Idastraat,7,2513BE,s-Gravenhage,Oud-Katholieke Kerk van Nederland,0518100000307537,Point(4.3061896277919 52.079387625716)
Pieterskerk,Pieterskerkhof,5,3512JR,Utrecht,Christian Science Nederland & School voor openbaar basisonderwijs,0344100000034484,Point(5.1245520254649 52.091139138425)
Oude Kerk Oosterbeek,Benedendorpseweg,134,6862WP,Oosterbeek,Protestantse Kerk in Nederland: Protestantse Gemeente,0274100000000610,Point(5.8377785440148 51.977972075089)
`;var $2="http://www.w3.org/1999/02/22-rdf-syntax-ns#",e1="http://www.w3.org/2001/XMLSchema#",bt="http://www.w3.org/2000/10/swap/",v3={xsd:{decimal:`${e1}decimal`,boolean:`${e1}boolean`,double:`${e1}double`,integer:`${e1}integer`,string:`${e1}string`},rdf:{type:`${$2}type`,nil:`${$2}nil`,first:`${$2}first`,rest:`${$2}rest`,langString:`${$2}langString`},owl:{sameAs:"http://www.w3.org/2002/07/owl#sameAs"},r:{forSome:`${bt}reify#forSome`,forAll:`${bt}reify#forAll`},log:{implies:`${bt}log#implies`}};var{rdf:Er,xsd:R2}=v3,R1,Dr=0;var Tr={namedNode:wr,blankNode:vr,variable:Ir,literal:Sr,defaultGraph:Ar,quad:S3,triple:S3},P2=Tr,He=class e{constructor(a){this.id=a}get value(){return this.id}equals(a){return a instanceof e?this.id===a.id:!!a&&this.termType===a.termType&&this.value===a.value}hashCode(){return 0}toJSON(){return{termType:this.termType,value:this.value}}},t1=class extends He{get termType(){return"NamedNode"}},L2=class e extends He{get termType(){return"Literal"}get value(){return this.id.substring(1,this.id.lastIndexOf('"'))}get language(){let a=this.id,s=a.lastIndexOf('"')+1;return s<a.length&&a[s++]==="@"?a.substr(s).toLowerCase():""}get datatype(){return new t1(this.datatypeString)}get datatypeString(){let a=this.id,s=a.lastIndexOf('"')+1,h=s<a.length?a[s]:"";return h==="^"?a.substr(s+2):h!=="@"?R2.string:Er.langString}equals(a){return a instanceof e?this.id===a.id:!!a&&!!a.datatype&&this.termType===a.termType&&this.value===a.value&&this.language===a.language&&this.datatype.value===a.datatype.value}toJSON(){return{termType:this.termType,value:this.value,language:this.language,datatype:{termType:"NamedNode",value:this.datatypeString}}}},N1=class extends He{constructor(a){super(`_:${a}`)}get termType(){return"BlankNode"}get value(){return this.id.substr(2)}},C1=class extends He{constructor(a){super(`?${a}`)}get termType(){return"Variable"}get value(){return this.id.substr(1)}},V1=class extends He{constructor(){return super(""),R1||this}get termType(){return"DefaultGraph"}equals(a){return this===a||!!a&&this.termType===a.termType}};R1=new V1;var r1=class extends He{constructor(a,s,h,d){super(""),this._subject=a,this._predicate=s,this._object=h,this._graph=d||R1}get termType(){return"Quad"}get subject(){return this._subject}get predicate(){return this._predicate}get object(){return this._object}get graph(){return this._graph}toJSON(){return{termType:this.termType,subject:this._subject.toJSON(),predicate:this._predicate.toJSON(),object:this._object.toJSON(),graph:this._graph.toJSON()}}equals(a){return!!a&&this._subject.equals(a.subject)&&this._predicate.equals(a.predicate)&&this._object.equals(a.object)&&this._graph.equals(a.graph)}};function wr(e){return new t1(e)}function vr(e){return new N1(e||`n3-${Dr++}`)}function Sr(e,a){if(typeof a=="string")return new L2(`"${e}"@${a.toLowerCase()}`);let s=a?a.value:"";return s===""&&(typeof e=="boolean"?s=R2.boolean:typeof e=="number"&&(Number.isFinite(e)?s=Number.isInteger(e)?R2.integer:R2.double:(s=R2.double,Number.isNaN(e)||(e=e>0?"INF":"-INF")))),s===""||s===R2.string?new L2(`"${e}"`):new L2(`"${e}"^^${s}`)}function Ir(e){return new C1(e)}function Ar(){return R1}function S3(e,a,s,h){return new r1(e,a,s,h)}var q3=yr(U3(),1),{Parser:Mr,Generator:Wr}=q3.default,Qr=e=>typeof e=="object"&&Object.keys(e).includes("termType")&&e.termType==="Variable"&&Object.keys(e).includes("value");async function z1(e,a,s){let d={transformedValueName:"transformed",request:{method:"POST",headers:{Accept:"application/sparql-results+json","Content-Type":"application/x-www-form-urlencoded",...s.request?.headers??{}},...s.request??{}},searchValueName:"searchValue",batchSize:0,transformer:_e=>P2.literal(_e),...s},C=new Mr().parse(e);if(C.type!=="query")throw new Error(`Unexpected query type '${C.type}', expected 'query'`);if(C.queryType!=="SELECT")throw new Error(`Unexpected query type '${C.queryType}', expected 'SELECT'`);let Fe=!1;for(let _e of C.variables)Qr(_e)&&_e.value===d.transformedValueName&&(Fe=!0);if(!Fe)throw new Error(`Expected variable '${d.transformedValueName}' to be in the result bindings but it is not.`);let we=Object.keys(C.prefixes).map(_e=>`prefix ${_e}: <${C.prefixes[_e]}>`).join(`
`);C.prefixes={},C.limit=1;let be=C.where??[],Oe=C.variables??[],p="?"+d.searchValueName.replace(/^\?/,""),c=[],f=a.map(_e=>"");function l(){return`${we}
select ?${d.transformedValueName} ?rowIx where {
${c.join(`
union
`)}
}`}let Je=0;for(let _e of a){let a2={expression:P2.literal(Je,P2.namedNode("https://www.w3.org/2001/XMLSchema#integer")),variable:P2.variable("rowIx")};C.variables=[...Oe,a2],C.where=[...be,{type:"values",values:[{[p]:d.transformer(_e)}]}],c.push(`
###### row ${Je} ######
{
${new Wr().stringify(C)}
}`),d.batchSize!==void 0&&d.batchSize>0&&(Je-1)%d.batchSize===0&&(await j3(l(),f,d),c.length=0),Je++}return c.length>0&&await j3(l(),f,d),f}async function j3(e,a,s){let h="query="+encodeURIComponent(e);return fetch(s.sparqlEndpoint,{...s.request,body:h}).then(d=>d.json()).then(d=>d.results.bindings).then(d=>{for(let C of d){let Fe=C[s.transformedValueName];a[parseInt(C.rowIx.value)]=Fe.value}return a})}var z3={type:"single",label:"Van BAG code naar Kadaster Knowledge Graph IRI",description:"Gebruikt een kolom met codes die in de Basisregistratie Adressen en Gebouwen (BAG) voorkomen, en vindt de corresponderende IRI in de Kadaster Knowledge Graph. De volgende BAG codes worden ondersteund: nummeraanduiding code, openbare ruimte code, pand code, verblijfsobject code, woonplaats code. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",transformation:async e=>{let a=`https://api.labs.kadaster.nl/queries/GeoData-Wizard/van-bag-id-naar-kkg-iri/run?id=${e}`;try{let s=await y2(a);if(s.length===0){console.warn("No results found for refinement query.");return}return s?.[0]?.iri}catch(s){console.error(s);return}},yieldsIri:!0,keepOriginalValue:{keepValue:!0}},K3={type:"single",label:"Van punt co\xF6rdinaat naar Kadaster Knowledge Graph gebouw IRI",description:'Gebruikt een kolom met punt co\xF6rdinaten in het Well-Known Text (WKT) formaat, en vindt de corresponderende gebouw IRI in de Kadaster Knowledge Graph. Een punt in het WKT formaat ziet er als volgt uit: "Point (5.95996114188 52.1796098569)" Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl',transformation:async e=>{let a=`https://api.labs.kadaster.nl/queries/GeoData-Wizard/van-wkt-punt-naar-kkg-gebouw/run?punt=${e}`;try{let s=await y2(a);if(s.length===0){console.warn("No results found for refinement query.");return}return s?.[0]?.iri}catch(s){console.error(s);return}},yieldsIri:!0,keepOriginalValue:{keepValue:!0}},M3={type:"single",label:"Van punt co\xF6rdinaat naar Kadaster Knowledge Graph perceel IRI",description:'Gebruikt een kolom met punt co\xF6rdinaten in het Well-Known Text (WKT) formaat, en vindt de corresponderende perceel IRI in de Kadaster Knowledge Graph. Een punt in het WKT formaat ziet er als volgt uit: "Point (5.95996114188 52.1796098569)" Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl',transformation:async e=>{let a=`https://api.labs.kadaster.nl/queries/GeoData-Wizard/van-wkt-punt-naar-kkg-perceel/run?punt=${e}`;try{let s=await y2(a);if(s.length===0){console.warn("No results found for refinement query.");return}return s?.[0]?.iri}catch(s){console.error(s);return}}},W3={type:"single",label:"Van BAG pand code naar geometrie",description:"Gebruikt een kolom met pand codes die in de Basisregistratie Adressen en Gebouwen (BAG) voorkomen, en vindt de corresponderende geometrie in de Kadaster Knowledge Graph. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",transformation:async e=>{let a=`https://api.labs.kadaster.nl/queries/GeoData-Wizard/bag-geometrie/run?id=${e}`;try{let s=await y2(a);if(s.length===0){console.warn("No results found for refinement query.");return}return s?.[0]?.wkt}catch(s){console.error(s);return}},yieldsLiteral:!0,keepOriginalValue:{keepValue:!0}},St="https://api.pdok.nl/bzk/locatieserver/search/v3_1/free?fq=bron:BAG&q=",Q3={type:"double-column",label:"Van straatnaam + woonplaats naam naar Kadaster Knowledge Graph openbare ruimte IRI",description:"Gebruikt deze kolom met straatnamen en een tweede kolom met woonplaats namen, en vindt de corresponderende IRI in de Kadaster Knowledge Graph. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",transformation:async(e,a)=>{let h=(await y2(`${St}${e} ${a}`)).response.docs[0]?.openbareruimte_id;if(h===void 0){console.warn("No results found for refinement query.");return}else return`https://data.kkg.kadaster.nl/id/openbareRuimte/${h}`},yieldsIri:!0,keepOriginalValue:{keepValue:!0}},H3={type:"double-column",label:"Van postcode + huisnummer naar Kadaster Knowledge Graph nummeraanduiding IRI",description:"Gebruikt deze kolom met postcodes en een tweede kolom met huisnummers, en vindt de corresponderende IRI in de Kadaster Knowledge Graph. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",transformation:async(e,a)=>{let h=(await y2(`${St}${e} ${a}`)).response.docs[0]?.nummeraanduiding_id;if(h===void 0){console.warn("No results found for refinement query.");return}else return`https://data.kkg.kadaster.nl/id/nummeraanduiding/${h}`},yieldsIri:!0,keepOriginalValue:{keepValue:!0}},Z3={type:"single",label:"Van woonplaats naam naar Kadaster Knowledge Graph woonplaats IRI",description:"Gebruikt de woonplaats namen in deze kolom, en vindt de corresponderende IRI in de Kadaster Knowledge Graph. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",transformation:async e=>{try{let s=(await y2(`${St}${e}`)).response.docs[0]?.woonplaatscode;if(s===void 0){console.warn("No results found for refinement query.");return}else return`https://data.kkg.kadaster.nl/id/woonplaats/${s}`}catch(a){console.error(a);return}},yieldsIri:!0,keepOriginalValue:{keepValue:!0}};async function y2(e){console.log("API request to: ",e);let a=await fetch(e,{method:"GET"});if(a.ok){let s=await a.json();return console.log("fetchCall Json Response: ",s),s}else throw new Error(`${e} returned ${a.status}`)}var J3={label:"Van BAG pand code naar geometrie (bulk verwerking)",type:"single",description:"Gebruikt een kolom met pand codes die in de Basisregistratie Adressen en Gebouwen (BAG) voorkomen, en vindt de corresponderende geometrie in de Kadaster Knowledge Graph. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",batchSize:100,bulkTransformation:async e=>z1(`
prefix bag: <http://bag.basisregistraties.overheid.nl/def/bag#>
prefix geo: <http://www.opengis.net/ont/geosparql#>
prefix nen3610: <https://data.kkg.kadaster.nl/nen3610/model/def/>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix sor: <https://data.kkg.kadaster.nl/sor/model/def/>
select ?wkt {
  ?gebouw a sor:Gebouw;
     geo:hasGeometry ?geometry ;
     sor:geregistreerdMet/nen3610:identificatie ?id.
  ?geometry rdfs:isDefinedBy bag: ; geo:asWKT ?wkt ;
}`,e,{sparqlEndpoint:"https://api.labs.kadaster.nl/datasets/dst/kkg/services/default/sparql",searchValueName:"id",transformedValueName:"wkt"}),yieldsLiteral:!0,keepOriginalValue:{keepValue:!0,customPredicateIRI:"http://www.opengis.net/ont/geosparql#asWKT"}},Y3={label:"Van BAG pand code naar adres gevens (bulk verwerking)",type:"single",description:"Gebruikt een kolom met pand codes die in de Basisregistratie Adressen en Gebouwen (BAG) voorkomen, en vindt de corresponderende adres in the KKG. Voor meer informatie over de Kadaster Knowledge Graph, zie https://data.kkg.kadaster.nl",batchSize:100,bulkTransformation:async e=>z1(`
  prefix bag: <http://bag.basisregistraties.overheid.nl/def/bag#>
  prefix geo: <http://www.opengis.net/ont/geosparql#>
  prefix nen3610: <https://data.kkg.kadaster.nl/nen3610/model/def/>
  prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  prefix sor: <https://data.kkg.kadaster.nl/sor/model/def/>
  prefix skos: <http://www.w3.org/2004/02/skos/core#>
  select ?verblijfsobject ?adres {
    ?verblijfsobject 
      a sor:Verblijfsobject;
      sor:geregistreerdMet/nen3610:identificatie ?id ;
      sor:hoofdadres ?nummeraanduiding . 
    ?nummeraanduiding
      sor:postcode ?postcode ;
      sor:huisnummer ?huisnummer ;
      sor:ligtAan/skos:prefLabel ?straatnaam .
    optional { ?nummeraanduiding sor:huisletter ?huisletter }
    optional { ?nummeraanduiding sor:huisnummertoevoeging ?huisnummertoevoeging }
    
    bind(concat(str(?straatnaam), ' ', str(?huisnummer), 
                if(bound(?huisletter), concat(str(?huisletter)), ''),
                if(bound(?huisnummertoevoeging), concat('-', str(?huisnummertoevoeging)), ''), 
                ', ', str(?postcode)) as ?adres )
  }`,e,{sparqlEndpoint:"https://api.labs.kadaster.nl/datasets/dst/kkg/services/default/sparql",searchValueName:"id",transformedValueName:"adres"}),yieldsLiteral:!0,keepOriginalValue:{keepValue:!0,customPredicateIRI:"http://www.opengis.net/ont/geosparql#asWKT"}};var X3="https://api.labs.kadaster.nl/datasets/GeoData-Wizard/vocabulaires/services/search/elasticsearch/",Hr={appName:"GeoData Wizard",classConfig:{method:"elastic",endpoint:X3},columnRefinements:[z3,K3,M3,Z3,H3,Q3,W3,J3,Y3],dataplatformLink:"https://data.pldn.nl",defaultBaseIri:"https://data.pldn.nl/",exampleCSV:w3,favIcon:ft,getAllowedPrefixes:async()=>{let e=await fetch("https://api.labs.kadaster.nl/datasets/GeoData-Wizard/vocabulaires/prefixes");if(e.ok)return await e.json();throw new Error(`Failed to fetch prefixes, status code: ${e.status}`)},homepageMarkdown:T3,icon:ft,newDatasetAccessLevel:"public",predicateConfig:{method:"elastic",endpoint:X3},primaryColor:"#00387d",publishOrder:["download","triplyDB"],secondaryColor:"#008296",triplyDbInstances:[{label:"PLDN",link:"https://data.pldn.nl"},{label:"Kadaster",link:"https://data.labs.kadaster.nl"}]},Aa=globalThis.wizardConfig=Hr;})();
//# sourceMappingURL=config.min.js.map
