{"version":3,"sources":["hooks/use-dependent-state.ts","components/ui-primitives/table.tsx","components/ui-primitives/dropdown-menu.tsx","components/ui-primitives/checkbox.tsx","components/widgets/TablePlusPlus/filters/boolean-filter.tsx","components/widgets/TablePlusPlus/filters/date-range-filter.tsx","components/widgets/TablePlusPlus/filters/registry.ts","components/widgets/TablePlusPlus/filters/advanced-string-filter.tsx","components/widgets/TablePlusPlus/filters/number-range-filter.tsx","components/ui-primitives/text-area.tsx","components/widgets/TablePlusPlus/components/Cell.tsx","components/widgets/TablePlusPlus/components/FilterPopover.tsx","components/widgets/TablePlusPlus/components/DataColumnHeader.tsx","components/widgets/TablePlusPlus/columns/data-column.tsx","components/widgets/TablePlusPlus/components/ToolButton.tsx","components/widgets/TablePlusPlus/columns/tool-buttons-column.tsx","components/widgets/TablePlusPlus/parse-table-widget-data.ts","components/ui-primitives/pagination.tsx","components/widgets/TablePlusPlus/components/PaginationControls.tsx","components/widgets/TablePlusPlus/TablePlusPlus.tsx","components/widgets/TablePlusPlus/row-editor-state-management.ts","hooks/use-force-update.ts","components/DynamicIcon.tsx"],"names":["useDependentState","stateCreator","deps","forceUpdate","useForceUpdate","initialState","useMemo","stateRef","useRef","prevDeps","length","every","dep","index","Object","is","depsAreEqual","current","updateState","useCallback","action","nextState","Table","React","ref","className","props","mergeClasses","displayName","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableColGroup","TableCol","DropdownMenu","DropdownMenuPrimitive","DropdownMenuTrigger","inset","children","DropdownMenuContent","sideOffset","DropdownMenuItem","DropdownMenuCheckboxItem","checked","Checkbox","CheckboxPrimitive","parseBool","str","DateInput","date","setDate","min","max","otherProps","useState","formatDateIso","draftValue","setDraftValue","useEffect","parsedDate","parseDateIso","isDateValid","type","undefined","value","onChange","e","currentTarget","isDateBeforeOrEqual","dateToCompare","isDateEqual","isDateBefore","isDateAfterOrEqual","isDateAfter","parseISO","dateFormat","registry","filterFns","componentsByFilterFn","Map","filterFnNameByDataType","registerFilter","filter","name","filterFn","set","component","dataTypeUris","dataTypeUri","getFilterNameByDataType","XSD_STRING","get","foundFilterFnName","row","columnId","filterValue","addMeta","stringValue","String","getValue","normalizedStringValue","caseSensitive","toLowerCase","normalizedFilterValue","includes","startsWith","endsWith","inputRef","focus","select","onValueChange","setFilterValue","currentValue","placeholder","valueAsNumber","parseFloat","setFilterMin","setFilterMax","number","isNaN","valueAsDate","Textarea","Cell","usePubsub","pubsub","publish","modifiers","icon","Boolean","uri","url","contents","DynamicIcon","size","color","textColor","style","textContent","isUriSelected","publishTopic","target","rel","href","onClick","preventDefault","stopPropagation","editMode","editable","inputType","required","defaultValue","split","map","line","FilterPopover","open","setOpen","isFiltered","column","getFilterValue","onOpenChange","asChild","variant","clsx","align","role","columnDescription","label","id","onSubmit","FilterInputsSwitch","table","resetColumnFilters","getFilterFn","Component","getFilterInputsComponent","updater","DataColumnHeader","disabled","canSort","toggleSorting","title","isSorted","canFilter","convertValueToString","getSortingFnByDataType","rowA","rowB","parseBoolAsSortableNum","a","b","Date","getTime","localeCompare","DropdownToolButton","subButtons","subBtn","idx","confirmation","onSelect","onFocusOutside","message","BaseToolButton","yesColor","yesIcon","actions","executeActions","noColor","noIcon","ToolButtonWithPopover","confirmationMessage","ToolButton","forwardRef","tripleUpdatePayloadSchema","z","object","graph","string","nonempty","subject","predicate","dataType","rowUpdatePayloadSchema","updates","array","delete","shouldHideButton","btn","queryResults","rowResults","getRowResults","rowAndAppVars","getPubsub","rowId","hidden","expression","resolvedValue","resolveTemplateStringAndLogErrors","console","error","evaluateButtonHidingExpression","some","editPhase","getEditPhase","dispatchAction","customConfig","Error","resolveValue","template","resolveTemplateString","topic","success","runStartRule","startRule","parameters","JSON","stringify","timestamp","timestampVariable","startEditing","cancelEditing","editState","getEditState","phase","edit","makeEditPayload","getEditFieldValue","sendEditRequest","values","axios","post","payload","setTimeout","acknowledgeEditResponse","deletePayload","makeDeletePayload","sendDeleteRequest","notification","toast","onSuccess","fallbackMessage","onFailure","rowIndex","parseInt","getEditValue","rowEditor","enabled","defaultGraph","columnConfigs","whenEmptyField","tripleMod","objectType","push","parse","parseTableWidgetData","data","config","custom","globalFilterColumnIds","idToFilterTextOf","Set","columnInfoByVarName","dataColumns","dataColumnsById","hiddenColumns","modifiersRows","dataRows","columnModifiers","head","vars","varName","regexp","match","groups","modifier","getColumnInfo","columnKey","dataTypeSet","results","bindings","binding","add","getUniqueColumnDataTypeUri","columnIdx","findIndex","colDesc","dataColumn","columnConfig","accessorKey","header","getCanSort","getCanFilter","getCanMultiSort","getIsSorted","cell","cellValue","componentType","text","publishVariable","getEditFieldRef","sortingFn","enableHiding","enableColumnFilter","filterable","enableSorting","sortable","width","createDataColumn","enableGlobalFilter","has","modifiersRow","addModifier","rawDataRows","rawDataRow","key","forEach","i","mutation","useMutation","mutationFn","isPending","Icon","spin","buttons","mutate","shouldTriggerFormValidation","createToolButtonsColumn","dataIds","keys","warn","Pagination","PaginationContent","PaginationItem","PaginationLink","isActive","buttonVariants","PaginationPrevious","PaginationNext","PaginationEllipsis","PaginationControls","totalPages","pageCount","pageIndex","halfMaxPageNumbers","Math","floor","maxPageNumbers","startPage","endPage","pages","createPageButton","page","setPageIndex","goToPreviousPage","hasPreviousPage","goToNextPage","hasNextPage","TABLE_DATA_PLACEHOLDER","DEFAULT_COLUMN_WIDTH","TablePlusPlus","getRowValueToPublishOnSelection","variableToPublishOnSelection","publishLastSelectedRow","rowValue","lastSelectedRowTopic","tableData","selectionMode","unshift","SelectAllCheckbox","SelectRowCheckbox","onCheckedChange","toggleAllPageRowsSelected","getIsAllPageRowsSelected","getIsSomePageRowsSelected","getIsSelected","toggleSelected","createSelectionColumn","prevPagination","pageSize","paginationPageSize","pagination","setPagination","sorting","setSorting","globalFilter","setGlobalFilter","columnFilters","setColumnFilters","columnVisibility","setColumnVisibility","actualColumnVisibility","trueVisibility","rowSelection","setRowSelection","rowEditorState","setRowEditorState","editFieldRefDict","RowEditorFeature","getInitialState","state","getDefaultOptions","onRowEditorChange","makeStateUpdater","createTable","setRowEditingState","options","old","functionalUpdate","createRow","getState","produce","draft","original","rowEditState","updateEditField","rowEdit","request","feature","setState","useRowEditor","useReactTable","_features","columns","onPaginationChange","onSortingChange","onColumnFiltersChange","getCoreRowModel","getPaginationRowModel","paginationEnabled","getSortedRowModel","getFilteredRowModel","onColumnVisibilityChange","onRowSelectionChange","enableMultiSort","selectedRowSubscriptionValue","selectedRowSubscription","selectedRowSubscriptionTimestamp","rowIdToSelect","rows","find","selectedRowsInPubSub","topicToListenToForSelectedRows","getSelectedRowModel","valueInPubSubFormat","PublishUtils","getListAsSingleValue","multipleselectparametertype","newValues","parseMultiplePropValue","newRowSelection","getRowModel","selectedRowsTopic","publishValue","join","columnCount","getHeaderGroups","headerGroup","headers","buttonExportToCSV","delimiter","delimiterExportSelectionToCSV","fileName","filenameExportSelectionToCSV","c","fields","content","field","replaceAll","blob","Blob","URL","createObjectURL","link","document","createElement","setAttribute","click","revokeObjectURL","exportToCsvFile","r","labelButtonExportSelectionToCSV","scrollbarWidth","showFilters","enableButtonExportSelectionToCsv","getAllColumns","getCanHide","getIsVisible","toggleVisibility","columnDef","hideColumnHeaders","isPlaceholder","flexRender","getContext","colSpan","getVisibleCells","getFilteredSelectedRowModel","getPageCount","getCanPreviousPage","previousPage","nextPage","useReducer","loadedIcon","useQuery","queryKey","queryFn","fontSize","importName","kebabToCamelCase","replace","allRadixIcons","RadixIcon","height","allMuiIcons","MuiIcon","prefixFallback","isSuccess","kebabText","word","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/25.c00048db.chunk.js","sourcesContent":["import { DependencyList, Dispatch, SetStateAction, useCallback, useMemo, useRef } from \"react\"\nimport { useForceUpdate } from \"./use-force-update\"\n\nexport function useDependentState<S>(\n  stateCreator: (prevState?: S) => S,\n  deps: DependencyList,\n): [S, Dispatch<SetStateAction<S>>] {\n  const forceUpdate = useForceUpdate()\n\n  const initialState = useMemo(() => stateCreator(), [])\n  const stateRef = useRef<S>(initialState)\n\n  const prevDeps = useRef(deps)\n\n  if (!depsAreEqual(prevDeps.current, deps)) {\n    stateRef.current = stateCreator(stateRef.current)\n    prevDeps.current = deps\n  }\n\n  const updateState = useCallback(function (action: SetStateAction<S>) {\n    const nextState = isFunction(action) ? action(stateRef.current) : action\n    stateRef.current = nextState\n    forceUpdate()\n  }, [])\n\n  return [ stateRef.current, updateState ]\n}\n\nfunction depsAreEqual<D extends DependencyList>(prevDeps: D, deps: D): boolean {\n  return (\n    prevDeps.length === deps.length &&\n    deps.every((dep, index) => Object.is(dep, prevDeps[index]))\n  );\n}\n\nfunction isFunction<S>(setStateAction: SetStateAction<S>): setStateAction is (prevState: S) => S {\n  return typeof setStateAction === \"function\"\n}\n","import * as React from 'react'\nimport {mergeClasses} from '../../helpers/styling'\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n    <table\n      ref={ref}\n      className={mergeClasses(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={mergeClasses(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={mergeClasses(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={mergeClasses(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={mergeClasses(\n      \"border-b transition-colors hover:bg-muted/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={mergeClasses(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:mt-1\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={mergeClasses(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:mt-1\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={mergeClasses(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nconst TableColGroup = React.forwardRef<\n  HTMLTableColElement,\n  React.HTMLAttributes<HTMLTableColElement>\n>(({ className, ...props }, ref) => (\n  <colgroup ref={ref} className={mergeClasses(className)} {...props} />\n));\nTableColGroup.displayName = \"TableColGroup\";\n\nconst TableCol = React.forwardRef<\n  HTMLTableColElement,\n  React.ColHTMLAttributes<HTMLTableColElement>\n>(({ className, ...props }, ref) => (\n  <col ref={ref} className={mergeClasses(className)} {...props} />\n));\nTableCol.displayName = \"TableCol\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n  TableColGroup,\n  TableCol\n}\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport {CheckIcon, ChevronRightIcon, DotFilledIcon} from \"@radix-ui/react-icons\"\n\nimport {mergeClasses} from '../../helpers/styling'\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={mergeClasses(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={mergeClasses(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={mergeClasses(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={mergeClasses(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={mergeClasses(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <CheckIcon className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={mergeClasses(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={mergeClasses(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={mergeClasses(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={mergeClasses(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","import * as React from 'react'\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox'\nimport { CheckIcon } from '@radix-ui/react-icons'\n\nimport {mergeClasses} from '../../helpers/styling'\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={mergeClasses(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={mergeClasses(\"flex items-center justify-center text-current\")}\n    >\n      <CheckIcon className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import React from \"react\"\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectGroup, SelectItem } from \"../../../ui-primitives/select\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\n\nexport type BooleanFilter = boolean | null\n\nexport function booleanFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: BooleanFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (filterValue == null) return true\n\n  const booleanValue = parseBool(row.getValue(columnId))\n  return filterValue === booleanValue\n}\n\nexport function BooleanFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: BooleanFilter | null,\n  setFilterValue: (updater: (currentValue: BooleanFilter | null) => BooleanFilter | null) => void\n}) {\n  return (\n    <>\n      <Select value={props.filterValue == null ? \"all\" : String(props.filterValue)}\n              onValueChange={value => props.setFilterValue(() => value === \"all\" ? null : parseBool(value))}>\n        <SelectTrigger className=\"w-100\">\n          <SelectValue />\n        </SelectTrigger>\n        <SelectContent>\n          <SelectGroup>\n            <SelectItem value=\"all\">All</SelectItem>\n            <SelectItem value=\"true\">True</SelectItem>\n            <SelectItem value=\"false\">False</SelectItem>\n          </SelectGroup>\n        </SelectContent>\n      </Select>\n    </>\n  )\n}\n\nfunction parseBool(str: string): boolean | null {\n  if (str === \"true\") return true\n  if (str === \"false\") return false\n  return null\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    booleanFilterFn: FilterFn<unknown>\n  }\n}\n","import React, { useEffect, useRef, useState } from \"react\"\nimport {\n  isValid as isDateValid,\n  isEqual as isDateEqual,\n  isBefore as isDateBefore,\n  isAfter as isDateAfter,\n  format as dateFormat,\n  parseISO\n} from \"date-fns\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\nimport { Label } from \"../../../ui-primitives/label\"\nimport { Input } from \"../../../ui-primitives/input\"\n\nexport type DateRangeFilter = {\n  min: Date | null\n  max: Date | null\n}\n\nexport function dateRangeFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: DateRangeFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (!filterValue) return true\n\n  const valueAsDate = parseDateIso(row.getValue(columnId))\n\n  if (filterValue.min && filterValue.max) {\n    if (!valueAsDate) return false\n    return isDateAfterOrEqual(valueAsDate, filterValue.min) && isDateBeforeOrEqual(valueAsDate, filterValue.max)\n  } else if (filterValue.min) {\n    if (!valueAsDate) return false\n    return isDateAfterOrEqual(valueAsDate, filterValue.min)\n  } else if (filterValue.max) {\n    if (!valueAsDate) return false\n    return isDateBeforeOrEqual(valueAsDate, filterValue.max)\n  } else {\n    return true\n  }\n}\n\nexport function DateRangeFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: DateRangeFilter | null,\n  setFilterValue: (updater: (currentValue: DateRangeFilter | null) => DateRangeFilter | null) => void\n}) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    inputRef.current?.focus()\n    inputRef.current?.select()\n  }, [])\n\n  const setFilterMin = (min: Date | null) => {\n    props.setFilterValue(currentValue => ({\n      min,\n      max: currentValue?.max ?? null\n    }))\n  }\n\n  const setFilterMax = (max: Date | null) => {\n    props.setFilterValue(currentValue => ({\n      min: currentValue?.min ?? null,\n      max\n    }))\n  }\n\n  return (\n    <div className=\"grid gap-2\">\n      <div>\n        <Label>After</Label>\n        <DateInput\n          max={props.filterValue?.max ?? null}\n          date={props.filterValue?.min ?? null}\n          setDate={setFilterMin}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n      <div>\n        <Label>Before</Label>\n        <DateInput\n          min={props.filterValue?.min ?? null}\n          date={props.filterValue?.max ?? null}\n          setDate={setFilterMax}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function DateInput(props: {\n  date: Date | null,\n  setDate: (date: Date | null) => void,\n  min?: Date | null,\n  max?: Date | null\n} & Omit<React.InputHTMLAttributes<HTMLInputElement>, \"type\" | \"min\" | \"max\">) {\n  const { date, setDate, min, max, ...otherProps } = props\n  const [ draftValue, setDraftValue ] = useState<string>(props.date ? formatDateIso(props.date) : \"\")\n\n  useEffect(() => {\n    setDraftValue(props.date ? formatDateIso(props.date) : \"\")\n  }, [ props.date ])\n\n  useEffect(() => {\n    if (draftValue === \"\") props.setDate(null)\n    const parsedDate = parseDateIso(draftValue)\n    if (!isDateValid(parsedDate)) return\n    props.setDate(parsedDate)\n  }, [ draftValue ])\n\n  return (\n    <Input\n      type=\"date\"\n      min={props.min ? formatDateIso(props.min) : undefined}\n      max={props.max ? formatDateIso(props.max) : undefined}\n      value={draftValue}\n      onChange={e => setDraftValue(e.currentTarget.value)}\n      {...otherProps}\n    />\n  )\n}\n\nfunction isDateBeforeOrEqual(date: Date, dateToCompare: Date) {\n  return isDateEqual(date, dateToCompare) || isDateBefore(date, dateToCompare)\n}\n\nfunction isDateAfterOrEqual(date: Date, dateToCompare: Date) {\n  return isDateEqual(date, dateToCompare) || isDateAfter(date, dateToCompare)\n}\n\nfunction parseDateIso(str: string) {\n  const date = parseISO(str)\n  return isDateValid(date) ? date : null\n}\n\nfunction formatDateIso(date: Date) {\n  return dateFormat(date, \"yyyy-MM-dd\")\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    dateRangeFilterFn: FilterFn<unknown>\n  }\n}\n","import { Column, FilterFn, FilterFnOption } from \"@tanstack/react-table\"\nimport { ReactElement } from \"react\"\nimport { advancedStringFilterFn, AdvancedStringFilterInputs } from \"./advanced-string-filter\"\nimport { booleanFilterFn, BooleanFilterInputs } from \"./boolean-filter\"\nimport { numberRangeFilterFn, NumberRangeFilterInputs } from \"./number-range-filter\"\nimport { dateRangeFilterFn, DateRangeFilterInputs } from \"./date-range-filter\"\n\nexport type FilterInputsProps<FilterType> = {\n  column: Column<any, unknown>\n  filterValue: FilterType | null\n  setFilterValue: (updater: (currentValue: FilterType | null) => FilterType | null) => void\n}\n\nexport type FilterInputsComponent<FilterType> = (props: FilterInputsProps<FilterType>) => ReactElement\n\nconst registry = {\n  filterFns: {} as Record<string, FilterFn<unknown>>,\n  componentsByFilterFn: new Map<FilterFn<unknown>, FilterInputsComponent<unknown>>(),\n  filterFnNameByDataType: new Map<string | null, string>()\n} as const\n\nexport function registerFilter<FilterType>(filter: {\n  name: string,\n  filterFn: FilterFn<unknown>,\n  component: FilterInputsComponent<FilterType>,\n  dataTypeUris: string[]\n}) {\n  registry.filterFns[filter.name] = filter.filterFn\n  registry.componentsByFilterFn.set(filter.filterFn, filter.component as FilterInputsComponent<unknown>)\n  for (const dataTypeUri of filter.dataTypeUris) {\n    registry.filterFnNameByDataType.set(dataTypeUri, filter.name)\n  }\n}\n\nexport function getFilterInputsComponent<FilterType>(filterFn: FilterFn<unknown>) {\n  return registry.componentsByFilterFn.get(filterFn) as FilterInputsComponent<FilterType>\n}\n\nexport function getFilterNameByDataType<T>(dataTypeUri: string | null): FilterFnOption<T>  {\n  const XSD_STRING = \"http://www.w3.org/2001/XMLSchema#string\"\n\n  // most string literals have no explicit data type...\n  if (dataTypeUri === null) return registry.filterFnNameByDataType.get(XSD_STRING) as FilterFnOption<T>\n\n  const foundFilterFnName = registry.filterFnNameByDataType.get(dataTypeUri)\n  if (foundFilterFnName) return foundFilterFnName as FilterFnOption<T>\n\n  // also use string filter for unknown data types\n  return registry.filterFnNameByDataType.get(XSD_STRING) as FilterFnOption<T>\n}\n\nexport function getFilterFns(): Record<string, FilterFn<unknown>> {\n  return registry.filterFns\n}\n\nregisterFilter({\n  name: \"advancedStringFilter\",\n  filterFn: advancedStringFilterFn,\n  component: AdvancedStringFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#string\"\n  ]\n})\nregisterFilter({\n  name: \"booleanFilter\",\n  filterFn: booleanFilterFn,\n  component: BooleanFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#boolean\"\n  ]\n})\nregisterFilter({\n  name: \"numberRangeFilter\",\n  filterFn: numberRangeFilterFn,\n  component: NumberRangeFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#double\",\n    \"http://www.w3.org/2001/XMLSchema#float\",\n    \"http://www.w3.org/2001/XMLSchema#decimal\",\n    \"http://www.w3.org/2001/XMLSchema#integer\"\n  ]\n})\nregisterFilter({\n  name: \"dateRangeFilter\",\n  filterFn: dateRangeFilterFn,\n  component: DateRangeFilterInputs,\n  dataTypeUris: [\n    \"http://www.w3.org/2001/XMLSchema#date\",\n    \"http://www.w3.org/2001/XMLSchema#dateTime\"\n  ]\n})\n","import React, { useEffect, useRef } from \"react\"\nimport { Input } from \"../../../ui-primitives/input\"\nimport { Select, SelectTrigger, SelectValue, SelectContent, SelectGroup, SelectLabel, SelectItem } from \"../../../ui-primitives/select\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\n\nexport type AdvancedStringFilter = {\n  filter: string\n  type: \"exact\" | \"includes\" | \"startsWith\" | \"endsWith\"\n  caseSensitive: boolean\n}\n\nexport function advancedStringFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: AdvancedStringFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (!filterValue) return true\n\n  const stringValue = String(row.getValue(columnId))\n\n  const normalizedStringValue = filterValue.caseSensitive\n    ? stringValue\n    : stringValue.toLowerCase()\n\n  const normalizedFilterValue = filterValue.caseSensitive\n    ? filterValue.filter\n    : filterValue.filter.toLowerCase()\n\n  switch (filterValue.type) {\n    case \"exact\":\n      return normalizedStringValue === normalizedFilterValue\n    case \"includes\":\n      return normalizedStringValue.includes(normalizedFilterValue)\n    case \"startsWith\":\n      return normalizedStringValue.startsWith(normalizedFilterValue)\n    case \"endsWith\":\n      return normalizedStringValue.endsWith(normalizedFilterValue)\n    default:\n      return false\n  }\n}\n\nexport function AdvancedStringFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: AdvancedStringFilter | null,\n  setFilterValue: (updater: (currentValue: AdvancedStringFilter | null) => AdvancedStringFilter | null) => void\n}) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    inputRef.current?.focus()\n    inputRef.current?.select()\n  }, [])\n\n  const setFilterType = (type: AdvancedStringFilter[\"type\"]) => {\n    props.setFilterValue(currentValue => ({\n      type,\n      filter: currentValue?.filter ?? '',\n      caseSensitive: currentValue?.caseSensitive ?? false\n    }))\n  }\n\n  const setFilterString = (value: string) => {\n    props.setFilterValue(currentValue => ({\n      type: currentValue?.type ?? 'startsWith',\n      filter: value,\n      caseSensitive: currentValue?.caseSensitive ?? false\n    }))\n  }\n\n  return (\n    <>\n      <div>\n        <Select value={props.filterValue?.type || \"startsWith\"}\n                onValueChange={value => setFilterType(value as AdvancedStringFilter[\"type\"])}>\n          <SelectTrigger className=\"w-100\">\n            <SelectValue placeholder=\"Select criteria\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectGroup>\n              <SelectLabel>Criteria</SelectLabel>\n              <SelectItem value=\"exact\">Exact</SelectItem>\n              <SelectItem value=\"includes\">Includes</SelectItem>\n              <SelectItem value=\"startsWith\">Starts with</SelectItem>\n              <SelectItem value=\"endsWith\">Ends with</SelectItem>\n            </SelectGroup>\n          </SelectContent>\n        </Select>\n      </div>\n      <div>\n        <Input\n          ref={inputRef}\n          placeholder={`Enter filter...`}\n          value={props.filterValue?.filter || \"\"}\n          onChange={e => setFilterString(e.currentTarget.value)}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n    </>\n  )\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    advancedStringFilterFn: FilterFn<unknown>\n  }\n}\n","import React, { useEffect, useRef } from \"react\"\nimport { Input } from \"../../../ui-primitives/input\"\nimport { Column, RowData, Row, FilterMeta, FilterFn } from \"@tanstack/react-table\"\nimport { Label } from \"../../../ui-primitives/label\"\n\nexport type NumberRangeFilter = {\n  min: number | null\n  max: number | null\n}\n\nexport function numberRangeFilterFn<TData extends RowData>(row: Row<TData>, columnId: string, filterValue: NumberRangeFilter | null, addMeta: (meta: FilterMeta) => void) {\n  if (!filterValue) return true\n\n  const valueAsNumber = parseFloat(row.getValue(columnId))\n\n  if (filterValue.min && filterValue.max) {\n    return valueAsNumber >= filterValue.min && valueAsNumber <= filterValue.max\n  } else if (filterValue.min) {\n    return valueAsNumber >= filterValue.min\n  } else if (filterValue.max) {\n    return valueAsNumber <= filterValue.max\n  } else {\n    return true\n  }\n}\n\nexport function NumberRangeFilterInputs(props: {\n  column: Column<any, unknown>,\n  filterValue: NumberRangeFilter | null,\n  setFilterValue: (updater: (currentValue: NumberRangeFilter | null) => NumberRangeFilter | null) => void\n}) {\n  const inputRef = useRef<HTMLInputElement>(null)\n  useEffect(() => {\n    inputRef.current?.focus()\n    inputRef.current?.select()\n  }, [])\n\n  const setFilterMin = (min: number | null) => {\n    props.setFilterValue(currentValue => ({\n      min,\n      max: currentValue?.max ?? null\n    }))\n  }\n\n  const setFilterMax = (max: number | null) => {\n    props.setFilterValue(currentValue => ({\n      min: currentValue?.min ?? null,\n      max\n    }))\n  }\n\n  return (\n    <div className=\"grid gap-2\">\n      <div>\n        <Label>Min</Label>\n        <Input\n          ref={inputRef}\n          type=\"number\"\n          value={props.filterValue?.min ?? \"\"}\n          max={props.filterValue?.max ?? \"\"}\n          onChange={e => {\n            const number = parseFloat(e.currentTarget.value)\n            isNaN(number) ? setFilterMin(null) : setFilterMin(number)\n          }}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n      <div>\n        <Label>Max</Label>\n        <Input\n          type=\"number\"\n          value={props.filterValue?.max ?? \"\"}\n          min={props.filterValue?.min ?? \"\"}\n          onChange={e => {\n            const number = parseFloat(e.currentTarget.value)\n            isNaN(number) ? setFilterMax(null) : setFilterMax(number)\n          }}\n          className=\"col-span-2 h-10\"\n        />\n      </div>\n    </div>\n  )\n}\n\ndeclare module '@tanstack/table-core' {\n  // noinspection JSUnusedGlobalSymbols\n  interface FilterFns {\n    numberRangeFilterFn: FilterFn<unknown>\n  }\n}\n","import * as React from \"react\"\nimport { mergeClasses } from \"../../helpers/styling\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={mergeClasses(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","import React from \"react\"\nimport { mergeClasses } from \"../../../../helpers/styling\"\nimport { usePubsub } from \"../../../../redux/pubsub\"\nimport { DynamicIcon } from \"../../../DynamicIcon\"\nimport { Input } from \"../../../ui-primitives/input\"\nimport { Modifiers } from \"../parse-table-widget-data\"\nimport { RowEditPhase } from \"../row-editor-state-management\"\nimport { WidgetColumnCellComponentReturn } from \"../TablePlusPlus\"\nimport { Textarea } from \"../../../ui-primitives/text-area\"\n\nexport function Cell(props: {\n  textContent: string\n  textColor?: string\n  modifiers: Modifiers | undefined\n  publishTopic: string | undefined | null\n  editMode: RowEditPhase\n  required: boolean\n  editable: boolean\n  inputRef: React.Ref<HTMLInputElement | HTMLAreaElement>\n  inputType?: 'text' | 'textarea'\n}): WidgetColumnCellComponentReturn {\n  const [ pubsub, publish ] = usePubsub()\n  const className = mergeClasses({ \"inline-flex align-items-center gap-2\": !!props.modifiers?.icon })\n\n  if (Boolean(props.modifiers?.icon || props.modifiers?.uri || props.modifiers?.url)) {\n    const contents = (<>\n      {props.modifiers?.icon?.name && (\n        <DynamicIcon className=\"flex-shrink\"\n          icon={props.modifiers.icon.name}\n          size={props.modifiers.icon.size}\n          color={props.modifiers.icon.color}\n        />)}\n      <span\n        className={mergeClasses({\"text-[var(--text-color)]\": Boolean(props.textColor)})}\n        style={{ '--text-color': props.textColor } as any}>\n        {props.textContent}</span>\n    </>)\n\n    if (props.modifiers?.uri && props.modifiers?.url) {\n      const isUriSelected = props.publishTopic && pubsub[props.publishTopic] === props.modifiers!.uri\n\n      return (\n        <a target=\"_blank\" rel=\"noreferrer\" href={props.modifiers.url}\n           aria-current={!!isUriSelected}\n           className={mergeClasses(className, \"[&>span]:underline hover:bg-indigo-200\", {\n            \"bg-indigo-200\": isUriSelected })}\n            onClick={e => {\n              if (!props.publishTopic) return\n              e.preventDefault()\n              e.stopPropagation()\n              publish(props.publishTopic, props.modifiers!.uri)\n        }}>\n          {contents}\n        </a>\n      )\n    }\n\n    if (props.modifiers?.uri) {\n      const isUriSelected = props.publishTopic && pubsub[props.publishTopic] === props.modifiers!.uri\n\n      return (\n        <button type=\"button\" aria-current={!!isUriSelected}\n          className={mergeClasses(className, \"[&>span]:underline text-primary font-semibold\", {\n            \"bg-indigo-200\": isUriSelected })}\n          onClick={e => {\n              e.preventDefault()\n              e.stopPropagation()\n              if (!props.publishTopic) return\n              publish(props.publishTopic, props.modifiers!.uri)\n        }}>\n          {contents}\n        </button>\n      )\n    }\n\n    if (props.modifiers?.url) return (\n      <a target=\"_blank\" rel=\"noreferrer\" href={props.modifiers.url}\n        className={mergeClasses(className, \"[&>span]:underline hover:bg-indigo-200\")}\n      >{contents}</a>\n    )\n\n    return <div className={className}>{contents}</div>\n  }\n\n  if (props.editMode === 'edit-started' && props.editable) switch (props.inputType) {\n\n    case 'text': return (\n      <Input type=\"text\"\n        className=\"bg-background invalid:!border-red-500\"\n        ref={props.inputRef as React.Ref<HTMLInputElement>}\n        required={props.required}\n        defaultValue={props.textContent}\n      />\n    )\n\n    case \"textarea\": return (\n      <Textarea\n        className=\"invalid:!border-red-500\"\n        ref={props.inputRef as React.Ref<HTMLTextAreaElement>}\n        required={props.required}\n        defaultValue={props.textContent}\n      />\n    )\n  }\n\n  return (\n    <div className={mergeClasses({\n      \"animate-pulse\": props.editMode === 'edit-request-sent'\n                    || props.editMode === 'delete-request-sent',\n    })}>\n      {props.textContent.split('\\n').map(line => (\n        <span\n          className={mergeClasses(\"block\", {\"text-[var(--text-color)]\": Boolean(props.textColor)})}\n          style={{ '--text-color': props.textColor } as any}\n          key={line}>{line}</span>\n      ))}\n    </div>\n  )\n}\n","import React from \"react\"\n\nimport { Table, Column } from \"@tanstack/react-table\"\n\nimport { Button } from \"../../../ui-primitives/button\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger\n} from \"../../../ui-primitives/popover\"\nimport { Filter } from \"lucide-react\"\nimport clsx from \"clsx\"\nimport { getFilterInputsComponent } from \"../filters/registry\"\nimport { ColumnDescription } from \"../config-options\"\n\nexport function FilterPopover<T = unknown>(props: {\n  column: Column<any, unknown>\n  columnDescription?: ColumnDescription\n  table: Table<T>\n}) {\n  const [ open, setOpen ] = React.useState(false)\n\n  const isFiltered = props.column.getFilterValue() != null\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button variant=\"ghost\" size=\"icon\" aria-label=\"Open filter dialogue\">\n          <Filter className={clsx(\"h-4 w-4\",\n            isFiltered ? \"opacity-100\": \"opacity-50\",\n            {\n              \"text-blue-800\": isFiltered\n            }\n          )} />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-80 p-0\" align=\"start\" sideOffset={2} role=\"dialog\">\n        <div className=\"p-2 text-sm bg-slate-100\">\n          <span className=\"font-medium\">Filter by:</span> {props.columnDescription?.label ?? props.column.id}\n        </div>\n        <form className=\"p-2 flex flex-col gap-2\" onSubmit={e => {\n          e.preventDefault()\n          setOpen(false)\n        }}>\n          <FilterInputsSwitch {...props} />\n          <div className=\"flex gap-2\">\n            <Button variant=\"outline\" onClick={() => props.column.setFilterValue(null)}>\n              Clear\n            </Button>\n            <Button variant=\"outline\" onClick={() => props.table.resetColumnFilters()}>\n              Clear all\n            </Button>\n            <Button variant=\"default\" type=\"submit\" className=\"flex-grow\">Ok</Button>\n          </div>\n        </form>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nfunction FilterInputsSwitch<T = unknown>(props: {\n  column: Column<any, unknown>\n  table: Table<T>\n}) {\n  const filterFn = props.column.getFilterFn()\n  const Component = filterFn ? getFilterInputsComponent(filterFn) : null\n\n  if (Component == null) {\n    return <div>Unknown filter type</div>\n  }\n\n  return <Component column={props.column}\n                    filterValue={props.column.getFilterValue()}\n                    setFilterValue={updater => props.column.setFilterValue(updater)} />\n\n}","import { WidgetColumnHeaderComponentProps } from \"../TablePlusPlus\"\nimport { Button } from \"../../../ui-primitives/button\"\nimport { mergeClasses } from \"../../../../helpers/styling\"\nimport { FilterPopover } from \"./FilterPopover\"\nimport { CaretSortIcon, CaretDownIcon, CaretUpIcon } from \"@radix-ui/react-icons\"\nimport { ColumnDescription } from \"../config-options\"\nimport { SortDirection } from \"@tanstack/table-core\"\nimport React from \"react\"\n\nexport function DataColumnHeader(props: {\n  column: WidgetColumnHeaderComponentProps['header']['column']\n  table: WidgetColumnHeaderComponentProps['table']\n} & {\n  // `columnDescription` does not belong here, but kept due to higher priorities\n  // motivation:\n  // - This component should not know about @tanstack/table's `columnDescription`\n  //   as that makes the code harder to grok\n  // - `FilterPopover` still uses `columnDescription`\n  columnDescription: ColumnDescription | undefined\n\n  title: string\n  canSort: boolean\n  canFilter: boolean\n  toggleSorting: () => void\n  isSorted: SortDirection | false\n}): React.ReactNode {\n  return (\n    <div className=\"flex align-items-center\">\n      <Button className=\"px-0\"\n              variant=\"ghost\"\n              aria-label=\"Sort\"\n              disabled={!props.canSort}\n              onClick={() => {\n                if (!props.canSort) return\n                props.toggleSorting()\n              }}>\n        {props.title}\n        {props.canSort && (\n          <>\n            {props.isSorted === false && <CaretSortIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />}\n            {props.isSorted === \"desc\" && <CaretDownIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />}\n            {props.isSorted === \"asc\" && <CaretUpIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />}\n          </>\n        )}\n      </Button>\n      {props.canFilter && (\n        <FilterPopover column={props.column}\n                        columnDescription={props.columnDescription}\n                        table={props.table} />\n      )}\n    </div>\n  )\n}\n","import { WidgetColumn, WidgetRow } from \"../TablePlusPlus\"\nimport { getFilterNameByDataType } from \"../filters/registry\"\nimport { ModifiersRow } from \"../parse-table-widget-data\"\nimport { SortingFn } from \"@tanstack/react-table\"\nimport { parseISO } from \"date-fns\"\nimport { TablePlusPlusConfigOptions } from \"../config-options\"\nimport { Cell } from \"../components/Cell\"\nimport { DataColumnHeader } from \"../components/DataColumnHeader\"\nimport { TableppDataColumnConfig } from \"../config-schema\"\n\nexport function createDataColumn(\n  columnId: string,\n  dataTypeUri: string | null,\n  modifiersRows: ModifiersRow[],\n  columnConfig: TableppDataColumnConfig | undefined,\n  config: TablePlusPlusConfigOptions\n): WidgetColumn {\n  return {\n    accessorKey: columnId,\n    header: (props) => (\n      <DataColumnHeader\n        column={props.column}\n        columnDescription={columnConfig}\n        table={props.table}\n        title={columnConfig?.label ?? columnId}\n        canSort={props.column.getCanSort()}\n        canFilter={props.column.getCanFilter()}\n        toggleSorting={() => props.column.toggleSorting(undefined, props.column.getCanMultiSort())}\n        isSorted={props.column.getIsSorted()}\n      />\n    ),\n    cell: (props) => {\n      const cellValue = props.row.getEditFieldValue(columnId) || props.row.getValue(columnId)\n      const required = Boolean(columnConfig?.editable?.whenEmptyField === 'disallow' && cellValue != null)\n      const modifiers = modifiersRows[props.row.index][props.cell.column.id]\n\n      return (\n        <Cell\n          inputType={columnConfig?.editable?.componentType}\n          textContent={convertValueToString(cellValue)}\n          textColor={modifiers?.text?.color}\n          editable={Boolean(config.custom?.rowEditor?.enabled && columnConfig?.editable?.enabled)}\n          required={required}\n          modifiers={modifiers}\n          publishTopic={columnConfig?.publishTopic || config.publishVariable}\n          editMode={props.row.getEditPhase()}\n          inputRef={props.row.getEditFieldRef(columnId)}\n        />\n      )\n    },\n    filterFn: getFilterNameByDataType(dataTypeUri),\n    sortingFn: getSortingFnByDataType(dataTypeUri),\n    enableHiding: true,\n    enableColumnFilter: columnConfig?.filterable ?? true,\n    enableSorting: columnConfig?.sortable ?? true,\n    width: columnConfig?.width\n  }\n}\n\nfunction convertValueToString(value: unknown) {\n  if (value == null) return ''\n  return String(value)\n}\n\nfunction getSortingFnByDataType(dataTypeUri: string | null): SortingFn<WidgetRow> {\n  switch (dataTypeUri) {\n    case \"http://www.w3.org/2001/XMLSchema#double\":\n    case \"http://www.w3.org/2001/XMLSchema#float\":\n    case \"http://www.w3.org/2001/XMLSchema#decimal\":\n    case \"http://www.w3.org/2001/XMLSchema#integer\":\n      return (rowA, rowB, columnId) => {\n        const a = parseFloat(rowA.getValue(columnId))\n        const b = parseFloat(rowB.getValue(columnId))\n        return a - b\n      }\n\n    case \"http://www.w3.org/2001/XMLSchema#boolean\":\n      return (rowA, rowB, columnId) => {\n        const a = parseBoolAsSortableNum(rowA.getValue(columnId))\n        const b = parseBoolAsSortableNum(rowB.getValue(columnId))\n        return a - b\n      }\n\n    case \"http://www.w3.org/2001/XMLSchema#date\":\n    case \"http://www.w3.org/2001/XMLSchema#dateTime\":\n      return (rowA, rowB, columnId) => {\n        const a = parseISO(rowA.getValue(columnId))\n        const b = parseISO(rowB.getValue(columnId))\n        return (new Date(a)).getTime() - (new Date(b)).getTime()\n      }\n\n    case \"http://www.w3.org/2001/XMLSchema#string\":\n    default:\n      return (rowA, rowB, columnId) => {\n        const a = String(rowA.getValue(columnId))\n        const b = String(rowB.getValue(columnId))\n        return a.localeCompare(b)\n      }\n  }\n\n  // Non-booleans (e.g. empty values) come last\n  function parseBoolAsSortableNum(str: string) {\n    if (str === \"false\") return 0\n    if (str === \"true\") return 1\n    return 2\n  }\n}\n","import {Button} from \"../../../ui-primitives/button\"\nimport {mergeClasses} from \"../../../../helpers/styling\"\nimport {DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger} from \"../../../ui-primitives/dropdown-menu\"\nimport {DynamicIcon} from \"../../../DynamicIcon\"\nimport {Popover, PopoverTrigger, PopoverContent, PopoverClose} from \"../../../ui-primitives/popover\"\nimport {Dialog, DialogClose, DialogContent, DialogTrigger} from '../../../ui-primitives/dialog'\nimport React from \"react\"\nimport {TableppAction, TableppActionColumnConfig} from \"../config-schema\"\n\nexport function DropdownToolButton(props: {\n  title: string | undefined\n  subButtons: TableppActionColumnConfig['buttons']\n  executeActions: (actions: TableppAction[]) => void\n}) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild onClick={e => e.stopPropagation()}>\n        <Button variant=\"ghost\" className={mergeClasses(\"h-8 w-8 p-0\")}>\n          <span className={mergeClasses(\"sr-only\")}>Open menu</span>\n          <DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon=\"radix-dots-horizontal\" />\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        {props.subButtons.map((subBtn, idx) => {\n          if (subBtn.confirmation) return (\n            <Dialog key={idx}>\n              <DialogTrigger asChild>\n                <DropdownMenuItem className=\"flex gap-2\" onSelect={e => e.preventDefault()}>\n                  {subBtn.icon && <DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon={subBtn.icon} />}\n                  {subBtn.label ? subBtn.label : null}\n                </DropdownMenuItem>\n              </DialogTrigger>\n              <DialogContent className=\"flex flex-col gap-2\" onFocusOutside={e => e.preventDefault()}>\n                {subBtn.confirmation.message}\n                <div className=\"flex flex-row justify-center\">\n                  <DialogClose asChild><BaseToolButton\n                    title={subBtn.label} style={{color: subBtn.confirmation.yesColor || '#78c1a3'}}\n                    icon={subBtn.confirmation.yesIcon || 'radix-check'}\n                    onClick={() => subBtn.actions && props.executeActions(subBtn.actions)}\n                  /></DialogClose>\n                  <DialogClose asChild><BaseToolButton\n                    title={props.title}\n                    style={{color: subBtn.confirmation.noColor || '#f38989'}}\n                    icon={subBtn.confirmation.noIcon || 'radix-cross-2'}\n                  /></DialogClose>\n                </div>\n              </DialogContent>\n            </Dialog>\n          )\n\n          return (\n            <DropdownMenuItem key={idx} className=\"flex gap-2\"\n              onClick={() => subBtn.actions && props.executeActions(subBtn.actions)}\n            >\n              {subBtn.icon && (<DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon={subBtn.icon} />)}\n              {subBtn.label ? subBtn.label : null}\n            </DropdownMenuItem>\n          )\n\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n\nexport function ToolButtonWithPopover(props: {\n  title: string | undefined\n  icon: string | undefined\n  type: BaseToolButtonProps['type']\n  actions: TableppAction[] | undefined\n  executeActions: (actions: TableppAction[]) => void\n  confirmationMessage: string\n  yesIcon?: string, noIcon?: string\n  yesColor?: string, noColor?: string\n}) {\n  return (\n    <Popover>\n      <PopoverTrigger\n        asChild\n        onClick={e => e.stopPropagation()}>\n        <BaseToolButton title={props.title} icon={props.icon} />\n      </PopoverTrigger>\n      <PopoverContent className=\"flex flex-col w-fit text-center p-3 gap-2\">\n        {props.confirmationMessage}\n        <div className=\"flex flex-row justify-center\">\n          <PopoverClose asChild><BaseToolButton\n            title={props.title}\n            style={{color: props.yesColor || '#78c1a3'}}\n            type={props.type}\n            onClick={e => { e.stopPropagation(); if (props.actions) props.executeActions(props.actions) }}\n            icon={props.yesIcon || 'radix-check'}\n          /></PopoverClose>\n          <PopoverClose asChild><BaseToolButton\n            title={props.title}\n            style={{color: props.noColor || '#f38989'}}\n            onClick={e => e.stopPropagation() }\n            icon={props.noIcon || 'radix-cross-2'}\n          /></PopoverClose>\n        </div>\n      </PopoverContent>\n    </Popover>\n  )\n\n}\n\nexport function ToolButton(props: {\n  title: string | undefined\n  icon: string | undefined\n  type: BaseToolButtonProps['type']\n  actions: TableppAction[] | undefined\n  executeActions: (actions: TableppAction[]) => void\n}) {\n  return (\n    <BaseToolButton title={props.title} icon={props.icon}\n      onClick={e => { e.stopPropagation(); if (props.actions) props.executeActions(props.actions) }}\n      type={props.type}\n    />\n  )\n}\n\n\ntype BaseToolButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {icon?: string}\nconst BaseToolButton = React.forwardRef<HTMLButtonElement, BaseToolButtonProps>((props, ref) => {\n  return (\n    <Button ref={ref} variant=\"ghost\" className=\"h-8 w-8 p-0\" {...props}>\n      {props.icon && (<DynamicIcon className={mergeClasses(\"h-4 w-4\")} icon={props.icon} />)}\n    </Button>\n  )\n})\nBaseToolButton.displayName = 'BaseToolButton'\n","import { WidgetColumn, WidgetColumnCellComponentProps, WidgetColumnCellComponentReturn } from \"../TablePlusPlus\"\nimport { Button } from \"../../../ui-primitives/button\"\nimport { mergeClasses } from \"../../../../helpers/styling\"\nimport { Icon } from \"../../Icon\"\nimport { resolveTemplateString, resolveTemplateStringAndLogErrors } from \"../../../../helpers/resolve-template-string\"\nimport { runStartRule } from \"../../../../helpers/run-start-rule\"\nimport { useMutation } from \"@tanstack/react-query\"\nimport { timestamp } from \"../../../../helpers/PublishUtils\"\nimport { getPubsub, publish, PublishedDict } from \"../../../../redux/pubsub\"\nimport { toast } from \"react-toastify\"\nimport axios from \"axios\"\nimport { z } from \"zod\"\nimport { fallbackMessage, TablePlusPlusCustomConfig, TableppAction, TableppActionColumnConfig } from \"../config-schema\"\nimport { DropdownToolButton, ToolButton, ToolButtonWithPopover } from \"../components/ToolButton\"\n\ntype RowResults = Record<string, string>\ntype RowUpdatePayload = z.infer<typeof rowUpdatePayloadSchema>\n\nconst tripleUpdatePayloadSchema = z.object({\n  graph: z.string().nonempty(),\n  subject: z.string().nonempty(),\n  predicate: z.string().nonempty(),\n  object: z.object({\n    value: z.string(),\n    type: z.string().nonempty(),\n    dataType: z.string().nonempty(),\n  })\n})\n\nconst rowUpdatePayloadSchema = z.object({\n  updates: z.array(tripleUpdatePayloadSchema),\n  delete: z.array(tripleUpdatePayloadSchema),\n})\n\nexport function createToolButtonsColumn(\n  id: string,\n  queryResults: Record<string, string>[],\n  columnConfig: TableppActionColumnConfig,\n  customConfig?: null | TablePlusPlusCustomConfig,\n): WidgetColumn {\n  return {\n    id,\n    header: columnConfig.label || \"\",\n    enableHiding: false,\n    cell: ToolButtons,\n    width: columnConfig.width\n  }\n\n  function ToolButtons({ row }: WidgetColumnCellComponentProps): WidgetColumnCellComponentReturn {\n\n    const mutation = useMutation({\n      mutationFn: async (actions: TableppAction[]) => {\n        try {\n          for (const action of actions) await dispatchAction(row, queryResults, action, customConfig)\n        } catch (e) {\n          console.error(e)\n        }\n      }\n    })\n\n    if (mutation.isPending) {\n      return (\n        <Button variant=\"ghost\" disabled className={mergeClasses(\"h-8 w-8 p-0\")}>\n          <Icon icon=\"spinner\" spin />\n        </Button>\n      )\n    }\n\n    return (\n      <div className=\"flex flex-row\">\n        {columnConfig.buttons?.filter(b => !shouldHideButton(b, row, queryResults)).map((btn, idx) => {\n\n          if (btn.buttons) {\n            const subButtons = btn.buttons.filter(b => !shouldHideButton(b, row, queryResults))\n            return (\n              <DropdownToolButton key={idx}\n                title={btn.label}\n                subButtons={subButtons}\n                executeActions={mutation.mutate}\n              />\n            )\n\n          } else {\n            const shouldTriggerFormValidation = btn.actions?.some(action => action.type === 'send-row-edit-request')\n\n            if (btn.confirmation) return (\n              <ToolButtonWithPopover\n                key={idx} type={shouldTriggerFormValidation ? \"submit\" : \"button\"}\n                icon={btn.icon} title={btn.label}\n                actions={btn.actions} executeActions={mutation.mutate}\n                confirmationMessage={btn.confirmation.message || 'are you sure?'}\n                yesIcon={btn.confirmation.yesIcon || 'radix-check'}\n                noIcon={btn.confirmation.noIcon || 'radix-cross-2'}\n                yesColor={btn.confirmation.yesColor || '#78c1a3'}\n                noColor={btn.confirmation.noColor || '#f38989'}\n              />\n            )\n\n            return (\n              <ToolButton key={idx} type={shouldTriggerFormValidation ? \"submit\" : \"button\"}\n                icon={btn.icon} title={btn.label}\n                actions={btn.actions} executeActions={mutation.mutate}\n              />\n            )\n          }\n        })}\n      </div>\n    )\n  }\n}\n\nfunction evaluateButtonHidingExpression(expression: string | boolean | undefined, rowAndAppVars: PublishedDict): boolean {\n  if (typeof expression === 'boolean') return expression\n  if (!expression) return false\n  try {\n    const resolvedValue = resolveTemplateStringAndLogErrors(expression, rowAndAppVars)\n    if (resolvedValue.toLowerCase() === 'true') return true\n    if (resolvedValue.toLowerCase() === 'false') return false\n    if (resolvedValue === '') return false\n    return true\n  } catch (e) {\n    console.error('Error evaluating table++ action column button hiding expression:', e)\n    return false\n  }\n}\n\nfunction shouldHideButton(\n  btn: TableppActionColumnConfig['buttons'][number],\n  row: WidgetColumnCellComponentProps['row'],\n  queryResults: Record<string, string>[]\n): boolean {\n\n  const rowResults = getRowResults(row, queryResults)\n  const rowAndAppVars = { ...getPubsub(), rowId: row.id, ...rowResults}\n  if (btn.hidden && evaluateButtonHidingExpression(btn.hidden, rowAndAppVars)) return true\n\n  return btn.actions?.some(action => {\n    const editPhase = row.getEditPhase()\n    if (action.type === 'start-row-edit' && editPhase !== 'edit-inactive') return true\n    if (action.type === 'cancel-row-edit' && editPhase !== 'edit-started') return true\n    if (action.type === 'send-row-edit-request' && editPhase !== 'edit-started') return true\n    if (action.type === 'send-row-delete-request' && editPhase === 'edit-started') return true\n    return false\n  }) ?? false\n}\n\nasync function dispatchAction(\n  row: WidgetColumnCellComponentProps['row'],\n  queryResults: Record< string, string>[],\n  action: TableppAction,\n  customConfig?: null | TablePlusPlusCustomConfig,\n) {\n  if (!customConfig) throw new Error('dev spaghetti')\n\n  const rowResults = getRowResults(row, queryResults)\n  const rowAndAppVars = { ...getPubsub(), rowId: row.id, ...rowResults}\n  const resolveValue = (template: string) => resolveTemplateStringAndLogErrors(template, rowAndAppVars)\n\n  let success: boolean\n  switch(action.type) {\n\n    case 'publish': {\n      try {\n        const resolvedValue = resolveTemplateString(action.value, rowAndAppVars)\n        publish(action.topic, resolvedValue)\n        success = true\n      } catch(e) {\n        success = false\n        console.error(e)\n      }\n      break\n    }\n\n    case 'start-rule':\n      try {\n        await runStartRule(action.startRule, action.parameters ? JSON.stringify(action.parameters) : null,\n                          {rowId: row.id, ...rowResults})\n        timestamp(publish, action.timestampVariable, rowAndAppVars)\n        success = true\n      } catch(e) {\n        success = false\n        // console.error(e) //this is commented out because descendant function logs errors\n      }\n      break\n\n    case 'start-row-edit':\n      row.startEditing()\n      success = true //at time of writing, this operation could not fail\n      break\n\n    case 'cancel-row-edit':\n      row.cancelEditing()\n      success = true //at time of writing, this operation could not fail\n      break\n\n    case 'send-row-edit-request': {\n      const editState = row.getEditState()\n      if (editState?.phase !== 'edit-started') throw new Error(\"dev spaghetti\")\n\n      const edit = makeEditPayload(customConfig, rowResults, rowAndAppVars, row.getEditFieldValue)\n      success = await row.sendEditRequest(edit.values, () =>\n        axios.post('/servlets/cgi/api/data-update', edit.payload))\n      timestamp(publish, action.timestampVariable, rowAndAppVars)\n      setTimeout(() => row.acknowledgeEditResponse(), 3000)\n      break\n    }\n\n    case 'send-row-delete-request': {\n      const deletePayload = makeDeletePayload(customConfig, rowResults, rowAndAppVars)\n      success = await row.sendDeleteRequest(() =>\n        axios.post('/servlets/cgi/api/data-update', deletePayload))\n      timestamp(publish, action.timestampVariable, rowAndAppVars)\n      setTimeout(() => row.acknowledgeEditResponse(), 3000)\n      break\n    }\n\n  }\n\n  if (action.notification) return toast(success\n    ? resolveValue(action.notification?.onSuccess || fallbackMessage[action.type].onSuccess)\n    : resolveValue(action.notification?.onFailure || fallbackMessage[action.type].onFailure))\n}\n\nfunction getRowResults(row: WidgetColumnCellComponentProps['row'], queryResults: Record<string, string>[]) {\n  const rowIndex = parseInt(row.id)\n  if (isNaN(rowIndex)) throw new Error(\"Expected rowId to be a number, was \" + row.id)\n  return queryResults[rowIndex]\n\n}\n\nfunction makeEditPayload(\n  customConfig: TablePlusPlusCustomConfig,\n  rowResults: RowResults,\n  rowAndAppVars: PublishedDict,\n  getEditValue: (columnId: string) => string,\n): {values: Record<string, string>, payload: RowUpdatePayload} {\n  if (!customConfig?.rowEditor?.enabled) throw new Error('something went wrong')\n\n  const resolveValue = (template: string) => resolveTemplateStringAndLogErrors(template, rowAndAppVars)\n  const payload: RowUpdatePayload = { updates: [], delete: [] }\n  const defaultGraph = resolveValue(customConfig.rowEditor.graph)\n  const values: Record<string, string> = {}\n\n  for (const column of customConfig?.columnConfigs ?? []) {\n    if (!('editable' in column && column.editable?.enabled)) continue\n\n    const value = getEditValue(column.id)\n    values[column.id] = value\n    if (!value && column.editable.whenEmptyField === 'disallow') {\n      if (rowResults[column.id] == null) continue // because optional query-params have value `undefined`\n      throw new Error('edit not allowed for empty field as per config')\n    }\n\n    const tripleMod = {\n      graph: column.editable.graph ? resolveValue(column.editable.graph) : defaultGraph,\n      subject: resolveValue(column.editable.subject),\n      predicate: resolveValue(column.editable.predicate),\n      object: {type: 'literal', value,\n                dataType: resolveValue(column.editable.objectType)}}\n\n    if (!value.length && column.editable.whenEmptyField === 'remove-triple') {\n      payload.delete.push(tripleMod)\n    } else payload.updates.push(tripleMod)\n  }\n\n  return {values, payload: rowUpdatePayloadSchema.parse(payload)}\n}\n\nfunction makeDeletePayload(\n  customConfig: TablePlusPlusCustomConfig,\n  rowResults: RowResults,\n  rowAndAppVars: PublishedDict\n): RowUpdatePayload {\n  if (!customConfig?.rowEditor?.enabled) throw new Error('something went wrong')\n\n  const resolveValue = (template: string) => resolveTemplateStringAndLogErrors(template, rowAndAppVars)\n  const payload: RowUpdatePayload = { updates: [], delete: [] }\n  const defaultGraph = resolveValue(customConfig.rowEditor.graph)\n\n  for (const column of customConfig?.columnConfigs ?? []) {\n    if (!('editable' in column && column.editable?.enabled)) continue\n\n    const value = rowResults[column.id]\n    if (value == null) continue // because optional query-params have value `undefined`\n\n    const tripleMod = {\n      graph: column.editable.graph ? resolveValue(column.editable.graph) : defaultGraph,\n      subject: resolveValue(column.editable.subject),\n      predicate: resolveValue(column.editable.predicate),\n      object: {type: 'literal', value,\n                dataType: resolveValue(column.editable.objectType)}}\n      payload.delete.push(tripleMod)\n  }\n\n  return rowUpdatePayloadSchema.parse(payload)\n}\n","import { OpaqueSparqlResults } from \"../../../helpers/sparqlResultHelpers\"\nimport { WidgetRow, WidgetColumn } from \"./TablePlusPlus\"\nimport { ColumnDef } from \"@tanstack/react-table\"\nimport { TablePlusPlusConfigOptions } from \"./config-options\"\nimport { createDataColumn } from \"./columns/data-column\"\nimport { createToolButtonsColumn } from \"./columns/tool-buttons-column\"\n\nexport type Modifiers = {\n  uri?: string\n  url?: string\n  icon?: IconModifier\n  text?: TextModifier\n}\n\nexport type IconModifier = {\n  name?: string\n  color?: string\n  size?: string\n}\n\nexport type TextModifier = {\n  color?: string\n}\n\ntype ColumnId = string\n\nexport type ModifiersRow = Record<ColumnId, Modifiers | undefined>\n\nexport function parseTableWidgetData(data: OpaqueSparqlResults, config: TablePlusPlusConfigOptions) {\n  const columnConfigs = config.custom?.columnConfigs ?? []\n  const globalFilterColumnIds = config.idToFilterTextOf\n    ? new Set(config.idToFilterTextOf.split(','))\n    : null\n\n  const columnInfoByVarName: Record<string, ColumnInfo> = {}\n  const dataColumns: WidgetColumn[] = []\n  const dataColumnsById: Record<string, ColumnDef<WidgetRow>> = {}\n  const hiddenColumns = new Set<string>()\n  const modifiersRows: ModifiersRow[] = []\n  const dataRows: Record<string, string>[] = []\n  const columnModifiers: Record<string, string[]> = {}\n\n  for (const varName of data.head.vars) {\n    const column = getColumnInfo(varName)\n    columnInfoByVarName[varName] = column\n    if (column.modifier) {\n      if (!columnModifiers[column.id]) columnModifiers[column.id] = []\n      columnModifiers[column.id].push(column.modifier)\n      continue\n    }\n\n    const dataTypeUri = getUniqueColumnDataTypeUri(column.id, data)\n    const columnIdx = columnConfigs.findIndex(colDesc => colDesc.id === column.id)\n    if (columnIdx === -1) continue\n\n    const columnDescription = columnConfigs[columnIdx]\n    if ('buttons' in columnDescription) continue\n\n    const dataColumn = createDataColumn(column.id, dataTypeUri, modifiersRows, columnDescription, config)\n    dataColumn.width = columnDescription?.width\n    dataColumns[columnIdx] = dataColumn\n    dataColumnsById[column.id] = dataColumn\n    dataColumn.enableGlobalFilter = globalFilterColumnIds === null || globalFilterColumnIds.has(column.id)\n  }\n\n  for (const binding of data.results.bindings) {\n    const row: Record<string, string> = {}\n    const modifiersRow: ModifiersRow = {}\n    for (const varName in binding) {\n      const column = columnInfoByVarName[varName]\n      if (varName in dataColumnsById) {\n        row[varName] = binding[varName].value\n      }\n\n      if (column.modifier) {\n        addModifier(modifiersRow, column, binding[varName].value)\n      }\n    }\n\n    dataRows.push(row)\n    modifiersRows.push(modifiersRow)\n  }\n\n\n  const rawDataRows = data.results.bindings.map(binding => {\n    const rawDataRow: Record<string, string> = {}\n    for (const key in binding) rawDataRow[key] = binding[key].value\n    return rawDataRow\n  })\n  columnConfigs.forEach((columnDescription, i) => {\n    const id = columnDescription.id\n    if (id in dataColumnsById) return\n    if (!('buttons' in columnDescription)) return\n    dataColumns[i] = createToolButtonsColumn(id, rawDataRows, columnDescription, config.custom)\n  })\n\n  return {\n    dataIds: new Set(Object.keys(dataColumnsById)),\n    dataColumns,\n    dataRows,\n    hiddenColumns\n  }\n\n  function addModifier(modifiersRow: ModifiersRow, column: ColumnInfo, value: string) {\n    if (!(column.id in modifiersRow)) {\n      modifiersRow[column.id] = {}\n    }\n    const modifiers = modifiersRow[column.id]!\n\n    switch (column.modifier) {\n      case \"icon\":\n        if (!modifiers.icon) modifiers.icon = {}\n        modifiers.icon.name = value\n        break\n      case \"iconsize\":\n        if (!modifiers.icon) modifiers.icon = {}\n        modifiers.icon.size = value\n        break\n      case \"iconcolor\":\n        if (!modifiers.icon) modifiers.icon = {}\n        modifiers.icon.color = value\n        break\n      case \"uri\":\n        modifiers.uri = value\n        break\n      case \"url\":\n        modifiers.url = value\n        break\n      case \"textcolor\":\n        if (!modifiers.text) modifiers.text = {}\n        modifiers.text.color = value\n        break\n      default:\n        console.warn(`Unrecognized Table++ modifier: ${column.modifier}`)\n    }\n  }\n}\n\ntype ColumnInfo = ReturnType<typeof getColumnInfo>\n\nfunction getColumnInfo(varName: OpaqueSparqlResults['head']['vars'][number]) {\n  type RegexpMatch = null | {groups: {id: string, modifier?: string}}\n  const regexp = /(?<id>[a-zA-Z0-9]+)(_(?<modifier>[a-zA-Z0-9]+))?/\n  const match = varName.match(regexp) as RegexpMatch\n\n  if (!match?.groups) throw new Error(`unable to parse data.head.vars: ${varName}`)\n  return {\n    id: match.groups.id,\n    modifier: match.groups.modifier ? match.groups.modifier.toLowerCase() : null\n  }\n}\n\nfunction getUniqueColumnDataTypeUri(columnKey: string, data: OpaqueSparqlResults) {\n  const dataTypeSet = new Set<string>()\n  for (const binding of data.results.bindings) {\n    if (!(columnKey in binding)) continue\n    const data = binding[columnKey]\n    dataTypeSet.add((data as any)[\"datatype\"])\n  }\n\n  if (dataTypeSet.size !== 1) return null\n  return [ ...dataTypeSet ][0]\n}\n\n","import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { mergeClasses } from \"../../helpers/styling\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={mergeClasses(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={mergeClasses(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={mergeClasses(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n                          className,\n                          isActive,\n                          size = \"icon\",\n                          children,\n                          ...props\n                        }: PaginationLinkProps) => (\n  <a\n    data-active={String(isActive)}\n    aria-current={isActive ? \"page\" : undefined}\n    aria-label=\"Select page\"\n    className={mergeClasses(\n      \"hover:no-underline cursor-pointer\",\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  >{children}</a>\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n                              className,\n                              ...props\n                            }: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={mergeClasses(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n                          className,\n                          ...props\n                        }: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={mergeClasses(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n                              className,\n                              ...props\n                            }: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={mergeClasses(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}","import {\n  Pagination, PaginationContent, PaginationEllipsis, PaginationItem,\n  PaginationLink, PaginationNext, PaginationPrevious\n} from \"../../../ui-primitives/pagination\"\n\nexport function PaginationControls(props: {\n  pageCount: number\n  pageIndex: number\n  setPageIndex: (i: number) => void\n  hasPreviousPage: boolean\n  goToPreviousPage: () => void\n  hasNextPage: boolean\n  goToNextPage: () => void\n}) {\n  const totalPages = props.pageCount\n  const pageIndex = props.pageIndex\n\n  const maxPageNumbers = 7\n\n  const halfMaxPageNumbers = Math.floor(maxPageNumbers / 2)\n  const startPage = pageIndex >= totalPages - halfMaxPageNumbers - 1\n    ? Math.max(0, totalPages - maxPageNumbers)\n    : Math.max(0, pageIndex - halfMaxPageNumbers)\n  const endPage = pageIndex <= halfMaxPageNumbers\n    ? Math.min(maxPageNumbers - 1, totalPages - 1)\n    : Math.min(pageIndex + halfMaxPageNumbers, totalPages - 1)\n\n  const pages = []\n\n  const createPageButton = (page: number) => (\n    <PaginationItem key={page}>\n      <PaginationLink href=\"#\"\n                      onClick={() => props.setPageIndex(page)}\n                      isActive={pageIndex === page}>\n        {page + 1}\n      </PaginationLink>\n    </PaginationItem>\n  )\n\n  if (startPage > 0) {\n    pages.push(createPageButton(0))\n    if (startPage > 1) pages.push(<PaginationEllipsis />)\n  }\n\n  for (let i = startPage; i <= endPage; i++) {\n    pages.push(createPageButton(i))\n  }\n\n  if (endPage < totalPages - 1) {\n    if (endPage < totalPages - 2) pages.push(<PaginationEllipsis />)\n    pages.push(createPageButton(totalPages - 1))\n  }\n\n  return (\n    <Pagination>\n      <PaginationContent>\n        <PaginationItem>\n          <PaginationPrevious href=\"#\"\n                              onClick={() => props.goToPreviousPage()}\n                              isActive={props.hasPreviousPage} />\n        </PaginationItem>\n        {pages}\n        <PaginationItem>\n          <PaginationNext href=\"#\"\n                          onClick={() => props.goToNextPage()}\n                          isActive={props.hasNextPage} />\n        </PaginationItem>\n      </PaginationContent>\n    </Pagination>\n  )\n}","import * as React from 'react'\nimport clsx from 'clsx'\nimport { TablePlusPlusConfigOptions } from \"./config-options\"\nimport {BaseWidgetProps, SparqlWidgetProps} from '../../../helpers/widget'\n\nimport {mergeClasses} from '../../../helpers/styling'\n\nimport {Row, ColumnDef, ColumnFiltersState, PaginationState, SortingState, VisibilityState,\n        flexRender, getCoreRowModel, getFilteredRowModel, getPaginationRowModel,\n        getSortedRowModel, useReactTable, RowData} from \"@tanstack/react-table\"\n\nimport {ChevronDownIcon} from '@radix-ui/react-icons'\n\nimport {Table, TableBody, TableCell, TableHead, TableHeader, TableFooter, TableRow, TableColGroup, TableCol} from '../../ui-primitives/table'\nimport {DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuTrigger} from '../../ui-primitives/dropdown-menu'\nimport {Button} from '../../ui-primitives/button'\nimport {Checkbox} from '../../ui-primitives/checkbox'\nimport {Input} from '../../ui-primitives/input'\nimport { getFilterFns } from \"./filters/registry\"\nimport { parseTableWidgetData } from \"./parse-table-widget-data\"\nimport PublishUtils from \"../../../helpers/PublishUtils\"\nimport { useDependentState } from \"../../../hooks/use-dependent-state\"\nimport { PaginationControls } from './components/PaginationControls'\nimport { useRowEditor } from './row-editor-state-management'\n\ndeclare module \"@tanstack/react-table\" {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface ColumnDefBase<TData extends RowData, TValue = unknown> {\n    width?: string\n  }\n}\n\nexport type WidgetRow = Record<string, any>\nexport type WidgetColumn = ColumnDef<WidgetRow>\n\nexport type WidgetColumnHeaderComponent = Exclude<NonNullable<WidgetColumn['header']>, string>\nexport type WidgetColumnHeaderComponentProps = Parameters<WidgetColumnHeaderComponent>[0]\nexport type WidgetColumnHeaderComponentReturn = ReturnType<WidgetColumnHeaderComponent>\n\nexport type WidgetColumnCellComponent = Exclude<NonNullable<WidgetColumn['cell']>, string>\nexport type WidgetColumnCellComponentProps = Parameters<WidgetColumnCellComponent>[0]\nexport type WidgetColumnCellComponentReturn = ReturnType<WidgetColumnCellComponent>\n\n\ntype Props = BaseWidgetProps\n           & SparqlWidgetProps\n           & TablePlusPlusConfigOptions\n\nconst TABLE_DATA_PLACEHOLDER = {dataIds: new Set<string>(), dataColumns: [], dataRows: [], hiddenColumns: new Set<string>()}\nconst DEFAULT_COLUMN_WIDTH = \"auto\"\n\nexport default function TablePlusPlus(props: Props) {\n\n  const getRowValueToPublishOnSelection = (row: Row<WidgetRow>) => {\n    if (!props.variableToPublishOnSelection) return null\n    if (!props.data) return null\n\n    const values = props.data.results.bindings[row.index]\n    const value = values[props.variableToPublishOnSelection]\n    return value ? value.value : null\n  }\n\n  const publishLastSelectedRow = (row: Row<WidgetRow>) => {\n    const rowValue = getRowValueToPublishOnSelection(row)\n    if (!props.lastSelectedRowTopic) return\n    if (!rowValue) return\n    props.publish(props.lastSelectedRowTopic, rowValue)\n  }\n\n  const {dataIds, dataColumns, dataRows, hiddenColumns} = React.useMemo(() => {\n    if (!props.data) return TABLE_DATA_PLACEHOLDER\n\n    const tableData = parseTableWidgetData(props.data, props)\n    if (props.selectionMode === \"MULTIPLE\") tableData.dataColumns.unshift(createSelectionColumn(publishLastSelectedRow))\n\n    return tableData\n  }, [\n    props.data,\n    props.custom?.columnConfigs,\n    props.idToFilterTextOf,\n    props.selectionMode,\n  ])\n\n  const [pagination, setPagination] = useDependentState<PaginationState>((prevPagination) => ({\n    pageIndex: prevPagination?.pageIndex ?? 0,\n    pageSize: props.paginationPageSize ? parseInt(props.paginationPageSize) : 50\n  }), [ props.paginationPageSize ])\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [globalFilter, setGlobalFilter] = React.useState(\"\")\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({})\n  const actualColumnVisibility = React.useMemo<VisibilityState>(() => {\n    const trueVisibility = { ...columnVisibility }\n    for (const id of hiddenColumns) {\n      trueVisibility[id] = false\n    }\n    return trueVisibility\n  }, [ columnVisibility, hiddenColumns ])\n\n  const [rowSelection, setRowSelection] = React.useState({})\n  const rowEditor = useRowEditor()\n\n  const table = useReactTable({\n    _features: [rowEditor.feature],\n    data: dataRows,\n    columns: dataColumns,\n    filterFns: getFilterFns(),\n    onRowEditorChange: rowEditor.setState,\n    onPaginationChange: setPagination,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: props.paginationEnabled ? getPaginationRowModel() : undefined,\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      rowEditorState: rowEditor.state,\n      pagination,\n      sorting,\n      globalFilter,\n      columnFilters,\n      columnVisibility: actualColumnVisibility,\n      rowSelection},\n    enableMultiSort: false\n  })\n\n  const selectedRowSubscriptionValue = props.selectedRowSubscription && props.pubsub[props.selectedRowSubscription]\n  const selectedRowSubscriptionTimestamp = props.selectedRowSubscription && props.pubsub[`${props.selectedRowSubscription}Timestamp`]\n  React.useEffect(() => {\n    const rowIdToSelect = selectedRowSubscriptionValue\n      ? table.getCoreRowModel().rows.find(row => getRowValueToPublishOnSelection(row) === selectedRowSubscriptionValue)?.id\n      : null\n\n    setRowSelection(rowIdToSelect ? {\n      [rowIdToSelect]: true\n    } : {})\n  }, [ table.getCoreRowModel().rows, selectedRowSubscriptionValue, selectedRowSubscriptionTimestamp ])\n\n  const selectedRowsInPubSub = props.topicToListenToForSelectedRows ? props.pubsub[props.topicToListenToForSelectedRows] as string : null\n  React.useEffect(() => {\n    if (selectedRowsInPubSub == null) return\n\n    const values = table.getSelectedRowModel().rows\n      .map(row => getRowValueToPublishOnSelection(row) ?? null)\n      .filter(uri => uri != null) as string[]\n    const valueInPubSubFormat = PublishUtils.getListAsSingleValue(props.multipleselectparametertype, values)\n    if (selectedRowsInPubSub === valueInPubSubFormat) return\n    let newValues = []\n    try {\n      newValues = PublishUtils.parseMultiplePropValue(props.multipleselectparametertype, selectedRowsInPubSub)\n    } catch (error) {\n      console.error(`Invalid selection value: \"${selectedRowsInPubSub}\".\\n`, error)\n    }\n    const newRowSelection: Record<string, boolean> = {}\n    for (const row of table.getRowModel().rows)\n      if (newValues.includes(getRowValueToPublishOnSelection(row) ?? '')) newRowSelection[row.id] = true\n    setRowSelection(newRowSelection)\n  }, [selectedRowsInPubSub])\n\n  React.useEffect(() => {\n    if (!props.selectedRowsTopic) return\n\n    const values = table.getSelectedRowModel().rows\n      .map(row => getRowValueToPublishOnSelection(row) ?? null)\n      .filter(uri => uri != null) as string[]\n\n    const publishValue = PublishUtils.getListAsSingleValue(props.multipleselectparametertype, values)\n    if (selectedRowsInPubSub === publishValue) return\n    props.publish(props.selectedRowsTopic, publishValue)\n\n  }, [ rowSelection ])\n\n  if (props.idToFilterTextOf && dataIds.size && !dataIds.has(props.idToFilterTextOf))\n    console.error([\n      `cannot filter on \"${props.idToFilterTextOf}\"`,\n      `as we only have the following IDs available: ${[...dataIds.values()].join(', ')}`])\n\n  const columnCount = Math.max(...table.getHeaderGroups().map((headerGroup) => headerGroup.headers.length))\n\n  const buttonExportToCSV = (\n    <Button\n      className={mergeClasses(\"border\")}\n      onClick={() => {\n        const hasRowsSelected = table.getSelectedRowModel().rows.length > 0\n        const rows = hasRowsSelected ? table.getSelectedRowModel().rows : table.getCoreRowModel().rows\n        const delimiter = props.delimiterExportSelectionToCSV ?? ','\n        const fileName = props.filenameExportSelectionToCSV ?? 'export.csv'\n        const keys = dataColumns.filter((c) => (c as any).accessorKey?.length).map((c) => (c as any).accessorKey)\n        exportToCsvFile(rows.map(r => dataRows[r.index]), keys, delimiter, fileName)\n    }}>{props.labelButtonExportSelectionToCSV ?? 'Export to CSV'}</Button>\n  )\n\n  return (\n    <div className=\"w-full h-full overflow-y-auto\" style={{\n      scrollbarWidth: \"thin\"\n    }}>\n\n      {(props.showFilters || props.enableButtonExportSelectionToCsv) && (\n        <div className={mergeClasses(\"flex items-center justify-end py-2 gap-2\")}>\n          {props.showFilters && <>\n            <Input\n              type=\"search\"\n              placeholder=\"Search...\"\n              value={globalFilter}\n              onChange={e => setGlobalFilter(e.currentTarget.value)}\n              className={mergeClasses(\"flex-grow\")}\n            />\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\" className={mergeClasses(\"ml-auto\")}>\n                  Columns <ChevronDownIcon className={mergeClasses(\"ml-2 h-4 w-4\")} />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                {table\n                  .getAllColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className={mergeClasses(\"capitalize\")}\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) => column.toggleVisibility(!!value)}\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>))}\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </>}\n          {props.enableButtonExportSelectionToCsv && buttonExportToCSV}\n        </div>)}\n\n      <form onSubmit={e => e.preventDefault()}>\n        <Table className=\"rounded-md relative\">\n\n          <TableColGroup>\n            {table.getAllColumns().map((column) => (\n              <TableCol key={column.id} style={{ width: column.columnDef.width ?? DEFAULT_COLUMN_WIDTH }} />\n            ))}\n          </TableColGroup>\n\n          <TableHeader className=\"sticky top-0 bg-white\">\n            {!props.hideColumnHeaders && table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>{headerGroup.headers.map((header) => (\n                <TableHead key={header.id}>\n                  {!header.isPlaceholder &&\n                    flexRender(header.column.columnDef.header, header.getContext())}\n                </TableHead>))}\n              </TableRow>)\n            )}\n          </TableHeader>\n\n          <TableBody>\n            {!table.getRowModel().rows.length && (\n              <TableRow>\n                <TableCell colSpan={dataColumns.length} className={mergeClasses(\"h-24 text-center\")}>\n                  No results.\n                </TableCell>\n              </TableRow>)}\n            {table.getRowModel().rows.map((row) => (\n              <TableRow key={row.id}\n                        className={clsx({\n                          \"cursor-pointer hover:bg-indigo-50\": props.selectionMode === \"SINGLE\",\n                          \"!bg-indigo-100\": row.getIsSelected(),\n                          \"text-indigo-900\": row.getIsSelected(),\n                        })}\n                        data-state={row.getIsSelected() && \"selected\"}>\n                {row.getVisibleCells().map((cell) => (\n                  <TableCell key={cell.id}\n                    onClick={() => {\n                      if (props.selectionMode !== 'SINGLE') return\n                      table.setRowSelection({[row.id]: true })\n                      publishLastSelectedRow(row)\n                  }}>\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </TableCell>))}\n              </TableRow>))}\n          </TableBody>\n\n          <TableFooter>\n            <tr>\n              <td colSpan={columnCount}>\n                <div className={mergeClasses(\"flex items-center justify-end space-x-2 py-4\")}>\n                  {props.selectionMode === \"MULTIPLE\" &&\n                    <div className={mergeClasses(\"flex-1 text-sm text-muted-foreground\")}>\n                      {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n                      {table.getFilteredRowModel().rows.length} row(s) selected.\n                    </div>}\n                  {props.paginationEnabled && (\n                    <div className={mergeClasses(\"space-x-2\")}>\n                      <PaginationControls\n                        pageCount={table.getPageCount()}\n                        pageIndex={pagination.pageIndex}\n                        setPageIndex={table.setPageIndex}\n                        hasPreviousPage={table.getCanPreviousPage()}\n                        goToPreviousPage={table.previousPage}\n                        hasNextPage={table.getCanPreviousPage()}\n                        goToNextPage={table.nextPage}\n                      />\n                    </div>)}\n                </div>\n              </td>\n            </tr>\n          </TableFooter>\n\n        </Table>\n      </form>\n    </div>\n  )\n}\n\nfunction exportToCsvFile(rows: Record<string, string>[], fields: string[], delimiter: string, fileName: string){\n  const content = [\n    fields.join(delimiter),\n    ...rows\n      .map(row => fields.map(field => `\"${row[field].replaceAll('\"', '\"\"')}\"`)\n      .join(delimiter)),\n  ]\n    .join('\\n')\n  const blob = new Blob([content], { type: \"text/csv;charset=utf-8;\" })\n  const url = URL.createObjectURL(blob)\n  const link = document.createElement(\"a\")\n  link.setAttribute(\"href\", url)\n  link.setAttribute(\"download\", fileName)\n  link.click()\n  URL.revokeObjectURL(url)\n}\n\nfunction createSelectionColumn(publishLastSelectedRow: (row: Row<WidgetRow>) => void): WidgetColumn {\n  return {\n    id: \"select\",\n    header: SelectAllCheckbox,\n    cell: SelectRowCheckbox,\n    enableSorting: false,\n    enableHiding: false,\n    width: DEFAULT_COLUMN_WIDTH,\n  }\n\n  function SelectAllCheckbox({table}: WidgetColumnHeaderComponentProps): WidgetColumnCellComponentReturn {\n    return (\n      <Checkbox aria-label=\"Select all\"\n                onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n                checked={\n                  table.getIsAllPageRowsSelected() ||\n                  (table.getIsSomePageRowsSelected() && \"indeterminate\")\n                }/>)\n  }\n\n  function SelectRowCheckbox({row}: WidgetColumnCellComponentProps): WidgetColumnCellComponentReturn {\n    return (\n      <Checkbox aria-label=\"Select row\"\n                checked={row.getIsSelected()}\n                onCheckedChange={(value) => {\n                  if (value) publishLastSelectedRow(row)\n                  row.toggleSelected(!!value)\n                }} />)\n  }\n}\n","/**\n * source of inspiration:\n * https://tanstack.com/table/v8/docs/framework/react/examples/custom-features\n */\n\nimport { OnChangeFn, RowData, TableFeature, Updater, Table, makeStateUpdater, functionalUpdate, Row } from '@tanstack/react-table'\nimport { produce } from 'immer'\nimport React from 'react'\n\n\n// Types ///////////////////////////////////////////////////////////////////////\n\nexport type RowEditorState = Partial<Record<string, RowEditState>>\n\nexport type RowEditPhase = NonNullable<RowEditState>['phase'] | 'edit-inactive'\n\nexport type RowEditState = undefined\n                         | RowDraftState\n                         | RowDeleteState\n\ntype RowDraftState = {\n  phase: 'edit-started' | 'edit-request-sent' | 'edit-succeeded' | 'edit-failed'\n  values: EditValues\n}\n\ntype EditValues = Record<string, string>\n\ntype RowDeleteState = {\n  phase: 'delete-request-sent' | 'delete-succeeded' | 'delete-failed'}\n\nexport interface RowEditingTableState {\n  rowEditorState: RowEditorState\n}\n\nexport interface RowEditingOptions {\n  onRowEditorChange?: OnChangeFn<RowEditorState>\n}\n\nexport interface RowEditingTableInstance {\n  setRowEditingState: (updater: Updater<RowEditorState>) => void\n}\n\nexport interface RowEditingRowInstance {\n  getEditPhase: () => RowEditPhase\n  getEditState: () => RowEditState\n  startEditing: () => void\n  getEditFieldRef: (columnId: string) => React.RefObject<HTMLInputElement>\n  getEditFieldValue: (columnId: string) => string\n  updateEditField: (columnId: string, value: string) => void\n  cancelEditing: () => void\n  sendEditRequest: (editValues: EditValues, request: () => Promise<void>) => Promise<boolean>\n  sendDeleteRequest: (request: () => Promise<void>) => Promise<boolean>\n  acknowledgeEditResponse: () => void\n}\n\ndeclare module '@tanstack/react-table' {\n  interface TableState extends RowEditingTableState {}\n  interface TableOptionsResolved<TData extends RowData> extends RowEditingOptions {}\n  interface Table<TData extends RowData> extends RowEditingTableInstance {}\n  interface Row<TData extends RowData> extends RowEditingRowInstance {}\n}\n\ntype UseRowEditorReturn = {\n  feature: TableFeature<any>\n  state: RowEditorState\n  setState: React.Dispatch<React.SetStateAction<RowEditorState>>\n}\n\ntype EditFieldRefAll = Record<string, EditFieldRefRow>\ntype EditFieldRefRow = Record<string, React.RefObject<HTMLInputElement>>\n\n\n// Implementation //////////////////////////////////////////////////////////////\n\nexport function useRowEditor(): UseRowEditorReturn {\n  const initialState = {}\n  const [rowEditorState, setRowEditorState] = React.useState<RowEditorState>({...initialState})\n  const editFieldRefDict = React.useRef<EditFieldRefAll>({})\n\n  /**\n   * https://tanstack.com/table/v8/docs/api/core/table#_features\n   * This might only be loaded at initialisation\n   * So be mindful of this, when trying to make the state-handlers dynamic\n   */\n  const RowEditorFeature: TableFeature<any> = {\n\n    getInitialState: (state): RowEditingTableState => ({ rowEditorState: {...initialState}, ...state}),\n\n    getDefaultOptions: <TData extends RowData>(\n      table: Table<TData>\n    ): RowEditingOptions => ({\n      onRowEditorChange: makeStateUpdater('rowEditorState', table),\n    } as RowEditingOptions),\n\n    createTable: <TData extends RowData>(table: Table<TData>): void => {\n\n      table.setRowEditingState = updater => {\n        const safeUpdater: Updater<RowEditorState> = old => {\n          let newState = functionalUpdate(updater, old)\n          return newState\n        }\n        return table.options.onRowEditorChange?.(safeUpdater)\n      }\n\n    },\n\n    createRow: <TData extends RowData>(row: Row<TData>, table: Table<TData>): void => {\n\n      row.getEditPhase = () => table.getState().rowEditorState[row.id]?.phase ?? 'edit-inactive'\n\n      row.getEditState = () => table.getState().rowEditorState[row.id]\n\n      row.startEditing = () => table.setRowEditingState(produce(draft => {\n        if (draft[row.id]) throw new Error(`Note to dev: StartEditing should not be called on a row that's already in the drafting process; rowId: ${row.id};`)\n        if (!row.original) throw new Error('no row data found')\n        draft[row.id] = {phase: 'edit-started', values: {...row.original}}\n      }))\n\n      row.getEditFieldRef = (columnId) => {\n        if (!editFieldRefDict.current[row.id]) editFieldRefDict.current[row.id] = {}\n        if (!editFieldRefDict.current[row.id][columnId]) editFieldRefDict.current[row.id][columnId] = {current: null}\n        return editFieldRefDict.current[row.id][columnId]\n      }\n\n      row.getEditFieldValue = (columnId) => {\n        const rowEditState = row.getEditState()\n        switch(rowEditState?.phase) {\n          case 'edit-started': return row.getEditFieldRef(columnId).current?.value || ''\n          case 'edit-request-sent': return rowEditState.values[columnId] || ''\n          case 'edit-succeeded': return rowEditState.values[columnId] || ''\n          default: return ''\n        }\n      }\n\n      row.updateEditField = (columnId, value) => table.setRowEditingState(produce(draft => {\n        const rowEditState = draft[row.id]\n        if (!isDrafting(rowEditState)) throw new Error(`Note to dev: Update should not be called on a row that's not being drafted; rowId: ${row.id}; rowEditState: ${JSON.stringify(rowEditState)};`)\n        rowEditState.values[columnId] = value\n      }))\n\n      row.cancelEditing = () => table.setRowEditingState(produce(draft => {\n        if (!draft[row.id]) throw new Error(`Note to dev: Cancel should not be called on a row that's not being drafted; rowId: ${row.id};`)\n        delete draft[row.id]\n      }))\n\n      row.sendEditRequest = async (values, request) => {\n        table.setRowEditingState(produce(draft => {\n          draft[row.id] = {phase: 'edit-request-sent', values}\n        }))\n\n        try {\n          await request()\n          table.setRowEditingState(produce(draft => {\n            draft[row.id] = {phase: 'edit-succeeded', values}\n          }))\n          return true\n        } catch (e) {\n          table.setRowEditingState(produce(draft => {\n            draft[row.id] = {phase: 'edit-failed', values}\n          }))\n          console.error(e)\n          return false\n        }\n    }\n\n      row.sendDeleteRequest = async (request) => {\n        table.setRowEditingState(produce(draft => {\n          draft[row.id] = {phase: 'delete-request-sent'}\n        }))\n\n        try {\n          await request()\n          table.setRowEditingState(produce(draft => {\n            draft[row.id] = {phase: 'delete-succeeded'}\n          }))\n          return true\n        } catch (e) {\n          table.setRowEditingState(produce(draft => {\n            draft[row.id] = {phase: 'delete-failed'}\n          }))\n          console.error(e)\n          return false\n        }\n    }\n\n      row.acknowledgeEditResponse = () => table.setRowEditingState(produce(draft => {\n        if (!draft[row.id]) throw new Error(`Note to dev: Acknowledge should not be called on a row that's not being drafted; rowId: ${row.id};`)\n        delete draft[row.id]\n      }))\n\n      function isDrafting(rowEdit: RowEditState): rowEdit is RowDraftState {\n        return rowEdit?.phase === 'edit-started'\n      }\n\n    },\n  }\n\n  return {\n    feature: RowEditorFeature,\n    state: rowEditorState,\n    setState: setRowEditorState,\n  }\n}\n","import { useReducer } from \"react\"\n\n/**\n * Hook that forces a re-render, similar to `forceUpdate` in class components.\n */\nexport function useForceUpdate(): () => void {\n  // Create a new empty object each update, so that the new state always\n  // has different referential equality than the previous state\n  const [, forceUpdate] = useReducer(() => ({}), {})\n  return forceUpdate\n}\n","import { Icon } from \"./widgets/Icon\"\nimport { useQuery } from \"@tanstack/react-query\"\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\"\nimport clsx from \"clsx\"\n\nexport function DynamicIcon(props: {\n  icon: string,\n  color?: string,\n  size?: string,\n  className?: string\n  prefixFallback?: \"fa-\" | \"radix-\" | \"mui-\"\n}) {\n  const loadedIcon = useQuery<React.ReactNode>({\n    queryKey: [ \"icon\", props.icon, props.size, props.color ],\n    queryFn: async () => {\n      const style = { fontSize: props.size, color: props.color }\n      if (props.icon.startsWith(\"fa-\")) {\n        return <Icon className={props.className} icon={props.icon as IconProp} style={style}\n                     data-testid={props.icon} />\n      }\n\n      if (props.icon.startsWith(\"radix-\")) {\n        const importName = kebabToCamelCase(props.icon.replace(/^radix-/, \"\")) + \"Icon\"\n        const allRadixIcons = await import(\"@radix-ui/react-icons\") as any\n        const RadixIcon = allRadixIcons[importName]\n        if (!RadixIcon) {\n          console.error(`could not find Radix icon ${importName}, try one of the following or visit https://www.radix-ui.com/icons`, allRadixIcons)\n          return null\n        }\n        return <RadixIcon className={clsx(\"svg-inline--fa\", props.className)} style={style}\n                          height={undefined} width={undefined} data-testid={props.icon} /> // remove hardcoded 15px from radix\n      }\n\n      if (props.icon.startsWith(\"mui-\")) {\n        const importName = kebabToCamelCase(props.icon.replace(/^mui-/, \"\"))\n        const allMuiIcons = await import(`@mui/icons-material`) as any\n        const MuiIcon = allMuiIcons[importName]\n        if (!MuiIcon) {\n          console.error(`could not find MUI icon ${importName}, try one of the following or visit https://mui.com/material-ui/material-icons/`, allMuiIcons)\n          return null\n        }\n\n        return <MuiIcon className={clsx(\"svg-inline--fa\", props.className)} style={style}\n                        data-testid={props.icon} />\n      }\n\n      if (props.prefixFallback) {\n        return <DynamicIcon {...props} icon={props.prefixFallback + props.icon} />\n      }\n\n      return null\n    }\n  })\n\n  return loadedIcon.isSuccess ? loadedIcon.data : null\n}\n\n\nfunction kebabToCamelCase(kebabText: string): string {\n  return kebabText\n    .split('-')\n    .map(word => {\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n    })\n    .join('')\n}\n"],"sourceRoot":""}