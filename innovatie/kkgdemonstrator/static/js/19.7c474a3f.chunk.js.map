{"version":3,"sources":["components/widgets/bb/prime/BBMenubar.js","components/AbstractArea.tsx"],"names":["BBMenubar","state","openDialog","areaid","selectedPerspective","handleCloseDialog","setState","setPerspective","arg","arg2","area","getArea","id","props","areas","push","dropdownTemplateGoodNotUsed","value","options","perspectives","onChange","e","placeholder","style","width","virtualScrollerOptions","itemSize","scrollHeight","checkmark","showClear","dropdownTemplate","JSON","parse","stringify","obj","me","this","Array","isArray","map","item","addFunctions","key","template","items","menuItemClick","startsWith","n","maximizable","areaConfigMenuItem","menuitem","menuAreaIndex","getAreaIndex","areaConfigMain","perspectiveIndex","popupTitle","title","tooltip","maximized","fullscreen","height","menubarconfig","console","log","model","config","index","header","visible","onHide","subcommand","label","popup","length","i","obj2","fe","selectedIndex","s","AbstractArea","React","Component"],"mappings":"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","file":"static/js/19.7c474a3f.chunk.js","sourcesContent":["\r\nimport { Fragment } from 'react';\r\n\r\nimport { Menubar } from 'primereact/menubar';\r\n\r\nimport { Dropdown } from \"primereact/dropdown\";\r\n\r\n\r\nimport { PrimeReactProvider } from 'primereact/api';\r\nimport { Dialog } from 'primereact/dialog';\r\n\r\nimport 'primeicons/primeicons.css';\r\nimport './saga-blue.css'\r\nimport './BBMenubar.css';\r\n\r\n  \r\n  import AbstractArea from '../../../AbstractArea'\r\n  import Area from '../../../Area'\r\n  import { TreeSelect } from 'primereact/treeselect';\r\n\r\n\r\n//   import { PrimeReactProvider } from 'primereact/api';\r\n//   import 'primeicons/primeicons.css';\r\n// //  import 'primeflex/primeflex.css';\r\n//   import 'primereact/resources/primereact.css';\r\n//   //import 'primereact/resources/themes/lara-light-indigo/theme.css';\r\n\r\n\r\n\r\n\r\nexport default class BBMenubar extends AbstractArea {\r\n  state = {  openDialog: false, areaid:null,selectedPerspective:\"default\" }\r\n\r\n\r\n\r\n\r\n   \r\n      \r\n       addFunctions(obj) {\r\n        var me=this;  \r\n        // If the object is an array, process each element\r\n        if (Array.isArray(obj)) {\r\n          return obj.map(item => this.addFunctions(item));\r\n        }\r\n      \r\n        // If the object is not an array or primitive, process keys\r\n        if (obj && typeof obj === 'object') {\r\n        \r\n          for (const key in obj) {\r\n           \r\n            if (key === 'subcommand' && typeof obj[key] === 'string') {\r\n\r\n              if (obj[key]===\"perspectives\")\r\n              {\r\n                obj.template=this.dropdownTemplate();\r\n                obj.items= null;\r\n              \r\n                continue;\r\n              }\r\n                obj[\"command\"]=function(){me.menuItemClick(obj)}\r\n            \r\n            \r\n            }\r\n             else \r\n             {\r\n              if (obj[key] && typeof obj[key] === 'object') \r\n                {\r\n                  if (key.startsWith(\"items\")) \r\n                  {\r\n                \r\n                 this.addFunctions(obj[key]);\r\n                  }\r\n              }\r\n            }\r\n          }\r\n         \r\n        }\r\n      \r\n        // For other types (primitives), return as is\r\n        return obj;\r\n      }\r\n\r\n\r\n      handleCloseDialog = () => {\r\n        this.setState({ openDialog: false })\r\n      }\r\n\r\n\r\n    setPerspective=(arg,arg2)=>\r\n    {\r\n     //console.log(\"setPerspective \",arg);\r\n     if (arg==0) return;\r\n      if (arg==null) arg=\"default\";\r\n      var area =this.getArea(arg)\r\n      if (area==null) {\r\n      \r\n        area={id:arg}\r\n        this.props.areas.push(area)\r\n      }\r\n      this.setState({selectedPerspective:arg})\r\n    }\r\n\r\n\r\n     dropdownTemplateGoodNotUsed = () => (\r\n \r\n      <Dropdown\r\n          value={this.state.selectedPerspective}\r\n          options={this.props.perspectives}\r\n         // className=\"w-full\"\r\n          onChange={(e) => this.setPerspective(e.value)}\r\n          placeholder=\"Select a module\"\r\n          style={{ width: \"200px\" }}\r\n          virtualScrollerOptions={{ itemSize: 40, scrollHeight: '400px' }}\r\n          checkmark={true}\r\n          //highlightOnSelect={false} \r\n          showClear\r\n         \r\n      />\r\n      \r\n  );\r\n\r\n  dropdownTemplate = () => \r\n  {\r\n\r\n   //this.options=[]\r\n\r\n   //this.options=this.props.perspectives;\r\n   let options =JSON.parse(JSON.stringify(this.props.perspectives))\r\n\r\n   return (\r\n    <TreeSelect\r\n        value={this.state.selectedPerspective}\r\n        options={options}\r\n       // className=\"w-full\"\r\n        onChange={(e) => this.setPerspective(e.value)}\r\n        placeholder=\"Select a module\"\r\n        style={{ width: \"200px\" }}\r\n        virtualScrollerOptions={{ itemSize: 40, scrollHeight: '400px' }}\r\n        checkmark={true}\r\n        //highlightOnSelect={false} \r\n        showClear\r\n       \r\n    />\r\n    \r\n);\r\n  }\r\n\r\n  //  shouldComponentUpdate(nextProps, nextState) {\r\n  //       if (nextProps.areas!==this.props.areas) {\r\n  //        // this.addFunctions(nextProps.areas)\r\n  //         return true\r\n  //       }\r\n  //       return false\r\n  //   }\r\n\r\n\r\n \r\n  getArea(id) {  \r\n    try\r\n    {\r\n   \r\n    for (var n in this.props.areas)\r\n    {\r\n      try\r\n      {\r\n      if (this.props.areas[n].id===id)\r\n      {\r\n      \r\n         return this.props.areas[n];\r\n        \r\n      }\r\n    }\r\n    catch(e) {}\r\n    }\r\n  }\r\n  catch(e)\r\n  {}\r\n    return null;\r\n  }\r\n  getAreaIndex(id) {  \r\n    try\r\n    {\r\n   \r\n    for (var n in this.props.areas)\r\n    {\r\n      try\r\n      {\r\n      if (this.props.areas[n].id===id)\r\n      {\r\n      \r\n         return n;\r\n        \r\n      }\r\n    }\r\n    catch(e) {}\r\n    }\r\n  }\r\n  catch(e)\r\n  {}\r\n    return -1;\r\n  }\r\n      \r\n     \r\n    render() {\r\n\r\n        let openDialog = this.state.openDialog\r\n        var maximizable=false\r\n        // area menu item\r\n        var areaConfigMenuItem=null\r\n        try { areaConfigMenuItem=this.getArea(this.state.areaid)}catch(e){}  //menuitem\r\n        \r\n        if (areaConfigMenuItem==null) areaConfigMenuItem={id:this.state.areaid,menuitem:{}}\r\n        var menuAreaIndex=this.getAreaIndex(this.state.areaid);\r\n        if (areaConfigMenuItem.menuitem==null) areaConfigMenuItem.menuitem={}\r\n\r\n// area pespective\r\n\r\n        var areaConfigMain=null;\r\n        var selectedPerspective=this.state.selectedPerspective;\r\n\r\n        \r\n         try {areaConfigMain =this.getArea(selectedPerspective)} catch(e){}\r\n        // console.log(\"selectedPerspective:\",this.state,selectedPerspective,areaConfigMain)\r\n        if (areaConfigMain==null) \r\n          {\r\n            areaConfigMain={id:selectedPerspective}\r\n            if (areaConfigMain.id!=null)\r\n            {\r\n               this.props.areas.push(areaConfigMain)\r\n              // console.log(\"add new area\",this.props.areas.length,areaConfigMain)  \r\n            }\r\n         }\r\n         var perspectiveIndex=this.getAreaIndex(selectedPerspective);\r\n       \r\n       \r\n       // console.log(\"main\",areaConfigMain,this.props.areas);\r\n\r\n      \r\n      \r\n        let popupTitle = areaConfigMenuItem.menuitem.title\r\n        if (popupTitle == null) {\r\n            popupTitle = 'popup'\r\n        }\r\n       \r\n\r\n        let tooltip = areaConfigMenuItem.menuitem.tooltip\r\n        if (tooltip == null) {\r\n          tooltip = 'no tooltip'\r\n        }\r\n\r\n        let maximized = areaConfigMenuItem.menuitem.fullscreen\r\n        \r\n        if (maximized == null) {maximized = false}\r\n        var style= { height: '80%', width: '60%' };\r\n        if (maximized)\r\n        {\r\n            //maximizable=true;\r\n           style={ height: '100%', width: '100%' }\r\n        }\r\n        else\r\n        {\r\n          maximizable=true;\r\n        }\r\n             \r\n              var items=null;\r\n              try {\r\n                items=JSON.parse(JSON.stringify(this.props.menubarconfig)); // deep copy\r\n              if (items!==null)\r\n              {\r\n                items=this.addFunctions(items)\r\n              }\r\n            }\r\n            catch(e)\r\n            {\r\n              console.log(\"error\",e)\r\n            }\r\n            if (items==null)\r\n            {\r\n              items=[\r\n                {\r\n                    \"label\": \"No menu config available\",\r\n                    \"icon\":\"pi pi-home\",\r\n                    \"id\":\"defaultHome\",\r\n                    \"subcommand\": \"perspectives\"\r\n                }];\r\n            }\r\n                 \r\n        return ( <PrimeReactProvider>\r\n            <Menubar model={items}  /> \r\n            <Area\r\n                    {...this.props}\r\n                    config={areaConfigMain}\r\n                    key={areaConfigMain.id}\r\n                    index={perspectiveIndex}\r\n                    onChange={this.props.onChange}\r\n                   \r\n                  />\r\n            <Dialog header={popupTitle}\r\n           \r\n            visible={openDialog}   style={style} maximizable={maximizable}  maximized={maximized} onHide={() =>  this.handleCloseDialog()}>\r\n            \r\n           \r\n                <Area\r\n                    {...this.props}\r\n                    config={areaConfigMenuItem}\r\n                    key={areaConfigMenuItem.id}\r\n                    index={menuAreaIndex}\r\n                    onChange={this.props.onChange}\r\n                    onHide={this.handleCloseDialog}           />\r\n                  </Dialog>\r\n                  </PrimeReactProvider>\r\n      )\r\n           \r\n    }\r\n    menuItemClick(obj)\r\n     {\r\n        //console.log(\"menuItemClicked\",obj);\r\n        if (obj.subcommand===\"popup\")\r\n        {\r\n            var id=obj.id;\r\n            if (id==null) id=obj.label;\r\n            var area=this.getArea(id);\r\n            if (area==null)\r\n            {\r\n              area={id:id}\r\n              this.props.areas.push(area)\r\n            }\r\n            this.popup(id,obj)\r\n            return;\r\n        }  \r\n        if (obj.subcommand===\"perspectives\")\r\n          {\r\n              //no implementation needed?\r\n              return;\r\n          } \r\n          if (obj.subcommand===\"rule\")\r\n            {\r\n                console.log(\"run rule:  not implemented yet\")\r\n                return;\r\n            }   \r\n\r\n        \r\n            console.log(\"command not found\",obj.subcommand)\r\n         \r\n     }\r\n\r\n\r\n    popup(areaid,obj) {\r\n      \r\n     try\r\n     {\r\n      if (this.props.areas==null) \r\n      {\r\n        console.log(\"no areas defined\",this)\r\n        return;\r\n      }\r\n\r\n       var index=this.props.areas.length;\r\n       try {\r\n        for (var i=0;i<this.props.areas.length;i++)\r\n        {\r\n          try{\r\n          if (this.props.areas[i].id===areaid)\r\n          {\r\n           // area=this.props.areas[i];\r\n            index=i;\r\n            var obj2={}\r\n            for (var key in obj)\r\n            {\r\n              if (!typeof(obj[key])===\"object\")\r\n              {\r\n                obj2[key]=obj[key]\r\n              }\r\n            }\r\n\r\n            this.props.areas[i].menuitem=obj2\r\n          }\r\n         }\r\n         catch(e){console.log(e)\r\n         }  \r\n      } \r\n       \r\n      } catch (fe) {console.log(fe)}\r\n\r\n       \r\n        this.setState({ openDialog: true,areaid:areaid,selectedIndex:index })\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log(e)\r\n    }\r\n\r\n    }\r\n\r\n\r\n    runRule(s) {    \r\n     \r\n      console.log(\"should run rule\",s) \r\n\r\n        }\r\n    \r\n}","import React from 'react'\n\nexport default class AbstractArea<P = DefaultP, S = DefaultS, SS = DefaultSS> extends React.Component<P,S,SS> {\n  isAA() {\n    return true\n  }\n}\n\ntype DefaultP = ExtractDefaultP<React.Component>\ntype DefaultS = ExtractDefaultS<React.Component>\ntype DefaultSS = ExtractDefaultSS<React.Component>\ntype ExtractDefaultP<T> = T extends React.Component<infer P> ? P : never\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractDefaultS<T> = T extends React.Component<infer P, infer S> ? S : never\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype ExtractDefaultSS<T> = T extends React.Component<infer P, infer S, infer SS> ? SS : never\n"],"sourceRoot":""}